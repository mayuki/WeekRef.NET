<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>WeekRef.NET</title>
		<link>/</link>
		<description>.NET 関連の情報をほぼ週刊配信</description>
		<copyright>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</copyright>
		<managingEditor>Mayuki Sawatari</managingEditor>
		<pubDate>Wed, 27 Mar 2024 07:52:09 GMT</pubDate>
		<lastBuildDate>Wed, 27 Mar 2024 07:52:09 GMT</lastBuildDate>
		<item>
			<title>2024-03-27: Garnet, MySqlConnector 2.3.6</title>
			<link>/2024/03/27/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/03/27/updates</guid>
			<pubDate>Wed, 27 Mar 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="microsoftgarnet-garnet-is-a-remote-cache-store-from-microsoft-research-that-offers-strong-performance-throughput-and-latency-scalability-storage-recovery-cluster-sharding-key-migration-and-replication-features.garnet-can-work-with-existing-redis-clients"&gt;microsoft/garnet: Garnet is a remote cache-store from Microsoft Research that offers strong performance (throughput and latency), scalability, storage, recovery, cluster sharding, key migration, and replication features. Garnet can work with existing Redis clients.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/garnet"&gt;https://github.com/microsoft/garnet&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/research/blog/introducing-garnet-an-open-source-next-generation-faster-cache-store-for-accelerating-applications-and-services/"&gt;Garnet–open-source faster cache-store speeds up applications, services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-2.3.6-mysql-netmysqlconnector"&gt;Release 2.3.6 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.6"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="adding-apple-privacy-manifest-support-to.net-ios.net-maui-apps.net-blog"&gt;Adding Apple Privacy Manifest Support to .NET iOS &amp;amp; .NET MAUI apps - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/apple-privacy-manifest-support/"&gt;https://devblogs.microsoft.com/dotnet/apple-privacy-manifest-support/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing.net-smart-components-ai-powered-ui-controls.net-blog"&gt;Introducing .NET Smart Components - AI-powered UI controls - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-dotnet-smart-components/"&gt;https://devblogs.microsoft.com/dotnet/introducing-dotnet-smart-components/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-sql-server-data-tools-ssdt-for-arm64-architecture-in-visual-studio-17.10-preview-2-visual-studio-blog"&gt;Announcing SQL Server Data Tools (SSDT) for ARM64 Architecture in Visual Studio 17.10 Preview 2 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/arm64-in-ssdt/"&gt;https://devblogs.microsoft.com/visualstudio/arm64-in-ssdt/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcement-swashbuckle.aspnetcore-is-being-removed-in.net-9-issue-54599-dotnetaspnetcore"&gt;Announcement: Swashbuckle.AspNetCore is being removed in .NET 9 · Issue #54599 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/54599"&gt;https://github.com/dotnet/aspnetcore/issues/54599&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-update-on-xamarin-support-in-rider-the.net-tools-blog"&gt;An Update on Xamarin Support in Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/15/an-update-on-xamarin-support-in-rider/"&gt;https://blog.jetbrains.com/dotnet/2024/03/15/an-update-on-xamarin-support-in-rider/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="collection-expressions-using-c-12-in-rider-and-resharper-the.net-tools-blog"&gt;Collection Expressions – Using C# 12 in Rider and ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/26/collection-expressions-using-csharp-12-in-rider-and-resharper/"&gt;https://blog.jetbrains.com/dotnet/2024/03/26/collection-expressions-using-csharp-12-in-rider-and-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="implementing-dijkstras-algorithm-for-finding-the-shortest-path-between-two-nodes-using-priorityqueue-in.net-9"&gt;Implementing Dijkstra's algorithm for finding the shortest path between two nodes using PriorityQueue in .NET 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/implementing-dijkstras-algorithm-for-finding-the-shortest-path-between-two-nodes-using-priorityqueue-in-dotnet-9/"&gt;https://andrewlock.net/implementing-dijkstras-algorithm-for-finding-the-shortest-path-between-two-nodes-using-priorityqueue-in-dotnet-9/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-dashboard-is-the-best-tool-to-visualize-your-opentelemetry-data-during-local-development"&gt;.NET Aspire dashboard is the best tool to visualize your OpenTelemetry data during local development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/net-aspire-dashboard-is-the-best-tool-to-visualize-your-opentelemetry-data-during-local-development-9dl"&gt;https://dev.to/asimmon/net-aspire-dashboard-is-the-best-tool-to-visualize-your-opentelemetry-data-during-local-development-9dl&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="see-your-pull-request-comments-with-the-latest-preview-visual-studio-blog"&gt;See Your Pull Request Comments with the Latest Preview - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/see-your-pull-request-comments-with-the-latest-preview/"&gt;https://devblogs.microsoft.com/visualstudio/see-your-pull-request-comments-with-the-latest-preview/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="wixsharpnuget-qiita"&gt;WiXSharpのカスタムアクションに、NuGetのライブラリを追加する方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/299b6ba7eab25e7ad0f5"&gt;https://qiita.com/spc_ksudoh/items/299b6ba7eab25e7ad0f5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="source-code-disclosure-in-asp.net-apps"&gt;Source Code Disclosure in ASP.NET apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://swarm.ptsecurity.com/source-code-disclosure-in-asp-net-apps/"&gt;https://swarm.ptsecurity.com/source-code-disclosure-in-asp-net-apps/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="aspire-insights-in-production-with-sentry-and-opentelemetry"&gt;Aspire Insights in Production with Sentry and OpenTelemetry&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.sentry.io/aspire-insights-in-production-with-sentry/"&gt;https://blog.sentry.io/aspire-insights-in-production-with-sentry/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="webbrowser-webview2-pdf"&gt;WebBrowser と WebView2 の PDF ファイル表示のデフォルトアプリ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nasrisilva/articles/4925cd69967725"&gt;https://zenn.dev/nasrisilva/articles/4925cd69967725&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio"&gt;Visual Studioでラズパイをデバッグしよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/kotaproj/articles/pi_dotnet_hello"&gt;https://zenn.dev/kotaproj/articles/pi_dotnet_hello&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cjson"&gt;C#レコード型とJSON: データ構造の自由度と整合性&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/ccdb92e7d660b1"&gt;https://zenn.dev/jtechjapan_pub/articles/ccdb92e7d660b1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8.0apijwtjsonwebtoken-qiita"&gt;.NET 8.0でAPIがJWTの検証に失敗するようになった場合は、JsonWebTokenを使うように構成を変更してみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/0736cfb273abbc2aee2e"&gt;https://qiita.com/karuakun/items/0736cfb273abbc2aee2e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="sirenixs-odin-inspector-support-comes-to-rider-a-jetbrains-ide-the.net-tools-blog"&gt;Sirenix’s Odin Inspector Support Comes to Rider, a JetBrains IDE | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/20/sirenix-s-odin-inspector-support-comes-to-rider-a-jetbrains-ide/"&gt;https://blog.jetbrains.com/dotnet/2024/03/20/sirenix-s-odin-inspector-support-comes-to-rider-a-jetbrains-ide/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;C#非同期メソッドを指定したスレッド上で動かす - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/qiitatosh/items/45e2a3dc7ba9694dcc92"&gt;https://qiita.com/qiitatosh/items/45e2a3dc7ba9694dcc92&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="our-favorite-jetbrains-rider-shortcuts-that-arent-altenter-or-shiftshift-the.net-tools-blog"&gt;Our Favorite JetBrains Rider Shortcuts that aren’t Alt+Enter or Shift+Shift | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/20/our-favorite-jetbrains-rider-shortcuts-that-arent-altenter-or-shiftshift/"&gt;https://blog.jetbrains.com/dotnet/2024/03/20/our-favorite-jetbrains-rider-shortcuts-that-arent-altenter-or-shiftshift/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cvisual-studio-github-copilot-qiita"&gt;【C#】Visual Studio で GitHub Copilot に複数のファイルやコードを認識させる方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yuu-dev/items/9e0d22191e4655342d88"&gt;https://qiita.com/yuu-dev/items/9e0d22191e4655342d88&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windowswixsharpwix-toolset-qiita"&gt;Windowsインストーラ作成に、WiXSharpという選択肢もありますよ（ただしWiX Toolsetが使える人限定） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/afab902b6dea7fd4f6ed"&gt;https://qiita.com/spc_ksudoh/items/afab902b6dea7fd4f6ed&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cxml-github-copilot-qiita"&gt;【C#】XMLドキュメンテーションを GitHub Copilot で生成する手順 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yuu-dev/items/b58fb4b041b2c2e5f538"&gt;https://qiita.com/yuu-dev/items/b58fb4b041b2c2e5f538&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="entity-framework-core-audit-trial-with-audit.net"&gt;Entity Framework Core Audit Trial With Audit.Net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/hirushafernando/entity-framework-core-audit-trial-with-auditnet-3o8l"&gt;https://dev.to/hirushafernando/entity-framework-core-audit-trial-with-auditnet-3o8l&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="running-ruby-on-rails-web-apps-with.net-aspire"&gt;Running Ruby on Rails web apps with .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/running-ruby-on-rails-web-apps-with-net-aspire-1pee"&gt;https://dev.to/asimmon/running-ruby-on-rails-web-apps-with-net-aspire-1pee&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-developers-begging-for-ecosystem-destruction"&gt;.NET Developers Begging for Ecosystem Destruction&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aaronstannard.com/dotnet-eventing-backslide/"&gt;https://aaronstannard.com/dotnet-eventing-backslide/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazors-css-isolation-deep-issue-and-solution"&gt;Blazor’s CSS isolation ::deep issue and solution&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/blazors-css-isolation-deep-issue-and-solution"&gt;https://khalidabuhakmeh.com/blazors-css-isolation-deep-issue-and-solution&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="understanding-system.diagnostics-diagnosticsource-and-diagnosticlistener-part-1-steve-gordon-code-with-steve"&gt;Understanding System.Diagnostics DiagnosticSource and DiagnosticListener (Part 1) - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/understanding-system-diagnostics-diagnosticsource-and-diagnosticlistener-part-1"&gt;https://www.stevejgordon.co.uk/understanding-system-diagnostics-diagnosticsource-and-diagnosticlistener-part-1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8-blazor"&gt;簡単に .NET 8 の Blazor にオレオレ ログイン機能を付けよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-tryaddauth2"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-tryaddauth2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="flux.net"&gt;Fluxパターンと.NETでの実装とか&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/gab_km/articles/f2dcf0f17c8c94"&gt;https://zenn.dev/gab_km/articles/f2dcf0f17c8c94&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="spant-gc"&gt;SpanT の GC 保護について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ongaeshi/articles/0d271a6e42cf41"&gt;https://zenn.dev/ongaeshi/articles/0d271a6e42cf41&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-2-1-opencvsharpimagesharpskiasharp-jsakamoto"&gt;C# で背景透過な 2 つの画像を合成した 1 枚の画像を生成する - OpenCVSharp、ImageSharp、SkiaSharp を使った作例 | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/30007598/"&gt;https://devadjust.exblog.jp/30007598/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-12"&gt;C# 12の新機能を紹介──型エイリアスやインライン配列など、待望の新機能とは？&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codezine.jp/article/detail/19164"&gt;https://codezine.jp/article/detail/19164&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="figuring-out-mysterious-missingmethodexception-in-a-simple-c-application"&gt;Figuring out mysterious MissingMethodException in a simple C# application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sergeyteplyakov.github.io/Blog/csharp/2024/03/21/Mythical_MissingMethodException.html"&gt;https://sergeyteplyakov.github.io/Blog/csharp/2024/03/21/Mythical_MissingMethodException.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cstringbuilderdefaultinterpolatedstringhandler"&gt;【C#】StringBuilderとDefaultInterpolatedStringHandlerの処理速度・メモリ確保量を比べてみる - はなちるのマイノート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.hanachiru-blog.com/entry/2024/03/22/120000"&gt;https://www.hanachiru-blog.com/entry/2024/03/22/120000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cspanmemory-annulus-games"&gt;【C#】SpanとMemory - Annulus Games&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://annulusgames.com/blog/span-and-memory/"&gt;https://annulusgames.com/blog/span-and-memory/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="extensions"&gt;Extensions (拡張型)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/3/extensions/"&gt;https://ufcpp.net/blog/2024/3/extensions/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-and-github-copilot-at-gdc-2024-visual-studio-blog"&gt;Visual Studio and GitHub Copilot at GDC 2024 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-and-github-copilot-at-gdc-2024/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-and-github-copilot-at-gdc-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="neue-cc-redisgarnetc-customcommand"&gt;neue cc - Redis互換の超高速インメモリデータストア「Garnet」にC# CustomCommandを実装してコマンドを拡張する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/03/19_Garnet.html"&gt;https://neue.cc/2024/03/19_Garnet.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="neue-cc-claudia-anthropic-claudec-sdkcapi"&gt;neue cc - Claudia - Anthropic ClaudeのC# SDKと現代的なC#によるウェブAPIクライアントの作り方&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/03/18_Claudia.html"&gt;https://neue.cc/2024/03/18_Claudia.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-13"&gt;C# 13 でのコレクション式 - ディクショナリ式&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/3/dictionary-expressions/"&gt;https://ufcpp.net/blog/2024/3/dictionary-expressions/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="db-3"&gt;DB のチューニングで実際に成果が出た 3 つの施策&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nekojoker/articles/1c97263ebd23d1"&gt;https://zenn.dev/nekojoker/articles/1c97263ebd23d1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="toyota-migrates-mobile-app-to-uno-platform"&gt;Toyota migrates mobile app to Uno Platform&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/toyota-migrates-mobile-app-to-uno-platform/"&gt;https://platform.uno/blog/toyota-migrates-mobile-app-to-uno-platform/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-mayukiyafp-a-toolkit-for-implementing-forward-proxy-based-on-asp.net-core-and-yarp"&gt;GitHub - mayuki/Yafp: A toolkit for implementing forward proxy based on ASP.NET Core and YARP.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mayuki/Yafp"&gt;https://github.com/mayuki/Yafp&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/mkristensen/status/1770874082466377969?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Happy 27th birthday Visual Studio.  I have been a fan and happy user for more than half of my life. The first version I used in school was VS 97 and the first I bought with my own money was Visual Studio .NET 2003. &lt;br&gt;&lt;br&gt;What&amp;#39;s your VS story? &lt;a href="https://t.co/lRbE40JdeS"&gt;pic.twitter.com/lRbE40JdeS&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1770874082466377969?ref_src=twsrc%5Etfw"&gt;March 21, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-03-15: .NET 9 Preview 2, Unity extension for Visual Studio Code GA, .NET 8.0.3, 7.0.17, .NET 6.0.28</title>
			<link>/2024/03/15/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/03/15/updates</guid>
			<pubDate>Fri, 15 Mar 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-9-preview-2-dotnetcore-discussion-9217"&gt;.NET 9 Preview 2 · dotnet/core · Discussion #9217&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/discussions/9217"&gt;https://github.com/dotnet/core/discussions/9217&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="unity-extension-for-visual-studio-code-now-generally-available.net-blog"&gt;Unity extension for Visual Studio Code - Now Generally Available - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/unity-extension-for-visual-studio-code-now-generally-available/"&gt;https://devblogs.microsoft.com/dotnet/unity-extension-for-visual-studio-code-now-generally-available/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-march-2024-updates.net-8.0.3-7.0.17.net-6.0.28.net-blog"&gt;.NET March 2024 Updates – .NET 8.0.3, 7.0.17, .NET 6.0.28 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/march-2024-updates/"&gt;https://devblogs.microsoft.com/dotnet/march-2024-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="refining-your-search-introducing-nuget.orgs-compatible-framework-filters-the-nuget-blog"&gt;Refining Your Search: Introducing NuGet.org's Compatible Framework Filters - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/"&gt;https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-visual-studio-17.10-preview-2-is-here-visual-studio-blog"&gt;Introducing Visual Studio 17.10 – Preview 2 is Here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-10-preview-2-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-10-preview-2-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-2.7.33-stackexchangestackexchange.redis"&gt;Release 2.7.33 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.33"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.33&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-app-center-retirement-visual-studio-app-center"&gt;Visual Studio App Center Retirement - Visual Studio App Center&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/appcenter/retirement"&gt;https://learn.microsoft.com/en-us/appcenter/retirement&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2022-version-17.9.3-visual-studio-2022-release-notes"&gt;Visual Studio 2022 version 17.9.3 - Visual Studio 2022 Release Notes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes#17.9.3"&gt;https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes#17.9.3&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-preview-4.net-aspire"&gt;.NET Aspire preview 4 - .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-4"&gt;https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-4&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://x.com/davidpine7/status/1767576822940627321?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;📢 Announcing .NET Aspire preview 4 (one of our largest releases yet):&lt;br&gt;&lt;br&gt;🫛 Podman support&lt;br&gt;📈 Dashboard UX improvements&lt;br&gt;🛠️ More management tooling&lt;br&gt;🆕 New idioms&lt;br&gt;☁️ More cloud APIs&lt;br&gt;🤓 Emulators&lt;br&gt;✅ Improved manifest&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnetaspire?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnetaspire&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/developercommunity?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#developercommunity&lt;/a&gt;&lt;a href="https://t.co/JBdsl3NRIb"&gt;https://t.co/JBdsl3NRIb&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Pine (&amp;#64;davidpine&amp;#64;dotnet.social) 🇺🇦 (&amp;#64;davidpine7) &lt;a href="https://twitter.com/davidpine7/status/1767576822940627321?ref_src=twsrc%5Etfw"&gt;March 12, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="announcing-typescript-5.4-typescript"&gt;Announcing TypeScript 5.4 - TypeScript&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/typescript/announcing-typescript-5-4/"&gt;https://devblogs.microsoft.com/typescript/announcing-typescript-5-4/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-11.0.10-avaloniauiavalonia"&gt;Release 11.0.10 · AvaloniaUI/Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.10"&gt;https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.10&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="using-yarp-as-an-api-gateway-and-rate-limiter"&gt;Using YARP as an API gateway and rate limiter&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.codecrash.net/2024/03/01/rate-limiting-in-yarp.html"&gt;https://www.codecrash.net/2024/03/01/rate-limiting-in-yarp.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="generate-local.net-secrets-from-azure-deployments.net-blog"&gt;Generate Local .NET Secrets from Azure Deployments - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/generate-dotnet-secrets-automatically-from-azure-deployment/"&gt;https://devblogs.microsoft.com/dotnet/generate-dotnet-secrets-automatically-from-azure-deployment/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="github-copilot-in-visual-studio-a-recap-of-2023-visual-studio-blog"&gt;GitHub Copilot in Visual Studio: A Recap of 2023 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/github-copilot-in-visual-studio-a-recap-of-2023/"&gt;https://devblogs.microsoft.com/visualstudio/github-copilot-in-visual-studio-a-recap-of-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the-nuget.org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024-the-nuget-blog"&gt;The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024 - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"&gt;https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="get-started-with.net-8-and-ai-using-new-quickstart-tutorials.net-blog"&gt;Get started with .NET 8 and AI using new quickstart tutorials - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/get-started-with-dotnet-ai-quickstarts/"&gt;https://devblogs.microsoft.com/dotnet/get-started-with-dotnet-ai-quickstarts/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-shouldrender-qiita"&gt;【Blazor ベストプラクティス】ShouldRenderを利用して不必要なレンダリングを避ける - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Leech/items/0ea5751798751214d4db"&gt;https://qiita.com/Leech/items/0ea5751798751214d4db&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-11.1.0-beta1-avaloniauiavalonia"&gt;Release 11.1.0-beta1 · AvaloniaUI/Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.1.0-beta1"&gt;https://github.com/AvaloniaUI/Avalonia/releases/tag/11.1.0-beta1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="behind-the-implementation-of.nets-priorityqueue"&gt;Behind the implementation of .NET's PriorityQueue&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-implementation-of-dotnets-priorityqueue/"&gt;https://andrewlock.net/behind-the-implementation-of-dotnets-priorityqueue/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="wpfwebview2exe-qiita"&gt;WPFのWebView2が実行環境で表示されない場合、exeがあるフォルダに実行ユーザーの書き込み権限が無いのが問題かも - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/22d8cf414201e0568421"&gt;https://qiita.com/spc_ksudoh/items/22d8cf414201e0568421&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-web-apienum"&gt;【ASP.NET Core Web API】列挙型（Enum）を定数値だけでなく名前でも扱えるようにする&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/ceacea6d9322bd"&gt;https://zenn.dev/jtechjapan_pub/articles/ceacea6d9322bd&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-wasm-development-upgrades-in-jetbrains-rider-2024.1-the.net-tools-blog"&gt;Blazor Wasm Development Upgrades in JetBrains Rider 2024.1 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/11/blazor-wasm-development-upgrades-jetbrains-rider-2024-1/"&gt;https://blog.jetbrains.com/dotnet/2024/03/11/blazor-wasm-development-upgrades-jetbrains-rider-2024-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-asp.net-core"&gt;.NET のクラスライブラリで ASP.NET Core のクラスを使う&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/okazuki/articles/aspnetcore-on-classlib"&gt;https://zenn.dev/okazuki/articles/aspnetcore-on-classlib&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mocking-authorization-tokens-with-wiremock.net"&gt;Mocking authorization tokens with WireMock.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cezarypiatek.github.io/post/mocking-authorization-tokens/"&gt;https://cezarypiatek.github.io/post/mocking-authorization-tokens/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="winui-3-msixbundle"&gt;WinUI 3 アプリの msixbundle を作成する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/winui3-msixbundle"&gt;https://zenn.dev/shinta0806/articles/winui3-msixbundle&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="relationship-between-redirecttoaction-and-localredirect-with-open-redirect-vulnerability"&gt;Relationship between RedirectToAction() and LocalRedirect() with Open Redirect Vulnerability 🏴‍☠️&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/_hm/relationship-between-redirecttoaction-and-localredirect-with-open-redirect-vulnerability-1mkj"&gt;https://dev.to/_hm/relationship-between-redirecttoaction-and-localredirect-with-open-redirect-vulnerability-1mkj&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ef-core-qiita"&gt;EF Coreでソートキーのセレクタを共通化する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/aoisupersix/items/771de84a3e242b1ad470"&gt;https://qiita.com/aoisupersix/items/771de84a3e242b1ad470&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-service-discovery-qiita"&gt;.NET の Service Discovery だけを使いたい - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/d04073c086fa05cd4128"&gt;https://qiita.com/takashiuesaka/items/d04073c086fa05cd4128&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="fluentui.blazor-v4.5"&gt;FluentUI.Blazor v4.5&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dvoituron.com/2024/03/08/fluentui-blazor-4-5/"&gt;https://dvoituron.com/2024/03/08/fluentui-blazor-4-5/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-13"&gt;C# 13 でのコレクション式 - 制限の緩和の話&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/3/colexpr13-relax-restriction/"&gt;https://ufcpp.net/blog/2024/3/colexpr13-relax-restriction/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="building-ai-bots-extending-copilot-for-microsoft-365-and-more-with.net-and-teams-toolkit.net-blog"&gt;Building AI Bots, Extending Copilot for Microsoft 365, and more with .NET and Teams Toolkit - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/teams-toolkit-for-visual-studio-release-updates/"&gt;https://devblogs.microsoft.com/dotnet/teams-toolkit-for-visual-studio-release-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-maui-qiita"&gt;.NET MAUIで普通のデスクトップアプリをビルドするには - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/8cd0c70bd8080552a37c"&gt;https://qiita.com/spc_ksudoh/items/8cd0c70bd8080552a37c&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="get-started-with-milvus-vector-db-in.net.net-blog"&gt;Get Started with Milvus Vector DB in .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/get-started-milvus-vector-db-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/get-started-milvus-vector-db-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ironpython-2-qiita"&gt;IronPython との付き合いかた（その２） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Mt_SQ/items/a6276eb48682f3a8e97a"&gt;https://qiita.com/Mt_SQ/items/a6276eb48682f3a8e97a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-subscriptions-a-product-managers-journey-visual-studio-blog"&gt;Visual Studio Subscriptions - A Product Manager's Journey - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-subscriptions-benefit-journey-pt1/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-subscriptions-benefit-journey-pt1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-introduction-to-the-heap-data-structure-and.nets-priority-queue"&gt;An introduction to the heap data structure and .NET's priority queue&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/an-introduction-to-the-heap-data-structure-and-dotnets-priority-queue/"&gt;https://andrewlock.net/an-introduction-to-the-heap-data-structure-and-dotnets-priority-queue/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="updating-to.net-8-updating-to-ihostbuilder-and-running-playwright-tests-within-nunit-headless-or-headed-on-any-os"&gt;Updating to .NET 8, updating to IHostBuilder, and running Playwright Tests within NUnit headless or headed on any OS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.hanselman.com/blog/updating-to-net-8-updating-to-ihostbuilder-and-running-playwright-tests-within-nunit-headless-or-headed-on-any-os"&gt;https://www.hanselman.com/blog/updating-to-net-8-updating-to-ihostbuilder-and-running-playwright-tests-within-nunit-headless-or-headed-on-any-os&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="aspire-aspi8-deploy-microservices-effortlessly-with-cli-no-docker-or-yaml-needed"&gt;Aspire &amp;amp; Aspi8: Deploy Microservices Effortlessly with CLI — No Docker or YAML Needed!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;josephsims1/aspire-aspi8-deploy-microservices-effortlessly-with-cli-no-docker-or-yaml-needed-f30b58443107"&gt;https://medium.com/&amp;#64;josephsims1/aspire-aspi8-deploy-microservices-effortlessly-with-cli-no-docker-or-yaml-needed-f30b58443107&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharpclaudia-unofficial-anthropic-claude-api-client-for.net"&gt;Cysharp/Claudia: Unofficial Anthropic Claude API client for .NET.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/Claudia"&gt;https://github.com/Cysharp/Claudia&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/kuxmlp/status/1767551660262646235?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET added 1123 new Arm64 SVE instructions. Great work from .NET + Arm engineers. We wrote a tool that read the Arm manual and generated C++ code needed to implement instructions in RyuJIT, cutting the implementation time drastically.&lt;a href="https://t.co/EMeJ24gnJt"&gt;https://t.co/EMeJ24gnJt&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnetcore?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnetcore&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/sve?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#sve&lt;/a&gt; &lt;a href="https://t.co/QksxjcI8yD"&gt;pic.twitter.com/QksxjcI8yD&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kunal (&amp;#64;KuXMLP) &lt;a href="https://twitter.com/KuXMLP/status/1767551660262646235?ref_src=twsrc%5Etfw"&gt;March 12, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="nativeaot-add-win-x86-support-by-filipnavara-pull-request-99372-dotnetruntime"&gt;NativeAOT: Add win-x86 support by filipnavara · Pull Request #99372 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/99372"&gt;https://github.com/dotnet/runtime/pull/99372&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-03-05: Windows App SDK 1.5, StackExchange.Redis 2.7.27, NCrunch V5</title>
			<link>/2024/03/05/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/03/05/updates</guid>
			<pubDate>Tue, 05 Mar 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="version-1.5-stable-channel-release-notes-for-the-windows-app-sdk-windows-apps"&gt;Version 1.5 - Stable channel release notes for the Windows App SDK - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-15"&gt;https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは XAML Island でのシャットダウン時の挙動の変更、WebView2 と Azure Map ベースでの Map コントロールの追加、SelectorBar コントロールの追加、CommandBarFlyout でのプライマリーコマンドのラベル対応、WebView2 でのカスタム環境/オプション対応、.NET 8 対応といった改善が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.0"&gt;Release v1.5.0 · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="windows-app-sdk-windows-apps"&gt;バージョン 1.4.5 - Windows App SDK の安定チャネルのリリース ノート - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/stable-channel#version-145-14240211001"&gt;https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/stable-channel#version-145-14240211001&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.4.5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではハングやクラッシュといったいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="release-2.7.27-stackexchangestackexchange.redis"&gt;Release 2.7.27 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.27"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.27&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.7.23, 2.7.27 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではコネクションのライブラリー名にサフィックスを付ける機能やアイドル時以外にもキープアライブチェックを行うオプションが追加された。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.23"&gt;Release 2.7.23 · StackExchange/StackExchange.Redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ncrunch-blog-ncrunch-v5-now-available"&gt;NCrunch Blog | NCrunch V5 Now Available&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ncrunch.net/post/NCrunch-V5-Now-Available.aspx"&gt;https://blog.ncrunch.net/post/NCrunch-V5-Now-Available.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NCrunch V5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは JetBrains Rider のサポートと Runtime Data Inspection (RDI) 機能の導入が行われている。&lt;/p&gt;
&lt;p&gt;Runtime Data Inspection はテスト実行時に様々なデータをキャプチャーして、それを元にコードの挙動を解析できる機能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.ncrunch.net/post/Introducing-Runtime-Data-Inspection.aspx"&gt;NCrunch Blog | Introducing Runtime Data Inspection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="code-coverage-features-in-visual-studio-enterprise-visual-studio-blog"&gt;Code coverage features in Visual Studio Enterprise - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/code-coverage-features-in-visual-studio-enterprise/"&gt;https://devblogs.microsoft.com/visualstudio/code-coverage-features-in-visual-studio-enterprise/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Enterprise のコードカバレッジ機能についての新機能やパフォーマンス改善といったものの紹介。&lt;/p&gt;
&lt;h3 id="entity-framework-core-qiita"&gt;Entity Framework Coreで論理削除 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/filunK/items/8485c8fcc38fae5d2b40"&gt;https://qiita.com/filunK/items/8485c8fcc38fae5d2b40&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で Interceptor を使用して、データベースのテーブルからの論理削除(削除フラグ)を実装する方法について。&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;C# で文字列の式から計算結果を得る - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hyukix/items/ac26decee3bb75b32f75"&gt;https://qiita.com/hyukix/items/ac26decee3bb75b32f75&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;与えられた文字列の式から計算結果を取得するための機能を持つライブラリーを挙動とパフォーマンス面から比較。&lt;/p&gt;
&lt;h3 id="rider-2024.1-eap-7-c-updates-new-product-icons-bundled-kubernetes-plugin-the.net-tools-blog"&gt;Rider 2024.1 EAP 7: C# Updates, New Product Icons, Bundled Kubernetes Plugin | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/01/rider-2024-1-eap-7/"&gt;https://blog.jetbrains.com/dotnet/2024/03/01/rider-2024-1-eap-7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.1 EAP 7 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは C# 12 サポートの改善、新しいアイコン、Kubernetes プラグインのバンドルといった変更が行われている。&lt;/p&gt;
&lt;h3 id="rider-2024.1-eap-6-updated-new-project-dialog-custom-naming-rules-and-vcs-improvements-the.net-tools-blog"&gt;Rider 2024.1 EAP 6: Updated New Project Dialog, Custom Naming Rules, and VCS Improvements | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/27/rider-2024-1-eap-6/"&gt;https://blog.jetbrains.com/dotnet/2024/02/27/rider-2024-1-eap-6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.1 EAP 6 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは新しいプロジェクトダイアログの更新、Blazor WASM のホットリロードデバッグ、C# サポートの改善、パフォーマンスの改善、メモリープロファイリングでの Frozen Object Heap の対応などが含まれる。&lt;/p&gt;
&lt;h3 id="resharper-2024.1-eap-6-the-most-feature-rich-update-yet-the.net-tools-blog"&gt;ReSharper 2024.1 EAP 6: The Most Feature-Rich Update Yet | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/27/resharper-2024-1-eap-6/"&gt;https://blog.jetbrains.com/dotnet/2024/02/27/resharper-2024-1-eap-6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.1 EAP 6 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではリネームの高速化、C# での async メソッド内の disposable なリソースの取り扱いの改善、コードフォーマットやデコンパイラーの改善、dotMemory のメモリープロファイリングでの Frozen Object Heap の対応などが含まれる。&lt;/p&gt;
&lt;h3 id="google-magika-python-cday-1-7-qiita"&gt;Google の Magika を Python から C#に移植するまでの過程（Day 1 / 7） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mkht/items/64b02b8648266d40380a"&gt;https://qiita.com/mkht/items/64b02b8648266d40380a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google の機械学習ベースのファイル種別判定ツール Magika を Python から C# に移植を試みた話。モデルを読み込んで実行するコマンドラインツールにするといった一連の移植を行っている。&lt;/p&gt;
&lt;h3 id="params-c-c"&gt;params コレクション | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/3/params-collections/"&gt;https://ufcpp.net/blog/2024/3/params-collections/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 13 で検討されている params に配列以外を指定できるようにする params コレクションについて。&lt;/p&gt;
&lt;h3 id="how-to-build-a-nuget-package-with-ios-frameworks-for.net-maui-development"&gt;How to Build a NuGet Package with iOS Frameworks for .NET MAUI Development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.dynamsoft.com/codepool/ios-ipados-dotnet-maui-mrz-recognition.html"&gt;https://www.dynamsoft.com/codepool/ios-ipados-dotnet-maui-mrz-recognition.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI 向けの iOS の Framework を含む NuGet パッケージを作る手順について。&lt;/p&gt;
&lt;h3 id="stride-qiita"&gt;Strideでコンポーネントを作成、共有する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/ba6fdfedf03d444cac40"&gt;https://qiita.com/skitoy4321/items/ba6fdfedf03d444cac40&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stride (ゲームエンジン) でコンポーネントを作成する方法と、NuGet パッケージで後悔する際の注意点など。&lt;/p&gt;
&lt;h3 id="using-unix-domain-sockets-with-asp.net-core-and-httpclient"&gt;Using Unix domain sockets with ASP.NET Core and HttpClient&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/using-unix-domain-sockets-with-aspnetcore-and-httpclient/"&gt;https://andrewlock.net/using-unix-domain-sockets-with-aspnetcore-and-httpclient/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UNIX ドメインソケットで ASP.NET Core サーバーと HttpClient で通信する方法について。&lt;/p&gt;
&lt;h3 id="visual-studios-full-year-in-review-2023-visual-studio-blog"&gt;Visual Studio's Full Year in Review (2023) - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studios-full-year-in-review-2023/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studios-full-year-in-review-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の2023年の振り返りのまとめ記事。&lt;/p&gt;
&lt;h3 id="the-fast-and-the-fluent-a-blazor-story.net-blog"&gt;The FAST and the Fluent: A Blazor story - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-fast-and-the-fluent-a-blazor-story/"&gt;https://devblogs.microsoft.com/dotnet/the-fast-and-the-fluent-a-blazor-story/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fluent UI Blazor ライブラリーについての紹介。&lt;/p&gt;
&lt;p&gt;ベースとなる FAST (Web Component) とその連携、そのほか Aspire のダッシュボードで使用されていることなどに触れている。&lt;/p&gt;
&lt;h3 id="shoelace-web-components-with-asp.net-core"&gt;Shoelace Web Components with ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/shoelace-web-components-with-aspnet-core"&gt;https://khalidabuhakmeh.com/shoelace-web-components-with-aspnet-core&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Shoelace Web Component を ASP.NET Core の Razor Pages で使う手順について。&lt;/p&gt;
&lt;h3 id="net-performance-optimization-deferred-allocations"&gt;.NET Performance Optimization: Deferred Allocations&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://petabridge.com/blog/net-performance-deferred-allocation/"&gt;https://petabridge.com/blog/net-performance-deferred-allocation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Akka.NET の計測を行うための Phobos で遅延割り当てを駆使することでパフォーマンスの低下を抑えるという手法を取ったことについての解説。&lt;/p&gt;
&lt;h3 id="net-maui-community-toolkit-2023-highlights.net-blog"&gt;.NET MAUI Community Toolkit 2023 Highlights - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-maui-community-toolkit-2023-highlights/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-maui-community-toolkit-2023-highlights/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Community Toolkit の2023年のアップデートや活動の振り返り。&lt;/p&gt;
&lt;h3 id="winforms-designer-selection-for-32-bit.net-framework-projects-visual-studio-blog"&gt;WinForms Designer Selection for 32-bit .NET Framework Projects - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/winforms-designer-selection-for-32-bit-net-framework-projects/"&gt;https://devblogs.microsoft.com/visualstudio/winforms-designer-selection-for-32-bit-net-framework-projects/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 v17.9 で導入された .NET Framework の Windows Forms 向けのアウトオブプロセスデザイナー(プレビュー)について。&lt;/p&gt;
&lt;p&gt;記事では互換性のないプロジェクトを読み込んだ際の切り替えについて、アウトオブプロセスデザイナーの制限やロードマップといった点を開設している。&lt;/p&gt;
&lt;h3 id="docker-init-for-asp.net-core-compared-to-vs-or-vs-code-extensions"&gt;Docker Init for ASP.NET Core Compared to VS or VS Code Extensions&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://thedatafarm.com/docker/docker-init-for-asp-net-core-compared-to-vs-or-vs-code-extensions/"&gt;http://thedatafarm.com/docker/docker-init-for-asp-net-core-compared-to-vs-or-vs-code-extensions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Docker に組み込まれた &lt;code&gt;docker init&lt;/code&gt; で生成される ASP.NET Core プロジェクトと Visual Studio や .NET SDK で生成されるプロジェクトがどのように異なるのかについて。&lt;/p&gt;
&lt;p&gt;記事では .dockerignore や Dockerfile、docker-compose.yml の差異といったものを比較している。&lt;/p&gt;
&lt;h3 id="net-8-asp.net-core-blazor"&gt;.NET 8 の ASP.NET Core Blazor で二度押しを抑止したい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/blazor-dotnet8-do-not-double-click"&gt;https://zenn.dev/microsoft/articles/blazor-dotnet8-do-not-double-click&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core Blazor でボタンなどの二度押しを抑制する方法について。&lt;/p&gt;
&lt;p&gt;記事ではフォームを使った場合の実装についても触れている。&lt;/p&gt;
&lt;h3 id="using-polly-v8-with-httpclientfactory"&gt;Using Polly v8 with HttpClientFactory&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://truestorydavestorey.medium.com/using-polly-v8-with-httpclientfactory-3f9a64359990"&gt;https://truestorydavestorey.medium.com/using-polly-v8-with-httpclientfactory-3f9a64359990&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HttpClientFactory で Polly v8 を使用する方法について。&lt;/p&gt;
&lt;p&gt;記事では v7 から v8 へと移行する際に必要となった変更についても解説している。&lt;/p&gt;
&lt;h3 id="neue-cc-r3-creactive-extensions"&gt;neue cc - R3 - C#用のReactive Extensionsの新しい現代的再実装&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/02/27_R3.html"&gt;https://neue.cc/2024/02/27_R3.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Reactive Extensions を現代的な視点に基づいて再設計/再実装したライブラリー R3 についての解説。&lt;/p&gt;
&lt;p&gt;記事ではどのような観点で R3 を再構築するに至ったか、どのような点が現代的なものであるのかといった設計思想を説明している。&lt;/p&gt;
&lt;h3 id="aws-lambda.net-6.net-8-qiita"&gt;AWS Lambdaで.NET 6から.NET 8に移行したときにやったこと - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kaz-matsubara/items/259de11eb3f30f9bda1f"&gt;https://qiita.com/kaz-matsubara/items/259de11eb3f30f9bda1f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 で実装された AWS Lambda プロジェクトを .NET 8 へと移行したことについて。&lt;/p&gt;
&lt;h3 id="wpftextbox"&gt;【WPF】数値しか入力できないTextBox&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2024-02-25-numeric-text-box"&gt;https://zenn.dev/nuits_jp/articles/2024-02-25-numeric-text-box&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF で数値のみ入力可能となる TextBox を実装する方法について。&lt;/p&gt;
&lt;h3 id="async-await-vs.pipetot-in-akka.net-actors"&gt;Async / Await vs. PipeTo&amp;gt;T&amp;gt; in Akka.NET Actors&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://petabridge.com/blog/async-await-vs-pipeto/"&gt;https://petabridge.com/blog/async-await-vs-pipeto/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Akka.NET アクターでのおける async/await と PipeTo の挙動やパフォーマンスといった面での比較。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="gummycat-visualize-the-activity-of-the.net-garbage-collector"&gt;GummyCat - Visualize the activity of the .NET garbage collector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minidump.net/gummycat/"&gt;https://minidump.net/gummycat/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET ヒープのメモリーレイアウトを表示し、GC の動作を可視化するツール。&lt;/p&gt;
&lt;h3 id="view-your-gcs-statistics-live-with-dotnet-gcstats"&gt;View your GCs statistics live with dotnet-gcstats!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/view-your-gcs-statistics-live-with-dotnet-gcstats-e670ce949bd9"&gt;https://chnasarre.medium.com/view-your-gcs-statistics-live-with-dotnet-gcstats-e670ce949bd9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GC の統計情報を見るコマンドラインツール。&lt;/p&gt;
&lt;h2 id="section-3"&gt;イベント&lt;/h2&gt;
&lt;h3 id="c-20240427-1330"&gt;C#パフォーマンス勉強会 (2024/04/27 13:30〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cs-reading.connpass.com/event/309714/"&gt;https://cs-reading.connpass.com/event/309714/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Visual Studio 17.10 Preview 2 に C# 13 プレビュー機能として Lock 型対応がマージされた話。&lt;/p&gt;
&lt;!-- https://x.com/jcouv/status/1764710194381283497?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We merged a preview C# 13 feature into VS 17.10 (preview 2): locking on `Lock` type.&lt;br&gt;&lt;br&gt;It special-cases how `System.Threading.Lock` interacts with the `lock` statement for improved usability and performance.&lt;a href="https://t.co/UZoTASkyfY"&gt;https://t.co/UZoTASkyfY&lt;/a&gt;&lt;/p&gt;&amp;mdash; Julien Couvreur (&amp;#64;jcouv) &lt;a href="https://twitter.com/jcouv/status/1764710194381283497?ref_src=twsrc%5Etfw"&gt;March 4, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;読み取り専用接続にまとめて &lt;code&gt;AsNoTracking&lt;/code&gt; を指定する方法。&lt;/p&gt;
&lt;!-- https://x.com/dave_dotnet/status/1764294153851060696?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Set Entity Framework AsNoTracking() globally  ⬇&lt;br&gt;&lt;br&gt;Perfect for read-only scenarios. &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/UQ7Qp9bjEn"&gt;pic.twitter.com/UQ7Qp9bjEn&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1764294153851060696?ref_src=twsrc%5Etfw"&gt;March 3, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio でソリューションごとに設定を変更をオーバーライドできるようになる話。&lt;/p&gt;
&lt;!-- https://x.com/mkristensen/status/1763258040890134701?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Settings can now follow any individual solution in Visual Studio. Coming soon... &lt;a href="https://t.co/W3DqgS6ecy"&gt;pic.twitter.com/W3DqgS6ecy&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1763258040890134701?ref_src=twsrc%5Etfw"&gt;February 29, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio のエディターでのイタリック体の対応。&lt;/p&gt;
&lt;!-- https://x.com/mkristensen/status/1761140571970863541?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I just updated my nightly build of Visual Studio and found this. Coming soon... &lt;a href="https://t.co/b3e4CyNCye"&gt;pic.twitter.com/b3e4CyNCye&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1761140571970863541?ref_src=twsrc%5Etfw"&gt;February 23, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-02-23: grpc-dotnet v2.61.0, Visual Studio 2022 17.10 Preview 1, StackExchange.Redis 2.7.20</title>
			<link>/2024/02/23/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/02/23/updates</guid>
			<pubDate>Fri, 23 Feb 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-release-v2.61.0-grpcgrpc-dotnet"&gt;Release Release v2.61.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.61.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.61.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.61.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正のほか、gRPC のリッチなエラーモデルに対応する Grpc.StatusProto の追加などが含まれる。&lt;/p&gt;
&lt;h3 id="introducing-visual-studio-17.10-preview-1-is-here-visual-studio-blog"&gt;Introducing Visual Studio 17.10 – Preview 1 is Here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-10-preview-1-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-10-preview-1-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 Preview 1 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性の強化
&lt;ul&gt;
&lt;li&gt;GitHub Copilot Chat
&lt;ul&gt;
&lt;li&gt;コンテキストの理解&lt;/li&gt;
&lt;li&gt;共通タスクのためのスラッシュコマンド&lt;/li&gt;
&lt;li&gt;インラインチャット&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新しく、モダンな体験の統合された設定でのカスタマイズ&lt;/li&gt;
&lt;li&gt;Git コミットメッセージ生成のアップデート&lt;/li&gt;
&lt;li&gt;Pull request に対する Work Item のリンク
ｰ Visual Studio 更新での推奨コンポーネント追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;デバッグと診断
&lt;ul&gt;
&lt;li&gt;条件付きブレークポイントとトレースポイントでのデバッグの強化&lt;/li&gt;
&lt;li&gt;メモリーツールにおけるメモリー使用調査のシンプル化&lt;/li&gt;
&lt;li&gt;EXE のターゲットインストルメンテーション&lt;/li&gt;
&lt;li&gt;プロセスへアタッチダイアログの刷新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ とゲーム開発
&lt;ul&gt;
&lt;li&gt;CMake ターゲットのピン止め&lt;/li&gt;
&lt;li&gt;Build Insights テンプレートビュー&lt;/li&gt;
&lt;li&gt;Unreal Engine マクロのインデントの追加&lt;/li&gt;
&lt;li&gt;Visual Studio 統合ツールプラグインのバックグラウンド実行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Teams と Microsoft 365 開発
&lt;ul&gt;
&lt;li&gt;AI を活用した Teams Bot の開発&lt;/li&gt;
&lt;li&gt;Teams Bot のオフライン実行とデバッグ&lt;/li&gt;
&lt;li&gt;Copilot for Microsoft 365 の拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-2.7.20-stackexchangestackexchange.redis"&gt;Release 2.7.20 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.20"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.7.20 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Alibaba Cloud のような multi-DB pseudo-cluster/proxy をサポートする対応が行われている。&lt;/p&gt;
&lt;h3 id="winforms-in-a-64-bit-world-our-strategy-going-forward.net-blog"&gt;WinForms in a 64-Bit world - our strategy going forward - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/winforms-designer-64-bit-path-forward/"&gt;https://devblogs.microsoft.com/dotnet/winforms-designer-64-bit-path-forward/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinForms の 64bit 対応、主に Visual Studio のデザイナーについて。&lt;/p&gt;
&lt;p&gt;記事では Visual Studio とデザイナーを 64bit に対応することのメリットと困難、Out-of-Process デザイナーに移行したこと、32bit .NET Framework アプリケーション向けのデザイナーの Out-of-Process 化、17.9 までに行われたレガシーコンポーネントへの対応と今後の予定について触れている。&lt;/p&gt;
&lt;h3 id="one-year-of-avalonia-xpf-revolutionising-wpf-development"&gt;One Year of Avalonia XPF - Revolutionising WPF development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/Blog/one-year-of-avalonia-xpf-revolutionising-wpf-development"&gt;https://avaloniaui.net/Blog/one-year-of-avalonia-xpf-revolutionising-wpf-development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia XPF をリリースして1年の振り返りについて。&lt;/p&gt;
&lt;p&gt;記事では今後のプラットフォーム展開についてや、小規模開発者向けの Indie ライセンスの提供についてもアナウンスされている。&lt;/p&gt;
&lt;h3 id="jetbrains-rider-and-the.net-aspire-plugin-the.net-tools-blog"&gt;JetBrains Rider and the .NET Aspire Plugin | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/19/jetbrains-rider-and-the-net-aspire-plugin/"&gt;https://blog.jetbrains.com/dotnet/2024/02/19/jetbrains-rider-and-the-net-aspire-plugin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider の .NET Aspire プラグインの紹介。&lt;/p&gt;
&lt;p&gt;記事では .NET Aspire の簡単な紹介と、Rider でのプラグインのインストールから使用方法について紹介している。&lt;/p&gt;
&lt;p&gt;.NET Aspire プラグインでは Rider IDE 上で OpenTelmetry メトリクスを表示できるほか、記事ではどのようにして .NET Aspire とプラグインがやり取りしているのかといった点も解説している。&lt;/p&gt;
&lt;h3 id="important-changes-coming-for.net-framework-3.5-and-4.5-targets-of-the-aws-sdk-for.net-amazon-web-services"&gt;Important changes coming for .NET Framework 3.5 and 4.5 targets of the AWS SDK for .NET | Amazon Web Services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/jp/blogs/developer/important-changes-coming-for-net-framework-3-5-and-4-5-targets-of-the-aws-sdk-for-net/"&gt;https://aws.amazon.com/jp/blogs/developer/important-changes-coming-for-net-framework-3-5-and-4-5-targets-of-the-aws-sdk-for-net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS SDK for .NET の .NET Framework サポートバージョンについてのアナウンス。&lt;/p&gt;
&lt;p&gt;2024年8月15日から AWS SDK for .NET は .NET Framework 3.5 と 4.5 のサポートを終了し、最小サポートバージョンは 4.6.2 からとなる。記事では決定に至ったモチベーションについても書かれている。&lt;/p&gt;
&lt;h3 id="release-8.0.7-dotnetmaui"&gt;Release 8.0.7 · dotnet/maui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/maui/releases/tag/8.0.7"&gt;https://github.com/dotnet/maui/releases/tag/8.0.7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI 8.0.7 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは様々な不具合の修正が行われている。&lt;/p&gt;
&lt;h3 id="net-framework-february-2024-security-and-quality-rollup-updates.net-blog"&gt;.NET Framework February 2024 Security and Quality Rollup Updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-february-2024-security-and-quality-rollup-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-february-2024-security-and-quality-rollup-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework の2024年2月のセキュリティーと品質の累積アップデートがリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではセキュリティーに関する新しい修正は含まれず、品質と信頼性のアップデートのみが含まれる。&lt;/p&gt;
&lt;p&gt;ASP.NET MVC のリクエスト処理中に ArgumentException がスローされる問題の修正、zlib ライブラリーのバージョンが古い問題の対処などが含まれる。&lt;/p&gt;
&lt;h3 id="introducing-asp.net-core-metrics-and-grafana-dashboards-in.net-8.net-blog"&gt;Introducing ASP.NET Core metrics and Grafana dashboards in .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-aspnetcore-metrics-and-grafana-dashboards-in-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/introducing-aspnetcore-metrics-and-grafana-dashboards-in-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core のメトリクスに対応した Grafana ダッシュボードが公開された。&lt;/p&gt;
&lt;p&gt;この Grafana ダッシュボードは ASP.NET Core の各種メトリクスをあらかじめ表示できるように構成したものとなっている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="aws-lambda.net-8-developersio"&gt;[アップデート] AWS Lambda のマネージドランタイムで .NET 8 が使えるようになりました | DevelopersIO&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.classmethod.jp/articles/lambda-dotnet-8/"&gt;https://dev.classmethod.jp/articles/lambda-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS Lambda で .NET 8 ランタイムが利用できるようになったことについて。&lt;/p&gt;
&lt;p&gt;記事では .NET 8 ランタイムで動作する Lambda 関数を作成、デプロイするところまで触れている。&lt;/p&gt;
&lt;h3 id="a-streamlined-extension-manager-comes-to-visual-studio-17.9-visual-studio-blog"&gt;A Streamlined Extension Manager comes to Visual Studio 17.9 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/a-streamlined-extension-manager-comes-to-visual-studio-17-9/"&gt;https://devblogs.microsoft.com/visualstudio/a-streamlined-extension-manager-comes-to-visual-studio-17-9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の新しい拡張マネージャーが Visual Studio 17.9 にプレビューとして導入されていることについて。&lt;/p&gt;
&lt;p&gt;新しい拡張マネージャーは UI が刷新され、詳細が大きく表示され、検索フィルターといったものが使用できるようになっている。新しい拡張マネージャーはプレビュー機能のため、オプションから設定することで利用できる。&lt;/p&gt;
&lt;h3 id="how-to-use-ai-assistant-to-generate-test-data-for.net-applications-the.net-tools-blog"&gt;How To Use AI Assistant to Generate Test Data For .NET Applications | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/21/jetbrains-ai-assistant-generate-test-data-for-dotnet/"&gt;https://blog.jetbrains.com/dotnet/2024/02/21/jetbrains-ai-assistant-generate-test-data-for-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains AI アシスタントを使用してユニットテストのテストデータを作成してテストする方法について。&lt;/p&gt;
&lt;h3 id="cgraphql-hotchocolate-qiita"&gt;C#のGraphQLサーバー構築 【HotChocolate 】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/te-k/items/d0b153a8bb5075ab93fe"&gt;https://qiita.com/te-k/items/d0b153a8bb5075ab93fe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HotChocolate を使用した GraphQL サーバーを実装する方法について。&lt;/p&gt;
&lt;p&gt;記事では Mutation や null 許容についても触れている。&lt;/p&gt;
&lt;h3 id="onboarding-stripe-connect-express-accounts-in-asp.net-core"&gt;Onboarding Stripe Connect Express accounts in ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/stripe/onboarding-stripe-connect-express-accounts-in-aspnet-core-3p0a"&gt;https://dev.to/stripe/onboarding-stripe-connect-express-accounts-in-aspnet-core-3p0a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションを Stripe Connect と Stripe Billing と統合する例について。&lt;/p&gt;
&lt;p&gt;記事では架空のサービスを想定して設定や課金の実装といったものを進めている。&lt;/p&gt;
&lt;h3 id="visualstudio.extensibility-install-extensions-without-restarting-visual-studio-visual-studio-blog"&gt;VisualStudio.Extensibility: Install extensions without restarting Visual Studio! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-9/"&gt;https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の新しい拡張モデル VisualStudio.Extensibility の再起動なしのインストールをはじめとした新機能について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拡張機能を Visual Studio Marketplace に発行する&lt;/li&gt;
&lt;li&gt;ホットロード: Visual Studio の再起動なしの拡張インストール&lt;/li&gt;
&lt;li&gt;構成プロパティを使用して拡張を簡単に構成&lt;/li&gt;
&lt;li&gt;より良いデバッグのためにドッキング可能なカスタムデータビジュアライザーの作成&lt;/li&gt;
&lt;li&gt;拡張への Language Server Protocol (LSP) サポートの追加&lt;/li&gt;
&lt;li&gt;拡張されたクエリー API でのプロジェクトシステムのクエリー&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="using-named-pipes-with-asp.net-core-and-httpclient"&gt;Using named pipes with ASP.NET Core and HttpClient&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/using-named-pipes-with-aspnetcore-and-httpclient/"&gt;https://andrewlock.net/using-named-pipes-with-aspnetcore-and-httpclient/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core と HttpClient を Windows の名前付きパイプで使用することについて。名前付きパイプを使用する理由とサーバーおよびクライアントで使用する方法について書かれている。&lt;/p&gt;
&lt;h3 id="developing-optimized-github-actions-with.net-and-native-aot.net-blog"&gt;Developing Optimized GitHub Actions with .NET and Native AOT - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/developing-optimized-github-actions-with-net-and-native-aot/"&gt;https://devblogs.microsoft.com/dotnet/developing-optimized-github-actions-with-net-and-native-aot/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で GitHub Actions のアクションを作り、Native AOT でビルドする上での問題点と解決について。&lt;/p&gt;
&lt;h3 id="net-aspire-preview-3-expanded-component-support-with-azure-openai-mysql-cosmosdb-kafka-and-more"&gt;.NET Aspire Preview 3: Expanded Component Support with Azure OpenAI, MySQL, CosmosDB, Kafka and More&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/news/2024/02/dotnet-aspire-preview3-released/"&gt;https://www.infoq.com/news/2024/02/dotnet-aspire-preview3-released/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire Preview 3 での変更点についての解説。&lt;/p&gt;
&lt;h3 id="ironpython-qiita"&gt;IronPython との付き合いかた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Mt_SQ/items/ddbcf39c19ad6591bd96"&gt;https://qiita.com/Mt_SQ/items/ddbcf39c19ad6591bd96&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IronPython を使用する上での Python/.NET との相互運用などについて。&lt;/p&gt;
&lt;h3 id="reading-raw-asp.net-request.body-multiple-times"&gt;Reading Raw ASP.NET Request.Body Multiple Times&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2024/Feb/20/Reading-Raw-ASPNET-RequestBody-Multiple-Times"&gt;https://weblog.west-wind.com/posts/2024/Feb/20/Reading-Raw-ASPNET-RequestBody-Multiple-Times&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で通常一度しか読み取れないリクエストボディを複数回読み込む方法について。&lt;/p&gt;
&lt;h3 id="monorepo-for.net-and-nodejs-workspaces"&gt;Monorepo for .NET and NodeJS workspaces&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://mykeels.medium.com/monorepo-for-net-and-nodejs-workspaces-dca7716c16c6"&gt;https://mykeels.medium.com/monorepo-for-net-and-nodejs-workspaces-dca7716c16c6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET と NodeJS プロジェクトの両方を含むモノレポの構成について。&lt;/p&gt;
&lt;h3 id="dumping-the-managed-heap-in-c"&gt;Dumping the managed heap in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minidump.net/dumping-the-managed-heap-in-csharp/"&gt;https://minidump.net/dumping-the-managed-heap-in-csharp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# からマネージヒープのメモリーをダンプしてみるという試み。&lt;/p&gt;
&lt;p&gt;記事では WinDbg の dumpheap -stat 相当の表示ができるようにヒープを手繰るといったことも試みている。&lt;/p&gt;
&lt;h3 id="asp.net-core-azure-monitor-opentelemetry-distro-developersio"&gt;ASP.NET Core アプリケーションへ Azure Monitor OpenTelemetry Distro を導入してみた | DevelopersIO&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.classmethod.jp/articles/azure-monitor-opentelemetry-distro-aspnetcore/"&gt;https://dev.classmethod.jp/articles/azure-monitor-opentelemetry-distro-aspnetcore/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションから Application Insights に対して OpenTelemetry 経由でデータを送信する方法について。&lt;/p&gt;
&lt;h3 id="net-threadless-process-injection"&gt;.NET Threadless Process Injection&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://vovohelo.medium.com/net-threadless-process-injection-6c389a9ce585"&gt;https://vovohelo.medium.com/net-threadless-process-injection-6c389a9ce585&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET プロセスに対するコードインジェクションを JIT コードをもとに行う手法について。&lt;/p&gt;
&lt;h3 id="eliminate-passwords-with-fido2-in-asp.net-core"&gt;Eliminate passwords with FIDO2 in ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codezen.medium.com/eliminate-passwords-with-fido2-in-asp-net-core-87b6775b6ca7"&gt;https://codezen.medium.com/eliminate-passwords-with-fido2-in-asp-net-core-87b6775b6ca7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で FIDO2 によるパスワードレスを実装する方法について。&lt;/p&gt;
&lt;h3 id="c-reciprocal-rank-fusion-rrf"&gt;C# で Reciprocal Rank Fusion (RRF) を実装する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/karamem0/articles/2024_02_16_180000"&gt;https://zenn.dev/karamem0/articles/2024_02_16_180000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;フルテキスト検索とベクター検索のような複数の検索結果を結合してスコアリングする Reciprocal Rank Fusion (RRF) を実装する方法について。&lt;/p&gt;
&lt;h3 id="running.net-in-the-browser-without-asp.net"&gt;Running .NET in the Browser without ASP.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;muratkirazkaya/running-net-in-the-browser-without-asp-net-89493ab24e10"&gt;https://medium.com/&amp;#64;muratkirazkaya/running-net-in-the-browser-without-asp-net-89493ab24e10&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor や ASP.NET Core をなしに、WebAssembly にビルドした .NET アプリケーションをブラウザーで動かす方法について。&lt;/p&gt;
&lt;h3 id="net-continuous-profiler-cpu-and-wall-time-profiling-datadog"&gt;.NET Continuous Profiler: CPU and Wall Time Profiling | Datadog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.datadoghq.com/ja/blog/engineering/dotnet-continuous-profiler-part-2/"&gt;https://www.datadoghq.com/ja/blog/engineering/dotnet-continuous-profiler-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Datadog プロファイラーの内部についての解説記事。&lt;/p&gt;
&lt;p&gt;CPU とウォールタイムのプロファイリングの詳細やプロファイラーの OS ごとの実装について書かれている。&lt;/p&gt;
&lt;h3 id="c-c"&gt;ジェネリック型引数の部分型推論 | &lt;ins&gt;C&lt;/ins&gt;; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/2/partial-inference/"&gt;https://ufcpp.net/blog/2024/2/partial-inference/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# でもジェネリック型の部分型推論ができるようにしたいという話があることについて。&lt;/p&gt;
&lt;h3 id="rider-2024.1-eap-5-collections-visualizer-sticky-lines-improved-github-actions-support-and-more-the.net-tools-blog"&gt;Rider 2024.1 EAP 5: Collections Visualizer, Sticky Lines, Improved GitHub Actions Support, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/16/rider-2024-1-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2024/02/16/rider-2024-1-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.1 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではコレクションビジュアライザー、エディターでの行スティッキー、GitHub Actions サポートの改善、デコンパイラーの改善、型依存ダイアグラムの改善が含まれている。&lt;/p&gt;
&lt;h3 id="net-aspire-preview-3-integrating-node.js-apps-into-a.net-aspire-application"&gt;.NET Aspire Preview 3 — Integrating Node.Js Apps into a .Net Aspire Application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;malarsharmila/net-aspire-preview-3-integrating-node-js-apps-into-a-net-aspire-application-071b1c37189d"&gt;https://medium.com/&amp;#64;malarsharmila/net-aspire-preview-3-integrating-node-js-apps-into-a-net-aspire-application-071b1c37189d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire Preview 3 で React アプリケーションを統合する手順について。&lt;/p&gt;
&lt;h3 id="dotinsights-february-2024-the.net-tools-blog"&gt;dotInsights | February 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/07/dotinsights-february-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/02/07/dotinsights-february-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による2024年2月の .NET 関連トピックのまとめ。&lt;/p&gt;
&lt;h3 id="rider-splash-screens-for-eaps-early-access-pets-the.net-tools-blog"&gt;Rider Splash Screens for EAPs (Early Access Pets) | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/14/rider-splash-screens-for-eaps-early-access-pets/"&gt;https://blog.jetbrains.com/dotnet/2024/02/14/rider-splash-screens-for-eaps-early-access-pets/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider のナイトリービルドで使われているスプラッシュスクリーンの紹介。それらのナイトリービルドではペットの写真が使われている。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="codeer-softwareexcel.report.pdf"&gt;Codeer-Software/Excel.Report.PDF&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Codeer-Software/Excel.Report.PDF"&gt;https://github.com/Codeer-Software/Excel.Report.PDF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Excel から PDF ファイルを生成するライブラリー。&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="optimize-biginteger.divide-by-kzrnm-pull-request-96895-dotnetruntime"&gt;Optimize BigInteger.Divide by kzrnm · Pull Request #96895 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/96895"&gt;https://github.com/dotnet/runtime/pull/96895&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BigInteger.Divide を Burnikel-Ziegler 法で最適化するという PR。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/naminodarie/articles/burnikel_ziegler"&gt;多倍長整数の除算: Burnikel-Ziegler 法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-02-14: .NET 9 Preview 1, Visual Studio 2022 v17.9, .NET 8.0.2 &amp; 7.0.16 &amp; 6.0.27</title>
			<link>/2024/02/14/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/02/14/updates</guid>
			<pubDate>Wed, 14 Feb 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="our-vision-for.net-9.net-blog"&gt;Our Vision for .NET 9 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/our-vision-for-dotnet-9/"&gt;https://devblogs.microsoft.com/dotnet/our-vision-for-dotnet-9/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.9-now-available-visual-studio-blog"&gt;Visual Studio 2022 17.9 Now Available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-9-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-9-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-february-2024-updates.net-8.0.2-7.0.16.net-6.0.27.net-blog"&gt;.NET February 2024 Updates – .NET 8.0.2, 7.0.16, .NET 6.0.27 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/february-2024-updates/"&gt;https://devblogs.microsoft.com/dotnet/february-2024-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-nuget-6.9-the-nuget-blog"&gt;Announcing NuGet 6.9 - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/"&gt;https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcement-binaryformatter-is-being-removed-in.net-9-issue-98245-dotnetruntime"&gt;Announcement: BinaryFormatter is being removed in .NET 9 · Issue #98245 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/98245"&gt;https://github.com/dotnet/runtime/issues/98245&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-8.3.0-app-vnextpolly"&gt;Release 8.3.0 · App-vNext/Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.3.0"&gt;https://github.com/App-vNext/Polly/releases/tag/8.3.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v1.5.0-preview1-microsoftwindowsappsdk"&gt;Release v1.5.0-preview1 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.0-preview1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.0-preview1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v8.0.2-npgsqlnpgsql"&gt;Release v8.0.2 · npgsql/npgsql&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v8.0.2"&gt;https://github.com/npgsql/npgsql/releases/tag/v8.0.2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-11.0.9-avaloniauiavalonia"&gt;Release 11.0.9 · AvaloniaUI/Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.9"&gt;https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.9&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.8"&gt;Release 11.0.8 · AvaloniaUI/Avalonia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="automapper-13.0-released"&gt;AutoMapper 13.0 Released&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.jimmybogard.com/automapper-13-0-released/"&gt;https://www.jimmybogard.com/automapper-13-0-released/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AutoMapper/AutoMapper/releases/tag/v13.0.1"&gt;Release v13.0.1 · AutoMapper/AutoMapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AutoMapper/AutoMapper/releases/tag/v13.0.0"&gt;Release v13.0.0 · AutoMapper/AutoMapper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="welcome-to.net-release-news-on-github-discussions-dotnetcore-discussion-9131"&gt;Welcome to .NET Release News on GitHub Discussions! · dotnet/core · Discussion #9131&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/discussions/9131"&gt;https://github.com/dotnet/core/discussions/9131&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-sudo-for-windows"&gt;Introducing Sudo for Windows!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/commandline/introducing-sudo-for-windows/"&gt;https://devblogs.microsoft.com/commandline/introducing-sudo-for-windows/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-stride-4.2"&gt;Announcing Stride 4.2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stride3d.net/blog/announcing-stride-4-2-in-dotnet-8/"&gt;https://www.stride3d.net/blog/announcing-stride-4-2-in-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-9linq-qiita"&gt;.NET 9で登場予定のLINQのメソッド - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/h084/items/57ee888c346479b6802f"&gt;https://qiita.com/h084/items/57ee888c346479b6802f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ways-to-set-the-urls-for-an-asp.net-core-app"&gt;8 ways to set the URLs for an ASP.NET Core app&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/8-ways-to-set-the-urls-for-an-aspnetcore-app/"&gt;https://andrewlock.net/8-ways-to-set-the-urls-for-an-aspnetcore-app/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the-odd-edge-case-of-c-datetime-addyears"&gt;The Odd Edge Case of C# DateTime AddYears()&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;criticalsession/the-odd-edge-case-of-c-datetime-addyears-65a8ac0cc105"&gt;https://medium.com/&amp;#64;criticalsession/the-odd-edge-case-of-c-datetime-addyears-65a8ac0cc105&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="avaloniadrag-and-drop-qiita"&gt;Avaloniaでドラッグ&amp;amp;ドロップでファイルを受け取る【Drag and Drop】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SousiOmine/items/7b5cfbf1505176b19fd0"&gt;https://qiita.com/SousiOmine/items/7b5cfbf1505176b19fd0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-server.net-8app.razor-qiita"&gt;Blazor Serverの.NET 8以降(App.razor)の相対ディレクトリ指定 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/28c020070111b4d0ed40"&gt;https://qiita.com/yaju/items/28c020070111b4d0ed40&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="avalonialistboxselecteditems-qiita"&gt;AvaloniaのListBoxで複数選択を取得する【SelectedItems】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SousiOmine/items/a151485bf609b23d6539"&gt;https://qiita.com/SousiOmine/items/a151485bf609b23d6539&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2024.1-eap-4-new-monitoring-tool-window-and-blazor-wasm-hot-reload-for-running-applications-the.net-tools-blog"&gt;Rider 2024.1 EAP 4: New Monitoring Tool Window and Blazor WASM Hot Reload for Running Applications | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/09/rider-2024-1-eap-4/"&gt;https://blog.jetbrains.com/dotnet/2024/02/09/rider-2024-1-eap-4/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="opentelemetry-with-oracle-jdbc-and-odp.net"&gt;OpenTelemetry with Oracle JDBC and ODP.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blogs.oracle.com/developers/post/opentelemetry-with-oracle-jdbc-and-odpnet"&gt;https://blogs.oracle.com/developers/post/opentelemetry-with-oracle-jdbc-and-odpnet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c.net-8-qiita"&gt;C#と.NET 8を活用したコンソールアプリケーションにおける依存性注入の実装 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/te-k/items/4ce2a8a9557139e0c418"&gt;https://qiita.com/te-k/items/4ce2a8a9557139e0c418&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="s-top-10-new-features-for.net-in-visual-studio-visual-studio-blog"&gt;2023’s Top 10 New Features for .NET in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/2023s-top-10-new-features-for-net-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/2023s-top-10-new-features-for-net-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="developing-with-accessibility-in-mind-at-microsoft-visual-studio-blog"&gt;Developing With Accessibility in Mind at Microsoft - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/developing-with-accessibility-in-mind-at-microsoft/"&gt;https://devblogs.microsoft.com/visualstudio/developing-with-accessibility-in-mind-at-microsoft/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="javawindows-app-sdkcmicrosoft-store-qiita"&gt;Java経験者がWindows App SDK(C#)で実装したアプリをMicrosoft Storeに公開するまでに得た気づき - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/dAii_7tHw_eL8R/items/42d7d4949ea851726d86"&gt;https://qiita.com/dAii_7tHw_eL8R/items/42d7d4949ea851726d86&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dotinsights-february-2024-the.net-tools-blog"&gt;dotInsights | February 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/07/dotinsights-february-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/02/07/dotinsights-february-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rxr3-qiita"&gt;次世代Rx「R3」解説 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/toRisouP/items/e7be5a5a43058556db8f"&gt;https://qiita.com/toRisouP/items/e7be5a5a43058556db8f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="entity-frameworkasnotracking-qiita"&gt;Entity Frameworkでのキャッシュ挙動とAsNoTrackingの使用方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/te-k/items/e10b44f89477d8a1678b"&gt;https://qiita.com/te-k/items/e10b44f89477d8a1678b&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="using-default-interface-methods-for-performance-gains-in-iheaderdictionary"&gt;Using default interface methods for performance gains in IHeaderDictionary&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/using-default-interface-methods-for-performance-gains-in-iheaderdictionary/"&gt;https://andrewlock.net/using-default-interface-methods-for-performance-gains-in-iheaderdictionary/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="span"&gt;ファーストクラスな Span 型&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/2/first-class-span/"&gt;https://ufcpp.net/blog/2024/2/first-class-span/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-qiita"&gt;[Blazor]プラグインで動的に表を切り替える - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/onsen_koichi/items/61fd3534789fc6399654"&gt;https://qiita.com/onsen_koichi/items/61fd3534789fc6399654&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dev-tunnels-a-game-changer-for-mobile-developers.net-blog"&gt;Dev Tunnels: A Game Changer for Mobile Developers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dev-tunnels-a-game-changer-for-mobile-developers/"&gt;https://devblogs.microsoft.com/dotnet/dev-tunnels-a-game-changer-for-mobile-developers/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="three-new-linq-methods-in.net-9"&gt;Three new LINQ methods in .NET 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/0594ba85-356b-47f1-89a9-70e9761c582e"&gt;https://steven-giesel.com/blogPost/0594ba85-356b-47f1-89a9-70e9761c582e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cross-platform-diagnostic-tools-for.net-applications"&gt;Cross-Platform Diagnostic Tools for .NET Applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/mohammadkarimi/cross-platform-diagnostic-tools-for-net-applications-2366"&gt;https://dev.to/mohammadkarimi/cross-platform-diagnostic-tools-for-net-applications-2366&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="predict-happiness-using-sci-kit-learn-classification-ml-model-and-import-in-to.net"&gt;Predict Happiness using Sci-kit learn classification ML model and import in to .net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/codenx/predict-happiness-using-sci-kit-learn-classification-ml-model-and-import-in-to-net-58b1d28e8dbf"&gt;https://medium.com/codenx/predict-happiness-using-sci-kit-learn-classification-ml-model-and-import-in-to-net-58b1d28e8dbf&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net8-web-api-monitoring-fast-and-easy-with-traces-logs-and-metrics"&gt;NET8 Web Api Monitoring Fast and Easy With Traces, Logs and Metrics.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/leandronoijo/net8-web-api-monitoring-fast-and-easy-with-traces-logs-and-metrics-2o9n"&gt;https://dev.to/leandronoijo/net8-web-api-monitoring-fast-and-easy-with-traces-logs-and-metrics-2o9n&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="a-look-back-visual-studios-profiling-tool-advancements-in-2023-visual-studio-blog"&gt;A Look Back: Visual Studio’s Profiling Tool Advancements in 2023 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/a-look-back-visual-studios-profiling-tool-advancements-in-2023/"&gt;https://devblogs.microsoft.com/visualstudio/a-look-back-visual-studios-profiling-tool-advancements-in-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="monitoring-tool-in-rider-2024.1-eap-4-the.net-tools-blog"&gt;Monitoring Tool in Rider 2024.1 EAP 4 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/12/monitoring-tool-in-rider-2024-1-eap-4/"&gt;https://blog.jetbrains.com/dotnet/2024/02/12/monitoring-tool-in-rider-2024-1-eap-4/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="copenclosed-type-boundunbound-type"&gt;【C#】open/closed type 及び bound/unbound type の定義。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2024/02/12/190723"&gt;https://blog.neno.dev/entry/2024/02/12/190723&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c"&gt;C# での破壊的変更の今後の扱い (続報)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/2/breaking-changes/"&gt;https://ufcpp.net/blog/2024/2/breaking-changes/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="creating-custom-ai-prompts-with-resharper-the.net-tools-blog"&gt;Creating Custom AI Prompts With ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/05/creating-custom-ai-prompts-with-resharper/"&gt;https://blog.jetbrains.com/dotnet/2024/02/05/creating-custom-ai-prompts-with-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cmicrosoft.extensions.logging-bigquery"&gt;【C#】Microsoft.Extensions.Logging のログを BigQuery で引きやすくする。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2024/02/03/180352"&gt;https://blog.neno.dev/entry/2024/02/03/180352&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2024.1-eap-3-stepping-time-visualization-inline-breakpoints-and-uxui-improvements.the.net-tools-blog"&gt;Rider 2024.1 EAP 3: Stepping Time Visualization, Inline Breakpoints, and UX/UI Improvements. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/02/02/rider-2024-1-eap-3/"&gt;https://blog.jetbrains.com/dotnet/2024/02/02/rider-2024-1-eap-3/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="smart-load-balancing-for-openai-endpoints-using-containers"&gt;🚀 Smart load balancing for OpenAI endpoints using containers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/fasttrack-for-azure/smart-load-balancing-for-openai-endpoints-using-containers/ba-p/4017550"&gt;https://techcommunity.microsoft.com/t5/fasttrack-for-azure/smart-load-balancing-for-openai-endpoints-using-containers/ba-p/4017550&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/Dave_DotNet/status/1754916594852024593 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET 9 Enumerable First/Last &lt;br&gt;performance improvements  ⬇&lt;br&gt;&lt;br&gt;The PR below got merged into main yesterday. &lt;br&gt;Looks like some nice improvements to First/Last. &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/xmIHExgA92"&gt;pic.twitter.com/xmIHExgA92&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1754916594852024593?ref_src=twsrc%5Etfw"&gt;February 6, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/dave_dotnet/status/1756279039587684398?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET 9 - new LINQ Index operator  ⬇&lt;br&gt;&lt;br&gt;This allows us to get the index of the current iteration. This is already possible using Select but the new operator is a little more explicit and has a nicer API IMHO.&lt;br&gt;&lt;br&gt;What do you think?&lt;br&gt;&lt;br&gt;Thanks to Steve Giesel on LinkedIn for the image -&amp;gt;… &lt;a href="https://t.co/6CEk5slI82"&gt;pic.twitter.com/6CEk5slI82&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1756279039587684398?ref_src=twsrc%5Etfw"&gt;February 10, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/nenomake/status/1755662602204836282?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;ECMA-334 (C# の言語仕様) がいつの間にやら更新されており、C# 7 に対応していた。マジか。 &lt;a href="https://t.co/8qDvpgkI5K"&gt;pic.twitter.com/8qDvpgkI5K&lt;/a&gt;&lt;/p&gt;&amp;mdash; 何縫ねの。 (&amp;#64;nenoMake) &lt;a href="https://twitter.com/nenoMake/status/1755662602204836282?ref_src=twsrc%5Etfw"&gt;February 8, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-02-02: Microsoft Copilot with SignalR, Office's RTC migration to modern .NET, Uno Platform 5.1</title>
			<link>/2024/02/02/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/02/02/updates</guid>
			<pubDate>Fri, 02 Feb 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="building-ai-powered-microsoft-copilot-with-signalr-and-other-open-source-tools.net-blog"&gt;Building AI-powered Microsoft Copilot with SignalR and other open-source tools - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/building-ai-powered-bing-chat-with-signalr-and-other-open-source-tools/"&gt;https://devblogs.microsoft.com/dotnet/building-ai-powered-bing-chat-with-signalr-and-other-open-source-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SignalR とその他オープンソースツールを使用して構築した Microsoft Copilot についての解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SignalR を使用した低レイテンシーな通信チャネルを確立&lt;/li&gt;
&lt;li&gt;アダプティブカードと Markdown を使用した UI の記述&lt;/li&gt;
&lt;li&gt;アプリケーションのフロー&lt;/li&gt;
&lt;li&gt;Deep dive: SignalR をどのように使用しているか&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Deep dive ではメッセージごとに SignalR の接続を使用している(再利用しない)理由や、すべてのメッセージを送信している理由、&lt;a href="https://github.com/microsoft/object-basin"&gt;object-basin&lt;/a&gt; を使用したオブジェクトの部分更新などについて解説している。&lt;/p&gt;
&lt;h3 id="microsoft-offices-rtc-real-time-channel-migration-to-modern.net.net-blog"&gt;Microsoft Office's RTC (Real-Time Channel) migration to modern .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/office-rtc-dotnet-migration/"&gt;https://devblogs.microsoft.com/dotnet/office-rtc-dotnet-migration/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Office のリアルタイムチャンネル (RTC) をモダン .NET に移行したことについての事例解説。&lt;/p&gt;
&lt;p&gt;Office アプリケーションのリアルタイムコラボレーションで使用されている WebSocket (SignalR) ベースのサービスを .NET Framework 4.7.2 から .NET に移行した事例について解説している。&lt;/p&gt;
&lt;p&gt;移行した結果として「CPU の 30% の削減」「VM の原価の 30% 削減」「メモリーと GC 時間の 60% の削減」「主な API のレイテンシーの 50% 低下」といった効果があったとしている。&lt;/p&gt;
&lt;p&gt;移行には ASP.NET の HTTP モジュールとハンドラーのマイグレーション、ASP.NET SignalR と ASP.NET Core SignalR の互換性の担保といった課題がありそれぞれミドルウェアで対応したことや、移行後に発生した IIS の CPU 利用率が高い問題や SignalR Core の CPU 使用率が高い問題とそれらの対処について解説されている。&lt;/p&gt;
&lt;p&gt;そのほかイベントカウンターによるメトリックの追跡、プロダクションへのロールアウトの結果、今後の展望について書かれている。&lt;/p&gt;
&lt;h3 id="uno-platform-5.1-live-wizard-for-rider-vs-code-users-new-controls-perf-improvements-and-more"&gt;Uno Platform 5.1 : Live Wizard for Rider &amp;amp; VS Code users, New Controls, Perf improvements and more.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/uno-platform-5-1/"&gt;https://platform.uno/blog/uno-platform-5-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 5.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Rider や Visual Studio Code ユーザー向けに新規プロジェクトを作成する &lt;code&gt;dotnet new&lt;/code&gt; コマンドを生成するウィザードが用意されたほか、TimePicker コントロールの導入やパフォーマンスの向上、.csproj のフットプリント削減、Uno Toolkit のアップデートと Uno Extensions の .NET 7 のサポートの削除などが含まれる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unoplatform/uno/releases/tag/5.1.31"&gt;Release 5.1.31 · unoplatform/uno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-the-mstest-runner-cli-visual-studio-more.net-blog"&gt;Introducing the MSTest Runner - CLI, Visual Studio, &amp;amp; More - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-ms-test-runner/"&gt;https://devblogs.microsoft.com/dotnet/introducing-ms-test-runner/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSTest を実行する軽量なツール MSTest Runner のリリースと紹介。&lt;/p&gt;
&lt;p&gt;MSTest Runner は単体で実行可能な形にできることで、ランタイムの含まれていない環境でのテスト実行などが行いやすくなる、フットプリントを小さくできるといった利点があるとのこと。&lt;/p&gt;
&lt;h3 id="introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio-the-nuget-blog"&gt;Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/"&gt;https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet のバージョン競合を解決するためのツール NuGetSolver の紹介。&lt;/p&gt;
&lt;p&gt;NuGetSolver は Microsoft Research と共同で開発された Visual Studio の拡張機能で、NuGet の依存関係においてバージョン競合が発生している問題を自動で解決するというツール。&lt;/p&gt;
&lt;p&gt;記事では導入方法や使用上の注意と制約などについても触れられている。&lt;/p&gt;
&lt;h3 id="current-state-of-c-platform-support-in-godot-4.2"&gt;Current state of C# platform support in Godot 4.2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://godotengine.org/article/platform-state-in-csharp-for-godot-4-2/"&gt;https://godotengine.org/article/platform-state-in-csharp-for-godot-4-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Godot 4.2 での C# プラットフォームサポートの現状について。&lt;/p&gt;
&lt;p&gt;サポート(各プラットフォーム向けのエクスポート)については下記の通りとなっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android 向けエクスポートは .NET 7 以降で Mono によるサポート&lt;/li&gt;
&lt;li&gt;iOS 向けエクスポート .NET 8 の実験的な NativeAOT によるサポート&lt;/li&gt;
&lt;li&gt;Web 向けのエクスポートは現時点では未サポート&lt;/li&gt;
&lt;li&gt;デスクトップ向けのエクスポートは Godot 4.0 からすべてサポート (.NET 7 以降であれば NativeAOT も含む)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="experimental2-windows-app-sdk-windows-apps"&gt;バージョン 1.5 実験 (1.5.0-experimental2) - Windows App SDK の実験的リリース チャネル - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-15-experimental-150-experimental2"&gt;https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-15-experimental-150-experimental2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.5.0-experimental2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正と Map 関連をはじめとした新しい API の追加が行われている。&lt;/p&gt;
&lt;h3 id="release-stable-release-v5.1.5-dotnetsqlclient"&gt;Release Stable Release v5.1.5 · dotnet/SqlClient&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/SqlClient/releases/tag/v5.1.5"&gt;https://github.com/dotnet/SqlClient/releases/tag/v5.1.5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Data.SqlClient v5.1.5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="rider-2024.1-roadmap-the.net-tools-blog"&gt;Rider 2024.1 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/01/24/rider-2024-1-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2024/01/24/rider-2024-1-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.1 のロードマップ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UX/UI&lt;/li&gt;
&lt;li&gt;デバッガーの改善
&lt;ul&gt;
&lt;li&gt;Blazor WASM アプリケーションの安定したデバッグ体験&lt;/li&gt;
&lt;li&gt;Blazor での Hot Reload&lt;/li&gt;
&lt;li&gt;ステップ実行時間とデータ収集のビジュアライザー&lt;/li&gt;
&lt;li&gt;インラインブレークポイント&lt;/li&gt;
&lt;li&gt;カーソルまで実行 (Run to cursor) inlay オプションの改修&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ゲーム開発
&lt;ul&gt;
&lt;li&gt;Unity&lt;/li&gt;
&lt;li&gt;Unreal Engine&lt;/li&gt;
&lt;li&gt;Godot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web 開発&lt;/li&gt;
&lt;li&gt;MAUI サポートの改善&lt;/li&gt;
&lt;li&gt;AI アシスタント&lt;/li&gt;
&lt;li&gt;スマートスペルチェッカー&lt;/li&gt;
&lt;li&gt;コンテナーとリモート環境でのユニットテストの実行&lt;/li&gt;
&lt;li&gt;Code With Me (ベータ)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="resharper-2024.1-roadmap-the.net-tools-blog"&gt;ReSharper 2024.1 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/01/24/resharper-2024-1-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2024/01/24/resharper-2024-1-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.1 のロードマップ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;予測デバッグモードのデフォルト化&lt;/li&gt;
&lt;li&gt;アウトオブプロセスのアップデート&lt;/li&gt;
&lt;li&gt;Web 開発&lt;/li&gt;
&lt;li&gt;コンテナーとリモート環境でのユニットテストの実行&lt;/li&gt;
&lt;li&gt;AI アシスタント&lt;/li&gt;
&lt;li&gt;その他のプラン&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="how-to-deploy.net-aspire-apps-to-azure-container-apps.net-blog"&gt;How to deploy .NET Aspire apps to Azure Container Apps - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/how-to-deploy-dotnet-aspire-apps-to-azure-container-apps/"&gt;https://devblogs.microsoft.com/dotnet/how-to-deploy-dotnet-aspire-apps-to-azure-container-apps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire アプリケーションを作成し、Azure Container Apps にデプロイするまでの簡単な手順の紹介。&lt;/p&gt;
&lt;h3 id="in-the-debuggers-spotlight-a-year-in-review-visual-studio-blog"&gt;In the Debugger's Spotlight: A Year in Review - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/in-the-debuggers-spotlight-a-year-in-review/"&gt;https://devblogs.microsoft.com/visualstudio/in-the-debuggers-spotlight-a-year-in-review/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 の2023年に提供された新しいデバッグに関連する機能のまとめと紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;インナーループ生産性の加速
&lt;ul&gt;
&lt;li&gt;ブレークポイントグループ&lt;/li&gt;
&lt;li&gt;拡張テキストビジュアライザー&lt;/li&gt;
&lt;li&gt;非モーダルビジュアライザー&lt;/li&gt;
&lt;li&gt;コールスタック検索&lt;/li&gt;
&lt;li&gt;並列スタックウィンドウの改善&lt;/li&gt;
&lt;li&gt;デバッガープロセスへの永続的な再アタッチ&lt;/li&gt;
&lt;li&gt;CMake デバッガー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;外部ソースコードのスマート化と高速化&lt;/li&gt;
&lt;li&gt;クロスプラットフォームデバッグサポート
&lt;ul&gt;
&lt;li&gt;Visual Studio 統合ターミナルでの Linux アプリのデバッグ&lt;/li&gt;
&lt;li&gt;リモートターゲットへのデプロイとデバッグ&lt;/li&gt;
&lt;li&gt;追加の Linux デバッグ機能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パフォーマンスのアップグレード&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net9-alpha-linq-updates"&gt;.NET9 Alpha - LINQ updates&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/codenx/net9-alpha-linq-updates-c2df66d20e1b"&gt;https://medium.com/codenx/net9-alpha-linq-updates-c2df66d20e1b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で LINQ に追加される予定の CountBy, AggregateBy オペレーターの紹介。&lt;/p&gt;
&lt;h3 id="guidance-for.net-nativeaot"&gt;Guidance for .NET NativeAOT&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;skyake/guidance-for-net-nativeaot-4b9853c80f8a"&gt;https://medium.com/&amp;#64;skyake/guidance-for-net-nativeaot-4b9853c80f8a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NativeAOT に対応する際に気を付け、対応すべきポイントのガイド。&lt;/p&gt;
&lt;h3 id="understanding-c-8-default-interface-methods"&gt;Understanding C# 8 default interface methods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/understanding-default-interface-methods/"&gt;https://andrewlock.net/understanding-default-interface-methods/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 8 のデフォルトインターフェース実装についての解説。どのようなことができ、どのような問題が発生するかについて。&lt;/p&gt;
&lt;h3 id="dotnet-script-c-qiita"&gt;dotnet-script によるC#スクリプトの実行/デバッグ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/toras9000/items/127548c73547f893995c"&gt;https://qiita.com/toras9000/items/127548c73547f893995c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dotnet-script を使用した .csx (C# スクリプト) の実行と開発について。&lt;/p&gt;
&lt;h3 id="debugging-techniques-in-jetbrains-rider-you-should-know-about-the.net-tools-blog"&gt;12 Debugging Techniques In JetBrains Rider You Should Know About | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/01/29/12-debugging-techniques-in-jetbrains-rider-you-should-know-about/"&gt;https://blog.jetbrains.com/dotnet/2024/01/29/12-debugging-techniques-in-jetbrains-rider-you-should-know-about/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider の12個のデバッグテクニックの紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;インライン Watch&lt;/li&gt;
&lt;li&gt;戻り値&lt;/li&gt;
&lt;li&gt;スマート Step Into デバッグ&lt;/li&gt;
&lt;li&gt;ブレークポイントオプション&lt;/li&gt;
&lt;li&gt;実行ポインターのドラッグ&lt;/li&gt;
&lt;li&gt;外部のデコンパイルされたコードのデバッグ&lt;/li&gt;
&lt;li&gt;例外ブレークポイント&lt;/li&gt;
&lt;li&gt;静的メソッドの実行とデバッグ&lt;/li&gt;
&lt;li&gt;エディットコンティニュー&lt;/li&gt;
&lt;li&gt;メモリービュー&lt;/li&gt;
&lt;li&gt;スレッド固有ブレークポイント&lt;/li&gt;
&lt;li&gt;DebuggerDisplayAttribute サポート&lt;/li&gt;
&lt;li&gt;ボーナス: 予測デバッガー&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="code-review-time-travel"&gt;Code review &amp;amp; Time Travel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/200577-B/code-review-time-travel"&gt;https://ayende.com/blog/200577-B/code-review-time-travel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RavenDB の開発を通して学んだコードレビューについての振り返り。&lt;/p&gt;
&lt;h3 id="a-replacement-for-binaryformatter-in.net-8"&gt;A replacement for BinaryFormatter in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/4271d529-5625-4b67-bd59-d121f2d8c8f6"&gt;https://steven-giesel.com/blogPost/4271d529-5625-4b67-bd59-d121f2d8c8f6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;廃止された BinaryFormatter の移行先としてシリアライザーなどの紹介。&lt;/p&gt;
&lt;h3 id="net-performance-analysis-newtonsoft.json-vs-system.text.json-in.net-8"&gt;.NET Performance Analysis: Newtonsoft.Json vs System.Text.Json in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://trevormccubbin.medium.com/net-performance-analysis-newtonsoft-json-vs-system-text-json-in-net-8-34520c21d054"&gt;https://trevormccubbin.medium.com/net-performance-analysis-newtonsoft-json-vs-system-text-json-in-net-8-34520c21d054&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Newtonsoft.Json と System.Text.Json の単純なシリアライズ/デシリアライズのパフォーマンスの比較について。&lt;/p&gt;
&lt;h3 id="winui-3-winforms"&gt;WinUI 3 アプリで WinForms の機能を利用する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/winui3-winforms"&gt;https://zenn.dev/shinta0806/articles/winui3-winforms&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 をベースにしたアプリケーションで Windows Forms の機能を使用するための手順について。&lt;/p&gt;
&lt;h3 id="c-enityframework-core-jsakamoto"&gt;[C# プログラム] 百万件のデータベースレコードを EnityFramework Core で列挙したら、メモリはどれくらい消費されるのか | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/29836607/"&gt;https://devadjust.exblog.jp/29836607/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core を使用して100万件のレコードを列挙 (foreach) する際のメモリー使用量がどの程度になるのかについて。&lt;/p&gt;
&lt;h3 id="my-experience-working-on-rustc_codegen_clr-half-a-year-retrospective"&gt;My experience working on rustc_codegen_clr - half a year retrospective&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_1_0.html"&gt;https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_1_0.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust の MSIL バックエンドを実装してきた半年の振り返り。どのようなプロジェクトでどのようなハードルがあるのかといったことなど。&lt;/p&gt;
&lt;h3 id="asp.netswaggertypescriptenum"&gt;ASP.Net+Swagger+TypeScriptでEnumの表示名を自動生成する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/garicchi/aspnetswaggertypescriptdeenumnobiao-shi-ming-wozi-dong-sheng-cheng-suru-1hoh"&gt;https://dev.to/garicchi/aspnetswaggertypescriptdeenumnobiao-shi-ming-wozi-dong-sheng-cheng-suru-1hoh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core と Swagger による OpenAPI スキーマから TypeScript 向けのコードを生成する際に Enum の名前がわかりにくくなる問題についての対処方法。&lt;/p&gt;
&lt;h3 id="net-aspire-sekiban"&gt;.NET Aspire と Sekiban を使ってアプリケーション作り始める方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/3da012ed4b49ed"&gt;https://zenn.dev/jtechjapan_pub/articles/3da012ed4b49ed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire と独自のイベントソーシングフレームワークを組み合わせて、Cosmos DB をデータストアとしたアプリケーションを作る手順について。&lt;/p&gt;
&lt;h3 id="code-faster-and-better-with-github-copilots-new-features-slash-commands-and-context-variables-visual-studio-blog"&gt;Code Faster and Better with GitHub Copilot's New Features: Slash Commands and Context Variables - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/copilot-chat-slash-commands-and-context-variables/"&gt;https://devblogs.microsoft.com/visualstudio/copilot-chat-slash-commands-and-context-variables/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の GitHub Copilot の新機能の紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;スラッシュコマンド&lt;/li&gt;
&lt;li&gt;コンテキスト変数&lt;/li&gt;
&lt;li&gt;プレビュー機能
&lt;ul&gt;
&lt;li&gt;デバッガーでの例外アシスタント&lt;/li&gt;
&lt;li&gt;ブレークポイント式の提案&lt;/li&gt;
&lt;li&gt;コミットメッセージの提案&lt;/li&gt;
&lt;li&gt;ソリューション参照&lt;/li&gt;
&lt;li&gt;パフォーマンスプロファイラーでの提案&lt;/li&gt;
&lt;li&gt;失敗したテストの分析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="c-span-unshift-qiita"&gt;C# で配列（Span）を Unshift しても大丈夫なのか - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/sator_imaging/items/49585b191af978b00ad2"&gt;https://qiita.com/sator_imaging/items/49585b191af978b00ad2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Span を Unshift する際にオーバーラップが発生するようなコードを書くとどうなるか、Unity/IL2CPP ではどうなるかといった…。&lt;/p&gt;
&lt;h3 id="net"&gt;.NET のガベージコレクションの仕組み&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://notnullvariable.com/2024/440/"&gt;https://notnullvariable.com/2024/440/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET のガベージコレクションの仕組みについての紹介。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="nuget-gallery-plantumlclassdiagramgenerator.sourcegenerator"&gt;NuGet Gallery | PlantUmlClassDiagramGenerator.SourceGenerator&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/PlantUmlClassDiagramGenerator.SourceGenerator"&gt;https://www.nuget.org/packages/PlantUmlClassDiagramGenerator.SourceGenerator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PlantUML のクラス図を生成する Source Generator。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/pierusan2010/items/cdd628f202a9767cf65d"&gt;Source GeneratorでC#のソースコードからPlantUMLのクラス図を生成する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;OpenSilver で Silverlight Toolkit Samples がほとんどそのまま動いたという話。&lt;/p&gt;
&lt;!-- https://x.com/opensilverteam/status/1752735210846781602?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Some might think this is a joke, but it&amp;#39;s not! 😄 Who says Silverlight is dead? We&amp;#39;ve just successfully migrated the original &amp;quot;Silverlight Toolkit Samples&amp;quot; app by Microsoft with almost no code changes. Check it out live in browser—NO PLUGIN REQUIRED—at: &lt;a href="https://t.co/Z27hCh6cCZ"&gt;https://t.co/Z27hCh6cCZ&lt;/a&gt; &lt;a href="https://t.co/ErvkM6wfNP"&gt;pic.twitter.com/ErvkM6wfNP&lt;/a&gt;&lt;/p&gt;&amp;mdash; OpenSilver (Silverlight replacement) (&amp;#64;OpenSilverTeam) &lt;a href="https://twitter.com/OpenSilverTeam/status/1752735210846781602?ref_src=twsrc%5Etfw"&gt;January 31, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="epic-idistributedcache-updates-in.net-9-issue-53255-dotnetaspnetcore"&gt;Epic: IDistributedCache updates in .NET 9 · Issue #53255 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/53255"&gt;https://github.com/dotnet/aspnetcore/issues/53255&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;分散キャッシュの .NET 9 でのアップデートの Issue。&lt;/p&gt;
&lt;h3 id="tracking-issue-for-remaining-assemblybuilder.save-work-in.net-9-issue-92975-dotnetruntime"&gt;Tracking issue for remaining AssemblyBuilder.Save work in .NET 9 · Issue #92975 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/92975"&gt;https://github.com/dotnet/runtime/issues/92975&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 に向けた AssemblyBuilder.Save の作業 Issue。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-01-24: ReSharper &amp; Rider 2023.3.3, MySQL Connector 2.3.5, Avalonia 11.0.7, StackExchage.Redis 2.7.17</title>
			<link>/2024/01/24/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/01/24/updates</guid>
			<pubDate>Wed, 24 Jan 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="another-set-of-bug-fixes-for-resharper-and-rider-2023.3-is-here-the.net-tools-blog"&gt;Another Set of Bug-fixes for ReSharper and Rider 2023.3 Is Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/01/22/2023-3-3-rsrp-rd/"&gt;https://blog.jetbrains.com/dotnet/2024/01/22/2023-3-3-rsrp-rd/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2023.3.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではリネームやスペルチェック、QuickFix などでいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="release-2.3.5-mysql-netmysqlconnector"&gt;Release 2.3.5 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.5"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MySQL Connector 2.3.5/2.3.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは TLS バージョンフォールバックの削除、NuGet パッケージの DLL のデジタル署名対応、その他いくつかの不具合が修正されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.4"&gt;Release 2.3.4 · mysql-net/MySqlConnector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-11.0.7-avaloniauiavalonia"&gt;Release 11.0.7 · AvaloniaUI/Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.7"&gt;https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia 11.0.7 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではメモリーリークや XAML コンパイラーのエラー、様々な不具合の修正が含まれている。&lt;/p&gt;
&lt;h3 id="release-2.7.17-stackexchangestackexchange.redis"&gt;Release 2.7.17 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.17"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.17&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchage.Redis 2.7.17 がリリースされた。&lt;/p&gt;
&lt;p&gt;接続のシャットダウン中の NullReferenceException の防止、トランザクションのコマンドマップ内の SELECT コマンドの祖雲長などいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="release-v8.0.0-autofacautofac"&gt;Release v8.0.0 · autofac/Autofac&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/autofac/Autofac/releases/tag/v8.0.0"&gt;https://github.com/autofac/Autofac/releases/tag/v8.0.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Autofac 8.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではターゲットフレームワークに .NET 8 が追加され、.NET Core 3.1 が削除された。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-framework-january-2024-cumulative-update-preview.net-blog"&gt;.NET Framework January 2024 Cumulative Update Preview - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-january-2024-cumulative-update-preview/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-january-2024-cumulative-update-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024年1月の .NET Framework の累積アップデートがプレビューリリースされた。&lt;/p&gt;
&lt;p&gt;ASP.NET MVC のリクエスト処理中に ArgumentException がスローされる問題の修正、zlib ライブラリーのバージョンが古い問題の対処などが含まれる。&lt;/p&gt;
&lt;h3 id="net-8-new-data-annotations"&gt;.NET 8 — New Data Annotations&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://henriquesd.medium.com/net-8-new-data-annotations-4434575db48b"&gt;https://henriquesd.medium.com/net-8-new-data-annotations-4434575db48b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で新しく追加された System.ComponentModel.DataAnnotations の属性についての紹介。&lt;/p&gt;
&lt;h3 id="elevate-your-git-and-github-skills-in-visual-studio-with-the-intermediate-and-advanced-series-visual-studio-blog"&gt;Elevate Your Git and GitHub Skills in Visual Studio with the Intermediate and Advanced Series - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/intermediate-and-advanced-git/"&gt;https://devblogs.microsoft.com/visualstudio/intermediate-and-advanced-git/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio での Git と GitHub のスキルを高めるための動画シリーズの紹介。&lt;/p&gt;
&lt;h3 id="avoiding-performance-pitfalls-in-incremental-generators-creating-a-source-generator-part-9"&gt;Avoiding performance pitfalls in incremental generators: Creating a source generator - Part 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/creating-a-source-generator-part-9-avoiding-performance-pitfalls-in-incremental-generators/"&gt;https://andrewlock.net/creating-a-source-generator-part-9-avoiding-performance-pitfalls-in-incremental-generators/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Incremental Source Generator のパフォーマンスの落とし穴を回避することについての解説。&lt;/p&gt;
&lt;p&gt;記事ではどのようなパターンで実行され、Source Generator の API を使用する際にパフォーマンスを前提に注意すべき点などを開設している。&lt;/p&gt;
&lt;h3 id="testing-your-incremental-generator-pipeline-outputs-are-cacheable-creating-a-source-generator-part-10"&gt;Testing your incremental generator pipeline outputs are cacheable: Creating a source generator - Part 10&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/creating-a-source-generator-part-10-testing-your-incremental-generator-pipeline-outputs-are-cacheable/"&gt;https://andrewlock.net/creating-a-source-generator-part-10-testing-your-incremental-generator-pipeline-outputs-are-cacheable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Incremental Source Generator のパイプライン出力をキャッシュ可能にする方法についての解説。&lt;/p&gt;
&lt;h3 id="ridersourcegenerator-qiita"&gt;【Rider】SourceGeneratorをデバッグする方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/amenone_games/items/0a99f38fd08911b62c3a"&gt;https://qiita.com/amenone_games/items/0a99f38fd08911b62c3a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider で Source Generator をデバッグする方法について。&lt;/p&gt;
&lt;h3 id="visual-studio-productivity-features-in-2023-visual-studio-blog"&gt;Visual Studio productivity features in 2023 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-productivity-features-in-2023/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-productivity-features-in-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023年にリリースされた Visual Studio 2022 の生産性に関連する機能のまとめ紹介記事。&lt;/p&gt;
&lt;h3 id="analyzing-wpf-performance-by-enabling-etw-endjin"&gt;Analyzing WPF performance by enabling ETW | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2024/01/wpf-performance-enable-etw"&gt;https://endjin.com/blog/2024/01/wpf-performance-enable-etw&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ETW で WPF のパフォーマンスを計測する手順の解説。ETW からデータを取得し、PerfView で表示するといった方法について。&lt;/p&gt;
&lt;h3 id="porting-assistant-for.net-cli-qiita"&gt;Porting Assistant for .NET CLI を使って未対応のコンポーネントに対応させる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/miyamocchi/items/99c098ebab1c4f8053f9"&gt;https://qiita.com/miyamocchi/items/99c098ebab1c4f8053f9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS の Porting Assistant for .NET で未対応な ASP.NET のコントロールを処理できるようにする手順について。&lt;/p&gt;
&lt;h3 id="windowspart1-qiita"&gt;Windowsエクスプローラーに存在しないファイルをドロップする（Part1） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/miswil/items/b97dd4914a335fa21790"&gt;https://qiita.com/miswil/items/b97dd4914a335fa21790&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アプリケーションから実ファイルではないデータをエクスプローラーなどのドロップターゲットに渡す方法についての解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/miswil/items/49025648cc65fc7ae6e0"&gt;Windowsエクスプローラーに存在しないファイルをドロップする（Part2） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/miswil/items/9771cb1de32b0713b744"&gt;Windowsエクスプローラーに存在しないファイルをドロップする（Part3） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/miswil/items/39dfdffde6df0d2a384c"&gt;Windowsエクスプローラーに存在しないファイルをドロップする（Part4） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="brc-in.net-among-fastest-on-linux-my-optimization-journey"&gt;1BRC in .NET among fastest on Linux: My Optimization Journey&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://hotforknowledge.com/2024/01/13/1brc-in-dotnet-among-fastest-on-linux-my-optimization-journey/"&gt;https://hotforknowledge.com/2024/01/13/1brc-in-dotnet-among-fastest-on-linux-my-optimization-journey/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The One Billion Row Challenge (いろいろな実装での10億行のデータを集計するチャレンジ) で .NET による実装の最適化手法についての解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gunnarmorling/1brc"&gt;The One Billion Row Challenge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="welcome-to-the-resharper-2024.1-early-access-program-the.net-tools-blog"&gt;Welcome to the ReSharper 2024.1 Early Access Program | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/01/19/resharper-2024-1-eap1/"&gt;https://blog.jetbrains.com/dotnet/2024/01/19/resharper-2024-1-eap1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.1 EAP のアナウンス。&lt;/p&gt;
&lt;p&gt;2024.1 EAP 1では C++ サポートにフォーカスした改善が含まれている。&lt;/p&gt;
&lt;h3 id="c"&gt;C# のプライマリー コンストラクターに属性を設定したい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/primary-constructor-attr"&gt;https://zenn.dev/microsoft/articles/primary-constructor-attr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のプライマリーコンストラクターのメソッドそのものに属性を指定する方法について。&lt;/p&gt;
&lt;h3 id="preview-3-brings-exciting-changes-to-code-search-visual-studio-blog"&gt;17.9 Preview 3 brings exciting changes to Code Search - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/17-9-preview-3-brings-exciting-changes-to-code-search/"&gt;https://devblogs.microsoft.com/visualstudio/17-9-preview-3-brings-exciting-changes-to-code-search/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.9 Preview 3 でのコード検索のテキスト検索に関する強化についての紹介。&lt;/p&gt;
&lt;h3 id="interceptors-using-c-12-in-rider-and-resharper-the.net-tools-blog"&gt;Interceptors – Using C# 12 in Rider and ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/01/16/interceptors-using-csharp-12-in-rider-and-resharper/"&gt;https://blog.jetbrains.com/dotnet/2024/01/16/interceptors-using-csharp-12-in-rider-and-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のプレビュー機能である Interceptor を Rider と ReSharper のサポートについての紹介。&lt;/p&gt;
&lt;p&gt;Rider と ReSharper では Interceptor の対象にインレイヒントを表示できる。&lt;/p&gt;
&lt;h3 id="building-a-self-contained-game-in-c-under-2-kilobytes"&gt;Building a self-contained game in C# under 2 kilobytes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://migeel.sk/blog/2024/01/02/building-a-self-contained-game-in-csharp-under-2-kilobytes/"&gt;https://migeel.sk/blog/2024/01/02/building-a-self-contained-game-in-csharp-under-2-kilobytes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# で 2KB の自己完結型(ランタイム不要)のゲームアプリケーションを実現する手法について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://flattened.net/"&gt;bflat - C# as you know it but with Go-inspired tooling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="how-to-use-iasyncenumerable-with-blazor-stream-rendering"&gt;How to use IAsyncEnumerable with Blazor Stream Rendering&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/how-to-use-iasyncenumerable-with-blazor-stream-rendering"&gt;https://khalidabuhakmeh.com/how-to-use-iasyncenumerable-with-blazor-stream-rendering&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor で IAsyncEnumerable からの値をレンダリングする方法について。&lt;/p&gt;
&lt;h3 id="mocking-graphql-queries-with-wiremock.net"&gt;Mocking GraphQL queries with WireMock.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cezarypiatek.github.io/post/mocking-graphql-with-wiremock/"&gt;https://cezarypiatek.github.io/post/mocking-graphql-with-wiremock/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WireMock.NET を使用して GraphQL クエリーのモックを実現する方法について。&lt;/p&gt;
&lt;h3 id="list-ilist-immutablearray-etc.c12-qiita"&gt;配列を初期化する (List, IList, ImmutableArray, etc. も初期化する) 《C#12》《コレクション式》 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/muniel/items/8af5b337d9bbbfbd2812"&gt;https://qiita.com/muniel/items/8af5b337d9bbbfbd2812&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のコレクション式について。記述の仕方、利用できるパターン、できないパターンなどについて触れている。&lt;/p&gt;
&lt;h3 id="blazor-server.net-7.net-8-qiita"&gt;Blazor Serverで.NET 7から.NET 8への移行方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/762d48ecda8b9c59279a"&gt;https://qiita.com/yaju/items/762d48ecda8b9c59279a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Server を .NET 7 から .NET 8 へ移行した際に発生した問題とその対応方法について。&lt;/p&gt;
&lt;h3 id="net-8-winui-3-netsdk1083"&gt;.NET 8 で WinUI 3 アプリをビルドする（NETSDK1083 対策）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/dotnet8-netsdk1083"&gt;https://zenn.dev/shinta0806/articles/dotnet8-netsdk1083&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で　WinUI 3 アプリケーションをビルドする際に発生する場合のあるエラーとその対処方法について。&lt;/p&gt;
&lt;h3 id="exploring.net-frozen-segments"&gt;Exploring .NET frozen segments&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minidump.net/exploring-frozen-segments/"&gt;https://minidump.net/exploring-frozen-segments/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で導入された GC 対象外となるヒープが存在する固定されたセグメントを非公開な API を使用して使って解説する記事。&lt;/p&gt;
&lt;h3 id="net-continuous-profiler-under-the-hood-datadog"&gt;.NET Continuous Profiler: Under the Hood | Datadog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.datadoghq.com/ja/blog/engineering/dotnet-continuous-profiler/"&gt;https://www.datadoghq.com/ja/blog/engineering/dotnet-continuous-profiler/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET のプロファイラーのアーキテクチャーとどのような実装を行っているのかの簡単な解説。&lt;/p&gt;
&lt;h3 id="neue-cc.netunity"&gt;neue cc - .NETプロジェクトとUnityプロジェクトのソースコード共有最新手法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/01/15_shareprojectinunity.html"&gt;https://neue.cc/2024/01/15_shareprojectinunity.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET プロジェクトと Unity のプロジェクト間でソースコードを共有する手法。NuGet パッケージ開発時に Unity から参照する方法についても。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="c-blazor-webassembly-web-20240209-1200"&gt;昼休みに C# で Blazor WebAssembly 製の web アプリをイチから作る配信 (2024/02/09 12:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msdevjp.connpass.com/event/308241/"&gt;https://msdevjp.connpass.com/event/308241/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;比較的短い時間で C# と Blazor WebAssembly で Web アプリケーションを作成するという配信。&lt;/p&gt;
&lt;p&gt;Let's Learn .NET (初心者向けの配信シリーズ) の日本ローカライズ版相当とのこと。&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="learn-reactive-programming-for-free-introduction-to-rx.net-2nd-edition-2024-endjin"&gt;Learn Reactive Programming for FREE: Introduction to Rx.NET 2nd Edition (2024) | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2024/01/introduction-to-rx-dotnet-2nd-edition-book-available-for-free"&gt;https://endjin.com/blog/2024/01/introduction-to-rx-dotnet-2nd-edition-book-available-for-free&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Introduction to Rx.NET 2nd Edition の eBook。&lt;/p&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;C++ アプリケーションのプロジェクトから NativeAOT の C# ライブラリーを参照する構成を試みる。&lt;/p&gt;
&lt;!-- https://x.com/mstrehovsky/status/1749739317180891232?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Experimenting with a Visual Studio solution with a C++ console app that calls into a C# DLL (native AOT&amp;#39;d). Mostly have this working from the command line, but still struggling with F5 launch in VS. Any VS experts among my followers? &lt;a href="https://t.co/Ub5Qck7mXH"&gt;https://t.co/Ub5Qck7mXH&lt;/a&gt;&lt;/p&gt;&amp;mdash; Michal Strehovský (&amp;#64;MStrehovsky) &lt;a href="https://twitter.com/MStrehovsky/status/1749739317180891232?ref_src=twsrc%5Etfw"&gt;January 23, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio のツールウィンドウはドッキング/フロート状態で Ctrl + ダブルクリック で元の位置に移動できるという話。&lt;/p&gt;
&lt;!-- https://x.com/mkristensen/status/1747701018815848592?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Toggle Visual Studio tool windows between last floating location and last docking location using Ctrl+double-click &lt;a href="https://t.co/us0camg6kv"&gt;pic.twitter.com/us0camg6kv&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1747701018815848592?ref_src=twsrc%5Etfw"&gt;January 17, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio の Disamo 拡張 (JIT の結果を表示できる) でカスタムランタイムなしで NativeAOT をサポート。&lt;/p&gt;
&lt;!-- https://x.com/egorbo/status/1746918915266252834?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;New release of Disasmo supports NativeAOT without custom runtimes! Just put your cursor on any method and click Shift+Alt+D! (after Disasmo VS add-in is installed of course 😉) &lt;a href="https://t.co/8lN9IhJe1Q"&gt;pic.twitter.com/8lN9IhJe1Q&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1746918915266252834?ref_src=twsrc%5Etfw"&gt;January 15, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-01-15: Windows App SDK 1.4.4, .NET 8.0.1 &amp; 7.0.15 &amp; 6.0.26</title>
			<link>/2024/01/15/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/01/15/updates</guid>
			<pubDate>Mon, 15 Jan 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-windows-app-sdk-1.4.4-1.4.231219000-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.4.4 (1.4.231219000) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.4"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.4.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは WinUI 3 診断セキュリティー問題の修正、パスワードボックスでタッチ操作によるオンスクリーンキーボードが表示されない問題の修正などいくつかの不具合が修正されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-144-14231219000"&gt;Version 1.4.4 (1.4.231219000) | Stable channel release notes for the Windows App SDK - Windows apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/microsoft-ui-xaml/releases/tag/winui3/release/1.4.4"&gt;Release WinUI 3 in WinAppSDK 1.4.4 · microsoft/microsoft-ui-xaml · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-january-2024-updates.net-8.0.1-7.0.15.net-6.0.26.net-blog"&gt;.NET January 2024 Updates – .NET 8.0.1, 7.0.15, .NET 6.0.26 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/january-2024-updates/"&gt;https://devblogs.microsoft.com/dotnet/january-2024-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8.0.1, 7.0.15, 6.0.26 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは3つの脆弱性の修正が含まれる他、いくつかの不具合の修正などが含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0056"&gt;CVE-2024-0056 - セキュリティ更新プログラム ガイド - Microsoft - Microsoft.Data.SqlClient と System.Data.SqlClient の SQL データ プロバイダーのセキュリティ機能のバイパスの脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0057"&gt;CVE-2024-0057 - セキュリティ更新プログラム ガイド - Microsoft - NET、.NET Framework、Visual Studio のセキュリティ機能のバイパス脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21319"&gt;CVE-2024-21319 - セキュリティ更新プログラム ガイド - Microsoft - Microsoft ID のサービス拒否の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-framework-january-2024-security-and-quality-rollup.net-blog"&gt;.NET Framework January 2024 Security and Quality Rollup - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-january-2024-security-and-quality-rollup/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-january-2024-security-and-quality-rollup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024年1月の .NET Framework のセキュリティーと品質のロールアップリリース。&lt;/p&gt;
&lt;p&gt;このリリースでは4つの脆弱性の修正が含まれ、品質に関する修正は含まれない。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-36042"&gt;CVE-2023-36042 - セキュリティ更新プログラム ガイド - Microsoft - Visual Studio のサービス拒否の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0056"&gt;CVE-2024-0056 - セキュリティ更新プログラム ガイド - Microsoft - Microsoft.Data.SqlClient と System.Data.SqlClient の SQL データ プロバイダーのセキュリティ機能のバイパスの脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0057"&gt;CVE-2024-0057 - セキュリティ更新プログラム ガイド - Microsoft - NET、.NET Framework、Visual Studio のセキュリティ機能のバイパス脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21312"&gt;CVE-2024-21312 - セキュリティ更新プログラム ガイド - Microsoft - .NET Framework のサービス拒否の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="code-connect-learn-at-visual-studio-live-in-las-vegas-visual-studio-blog"&gt;Code, Connect &amp;amp; Learn at Visual Studio LIVE! in Las Vegas. - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-live-2024-las-vegas/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-live-2024-las-vegas/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio LIVE! イベントについてのアナウンス。&lt;/p&gt;
&lt;p&gt;Visual Studio LIVE! は3月3日から8日にかけて Las Vegas で開催される IDE や Azure、GitHub といった開発者向けのイベント。&lt;/p&gt;
&lt;p&gt;なお記事では2月9日までの特別割引オファーが提供されている。&lt;/p&gt;
&lt;h3 id="our-move-to-generated-sdks"&gt;Our move to generated SDKs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.blog/2024-01-03-our-move-to-generated-sdks/"&gt;https://github.blog/2024-01-03-our-move-to-generated-sdks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub の API アクセス SDK である Octokit を Kiota を使用して生成されたものへと移行するというアナウンス。&lt;/p&gt;
&lt;p&gt;新しい SDK は Kiota によって OpenAPI 定義から Go と .NET のクライアントを生成する形となる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/octokit/dotnet-sdk"&gt;octokit/dotnet-sdk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-8.2.1-app-vnextpolly"&gt;Release 8.2.1 · App-vNext/Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.2.1"&gt;https://github.com/App-vNext/Polly/releases/tag/8.2.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polly 8.2.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではリトライやサーキットブレーカーに関するいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="release-diagnostics-release-v8.0.505301-dotnetdiagnostics"&gt;Release Diagnostics Release - v8.0.505301 · dotnet/diagnostics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/diagnostics/releases/tag/v8.0.505301"&gt;https://github.com/dotnet/diagnostics/releases/tag/v8.0.505301&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 診断ツール v8.0.505301 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの機能改善と不具合の修正、RISC-V の SOS 関連コードの実装などが含まれる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="sortable-lists-for-blazor-using-a-sortablejs-component.net-blog"&gt;Sortable Lists for Blazor using a SortableJS Component - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-blazor-sortable/"&gt;https://devblogs.microsoft.com/dotnet/introducing-blazor-sortable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SortableJS を使用した Blazor 上でソート可能なリストを実現するコンポーネント Bazor Sortable の紹介。&lt;/p&gt;
&lt;h3 id="short-history-of-all-windows-ui-frameworks-and-libraries"&gt;Short history of all Windows UI frameworks and libraries&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.irrlicht3d.org/index.php?t=1626"&gt;https://www.irrlicht3d.org/index.php?t=1626&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows の UI フレームワークとライブラリーの簡単な歴史。&lt;/p&gt;
&lt;h3 id="use-jetbrains-ai-assistant-to-help-you-understand-changes-in-your-code-the.net-tools-blog"&gt;Use JetBrains AI Assistant To Help You Understand Changes In Your Code | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/01/10/use-jetbrains-ai-assistant-to-help-you-understand-changes-in-your-code/"&gt;https://blog.jetbrains.com/dotnet/2024/01/10/use-jetbrains-ai-assistant-to-help-you-understand-changes-in-your-code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper や Rider で利用できる JetBrains AI Assistant でできることの紹介。&lt;/p&gt;
&lt;p&gt;記事では Git の複数のコミットからログを要約したり、チャットでコミットによるコードの変更の概要を確認するといったタスクを行える例を紹介している。&lt;/p&gt;
&lt;h3 id="blazor-web-app.net8"&gt;Blazor Web App(.NET8)に多言語対応の機能を実装する。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tkeproject/articles/3069d23ab78123"&gt;https://zenn.dev/tkeproject/articles/3069d23ab78123&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Web App で言語リソースを使用した多言語対応を実装する方法について。&lt;/p&gt;
&lt;h3 id="csyslogrsyslog"&gt;C#プログラムからsyslog(rsyslog)サーバーにログを送る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/techmadot/articles/rsyslog-csharp"&gt;https://zenn.dev/techmadot/articles/rsyslog-csharp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Serilog の syslog Sink を使用して syslog/rsyslog サーバーにログを送信する方法について。&lt;/p&gt;
&lt;h3 id="a-year-of-community-experiments-visual-studio-blog"&gt;2023 – a year of community experiments - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/2023-a-year-of-community-experiments/"&gt;https://devblogs.microsoft.com/visualstudio/2023-a-year-of-community-experiments/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023年のコミュニティーでの Visual Studio の機能実験に関する振り返り。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Differentiating Visual Studio instances&lt;/li&gt;
&lt;li&gt;Adding color to bracket pairs&lt;/li&gt;
&lt;li&gt;Comparing files in Visual Studio&lt;/li&gt;
&lt;li&gt;Copy with proper indentation&lt;/li&gt;
&lt;li&gt;Get your developer news&lt;/li&gt;
&lt;li&gt;Surround selection&lt;/li&gt;
&lt;li&gt;Scroll document tabs&lt;/li&gt;
&lt;li&gt;Image hover preview&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの機能を実験的な拡張として提供したのち、どのような数のフィードバックがあり結果として Visual Studio に搭載されたかどうかについて書かれている。&lt;/p&gt;
&lt;h3 id="a-brief-look-at-stringvalues"&gt;A brief look at StringValues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/a-brief-look-at-stringvalues/"&gt;https://andrewlock.net/a-brief-look-at-stringvalues/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のコードによく出てくる &lt;code&gt;StringValues&lt;/code&gt; についての解説。&lt;/p&gt;
&lt;p&gt;記事では String の配列との違いや実際の実装の中身について解説している。&lt;/p&gt;
&lt;h3 id="netopentelemetry-qiita"&gt;.NETの汎用ホストでOpenTelemetry - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kwhrkzk/items/1f31759dd570b3be4fa2"&gt;https://qiita.com/kwhrkzk/items/1f31759dd570b3be4fa2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET の Generic Host (汎用ホスト) で OpenTelemetry を使用する方法について。&lt;/p&gt;
&lt;p&gt;記事では Entity Framework Core の情報を Zipkin で表示するといった手順を紹介している。&lt;/p&gt;
&lt;h3 id="visual-studio-performance-highlights-delivered-in-2023-visual-studio-blog"&gt;Visual Studio Performance Highlights Delivered in 2023 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-performance-highlights-delivered-in-2023/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-performance-highlights-delivered-in-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023年の Visual Studio のパフォーマンス向上記事の振り返り。&lt;/p&gt;
&lt;p&gt;17.5から17.8までのパフォーマンス改善に関する記事へのリンクとその内容の簡単な紹介。&lt;/p&gt;
&lt;h3 id="net-digest-january-2024-the.net-tools-blog"&gt;.NET Digest | January 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/01/08/net-digest-january-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/01/08/net-digest-january-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET ニュースレター1月号。&lt;/p&gt;
&lt;p&gt;今までは JetBrains .NET Annotated という名前だったが今回から JetBrains .NET Digest という名前に変更となった。&lt;/p&gt;
&lt;h3 id="asp.net-core-8.0-uses-c-12.0s-experimental-interceptors-to-enable-aot-endjin"&gt;ASP.NET Core 8.0 uses C# 12.0's experimental interceptors to enable AOT | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2024/01/asp-dotnet-8-aot-csharp-12-interceptors"&gt;https://endjin.com/blog/2024/01/asp-dotnet-8-aot-csharp-12-interceptors&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のプレビュー機能のインターセプターと ASP.NET Core で利用されている部分についての解説。&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core では NativeAOT 時にはインターセプターを活用したコード生成を行っている。記事ではその動作についての解説。&lt;/p&gt;
&lt;h3 id="how-to-distribute-roslyn-analyzers-via-nuget"&gt;How to Distribute Roslyn Analyzers via NuGet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aaronstannard.com/roslyn-nuget/"&gt;https://aaronstannard.com/roslyn-nuget/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Roslyn Analyzer を .nuspec で NuGet パッケージにする方法について。&lt;/p&gt;
&lt;h3 id="wpfblazor-hybrid"&gt;WPFをベースにしたサイドビュー付きのBlazor Hybridアプリの構築方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tkeproject/articles/59eb1b20381e41"&gt;https://zenn.dev/tkeproject/articles/59eb1b20381e41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF による　Blazor Hybrid アプリケーションでサイドメニューを表示する構成を実装する方法について。&lt;/p&gt;
&lt;h3 id="blazor-hybrid"&gt;Blazor Hybrid でテキストボックスの右クリックメニューを表示する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/blazor-hybrid-editable-context-menu"&gt;https://zenn.dev/microsoft/articles/blazor-hybrid-editable-context-menu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows 上の Blazor Hybrid アプリケーション内のテキストボックスでコンテキストメニューを表示できるようにする方法について。&lt;/p&gt;
&lt;h3 id="blazor-hybrid-f5"&gt;Blazor Hybrid で F5 キーでリフレッシュなどのブラウザ固有のキー操作を無効化したい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/blazor-hybrid-disable-fkeys"&gt;https://zenn.dev/microsoft/articles/blazor-hybrid-disable-fkeys&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows 上の Blazor Hybrid アプリケーション内で F5 のようなブラウザーのショートカットキー操作を無効にする方法について。&lt;/p&gt;
&lt;h3 id="wpf-github-actions-qiita"&gt;[WPF] GitHub Actions を使った自動リリース - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/thinva/items/904191e7c8bdaf0441f8"&gt;https://qiita.com/thinva/items/904191e7c8bdaf0441f8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF アプリケーションを GitHub Actions を使用してリリースする方法について。&lt;/p&gt;
&lt;h3 id="net-qiita"&gt;[小ネタ] .NETアセンブリが存在するディレクトリパス名を取得する方法 (単一ファイルに発行対応版) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/rougemeilland/items/3bd5f302778737df5b56"&gt;https://qiita.com/rougemeilland/items/3bd5f302778737df5b56&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;単一ファイル発行時にも対応したアセンブリーの存在するディレクトリーのパスを取得する方法について。&lt;/p&gt;
&lt;h3 id="net-8-blazor"&gt;.NET 8 での Blazor を整理整頓して理解しよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/blazor-dotnet8-all"&gt;https://zenn.dev/microsoft/articles/blazor-dotnet8-all&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 時点の Blazor と呼ばれるものはどのようなものがあるのか、どの動作モードを選択するのが適切なのかといったことのまとめ。&lt;/p&gt;
&lt;h3 id="net-8-new-randomness-methods"&gt;.NET 8 — New Randomness Methods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://henriquesd.medium.com/net-8-new-randomness-methods-f2422f55320f"&gt;https://henriquesd.medium.com/net-8-new-randomness-methods-f2422f55320f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Random クラスに追加された GetItems, Shuffle などの紹介記事。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharpr3-the-new-future-of-dotnetreactive-and-unirx"&gt;Cysharp/R3: The new future of dotnet/reactive and UniRx.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/R3"&gt;https://github.com/Cysharp/R3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;既存の Rx や UniRx の知見をもとに、現代的で新しいよりよい実装を目指した Rx。&lt;/p&gt;
&lt;h3 id="funny-silkielongarraylib-implementation-of-the-array-with-64-bit-signed-integer-length"&gt;Funny-Silkie/LongArrayLib: Implementation of the array with 64-bit signed integer length&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Funny-Silkie/LongArrayLib"&gt;https://github.com/Funny-Silkie/LongArrayLib&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Array.MaxLength (2147483591) を超える要素数を持てる配列的なものを実現するライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/Funny_Silkie/items/171598f9e7e6eb280328"&gt;Array.MaxLength を超えたサイズの配列を扱えるライブラリを作ってみた - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="mayukidotnet-sail-downloads.net-project-from-gist-github-git-or-the-web-and-runs-it-in-a-container"&gt;mayuki/dotnet-sail: Downloads .NET project from Gist, GitHub, Git, or the web and runs it in a container.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mayuki/dotnet-sail"&gt;https://github.com/mayuki/dotnet-sail&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gist や GitHub や Git リポジトリー、その他 Web サイトから C# プロジェクトやソースコードをダウンロードして直接実行するコンテナーイメージ。&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="f"&gt;F# ではじめる関数型プログラミング入門 (上巻)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/midoliy/books/85dd010d0b2ce7"&gt;https://zenn.dev/midoliy/books/85dd010d0b2ce7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# を使用した関数型プログラミングの入門オンラインブック。&lt;/p&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;CsWinRT で NativeAOT サポートを進めているという話。&lt;/p&gt;
&lt;!-- https://x.com/sergiopedri/status/1745086760244191523?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;My CsWinRT PR w/ NativeAOT support for authoring (&lt;a href="https://t.co/95hiRmvohb"&gt;https://t.co/95hiRmvohb&lt;/a&gt;) just got merged! Along w/ other improvements it allows you to create fully native, self-contained WinRT components using CsWinRT and NativeAOT. We can improve the size, but it&amp;#39;s a start! 🚀&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://t.co/sJ7syu0yAz"&gt;pic.twitter.com/sJ7syu0yAz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sergio Pedri (&amp;#64;SergioPedri) &lt;a href="https://twitter.com/SergioPedri/status/1745086760244191523?ref_src=twsrc%5Etfw"&gt;January 10, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-01-05: Visual Studio 2013 Retirement, grpc-dotnet v2.60, Azure Migrate application and code assessment tool for .NET</title>
			<link>/2024/01/05/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/01/05/updates</guid>
			<pubDate>Fri, 05 Jan 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-release-v2.60.0-grpcgrpc-dotnet"&gt;Release Release v2.60.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.60.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.60.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2013-retirement-support-reminder-for-older-versions-of-visual-studio-visual-studio-blog"&gt;Visual Studio 2013 Retirement: Support reminder for older versions of Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2013-retirement-support-reminder-for-older-versions-of-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2013-retirement-support-reminder-for-older-versions-of-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-the-azure-migrate-application-and-code-assessment-tool-for.net.net-blog"&gt;Announcing the Azure Migrate application and code assessment tool for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/azure-migrate-app-and-code-assessment-tool-release/"&gt;https://devblogs.microsoft.com/dotnet/azure-migrate-app-and-code-assessment-tool-release/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="tensorflow.netcby-nezura-qiita"&gt;TensorFlow.NETとC#で「ディープラーニングを実装から学ぶ」(by &amp;#64;Nezuraさん)を追体験する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/C5D5E5/items/9de54719f853ef375e95"&gt;https://qiita.com/C5D5E5/items/9de54719f853ef375e95&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="boosting-string-search-performance-in.net-8.0-with-searchvalues-endjin"&gt;Boosting string search performance in .NET 8.0 with SearchValues | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2024/01/dotnet-8-searchvalues-string-search-performance-boost"&gt;https://endjin.com/blog/2024/01/dotnet-8-searchvalues-string-search-performance-boost&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cvs2022source-generator"&gt;[C#]VS2022を使用したSource Generator入門&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/mkmonaka/articles/8b9c1a87e35313"&gt;https://zenn.dev/mkmonaka/articles/8b9c1a87e35313&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="macoslinux-azure-function"&gt;macOS/Linux でネイティブ ライブラリを含む Azure Function をローカル実行するとエラーになる&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/karamem0/articles/2023_12_30_090000"&gt;https://zenn.dev/karamem0/articles/2023_12_30_090000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visitorswitchif-qiita"&gt;Visitorパターンで型によるswitchやif判定を消す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/toRisouP/items/d96a09fab827af17fb37"&gt;https://qiita.com/toRisouP/items/d96a09fab827af17fb37&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="safer-recursion-in-f.net-blog"&gt;Safer recursion in F# - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/safer-recursion-in-fsharp/"&gt;https://devblogs.microsoft.com/dotnet/safer-recursion-in-fsharp/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="semantic-kernel-v1.0.1"&gt;Semantic Kernel v1.0.1 のプラグインを見てみよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-v1-003"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-v1-003&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-qiita"&gt;.NET Aspire って何？ - 概要 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/f45e930ef296c5710acc"&gt;https://qiita.com/takashiuesaka/items/f45e930ef296c5710acc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-qiita-1"&gt;.NET Aspire を使ってみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/8794f99b0bf3ce3c3106"&gt;https://qiita.com/takashiuesaka/items/8794f99b0bf3ce3c3106&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-qiita-2"&gt;.NET Aspire を デプロイする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/3da744d0511f29270299"&gt;https://qiita.com/takashiuesaka/items/3da744d0511f29270299&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="next.js-asp.net-core.net-aspire-with-yarp-qiita"&gt;Next.js + ASP.NET Core を .NET Aspire で構成する（with YARP） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/e167852af299a7b00939"&gt;https://qiita.com/takashiuesaka/items/e167852af299a7b00939&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-prometheus-jaeger-grafana-qiita"&gt;.NET Aspire で Prometheus, Jaeger, Grafana を使う - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/4811e62aa52e39ed834c"&gt;https://qiita.com/takashiuesaka/items/4811e62aa52e39ed834c&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azurewindowscicddevdrive-qiita"&gt;AzureでWindowsアプリのCI/CD環境を作る：DevDriveの効果は？ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/42d7ab8ad27c475d011c"&gt;https://qiita.com/spc_ksudoh/items/42d7ab8ad27c475d011c&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="a-year-of-making-you-more-productive-using-git-in-visual-studio-visual-studio-blog"&gt;A year of making you more productive using Git in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/a-year-of-making-you-more-productive-using-git-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/a-year-of-making-you-more-productive-using-git-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="evolutive-and-robust-password-hashing-using-pbkdf2-in.net"&gt;Evolutive and robust password hashing using PBKDF2 in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/evolutive-and-robust-password-hashing-using-pbkdf2-in-net-34pc"&gt;https://dev.to/asimmon/evolutive-and-robust-password-hashing-using-pbkdf2-in-net-34pc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qiita"&gt;削除可能な優先度付きキュー - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/saka_pon/items/7d42012e44978580a0c0"&gt;https://qiita.com/saka_pon/items/7d42012e44978580a0c0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="a-short-guide-to-urgent-cpu-usage-profiling-of.net-applications-on-linux-using-perf"&gt;A short guide to urgent CPU usage profiling of .NET applications on Linux using perf&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://igorexplains.medium.com/a-short-guide-to-urgent-cpu-usage-profiling-of-net-applications-on-linux-using-perf-1e0dbd1f0533"&gt;https://igorexplains.medium.com/a-short-guide-to-urgent-cpu-usage-profiling-of-net-applications-on-linux-using-perf-1e0dbd1f0533&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="a-new-lock-type-in.net-9"&gt;A new lock type in .NET 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/d7f923b3-13ff-4ecc-8b8f-d847ae581f68"&gt;https://steven-giesel.com/blogPost/d7f923b3-13ff-4ecc-8b8f-d847ae581f68&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-native-aot-explained-ndepend-blog"&gt;.NET Native AOT Explained - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/net-native-aot-explained/?WT.mc_id=link-twitter-isaacl"&gt;https://blog.ndepend.com/net-native-aot-explained/?WT.mc_id=link-twitter-isaacl&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-12-primary-constructors-intellisense-xin9le.net"&gt;C# 12 の新機能「Primary Constructors」に対する IntelliSense の神対応 - xin9le.net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.xin9le.net/entry/2023/12/27/220943"&gt;https://blog.xin9le.net/entry/2023/12/27/220943&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-semantic-kernel-v1.0-handlebars"&gt;.NET の Semantic Kernel v1.0 の使えない子の Handlebars テンプレートを使う方法と注意点&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-v1-002"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-v1-002&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-semantic-kernel-v1.0"&gt;.NET の Semantic Kernel v1.0 がリリースされたので再復習してみた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-v1-001"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-v1-001&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="quartz.net"&gt;Quartz.NETでジョブをスケジュールする&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/oyasumi731/articles/6611ecad604d41"&gt;https://zenn.dev/oyasumi731/articles/6611ecad604d41&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cthreadthreadpooltask"&gt;C#のThreadとThreadPoolとTaskについて理解する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/higty/articles/fea5f57cd1b1c2"&gt;https://zenn.dev/higty/articles/fea5f57cd1b1c2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="serializing-restaurant-tables-in-c"&gt;Serializing restaurant tables in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ploeh.dk/2023/12/25/serializing-restaurant-tables-in-c/"&gt;https://blog.ploeh.dk/2023/12/25/serializing-restaurant-tables-in-c/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;【C#】競プロ等で簡単・高速に入力を受け取れるライブラリを作成した話 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Kujiro/items/facad439eb0873748f87"&gt;https://qiita.com/Kujiro/items/facad439eb0873748f87&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita-1"&gt;C#でメソッドチェーンをうまく作る方法 前編 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/dhq_boiler/items/61752b74db5f1fa6dfd5"&gt;https://qiita.com/dhq_boiler/items/61752b74db5f1fa6dfd5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="distributed-tracing-with-jaeger-and-opentelemetry-in-a-microservices-architecture"&gt;Distributed Tracing with Jaeger and OpenTelemetry in a Microservices Architecture&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ebubekirdinc/distributed-tracing-with-jaeger-and-opentelemetry-in-a-microservices-architecture-62d69f51d84e"&gt;https://medium.com/&amp;#64;ebubekirdinc/distributed-tracing-with-jaeger-and-opentelemetry-in-a-microservices-architecture-62d69f51d84e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-deque-qiita"&gt;C# で Deque を自作する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/YuHima03/items/e52fdebdf626192c4b1e"&gt;https://qiita.com/YuHima03/items/e52fdebdf626192c4b1e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="opensilver-2.0vbhello-world-qiita"&gt;OpenSilver 2.0がVB対応したのでHello World!を表示してみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/8f210bcc90222fe8826f"&gt;https://qiita.com/yaju/items/8f210bcc90222fe8826f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="fluent-ui-blazor"&gt;Fluent UI Blazorにおけるスイッチの使用法に関するガイドライン&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/bec7719e8dc282"&gt;https://zenn.dev/tomokusaba/articles/bec7719e8dc282&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="semantic-kernel"&gt;Semantic Kernelを使って天気を取得してみる&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/6f56ea6556036e"&gt;https://zenn.dev/tomokusaba/articles/6f56ea6556036e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="f"&gt;F#でアセンブリプログラミング（基礎知識編）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/22989af1e3833d"&gt;https://zenn.dev/sayurin/articles/22989af1e3833d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="f-1"&gt;F#でアセンブリプログラミング（準備編）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/6768087198fd70"&gt;https://zenn.dev/sayurin/articles/6768087198fd70&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="f-2"&gt;F#でアセンブリプログラミング（実践編）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/fa986cfe698961"&gt;https://zenn.dev/sayurin/articles/fa986cfe698961&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cboostdotnext-2-qiita"&gt;C#のBoost、DotNextライブラリ その2 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/up-hash/items/10138710a9d7c9cba209"&gt;https://qiita.com/up-hash/items/10138710a9d7c9cba209&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-kristofferstrubeblazor.webauthentication-a-blazor-wrapper-for-the-web-authentication-browser-api"&gt;GitHub - KristofferStrube/Blazor.WebAuthentication: A Blazor wrapper for the Web Authentication browser API.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/KristofferStrube/Blazor.WebAuthentication"&gt;https://github.com/KristofferStrube/Blazor.WebAuthentication&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://x.com/kstrubeg/status/1740133676984246464?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Working on using the Web Authentication API in Blazor again today. Added a Minimal API to the sample project to validate the client-side credentials so that we now have a password-free public-key authentication mechanism.&lt;a href="https://twitter.com/hashtag/blazor?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#blazor&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/auth?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#auth&lt;/a&gt;&lt;br&gt;Project: &lt;a href="https://t.co/T9E9vhskaP"&gt;https://t.co/T9E9vhskaP&lt;/a&gt; &lt;a href="https://t.co/MRj6GNZVQi"&gt;pic.twitter.com/MRj6GNZVQi&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kristoffer Strube (&amp;#64;KStrubeG) &lt;a href="https://twitter.com/KStrubeG/status/1740133676984246464?ref_src=twsrc%5Etfw"&gt;December 27, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/sergiopedri/status/1740826434019434701?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;You can do it, but it&amp;#39;s a bit obscure. If you declare a ReadOnlySpan&amp;lt;T&amp;gt; local of a primitive type, initialized with a collection expression, it will be lowered to an RVA field, meaning it&amp;#39;s functionally speaking static constant data (embedded in the .data section of the PE file).&lt;/p&gt;&amp;mdash; Sergio Pedri (&amp;#64;SergioPedri) &lt;a href="https://twitter.com/SergioPedri/status/1740826434019434701?ref_src=twsrc%5Etfw"&gt;December 29, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/a_taihei/status/1739889509679124589?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;今更失敗するまでテストを実行する機能があるのに気付いた &lt;a href="https://t.co/8TuAfiZLtK"&gt;pic.twitter.com/8TuAfiZLtK&lt;/a&gt;&lt;/p&gt;&amp;mdash; たいへー (&amp;#64;a_taihei) &lt;a href="https://twitter.com/a_taihei/status/1739889509679124589?ref_src=twsrc%5Etfw"&gt;December 27, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/egorbo/status/1739696282686439519?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Some JIT magic for you - both methods do the same work, why the _hacker version is faster? 🙃 &lt;a href="https://t.co/i7YdmKWJVy"&gt;pic.twitter.com/i7YdmKWJVy&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1739696282686439519?ref_src=twsrc%5Etfw"&gt;December 26, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/steplyakov/status/1737895816050934101?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Here is an example with named method that does the same.&lt;a href="https://twitter.com/jaredpar?ref_src=twsrc%5Etfw"&gt;&amp;#64;jaredpar&lt;/a&gt; this feature feels very dangerous. &lt;a href="https://t.co/iFevCDQEHW"&gt;https://t.co/iFevCDQEHW&lt;/a&gt; &lt;a href="https://t.co/AqjRlpEtWX"&gt;pic.twitter.com/AqjRlpEtWX&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sergiy Teplyakov 🇺🇦 🇺🇸 (&amp;#64;STeplyakov) &lt;a href="https://twitter.com/STeplyakov/status/1737895816050934101?ref_src=twsrc%5Etfw"&gt;December 21, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-12-24: .NET Aspire Preview 2, OpenSilver 2.0, WCF 8.0</title>
			<link>/2023/12/24/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/12/24/updates</guid>
			<pubDate>Sun, 24 Dec 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-aspire-preview-2.net-blog"&gt;Announcing .NET Aspire Preview 2 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-aspire-preview-2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-aspire-preview-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire Preview 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;Dashboard の各種ビューの改善やコンテナー実行時の構成カスタマイズ性の向上、MySQL や MongoDB といったコンポーネントの追加など様々な改善が含まれている。&lt;/p&gt;
&lt;h3 id="introducing-opensilver-2.0-opensilver"&gt;Introducing OpenSilver 2.0 - OpenSilver&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://opensilver.net/announcements/2-0/"&gt;https://opensilver.net/announcements/2-0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenSilver 2.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Visual Basic .NET のサポート、Blazor や React, Angular との統合、デザインタイムライブ XAML プレビュー、拡張レイアウトシステムのサポート、WebView ベースのより高速なシミュレーター、様々なパフォーマンス改善といったものが含まれている。&lt;/p&gt;
&lt;h3 id="release-wcf-8.0-dotnetwcf"&gt;Release WCF 8.0 · dotnet/wcf&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/wcf/releases/tag/v8.0.0-rtm"&gt;https://github.com/dotnet/wcf/releases/tag/v8.0.0-rtm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WCF Client 8.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは構成名を受け取る API が削除された以外の大きな変更はないものの、クライアントサポートポリシーとしてリリースから3年（2026年まで)のサポートが提供される。前バージョンの WCF Client 6.0 のサポート終了は2024年11月までとなっている。&lt;/p&gt;
&lt;h3 id="release-2.3.3-mysql-netmysqlconnector"&gt;Release 2.3.3 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.3"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MySQL Connector for .NET 2.3.3/2.3.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではスキーマのサポート強化やいくつかの不具合の修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.2"&gt;Release 2.3.2 · mysql-net/MySqlConnector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="resharper-and-rider-2023.3.2-bug-fixes-have-landed-the.net-tools-blog"&gt;ReSharper and Rider 2023.3.2 – Bug Fixes Have Landed! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/12/20/resharper-and-rider-2023-3-2-bug-fix/"&gt;https://blog.jetbrains.com/dotnet/2023/12/20/resharper-and-rider-2023-3-2-bug-fix/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper / Rider 2023.3.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは ReSharper と Rider ともに 2023.3 リリース以降の様々な不具合が修正されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/12/13/rsrp-rd-2023-3-1-bug-fix/"&gt;The First Set of Bug-fixes for ReSharper and Rider 2023.3 Are Here! | The .NET Tools Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="wpfui-collaboration-for-win11-theming-dotnetwpf-discussion-8533-github"&gt;WPFUI collaboration for Win11 Theming · dotnet/wpf · Discussion #8533 · GitHub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/wpf/discussions/8533"&gt;https://github.com/dotnet/wpf/discussions/8533&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF に Windows 11 の Fluent UI テーマを持ち込むため、WPFUI とのコラボレーションを行うというアナウンス。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lepoco/wpfui/discussions/880"&gt;WPF UI x WPF collaboration · lepoco/wpfui · Discussion #880&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="whats-new-in-our-code-coverage-tooling.net-blog"&gt;What's New in Our Code Coverage Tooling? - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/whats-new-in-our-code-coverage-tooling/"&gt;https://devblogs.microsoft.com/dotnet/whats-new-in-our-code-coverage-tooling/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コードカバレッジツール (Microsoft.CodeCoverage) の新機能について。&lt;/p&gt;
&lt;p&gt;静的インストルメンテーションでのすべてのプラットフォームのサポート、新しいレポート形式のサポート、 dotnet-coverage コマンドの導入、ソリューションの自動マージ、パフォーマンスの改善など。&lt;/p&gt;
&lt;h3 id="advent-calendar-2023"&gt;Advent Calendar 2023&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C# Advent Calendar
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neue.cc/2023/12/19_zlogger2.html"&gt;neue cc - ZLogger v2 による .NET 8活用事例 と Unity C# 11対応の紹介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/Shaula/items/7622127c60b7c19a0a15"&gt;UnsafeAccessorでprivateメソッドをテストしよう - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakovail.info/entry/advent_2023_cs"&gt;UntiyからC#を始めたぼくのIEnumerator - Kakoのいろいろやったこと記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/michimichix521/items/fd60471434698c297e88"&gt;C#（.NET）で Min-Max 正規化 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/shimat/articles/d8812d20e803cf"&gt;LINQ - Python チートシート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/skitoy4321/items/394ebfb6385ef482cada"&gt;StrideでBepuPhysicsを物理エンジンとして使う - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrapbox.io/hadashiA/async%2Fawait%E3%81%AF%E4%BB%8A%E5%BE%8C%E3%82%82%E3%83%99%E3%82%B9%E3%83%88%E3%83%95%E3%83%AC%E3%83%B3%E3%83%89%E3%81%A7%E3%81%82%E3%82%8A%E7%B6%9A%E3%81%91%E3%82%8B%E3%81%8B"&gt;async/awaitは今後もベストフレンドであり続けるか - hadashiA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/secile/items/21b7da5d32bc44dbb947"&gt;USBカメラを使ってみよう - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/TechNinja/items/ac7faf3363e263b8c619"&gt;機械学習の専門知識がなくてもC#＋ML.NETで高性能なAIが作成できるAutoMLを試してみた - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/ruccho/articles/a8bbb8f0a58225"&gt;Mono.Cecilでは &amp;quot;.s&amp;quot; 命令にご用心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/guil/articles/167f6a872d8a81"&gt;Microsoft.Extensions.ObjectPoolを使ってみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/qa65000/items/64be8bcf45dc2c39b48f"&gt;C#で作る。組み込み用GUIアプリ通信方法について - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/up-hash/items/57b5beb95e8fb7f94e1c"&gt;ジェネリクスツリーで、可変長構造体っぽいことをする🌳 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/nekohei/items/abee7fe81ca9d04221aa"&gt;EF Coreのクエリ式 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/saka_pon/items/ea260f454d8b1c47b377"&gt;mex のライブラリ化 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.neno.dev/entry/2023/12/23/194947"&gt;C# ではじめる OpenTelemetry。 - ねののお庭。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Blazor Advent Calendar
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/jsakamoto/items/3965b7a3c895fe122dc8"&gt;&amp;quot;ゲームなどでよく見る「長押しのボタン」のUIをWEBで表現してみた&amp;quot; を Blazor で実装してみた - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://koudenpa.hatenablog.com/entry/2023/12/14/000000"&gt;プラモの写真を光らせたい x Blazor WebAssembly x OpenCV - koudenpaのブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/jsakamoto/items/9378a345a96113319102"&gt;Blazor WebAssembly で作った Web アプリ &amp;quot;snow catch&amp;quot; ゲームを、🎙️ボイスコマンド (音声認識) で操作できるようにする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/jsakamoto/items/15f330fdfcf4ddf9e2c5"&gt;Blazor WebAssembly アプリを .NET 8 の Auto レンダーモードに移行したら InvalidOperationException で動作しない - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/jsakamoto/items/7409fb67c9a8a80880de"&gt;Blazor でも View Transition したい - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/jsakamoto/items/b2a7a4aed0f4d6868340"&gt;Blazor Server で Scoped なサービスに状態保存してたら、.NET 8 の新しい Render Mode では危ないかもね、という話 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/kaorumori/items/a8d03f451a9087573cda"&gt;Blazorアプリで2年間放置していたコードの警告と向き合います - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/jsakamoto/items/8999d0322c64f265369b"&gt;Blazor - サーバーで実行されているのかブラウザで実行されているのかを判別する方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/jsakamoto/items/8bb81d11c151cec5920a"&gt;Blazor in .NET 8 の Auto レンダーモードは、.wasm ダウンロード済みでも、WebAssembly モードで動作しない場合がある - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/KennethEHD/items/0aa02369ec5914e76430"&gt;軽量かつ高機能なHAVIT Blazorを使ったBlazor開発 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/jsakamoto/items/a326ddb14b0a7b6c4a74"&gt;[改訂版] Blazor でラジオボタン input 要素に双方向データバインドする方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;その他
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/yn-cover/items/6bf9b404bb7685e60b44"&gt;C# と YouTube API を使って VTuber の配信の流行を調べてみる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/meglia/articles/0f7262c09d87dc"&gt;[C#]asyncを利用してCPUバウンドな処理を呼び出すと、スレッドは分散しない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/h-uminoue-gxp/items/9218fd32a33e3b71edae"&gt;C# + xUnitのプロジェクトでユニットテストの結果とテストカバレッジ率をレポートに出力させる。 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/mania3bb2007/items/fe7fc7ee374ae28dcf37"&gt;SQL CLR と CData ADO.NET Provider を使って、SQL Server から直接kintone にアクセスする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/lx-sasabo/items/5732e944e290391771bc"&gt;Roslyn API でフィールドとプロパティの型と名称を取得する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/happy_elements/articles/c471ee57b48036"&gt;【C#】In-Place Merge Sort を実装してみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/lx-sasabo/items/793a0b5b8b7d56579acb"&gt;Roslyn API でサマリータグのコメントの一行目だけを取得する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="actix-webblazor-webassembly-qiita"&gt;actix-webでBlazor WebAssemblyをホストする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/TellMin/items/9e7f1e576a195103aa92"&gt;https://qiita.com/TellMin/items/9e7f1e576a195103aa92&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust の actix-web フレームワークで Blazor WebAssembly アプリケーションをホストする方法について。&lt;/p&gt;
&lt;h3 id="net-aspire-qiita"&gt;.NET Aspireを試してみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hydrangeas/items/b87bd39843eee0633cb0"&gt;https://qiita.com/hydrangeas/items/b87bd39843eee0633cb0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire のプロジェクトを作成し、構成やロギングなどを触ってみた記録。&lt;/p&gt;
&lt;h3 id="net-8grpc-qiita"&gt;.NET 8のプロセス間通信には、gRPCのパイプ通信が優秀なようです - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/760a41a73c825eb70e70"&gt;https://qiita.com/spc_ksudoh/items/760a41a73c825eb70e70&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プロセス間通信の方法として名前付きパイプによる gRPC を使用するメリットとその実装方法について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/b998a0decc772b0e4785"&gt;.NET 8のプロセス間通信には、gRPCのパイプ通信が優秀なようです：その2 具体的なコードの書き方 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="string-interning-to-use-or-not-to-use-a-performance-question"&gt;String Interning - To Use or Not to Use? A Performance Question&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sergeyteplyakov.github.io/Blog/benchmarking/2023/12/10/Intern_or_Not_Intern.html"&gt;https://sergeyteplyakov.github.io/Blog/benchmarking/2023/12/10/Intern_or_Not_Intern.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;String.Intern のパフォーマンスについて。記事では NativeAOT で実行した場合との差についても触れている。&lt;/p&gt;
&lt;h3 id="a-year-in-recap-celebrating-this-years-milestones"&gt;A Year in Recap: Celebrating this years milestones&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/Blog/a-year-in-recap-celebrating-this-years-milestones"&gt;https://avaloniaui.net/Blog/a-year-in-recap-celebrating-this-years-milestones&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia の2023年の振り返り記事。&lt;/p&gt;
&lt;h3 id="semantic-kernel"&gt;Semantic Kernelのプロンプトをファイルに書く&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/379d39dc225b88"&gt;https://zenn.dev/tomokusaba/articles/379d39dc225b88&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel で使用するプロンプトを外部ファイルに記述しておき、呼び出す方法について。&lt;/p&gt;
&lt;h3 id="c.net"&gt;【C#】初心者におすすめ！コードアナライザーを使おう！【.NET】&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/inuinu/articles/c60abf13d5f47a"&gt;https://zenn.dev/inuinu/articles/c60abf13d5f47a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アナライザーの使用方法についての解説。組み込みのアナライザーの紹介やアナライザーの抑制方法、Roslynator などのサードパーティーアナライザーの紹介など。&lt;/p&gt;
&lt;h3 id="announcing-the-hacktogether-the-great.net-8-hack-winners.net-blog"&gt;Announcing the HackTogether: The Great .NET 8 Hack Winners - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/great-dotnet-8-hack-winners/"&gt;https://devblogs.microsoft.com/dotnet/great-dotnet-8-hack-winners/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Great .NET 8 Hack イベントの受賞者の発表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;総合: &lt;a href="https://github.com/tagr/greatnet8hack-techport"&gt;NASA TechPort Headlines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ベスト AI: &lt;a href="https://github.com/ZadokJoshua/betakads-avalonia-app"&gt;Betakads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ベストクラウドネイティブ: &lt;a href="https://github.com/Cloud-Jas/AI-Counselor"&gt;AI Counselor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="semantic-kernel-1"&gt;Semantic Kernelのプロンプトのテンプレート化&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/a403d9ec250ec8"&gt;https://zenn.dev/tomokusaba/articles/a403d9ec250ec8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel でプロンプトをテンプレート関数化して呼び出す方法について。&lt;/p&gt;
&lt;h3 id="github-codespaces-semantic-kernel-v1.0.1-handson"&gt;GitHub Codespaces Semantic Kernel v1.0.1 handson&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ymd65536/articles/semantic_kernel_v101_handson"&gt;https://zenn.dev/ymd65536/articles/semantic_kernel_v101_handson&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel v1.0.1 を GitHub Codespace と Azure OpenAI で実行するためのセットアップ手順。&lt;/p&gt;
&lt;h3 id="updates-to-the-stronglytypedid-library-simplification-templating-and-codefixes-using-strongly-typed-entity-ids-to-avoid-primitive-obsession-part-8"&gt;Updates to the StronglyTypedId library - simplification, templating, and CodeFixes: Using strongly-typed entity IDs to avoid primitive obsession - Part 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/updates-to-the-stronglytypedid-library/"&gt;https://andrewlock.net/updates-to-the-stronglytypedid-library/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StronglyTypedId ライブラリを再設計し、テンプレート化などの対応を行ったことについて。&lt;/p&gt;
&lt;h3 id="net-8.0-wsl2-ubuntu"&gt;.NET 8.0 を WSL2 Ubuntu にインストールする&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/yukiko_bass/articles/e6f9f22da5f15e"&gt;https://zenn.dev/yukiko_bass/articles/e6f9f22da5f15e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WSL2 の Ubuntu 22.04 に .NET 8 をインストールする手順について。&lt;/p&gt;
&lt;h3 id="naming-made-easy-ai-powered-rename-suggestions-visual-studio-blog"&gt;Naming Made Easy: AI-Powered Rename Suggestions - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/ai-powered-rename-suggestions/"&gt;https://devblogs.microsoft.com/visualstudio/ai-powered-rename-suggestions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Preview でサポートされた GitHub Copilot を使用した識別子のリネームサジェスト機能の紹介。&lt;/p&gt;
&lt;h3 id="net-8-blazor-web-app-mudblazor"&gt;.NET 8 の Blazor Web App で MudBlazor を使う&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tetr4lab/articles/74bd50585434ab"&gt;https://zenn.dev/tetr4lab/articles/74bd50585434ab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor Web App で .NET 8 正式対応前の MudBlazor を利用する手順について。&lt;/p&gt;
&lt;h3 id="integrating-openai-image-generation-into-a.net-application"&gt;Integrating OpenAI Image Generation into a .NET Application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2023/Dec/21/Integrating-OpenAI-image-generation-into-your-NET-Application"&gt;https://weblog.west-wind.com/posts/2023/Dec/21/Integrating-OpenAI-image-generation-into-your-NET-Application&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenAI の画像生成 API を .NET から利用する方法やその簡単なラッパーライブラリーの紹介。&lt;/p&gt;
&lt;h3 id="revisiting-wasm-for-f"&gt;Revisiting WASM for F#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/tunaxor/revisiting-wasm-for-f-38c1"&gt;https://dev.to/tunaxor/revisiting-wasm-for-f-38c1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# を Blazor WebAssembly で使用する上でのライブラリーや JavaScript との相互運用について。&lt;/p&gt;
&lt;h3 id="semantic-kernelfunctionsemantic-kernel1.0.1"&gt;Semantic KernelのFunctionを自動的に選択して回答を返すSemantic Kernel1.0.1正式版&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/e667217a2045cc"&gt;https://zenn.dev/tomokusaba/articles/e667217a2045cc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel でカスタムの Function を自動的に選択する実装方法について。&lt;/p&gt;
&lt;h3 id="unlocking-the-secrets-of-managed-memory-dive-into-event-handler-leak-insights-visual-studio-blog"&gt;Unlocking the Secrets of Managed Memory: Dive into Event Handler Leak Insights! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/unlocking-the-secrets-of-managed-memory-dive-into-event-handler-leak-insights/"&gt;https://devblogs.microsoft.com/visualstudio/unlocking-the-secrets-of-managed-memory-dive-into-event-handler-leak-insights/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 17.9 Preview 1 で導入された新しいメモリー分析機能の紹介。&lt;/p&gt;
&lt;p&gt;この機能によってイベントハンドラーのオブジェクトリークを素早く見つけることが可能となるとのこと。&lt;/p&gt;
&lt;h3 id="net-corewindowslinuxtimezoneid"&gt;.NET CoreでWindowsとLinuxでTimeZoneのIDが異なる&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ynug/articles/dot-net-time-zone"&gt;https://zenn.dev/ynug/articles/dot-net-time-zone&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows と Linux などプラットフォームごとにタイムゾーンの ID が異なることその対処について。&lt;/p&gt;
&lt;h3 id="net-8libraryimportattributesafehandlepublic"&gt;.NET 8からはLibraryImportAttributeで使うSafeHandle型のコンストラクタをpublicにしよう - プログラム系統備忘録ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://tan.hatenadiary.jp/entry/2023/11/23/015139"&gt;https://tan.hatenadiary.jp/entry/2023/11/23/015139&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 では LibraryImportAttribute で宣言された外部ライブラリーの呼び出しに使用している SafeHandle 型はコンストラクターを public にする必要がある変更について。&lt;/p&gt;
&lt;p&gt;記事ではどのように生成されるコードが変更され、必要となった理由と経緯などにも触れている。&lt;/p&gt;
&lt;h3 id="fukuoka.net-conf-2023-connpass"&gt;Fukuoka.NET Conf 2023 - connpass&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fukuten.connpass.com/event/303390/"&gt;https://fukuten.connpass.com/event/303390/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;福岡での .NET Conf 2023 ローカルイベント。2024年2月3日(土)に開催。&lt;/p&gt;
&lt;h3 id="httpcontext-issues-with-azure-signalr-service"&gt;HttpContext Issues with Azure SignalR Service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/1kevgriff/httpcontext-issues-with-azure-signalr-service-21d0"&gt;https://dev.to/1kevgriff/httpcontext-issues-with-azure-signalr-service-21d0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure SignalR Service では HttpContext を利用できないという固有の特性があり、問題となる場合があることについて。&lt;/p&gt;
&lt;h3 id="nunit4"&gt;NUnit4の新しい非同期アサートを試してみる&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/890091dd520f08"&gt;https://zenn.dev/tomokusaba/articles/890091dd520f08&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NUnit 4 での非同期アサートについての紹介。&lt;/p&gt;
&lt;h3 id="azure-openai-service-json-tools.net-sdk"&gt;Azure OpenAI Service の JSON モードと tools を .NET SDK で使ってみよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aoai-tools-jsonmode-in-dotnet"&gt;https://zenn.dev/microsoft/articles/aoai-tools-jsonmode-in-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure OpenAI Service の JSON モードと tools プロパティーを .NET 向けの SDK から利用する方法について。&lt;/p&gt;
&lt;h3 id="react-typescript-spa.net-8"&gt;最新の React-TypeScript SPA テンプレートを .NET 8 で試してみよう | ドクセル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docswell.com/s/shosuz/Z4QRL8-2023-11-25-172313"&gt;https://www.docswell.com/s/shosuz/Z4QRL8-2023-11-25-172313&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で新しくなった React と ASP.NET Core を組み合わせる SPA テンプレートについての紹介。&lt;/p&gt;
&lt;script async class="docswell-embed" src="https://www.docswell.com/assets/libs/docswell-embed/docswell-embed.min.js" data-src="https://www.docswell.com/slide/Z4QRL8/embed" data-aspect="0.5625"&gt;&lt;/script&gt;&lt;div class="docswell-link"&gt;&lt;a href="https://www.docswell.com/s/shosuz/Z4QRL8-2023-11-25-172313"&gt;最新の React/TypeScript SPA テンプレートを .NET 8 で試してみよう by &amp;#64;shosuz&lt;/a&gt;&lt;/div&gt;
&lt;h3 id="http2-rapid-reset"&gt;お客様、そこは秘孔です！突かないでください！ HTTP/2 Rapid reset の概要と対策&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/murachiakira/2-rapid-reset-nogai-yao-todui-ce"&gt;https://speakerdeck.com/murachiakira/2-rapid-reset-nogai-yao-todui-ce&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HTTP/2 Rapid Reset 攻撃についての解説。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="a4d66795ebb2484ca862ded3cca312f1" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="net-8blazor"&gt;.NET 8世代のBlazorについて&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/tomokusaba/dot-net-8shi-dai-noblazornituite"&gt;https://speakerdeck.com/tomokusaba/dot-net-8shi-dai-noblazornituite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor のホスティングモデルの変更点などの簡単な解説。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="003c54b2cb844c519cf6b2ad3faab3a2" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="c-opentelemetry"&gt;C# ではじめる OpenTelemetry&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/nenonaninu/c-number-dehazimeru-opentelemetry"&gt;https://speakerdeck.com/nenonaninu/c-number-dehazimeru-opentelemetry&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelmetry についての紹介から、ASP.NET でのサポートと使い方、SignalR でのトレースなど。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.neno.dev/entry/2023/12/23/194947"&gt;C# ではじめる OpenTelemetry。 - ねののお庭。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script defer class="speakerdeck-embed" data-id="eeed7ed843954973b65b8adce7089257" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="net-conf-recap-japannight-party"&gt;.NET Conf Recap Japan/Night Party&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ufcpp/DotNetConf2023Recap"&gt;GitHub - ufcpp/DotNetConf2023Recap: .NET Conf 2023 Recap Japan 「開発ツールの最新アップデート」向け&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/ymd65536/articles/dotnet_night_party_2023"&gt;.NET Night Party&amp;#64;品川&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/e582d24e37d930"&gt;.NET Night Party&amp;#64;品川 ライブコーディング対決&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/afbf1e0718d3df"&gt;.NET Night Party&amp;#64;品川 ライブコーディング対決 IF Blazor Appsテンプレだったら？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-swisslife-osssnapshooter-snapshooter-is-a-snapshot-testing-tool-for.net-core-and.net-framework"&gt;GitHub - SwissLife-OSS/snapshooter: Snapshooter is a snapshot testing tool for .NET Core and .NET Framework&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/SwissLife-OSS/snapshooter"&gt;https://github.com/SwissLife-OSS/snapshooter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET でのスナップショットテストを行うためのライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://johnnyreilly.com/snapshot-log-tests-dotnet"&gt;Snapshot log tests in .NET | johnnyreilly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="github-sator-imagingdocfx-pages-deploy-docfx-api-reference-to-github-pages-with-only-1-action"&gt;GitHub - sator-imaging/docfx-pages: Deploy docfx API Reference to GitHub Pages with only 1 Action&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/sator-imaging/docfx-pages"&gt;https://github.com/sator-imaging/docfx-pages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;docfx を使用して API リファレンスを GitHub Pages にパブリッシュする GitHub Action。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/sator_imaging/items/53d9d9e00ad3059c540a"&gt;docfx + GitHub ページの手抜きテンプレート - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="github-timonkrebsmemoizr-declarative-structured-concurrency-for-c"&gt;GitHub - timonkrebs/MemoizR: Declarative Structured Concurrency for C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/timonkrebs/MemoizR"&gt;https://github.com/timonkrebs/MemoizR&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://khalidabuhakmeh.com/memoizr-declarative-structured-concurrency-for-csharp"&gt;MemoizR - Declarative Structured Concurrency for C#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="sekiban-event-sourcing-and-cqrs-framework-home"&gt;Sekiban - Event Sourcing and CQRS Framework - Home&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.sekiban.dev/"&gt;https://www.sekiban.dev/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Cosmos DB や AWS Dynamo DB を使用する C# によるイベントソーシングフレームワーク。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/J-Tech-Japan/Sekiban"&gt;GitHub - J-Tech-Japan/Sekiban: Sekiban - Event Sourcing and CQRS Framework using C#. It can store data into Azure Cosmos DB or AWS Dynamo DB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prtimes.jp/main/html/rd/p/000000003.000103357.html"&gt;株式会社ジェイテックジャパン、C#によるイベントソーシングフレームワーク「Sekiban」をオープンソースソフトウェアとして公開&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;ターゲット型によるコレクションリテラルで生成されるコードの違い。&lt;/p&gt;
&lt;!-- https://x.com/steplyakov/status/1737524544171384927?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Collection literals are trickier then you might think (in a good sense).&lt;br&gt;&lt;br&gt;Initialization logic is quite smart. For lists it relies on new CollectionsMarshal API and uses the span to fill the list in a very efficient way.&lt;br&gt;&lt;br&gt;Its way more efficient than collection initializers! &lt;a href="https://t.co/e3ypnpKGay"&gt;pic.twitter.com/e3ypnpKGay&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sergiy Teplyakov 🇺🇦 🇺🇸 (&amp;#64;STeplyakov) &lt;a href="https://twitter.com/STeplyakov/status/1737524544171384927?ref_src=twsrc%5Etfw"&gt;December 20, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;async/await の歴史のはなし。&lt;/p&gt;
&lt;!-- https://x.com/dsymetweets/status/1735396207328162082?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Lord what is this.&lt;br&gt;&lt;br&gt;Some of the **actual** history, peer-reviewed, is in &lt;a href="https://t.co/KqDJF5ifyx"&gt;https://t.co/KqDJF5ifyx&lt;/a&gt;. As indicated there that only touches on the many strands of prior history.&lt;/p&gt;&amp;mdash; Don Syme (&amp;#64;dsymetweets) &lt;a href="https://twitter.com/dsymetweets/status/1735396207328162082?ref_src=twsrc%5Etfw"&gt;December 14, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/davidfowl/status/1735686682354356690?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I have massive respect for &lt;a href="https://twitter.com/dsymetweets?ref_src=twsrc%5Etfw"&gt;&amp;#64;dsymetweets&lt;/a&gt; and I want to make sure credit (even more credit) is given where it is due, F# created async workflows that heavily influenced C#&amp;#39;s async/await design.&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1735686682354356690?ref_src=twsrc%5Etfw"&gt;December 15, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;DebuggerDisplay 属性の Name プロパティーを使うことでインデックスの代わりにキーを表示できるという話。&lt;/p&gt;
&lt;!-- https://x.com/nietras1/status/1736703070401155195?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Trick is to define custom type with DebuggerDisplay attribute and using Name for the key. Sep uses this too in the SepReader.Row. 👇&lt;a href="https://t.co/mcVv8h5fJV"&gt;https://t.co/mcVv8h5fJV&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/ry3OzenqLt"&gt;https://t.co/ry3OzenqLt&lt;/a&gt; &lt;a href="https://t.co/60jK9tnufS"&gt;pic.twitter.com/60jK9tnufS&lt;/a&gt;&lt;/p&gt;&amp;mdash; nietras 👾 (&amp;#64;nietras1) &lt;a href="https://twitter.com/nietras1/status/1736703070401155195?ref_src=twsrc%5Etfw"&gt;December 18, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;NativeAOT 上で Mono のインタープリターを動かす試み。&lt;/p&gt;
&lt;!-- https://x.com/filipnavara/status/1734996595349836154?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;NativeAOT/LLVM is getting some attention recently. There were experiments with NativeAOT on Android with Jave interop. I did, however, miss that there was also attempt to mix MonoVM interpreter with NativeAOT: &lt;a href="https://t.co/Ap74G4beba"&gt;https://t.co/Ap74G4beba&lt;/a&gt; 😶&lt;/p&gt;&amp;mdash; Filip Navara 🇺🇦 (parody of myself) (&amp;#64;filipnavara) &lt;a href="https://twitter.com/filipnavara/status/1734996595349836154?ref_src=twsrc%5Etfw"&gt;December 13, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>