<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>WeekRef.NET</title>
		<link>/</link>
		<description>.NET 関連の情報をほぼ週刊配信</description>
		<copyright>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</copyright>
		<managingEditor>Mayuki Sawatari</managingEditor>
		<pubDate>Sat, 25 Feb 2023 09:48:44 GMT</pubDate>
		<lastBuildDate>Sat, 25 Feb 2023 09:48:44 GMT</lastBuildDate>
		<item>
			<title>2023-02-25: Visual Studio 2022 17.5, .NET 8 Preview 1, .NET 7.0.3, .NET 6.0.14</title>
			<link>/2023/02/25/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/02/25/updates</guid>
			<pubDate>Sat, 25 Feb 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="visual-studio-2022-17.5-released-visual-studio-blog"&gt;Visual Studio 2022 - 17.5 Released - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-5-released/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-5-released/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing.net-8-preview-1.net-blog"&gt;Announcing .NET 8 Preview 1 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-1/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ef-core-8-preview-1-raw-lazy-and-on-time.net-blog"&gt;EF Core 8 Preview 1: Raw, lazy, and on-time - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-1/"&gt;https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-1.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 1 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-1/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-for-mac-17.5-is-now-available-visual-studio-blog"&gt;Visual Studio for Mac 17.5 is now available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-for-mac-17-5-is-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-for-mac-17-5-is-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-february-2023-updates.net-7.0.3.net-6.0.14.net-blog"&gt;.NET February 2023 Updates – .NET 7.0.3, .NET 6.0.14 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/february-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/february-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improvements-to.net-framework-updates-for-windows-11-version-22h2.net-blog"&gt;Improvements to .NET Framework updates for Windows 11, version 22H2 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/improvements-to-net-framework-updates-for-windows-11-22h2/"&gt;https://devblogs.microsoft.com/dotnet/improvements-to-net-framework-updates-for-windows-11-22h2/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-framework-february-2023-security-and-quality-rollup-updates.net-blog"&gt;.NET Framework February 2023 Security and Quality Rollup Updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-february-2023-security-and-quality-rollup-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-february-2023-security-and-quality-rollup-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="upgrading-your.net-projects-with-visual-studio.net-blog"&gt;Upgrading your .NET projects with Visual Studio - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/upgrade-assistant-now-in-visual-studio/"&gt;https://devblogs.microsoft.com/dotnet/upgrade-assistant-now-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="updated-modern-code-generation-for-winforms-initializecomponent.net-blog"&gt;Updated Modern Code Generation for WinForm's InitializeComponent - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/winforms-codegen-update/"&gt;https://devblogs.microsoft.com/dotnet/winforms-codegen-update/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.1-eap-6-new-ui-improvements-and-a-better-debugging-experience-the.net-tools-blog"&gt;Rider 2023.1 EAP 6: New UI Improvements and a Better Debugging Experience | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/24/rider-2023-1-eap-6/"&gt;https://blog.jetbrains.com/dotnet/2023/02/24/rider-2023-1-eap-6/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v1.2.4-microsoftwindowsappsdk"&gt;Release v1.2.4 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.4"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v12.0.0-jbogardmediatr"&gt;Release v12.0.0 · jbogard/MediatR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jbogard/MediatR/releases/tag/v12.0.0"&gt;https://github.com/jbogard/MediatR/releases/tag/v12.0.0&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="maximizing-the-value-of-intellicode-with-api-usage-examples-real-world-code-examples-at-your-fingertips-visual-studio-blog"&gt;Maximizing the value of IntelliCode with API usage examples: Real-World Code Examples at Your Fingertips - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/intellicode-api-usage-examples/"&gt;https://devblogs.microsoft.com/visualstudio/intellicode-api-usage-examples/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="getting-started-with-dottrace-on-macos-and-linux-the.net-tools-blog"&gt;Getting Started With dotTrace On macOS And Linux | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/22/getting-started-with-dottrace-on-macos-and-linux/"&gt;https://blog.jetbrains.com/dotnet/2023/02/22/getting-started-with-dottrace-on-macos-and-linux/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="building-the-final-requestdelegate-behind-the-scenes-of-minimal-apis-part-7"&gt;Building the final RequestDelegate: Behind the scenes of minimal APIs - Part 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-7-building-the-final-requestdelegate/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-7-building-the-final-requestdelegate/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="list-and-span-pattern-matching-using-c-11-in-rider-and-resharper-the.net-tools-blog"&gt;List and Span Pattern Matching – Using C# 11 in Rider and ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/20/list-and-span-pattern-matching-using-csharp-11-in-rider-and-resharper/"&gt;https://blog.jetbrains.com/dotnet/2023/02/20/list-and-span-pattern-matching-using-csharp-11-in-rider-and-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazornpm-qiita"&gt;Blazorでnpmを使う - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/villhell/items/9993a132767b284ba2f6"&gt;https://qiita.com/villhell/items/9993a132767b284ba2f6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="migration-from.net-framework-mvc-to-blazor-webassembly"&gt;Migration from .Net Framework MVC to Blazor WebAssembly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codingberry.com/migration-from-net-framework-mvc-to-blazor-webassembly-faf5937acd2a"&gt;https://codingberry.com/migration-from-net-framework-mvc-to-blazor-webassembly-faf5937acd2a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-united-solving-blazors-biggest-challenges"&gt;Blazor United - Solving Blazor's biggest challenges?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jonhilton.net/blazor-united/"&gt;https://jonhilton.net/blazor-united/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-vs-rust-vs-go.a-performance-benchmarking-in-kubernetes"&gt;C# vs Rust vs Go. A performance benchmarking in Kubernetes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/@shyamsundarb/c-vs-rust-vs-go-a-performance-benchmarking-in-kubernetes-c303b67b84b5"&gt;https://medium.com/@shyamsundarb/c-vs-rust-vs-go-a-performance-benchmarking-in-kubernetes-c303b67b84b5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c.netcloudwatch"&gt;C# .NETでCloudWatchログイベントをフィルタして取得する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sbstani/articles/3c18a3a58e03b4"&gt;https://zenn.dev/sbstani/articles/3c18a3a58e03b4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2022-can-now-always-update-on-close-visual-studio-blog"&gt;Visual Studio 2022 can now Always Update on Close! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-can-now-always-update-on-close/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-can-now-always-update-on-close/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="reference-github-issues-and-pull-requests-in-visual-studio-visual-studio-blog"&gt;Reference GitHub Issues and Pull Requests in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/reference-github-issues-and-pull-requests-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/reference-github-issues-and-pull-requests-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="using.net-google-api-client-library-with-maui"&gt;Using .NET Google API client library with MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/@CORDEA/using-net-google-api-client-library-with-maui-11ae98e34a35"&gt;https://medium.com/@CORDEA/using-net-google-api-client-library-with-maui-11ae98e34a35&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-qiita"&gt;.NETで全角／半角・大文字／小文字を考慮した文字列比較 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/miswil/items/9e139202337ce881ca5f"&gt;https://qiita.com/miswil/items/9e139202337ce881ca5f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="exception-handling-in-asp.net-core-web-api-with-problem-details-service"&gt;Exception Handling in ASP.NET Core Web API with problem details service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/@a.skuratovich/exception-handling-in-asp-net-core-web-api-with-problem-details-service-1f29de4116d4"&gt;https://medium.com/@a.skuratovich/exception-handling-in-asp-net-core-web-api-with-problem-details-service-1f29de4116d4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-webassembly-opencvsharp-qiita"&gt;Blazor WebAssembly + OpenCVSharpでブラウザ上で動作するカスタマバーコードリーダーを作成した(実装解説) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/EmEpsilon/items/1e8c38ba2c5ebb906607"&gt;https://qiita.com/EmEpsilon/items/1e8c38ba2c5ebb906607&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windows-1-rksoftware"&gt;まだまだ現役！ Windows フォームアプリの新機能を確認する (1) - rksoftware&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://rksoftware.hatenablog.com/entry/2023/02/18/160000"&gt;https://rksoftware.hatenablog.com/entry/2023/02/18/160000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="refactoring-huge-c-code-base-in-minutes"&gt;Refactoring huge C# code base in minutes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://laurentkempe.com/2023/02/20/refactoring-huge-csharp-code-base-in-minutes/"&gt;https://laurentkempe.com/2023/02/20/refactoring-huge-csharp-code-base-in-minutes/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="task-eventhandlers-the-little-secret-you-didnt-know-dev-leader"&gt;Task EventHandlers – The Little Secret You Didn’t Know - Dev Leader&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.devleader.ca/2023/02/18/task-eventhandlers-the-little-secret-you-didnt-know/"&gt;https://www.devleader.ca/2023/02/18/task-eventhandlers-the-little-secret-you-didnt-know/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="fast-console-io-on.net"&gt;Fast Console IO on .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/@epeshk/fast-console-io-on-net-6cb56a6db529"&gt;https://medium.com/@epeshk/fast-console-io-on-net-6cb56a6db529&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="console.readline"&gt;Console.ReadLine()を中断する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2023-02-18-cancelling-console-readline"&gt;https://zenn.dev/nuits_jp/articles/2023-02-18-cancelling-console-readline&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="getting-started-with-mongodb-atlas-and-azure-functions-using.net-and-c-mongodb"&gt;Getting Started with MongoDB Atlas and Azure Functions using .NET and C# | MongoDB&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/languages/csharp/getting-started-with-mongodb-atlas-and-azure-functions-using-net/"&gt;https://www.mongodb.com/developer/languages/csharp/getting-started-with-mongodb-atlas-and-azure-functions-using-net/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c"&gt;継承辺りのもしかしたらマイナーかもしれない C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/mishizaki1/c-256109925"&gt;https://www.slideshare.net/mishizaki1/c-256109925&lt;/a&gt;&lt;/p&gt;
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/key/JW8yVQsEVm3Yoo" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen=""&gt; &lt;/iframe&gt; &lt;div style="margin-bottom:5px"&gt; &lt;strong&gt; &lt;a href="/www.slideshare.net/mishizaki1/c-256109925" title="継承辺りのもしかしたらマイナーかもしれない C#" target="_blank"&gt;継承辺りのもしかしたらマイナーかもしれない C#&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href="/www.slideshare.net/mishizaki1" target="_blank"&gt;m ishizaki&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;h3 id="orleans"&gt;Orleans の概要と基本構成のデプロイまで | ドクセル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docswell.com/s/hiro128_777/K6YMNL-2023-02-19-170020#p20"&gt;https://www.docswell.com/s/hiro128_777/K6YMNL-2023-02-19-170020#p20&lt;/a&gt;&lt;/p&gt;
&lt;script async="" class="docswell-embed" src="https://www.docswell.com/assets/libs/docswell-embed/docswell-embed.min.js" data-src="https://www.docswell.com/slide/K6YMNL/embed" data-aspect="0.5625"&gt;&lt;/script&gt;&lt;div class="docswell-link"&gt;&lt;a href="https://www.docswell.com/s/hiro128_777/K6YMNL-2023-02-19-170020"&gt;Orleans の概要と基本構成のデプロイまで by @hiro128_777&lt;/a&gt;&lt;/div&gt;
&lt;h3 id="asp.net.net-framework-opentelemetry"&gt;ASP.NET (.NET Framework) 製アプリをリビルドせずにOpenTelemetryで計測しよう | ドクセル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docswell.com/s/tanaka_733/KLLXRQ-2023-02-24-csharptokto-opentelemetry-dotnet-autoinstrumentation-aspnetdfx"&gt;https://www.docswell.com/s/tanaka_733/KLLXRQ-2023-02-24-csharptokto-opentelemetry-dotnet-autoinstrumentation-aspnetdfx&lt;/a&gt;&lt;/p&gt;
&lt;script async="" class="docswell-embed" src="https://www.docswell.com/assets/libs/docswell-embed/docswell-embed.min.js" data-src="https://www.docswell.com/slide/KLLXRQ/embed" data-aspect="0.5625"&gt;&lt;/script&gt;&lt;div class="docswell-link"&gt;&lt;a href="https://www.docswell.com/s/tanaka_733/KLLXRQ-2023-02-24-csharptokto-opentelemetry-dotnet-autoinstrumentation-aspnetdfx"&gt;ASP.NET (.NET Framework) 製アプリをリビルドせずにOpenTelemetryで計測しよう by @tanaka_733&lt;/a&gt;&lt;/div&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="using-system.text.json-annotated-objects-in-newtonsoft.json"&gt;Using System.Text.Json annotated objects in Newtonsoft.Json&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/cloudnimble/using-system-text-json-annotated-objects-in-newtonsoft-json-ca51d23605c1"&gt;https://medium.com/cloudnimble/using-system-text-json-annotated-objects-in-newtonsoft-json-ca51d23605c1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/jamesnk/status/1627309572087218177?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The &lt;a href="https://t.co/vykcBhgNKZ"&gt;https://t.co/vykcBhgNKZ&lt;/a&gt; Core HTTP/3 platform test has an impressive 6 conditions on it (conditions all need to pass before the test runs)&lt;br&gt;&lt;br&gt;Is this a &lt;a href="https://t.co/cvUPtEZhbS"&gt;https://t.co/cvUPtEZhbS&lt;/a&gt; record? &lt;a href="https://t.co/r7A7rvBAnD"&gt;pic.twitter.com/r7A7rvBAnD&lt;/a&gt;&lt;/p&gt;— James Newton-King ♔ (@JamesNK) &lt;a href="https://twitter.com/JamesNK/status/1627309572087218177?ref_src=twsrc%5Etfw"&gt;February 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="tracking-publish.net-assemblies-in-webcil-files-issue-80807-dotnetruntime"&gt;[tracking] Publish .NET assemblies in Webcil files · Issue #80807 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/80807"&gt;https://github.com/dotnet/runtime/issues/80807&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-in.net-8-preview-1-wip-issue-8133-dotnetcore"&gt;What's new in .NET 8 Preview 1 [WIP] · Issue #8133 · dotnet/core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/issues/8133"&gt;https://github.com/dotnet/core/issues/8133&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-02-18: Avalonia XPF, Rider 2023.1 EAP 4, ReSharper 2023.1 EAP 5, Search By Target Framework on NuGet.org</title>
			<link>/2023/02/18/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/02/18/updates</guid>
			<pubDate>Sat, 18 Feb 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="avalonia-ui-xpf"&gt;Avalonia UI - XPF&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/XPF"&gt;https://avaloniaui.net/XPF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux や macOS など Windows 以外の環境で既存の WPF アプリケーションを動かすためのクロスプラットフォーム商用ソリューション。&lt;/p&gt;
&lt;p&gt;.NET 6 向けの WPF アプリケーションを書き直すことなく Linux や macOS 上で動かすための互換ライブラリー。サードパーティーコンポーネントなどもサポートする。&lt;/p&gt;
&lt;p&gt;エンタープライズ向けのソリューションという位置づけのため Avalonia UI と異なり商用ライセンスのみの提供となる。OSS プロジェクトでは Avalonia UI などへの移行が推奨されている。&lt;/p&gt;
&lt;!-- https://twitter.com/avaloniaui/status/1625042505606615040?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Unleash the full potential of your existing WPF apps with our cross-platform UI framework, enabling WPF apps to run on macOS and Linux without requiring expensive and risky rewrites. &lt;br&gt;&lt;br&gt;Learn more and apply for the private beta: &lt;a href="https://t.co/B8Q6ELEe35"&gt;https://t.co/B8Q6ELEe35&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/wpf?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#wpf&lt;/a&gt; &lt;a href="https://t.co/lNdT0SEJEm"&gt;pic.twitter.com/lNdT0SEJEm&lt;/a&gt;&lt;/p&gt;&amp;mdash; Avalonia UI (&amp;#64;AvaloniaUI) &lt;a href="https://twitter.com/AvaloniaUI/status/1625042505606615040?ref_src=twsrc%5Etfw"&gt;February 13, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="rider-2023.1-eap-4-is-here-the.net-tools-blog"&gt;Rider 2023.1 EAP 4 Is Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/13/rider-2023-1-eap-4/"&gt;https://blog.jetbrains.com/dotnet/2023/02/13/rider-2023-1-eap-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.1 EAP 4 がリリースされた。&lt;/p&gt;
&lt;p&gt;IDE のズームのサポート、WASM アプリケーションのスタートアップのデバッグ、Astro サポートの追加、Angular サポートの向上、Vue テンプレートでの TypeScript サポートといった改善が含まれる。&lt;/p&gt;
&lt;h3 id="resharper-2023.1-eap-5-is-out-now-the.net-tools-blog"&gt;ReSharper 2023.1 EAP 5 Is Out Now! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/17/resharper-2023-1-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2023/02/17/resharper-2023-1-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.1 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは非アクティブなプリプロセッサー分岐の再フォーマット、名前変更リファクタリングの改善、スタンドアローン dotTrace の macOS, Linux の x64 および ARM64 のサポート。&lt;/p&gt;
&lt;h3 id="introducing-search-by-target-framework-on-nuget.org"&gt;Introducing Search By Target Framework on NuGet.org&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/"&gt;https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet.org での検索でターゲットフレームワークによる絞り込みが可能となった。&lt;/p&gt;
&lt;p&gt;&amp;quot;.NET&amp;quot; を選択した場合は net5.0 から net7.0 までが対象となり、必要に応じて net7.0 などでも絞り込むことが可能。ただし、これはターゲットフレームワークでの絞り込みのため net7.0 を指定したときに .NET 7 ランタイムがサポートしているもの、という意味ではなくライブラリーの TargetFrameworks に含まれているかどうかであることに注意が必要。&lt;/p&gt;
&lt;h3 id="apple-m1-m2tm-mac-windows-11-microsoft"&gt;Apple® M1® および M2™ チップを搭載した Mac® コンピューターでWindows 11を使用するためのオプション - Microsoft サポート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://support.microsoft.com/ja-jp/windows/apple-m1-%E3%81%8A%E3%82%88%E3%81%B3-m2-%E3%83%81%E3%83%83%E3%83%97%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F-mac-%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%A7windows-11%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3-cd15fd62-9b34-4b78-b0bc-121baa3c568c"&gt;https://support.microsoft.com/ja-jp/windows/apple-m1-%E3%81%8A%E3%82%88%E3%81%B3-m2-%E3%83%81%E3%83%83%E3%83%97%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F-mac-%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%A7windows-11%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3-cd15fd62-9b34-4b78-b0bc-121baa3c568c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Parallels Desktop for Mac での Arm 版 Windows 11 Pro および Enterprise の動作が Microsoft 公式に認められた。&lt;/p&gt;
&lt;p&gt;Nested Virtualization に依存する WSL や Windows Subsystem for Android、Windows Sandbox や仮想化ベースのセキュリティーはサポートされない。また32bit版 Arm アプリケーションの動作もサポートされない(これは Windows においても非推奨となる)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parallels.com/blogs/windows-11-arm-apple-m-series/"&gt;Run Windows 11 on Arm with Parallels Desktop for Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://twitter.com/parallels/status/1626282270356111362?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;IT leaders, the ultimate solution is here! 🎉 With &lt;a href="https://twitter.com/hashtag/ParallelsDesktop?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#ParallelsDesktop&lt;/a&gt; authorized by &lt;a href="https://twitter.com/Microsoft?ref_src=twsrc%5Etfw"&gt;&amp;#64;Microsoft&lt;/a&gt;, you can now confidently support users who need to run Arm versions of &lt;a href="https://twitter.com/Windows?ref_src=twsrc%5Etfw"&gt;&amp;#64;Windows&lt;/a&gt; 11 on their Mac with &lt;a href="https://twitter.com/Apple?ref_src=twsrc%5Etfw"&gt;&amp;#64;Apple&lt;/a&gt; silicon. Learn more: &lt;a href="https://t.co/UuTaj8zjGP"&gt;https://t.co/UuTaj8zjGP&lt;/a&gt; &lt;a href="https://t.co/O87LK8fOks"&gt;pic.twitter.com/O87LK8fOks&lt;/a&gt;&lt;/p&gt;&amp;mdash; Parallels (&amp;#64;parallels) &lt;a href="https://twitter.com/parallels/status/1626282270356111362?ref_src=twsrc%5Etfw"&gt;February 16, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="reactiveproperty-v9.0.0"&gt;ReactiveProperty v9.0.0 をリリースしました&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/reactiveproperty-v9-0-0"&gt;https://zenn.dev/microsoft/articles/reactiveproperty-v9-0-0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReactiveProperty v9.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;パフォーマンス向上と System.Reactive に依存せず開発できる範囲の拡大や ReactiveCommandSlim、ValidatableReactiveProperty&amp;lt;T&amp;gt; といったクラスが追加された。&lt;/p&gt;
&lt;h3 id="c"&gt;(C#) オブジェクトの破棄の可否を型で制限する - ネコのために鐘は鳴る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ikorin2.hatenablog.jp/entry/2023/02/13/072121"&gt;https://ikorin2.hatenablog.jp/entry/2023/02/13/072121&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オブジェクトの破棄を明示できる型を作ることで、破棄の責任の所在を明らかにする方法について。&lt;/p&gt;
&lt;h3 id="net-7-pinvoke"&gt;[.NET 7] P/Invokeの落とし穴メモ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimat/articles/77c00c1f421a47"&gt;https://zenn.dev/shimat/articles/77c00c1f421a47&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;P/Invoke での裏側の処理による開放などの落とし穴について。&lt;/p&gt;
&lt;h3 id="c-12-params-spanparams-readonlyspan"&gt;【C# 12 候補】params Span、改め、params ReadOnlySpan&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/2/params-ros"&gt;https://ufcpp.net/blog/2023/2/params-ros&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で検討されている params (可変長引数) で配列以外を受ける仕様についての現状。&lt;/p&gt;
&lt;h3 id="omitting-async-await"&gt;Omitting async / await&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://guriysamarin.medium.com/omitting-async-await-723a04d8f56b"&gt;https://guriysamarin.medium.com/omitting-async-await-723a04d8f56b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;async/await を省略して Task を直接返すことが推奨されないことについて。&lt;/p&gt;
&lt;p&gt;スタックトレースの違いや AsyncLocal のリークなど。(ちなみに using による誤 Dispose という例もよくある)&lt;/p&gt;
&lt;h3 id="use-asp.net-core-and-react-with-vite.js"&gt;Use ASP.NET Core and React with Vite.js&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.codeinside.eu/2023/02/11/aspnet-core-react-with-vitejs/"&gt;https://blog.codeinside.eu/2023/02/11/aspnet-core-react-with-vitejs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションで React と Vite.js を使う方法について。&lt;/p&gt;
&lt;h3 id="cgettypebymetadataname-gettypesbymetadataname"&gt;【C#】GetTypeByMetadataName ではなく GetTypesByMetadataName を使った方が無難かもしれない。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/02/11/161723"&gt;https://blog.neno.dev/entry/2023/02/11/161723&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Roslyn で Compilation からメタデータ名で型を取得する際に &lt;code&gt;GetTypeByMetadataName&lt;/code&gt; で取得すると同名の方があった場合に期待通り取得できないので Roslyn 4.1 以降の &lt;code&gt;GetTypesByMetadataName&lt;/code&gt; を使用するほうがよいことについて。&lt;/p&gt;
&lt;h3 id="visual-studio-ai-assistance-a-developers-best-friend-visual-studio-blog"&gt;Visual Studio AI-Assistance: A Developer's Best Friend - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-ai-assistance-a-developers-best-friend/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-ai-assistance-a-developers-best-friend/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の IntelliCode が行っていることの紹介記事。&lt;/p&gt;
&lt;h3 id="determine-whether-two-date-ranges-overlap-in-c-code-maze"&gt;Determine Whether Two Date Ranges Overlap in C# - Code Maze&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code-maze.com/csharp-determine-whether-two-date-ranges-overlap/"&gt;https://code-maze.com/csharp-determine-whether-two-date-ranges-overlap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;二つの日付の範囲の重なり合いを比較する方法について。&lt;/p&gt;
&lt;h3 id="consul-in.net-a-service-mesh-solution-and-service-discovery-tool"&gt;Consul in .NET — A Service Mesh Solution And Service Discovery Tool&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;KeivanDamirchi/consul-in-net-a-service-mesh-solution-and-service-discovery-tool-eff18292c771"&gt;https://medium.com/&amp;#64;KeivanDamirchi/consul-in-net-a-service-mesh-solution-and-service-discovery-tool-eff18292c771&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で HashiCorp Consul を使用してサービスメッシュとサービスディスカバリーを実装する方法について。&lt;/p&gt;
&lt;h3 id="tips-tricks-on-upgrading-xamarin.ios-xamarin.android-to.net-for-ios-android-xamarin-blog"&gt;Tips &amp;amp; Tricks on Upgrading Xamarin.iOS &amp;amp; Xamarin.Android to .NET for iOS &amp;amp; Android - Xamarin Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/xamarin/upgrade-xamarin-ios-android-to-dotnet6-dotnet7/"&gt;https://devblogs.microsoft.com/xamarin/upgrade-xamarin-ios-android-to-dotnet6-dotnet7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Xamarin.iOS および Xamarin.Android から .NET for iOS &amp;amp; Android (.NET MAUI ではなくネイティブバインディング) へアップグレードする際のヒント。&lt;/p&gt;
&lt;h3 id="what-is.net-and-why-should-you-choose-it.net-blog"&gt;What is .NET, and why should you choose it? - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/why-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/why-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET とは何か、なぜ選択すると良いのか、開発者向けの .NET ランタイムを中心として紹介している記事。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://andrewlock.net/thoughts-on-what-is-dotnet-and-why-should-you-choose-it/"&gt;Thoughts on 'What is .NET, and why should you choose it?'&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="nuget-qiita"&gt;NuGetパッケージのバージョン依存関係の解決ルール - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/ZiYuCai1984/items/dbb069f5ade08d242acb"&gt;https://qiita.com/ZiYuCai1984/items/dbb069f5ade08d242acb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet パッケージの参照時のバージョンの解決ルールについて。&lt;/p&gt;
&lt;h3 id="getting-started-entity-framework-core-7-json-support-the.net-tools-blog"&gt;Getting Started: Entity Framework Core 7 JSON Support | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/14/getting-started-entity-framework-core-7-json-support/"&gt;https://blog.jetbrains.com/dotnet/2023/02/14/getting-started-entity-framework-core-7-json-support/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 7 で追加された JSON サポートの利用方法について。&lt;/p&gt;
&lt;h3 id="accelerating-ef-core-with-compiled-queries"&gt;Accelerating EF Core with Compiled Queries&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://woodruff.dev/accelerating-ef-core-with-compiled-queries/"&gt;https://woodruff.dev/accelerating-ef-core-with-compiled-queries/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core のコンパイル済みクエリーについて。&lt;/p&gt;
&lt;h3 id="net-blazorradzen-qiita"&gt;.NET Blazor＋Radzen を使ってみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tinymouse/items/01b1bc4a74429ddc0b17"&gt;https://qiita.com/tinymouse/items/01b1bc4a74429ddc0b17&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor 向けの UI コンポーネントライブラリー Radzen を使用する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;新しい Bing の AI チャットは SignalR を使用しているという話。&lt;/p&gt;
&lt;!-- https://twitter.com/davidfowl/status/1626097506286436352?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Got access to the new bing and I looked to see how they implemented the chat. It&amp;#39;s using &lt;a href="https://twitter.com/hashtag/signalr?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#signalr&lt;/a&gt; 😍😍😍 &lt;a href="https://t.co/nAyEndNMUq"&gt;pic.twitter.com/nAyEndNMUq&lt;/a&gt;&lt;/p&gt;&amp;mdash; hachyderm.io/&amp;#64;davidfowl (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1626097506286436352?ref_src=twsrc%5Etfw"&gt;February 16, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="blazor-united-issue-46636-dotnetaspnetcore"&gt;Blazor United · Issue #46636 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/46636"&gt;https://github.com/dotnet/aspnetcore/issues/46636&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 に向けて開発されている Blazor United の Issue。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-02-11: .NET language strategy, Windows App SDK 1.3 Experimental-1, Rider EAP 日本語言語パック</title>
			<link>/2023/02/11/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/02/11/updates</guid>
			<pubDate>Sat, 11 Feb 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="update-to-the.net-language-strategy.net-blog"&gt;Update to the .NET language strategy - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/update-to-the-dotnet-language-strategy/"&gt;https://devblogs.microsoft.com/dotnet/update-to-the-dotnet-language-strategy/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET での言語に対する(Microsoftの)戦略のアップデートについて。&lt;/p&gt;
&lt;p&gt;.NET では現在主要な言語として C#、F#、Visual Basic の3つがあり、それぞれへの Microsoft の戦略に関してのドキュメントがアップデートされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/ja-jp/dotnet/fundamentals/languages"&gt;.NET マネージド言語の戦略 - .NET | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="version-1.3-experimental-1.3.0-experimental1-experimental-release-channel-for-the-windows-app-sdk-windows-apps-microsoft-learn"&gt;Version 1.3 Experimental (1.3.0-experimental1) | Experimental release channel for the Windows App SDK - Windows apps | Microsoft Learn&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/experimental-channel#version-13-experimental-130-experimental1"&gt;https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/experimental-channel#version-13-experimental-130-experimental1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.3 Experimental-1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは XAML Backdrop API (ウィンドウ背景への Mica の適用など)、アプリウィンドウにアクセスするための Window.AppWindow API などいくつかの新機能が導入されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3-exp1"&gt;Release v1.3-experimental1 · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rider-eap-the.net-tools-blog"&gt;Rider EAP 版で日本語言語パック対応を開始 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/ja/dotnet/2023/02/07/introducing-the-rider-localization-eap-for-japanese/"&gt;https://blog.jetbrains.com/ja/dotnet/2023/02/07/introducing-the-rider-localization-eap-for-japanese/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider 2023.1 EAP3 で日本語および中国語、韓国語のローカライズを行う言語パックを利用できるようになった。&lt;/p&gt;
&lt;p&gt;一部のローカライズは現在進行中であり、フィードバックも IDE や YouTrack で受け付けているとのこと。また今後の目標に ReSharper のローカライズもあるとしている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/06/introducing-the-rider-localization-eap-for-chinese-japanese-and-korean/"&gt;Introducing the Rider Localization EAP for Chinese, Japanese, and Korean | The .NET Tools Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="resharper-ending-development-for-visual-studio-2010-and-2012-the.net-tools-blog"&gt;ReSharper Ending Development for Visual Studio 2010 and 2012 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/10/ending-development-for-vs-2010-2012/"&gt;https://blog.jetbrains.com/dotnet/2023/02/10/ending-development-for-vs-2010-2012/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.1 以降では Visual Studio 2010 および 2012 の積極的なサポートを終了するアナウンス。&lt;/p&gt;
&lt;p&gt;インストーラーの統合オプションは維持されるためすぐに利用できなくなるわけではないものの、機能の保証やサポート優先度が低くなる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="qiita"&gt;画像分類アプリケーションを速攻で作っていく過程 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SoeAtsu/items/4d22493c5dc8367162db"&gt;https://qiita.com/SoeAtsu/items/4d22493c5dc8367162db&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF と ML.NET で画像を認識して分類するアプリケーションを作ってみるという記事。&lt;/p&gt;
&lt;h3 id="specflow-cucumber-in-c"&gt;SpecFlow — Cucumber in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://daniel-delimata.medium.com/specflow-cucumber-in-c-e642c63469b2"&gt;https://daniel-delimata.medium.com/specflow-cucumber-in-c-e642c63469b2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET における Cucumber である SpecFlow を使って、Web アプリケーションのテストを行う方法について。&lt;/p&gt;
&lt;h3 id="generating-the-response-writing-expression-for-requestdelegate-behind-the-scenes-of-minimal-apis-part-6"&gt;Generating the response writing expression for RequestDelegate: Behind the scenes of minimal APIs - Part 6&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-6-generating-the-response-writing-expression/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-6-generating-the-response-writing-expression/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Minimal API の裏側を開設するシリーズの RequestDelegate がレスポンスを出力する式 (Expression) を生成する流れについて。&lt;/p&gt;
&lt;h3 id="blazor"&gt;Blazor でバリデーション ロジックを部品化したい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/viewside-validation"&gt;https://zenn.dev/microsoft/articles/viewside-validation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor でのカスタム検証ロジックをコンポーネントの形にして部品化する方法について。&lt;/p&gt;
&lt;h3 id="blazorvalidationsummaryasp-validation-summary"&gt;BlazorのValidationSummaryでasp-validation-summaryのように表示エラーメッセージを絞り込みたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/blazor-validationsummary-tips"&gt;https://zenn.dev/microsoft/articles/blazor-validationsummary-tips&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ValidationSummary コンポーネントですべてのプロパティーではなく、特定のモデルに関するエラーのみ表示する方法について。&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-february-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | February 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/08/net-annotated-monthly-february-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/02/08/net-annotated-monthly-february-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 関連の2023年2月のまとめ記事。&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;C#サーバーでプロファイルを取る方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Shaula/items/177e8c16ec9b8b102c7a"&gt;https://qiita.com/Shaula/items/177e8c16ec9b8b102c7a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コンテナーなどサーバーで動作している .NET アプリケーションのトレースを dotnet-trace を使用して取得する方法について。&lt;/p&gt;
&lt;h3 id="netibm-idb-qiita"&gt;.NETでIBM iのDBをつついてみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tom_m_m/items/9481e8b619463ab9c20f"&gt;https://qiita.com/tom_m_m/items/9481e8b619463ab9c20f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IBM i (ppc64le アーキテクチャー) で.NET アプリケーションから Db2 データベースに アクセスしてみたという記事。&lt;/p&gt;
&lt;h3 id="c-tip-do-not-use-nameof-to-give-constants-a-value-code4it"&gt;C# Tip: do NOT use nameof to give constants a value - Code4IT&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.code4it.dev/csharptips/do-not-use-nameof-for-constants"&gt;https://www.code4it.dev/csharptips/do-not-use-nameof-for-constants&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nameof&lt;/code&gt; で定数名を定数として使用してさらにそれをテーブル名などに使うと、うっかりコードを変更したときに壊れるのでお勧めしないという意見。&lt;/p&gt;
&lt;h3 id="generating-sample-data-with-bogus"&gt;Generating Sample Data with Bogus&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://wildermuth.com/2023/01/29/generating-sample-data-with-bogus/"&gt;https://wildermuth.com/2023/01/29/generating-sample-data-with-bogus/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bogus を使用してダミーデータを生成する方法について。&lt;/p&gt;
&lt;h3 id="async-void-how-to-tame-the-asynchronous-nightmare-dev-leader"&gt;async void – How to Tame the Asynchronous Nightmare - Dev Leader&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.devleader.ca/2023/01/27/async-void-how-to-tame-the-asynchronous-nightmare/"&gt;https://www.devleader.ca/2023/01/27/async-void-how-to-tame-the-asynchronous-nightmare/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;async void の問題とイベントハンドラーなどで使う際にも何とかして例外をキャッチするための方法について。&lt;/p&gt;
&lt;h3 id="must-follow-c-rules-no-exceptions"&gt;Must follow C rules, no exceptions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ericsink.com/native_aot/no_exceptions.html"&gt;https://ericsink.com/native_aot/no_exceptions.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NativeAOT でネイティブから呼び出されるメソッドでは例外を投げてはいけないということについて。&lt;/p&gt;
&lt;h3 id="use-visual-studio-dev-tunnels-to-handle-twilio-webhooks"&gt;Use Visual Studio dev tunnels to handle Twilio Webhooks&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/twilio/use-visual-studio-dev-tunnels-to-handle-twilio-webhooks-58dc"&gt;https://dev.to/twilio/use-visual-studio-dev-tunnels-to-handle-twilio-webhooks-58dc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の dev tunnel を使用して Twilio の Webhook を処理する手順について。&lt;/p&gt;
&lt;h3 id="the-cost-of-timing-out"&gt;The cost of timing out&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/198977-B/the-cost-of-timing-out"&gt;https://ayende.com/blog/198977-B/the-cost-of-timing-out&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;同時実行数の多いような環境ではタイムアウトのために CancellationToken.CancelAfter を呼び出すことで Timer のセットが大量に発生してしまうことについて。&lt;/p&gt;
&lt;p&gt;RavenDB では定期的なタイマーを持ってまとめて処理する方法をとることでコストを下げるようにしている。&lt;/p&gt;
&lt;h3 id="without-blazor-webassembly-develop-a-web-site-that-compiles-and-runs-c-code-on-browser"&gt;Without Blazor WebAssembly, develop a web site that compiles and runs C# code on browser&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://yangzhongke8.medium.com/without-blazor-webassembly-develop-a-web-site-that-compiles-and-runs-c-code-on-browser-c381873f6d03"&gt;https://yangzhongke8.medium.com/without-blazor-webassembly-develop-a-web-site-that-compiles-and-runs-c-code-on-browser-c381873f6d03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor WebAssembly の Blazor 部分を使用せず WebAssembly でビルドした C# のコードを JavaScript から呼び出す方法について。&lt;/p&gt;
&lt;h3 id="performance-testing-sync-over-async-scenarios"&gt;Performance Testing Sync-Over-Async Scenarios&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://wapplegate.com/performance-testing/"&gt;https://wapplegate.com/performance-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;非同期メソッドを同期的に待機する、いわゆる Sync-over-Async のパフォーマンスについて。&lt;/p&gt;
&lt;p&gt;いくつかのコードシナリオとそれに対する並列リクエスト数によるレイテンシーや RPS といった結果をまとめている。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="drasticactionsmauifeed-a-cross-platform.net-feed-reader"&gt;drasticactions/MauiFeed: A cross-platform .NET Feed Reader&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/MauiFeed"&gt;https://github.com/drasticactions/MauiFeed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI で実装されたフィードリーダー。&lt;/p&gt;
&lt;p&gt;Windows 向けのビルドが Microsoft Store からインストール可能となっている。&lt;/p&gt;
&lt;!-- https://twitter.com/drasticactions/status/1623316613457125376?s=12&amp;t=gS3pxRchPWdyS6cXghIATQ --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;MauiFeedはMicrosoft Storeにて無料でリリースしました！🎉🎉🎉&lt;a href="https://t.co/VyPvvwY12X"&gt;https://t.co/VyPvvwY12X&lt;/a&gt; &lt;a href="https://t.co/OXGW4ZdG9N"&gt;pic.twitter.com/OXGW4ZdG9N&lt;/a&gt;&lt;/p&gt;&amp;mdash; Drastic Actions (&amp;#64;drasticactions) &lt;a href="https://twitter.com/drasticactions/status/1623316613457125376?ref_src=twsrc%5Etfw"&gt;February 8, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="forneverxaml-math-a-collection-of.net-libraries-for-rendering-mathematical-formulae-using-the-latex-typesetting-style-for-the-wpf-and-avalonia-xaml-based-frameworks"&gt;ForNeVeR/xaml-math: A collection of .NET libraries for rendering mathematical formulae using the LaTeX typesetting style, for the WPF and Avalonia XAML-based frameworks&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ForNeVeR/xaml-math"&gt;https://github.com/ForNeVeR/xaml-math&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF と Avalonia で使用できる LaTeX スタイルの数式表示を行うライブラリー。&lt;/p&gt;
&lt;!-- https://twitter.com/fvnever/status/1622750145958887424?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I&amp;#39;m not usually cross-posting from Mastodon these days, but this is big news.&lt;br&gt;&lt;br&gt;I have just released the version 1.0.0 of XAML-Math, a &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; library for &lt;a href="https://twitter.com/hashtag/TeXLaTeX?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#TeXLaTeX&lt;/a&gt; formula rendering in &lt;a href="https://twitter.com/hashtag/WPF?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#WPF&lt;/a&gt; and &lt;a href="https://twitter.com/hashtag/Avalonia?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Avalonia&lt;/a&gt;.&lt;a href="https://t.co/ZkJ7Dkbmoz"&gt;https://t.co/ZkJ7Dkbmoz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dr. Friedrich von Never (&amp;#64;fvnever) &lt;a href="https://twitter.com/fvnever/status/1622750145958887424?ref_src=twsrc%5Etfw"&gt;February 7, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="legoasyncapi.net-the-asyncapi.net-sdk-contains-a-useful-object-model-for-asyncapi-documents-in.net"&gt;LEGO/AsyncAPI.NET: The AsyncAPI.NET SDK contains a useful object model for AsyncAPI documents in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/LEGO/AsyncAPI.NET/"&gt;https://github.com/LEGO/AsyncAPI.NET/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AsyncAPI (OpenAPI のイベント駆動 API 版) のドキュメントを読み込むためのライブラリー。&lt;/p&gt;
&lt;!-- https://twitter.com/legoengineering/status/1623255496030388227?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Exciting news! 🚀 Our &lt;a href="https://t.co/xbstInJQkL"&gt;https://t.co/xbstInJQkL&lt;/a&gt; project has just gone &lt;a href="https://twitter.com/hashtag/opensource?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#opensource&lt;/a&gt;. The library seeks to become the standard in how to read and write &lt;a href="https://twitter.com/hashtag/asyncapi?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#asyncapi&lt;/a&gt; specifications, within the dotnet ecosystem.&lt;br&gt;Get started today and join the community over at &lt;a href="https://t.co/fd19qxVcaB"&gt;https://t.co/fd19qxVcaB&lt;/a&gt;&lt;/p&gt;&amp;mdash; LEGO Engineering (&amp;#64;LEGOEngineering) &lt;a href="https://twitter.com/LEGOEngineering/status/1623255496030388227?ref_src=twsrc%5Etfw"&gt;February 8, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="wip-asp.net-core-roadmap-for.net-8-issue-44984-dotnetaspnetcore"&gt;[WIP] ASP.NET Core Roadmap for .NET 8 · Issue #44984 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/44984"&gt;https://github.com/dotnet/aspnetcore/issues/44984&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core のロードマップ的な Issue。&lt;/p&gt;
&lt;h3 id="excessive-allocations-in-httpcontent.readasbytearrayasync-issue-81628-dotnetruntime"&gt;Excessive allocations in HttpContent.ReadAsByteArrayAsync · Issue #81628 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/81628"&gt;https://github.com/dotnet/runtime/issues/81628&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HttpContent.ReadAsByteArrayAsync()&lt;/code&gt; は &lt;code&gt;HttpClient.GetByteArrayAsync()&lt;/code&gt; に比べて4倍アロケーションがあって多すぎではないかという話。&lt;/p&gt;
&lt;p&gt;そもそも &lt;code&gt;HttpContent.ReadAsByteArrayAsync()&lt;/code&gt; は何度も読み込めるようにする都合バッファリングしたりコピーしたりが発生しているので、現状それを避けるのであれば Stream で読みだすべき、など。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-02-04: MySqlConnector 2.3.0 Beta 1, Visual Studio Code January 2023, ReSharper &amp; Rider 2023.1 EAP 3</title>
			<link>/2023/02/04/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/02/04/updates</guid>
			<pubDate>Sat, 04 Feb 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;p&gt;今回はリンク URL の紹介のみとなっています。&lt;/p&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-2.3.0-beta-1-mysql-netmysqlconnector"&gt;Release 2.3.0 Beta 1 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.0-beta.1"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.0-beta.1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-code-january-2023"&gt;Visual Studio Code January 2023&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com/updates/v1_75"&gt;https://code.visualstudio.com/updates/v1_75&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.1-eap-3-is-here-the.net-tools-blog"&gt;ReSharper 2023.1 EAP 3 Is Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/03/resharper-2023-1-eap-3/"&gt;https://blog.jetbrains.com/dotnet/2023/02/03/resharper-2023-1-eap-3/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.1-eap-3-is-available-with-docker-and-structure-view-improvements-and-a-localization-preview-the.net-tools-blog"&gt;Rider 2023.1 EAP 3 is Available With Docker and Structure View Improvements and a Localization Preview | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/03/rider-2023-1-eap-3/"&gt;https://blog.jetbrains.com/dotnet/2023/02/03/rider-2023-1-eap-3/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-7.0.59-service-release-3-dotnetmaui"&gt;Release 7.0.59 Service Release 3 · dotnet/maui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/maui/releases/tag/7.0.59"&gt;https://github.com/dotnet/maui/releases/tag/7.0.59&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c-12-c-c"&gt;【C# 12 候補】コレクション リテラル | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/1/collection-literal"&gt;https://ufcpp.net/blog/2023/1/collection-literal&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor"&gt;Blazor でバリデーション ロジックを部品化したい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/okazuki/articles/viewside-validation"&gt;https://zenn.dev/okazuki/articles/viewside-validation&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazorvalidationsummaryasp-validation-summary"&gt;BlazorのValidationSummaryでasp-validation-summaryのように表示エラーメッセージを絞り込みたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/okazuki/articles/blazor-validationsummary-tips"&gt;https://zenn.dev/okazuki/articles/blazor-validationsummary-tips&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="signalr"&gt;SignalR を使ったアプリケーション開発をより快適に！&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/nenonaninu/signalr-woshi-tutaapurikesiyonkai-fa-woyorikuai-shi-ni"&gt;https://speakerdeck.com/nenonaninu/signalr-woshi-tutaapurikesiyonkai-fa-woyorikuai-shi-ni&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c3-qiita"&gt;C#初心者による初心者のためのオススメ勉強サイト3選レビュー - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/YouKnow/items/34a24351991c6744b691"&gt;https://qiita.com/YouKnow/items/34a24351991c6744b691&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="redis-university-ru102n-redis-for.net-developers"&gt;Redis University RU102N: Redis for .NET Developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/slorello/redis-university-ru102n-redis-for-net-developers-30om"&gt;https://dev.to/slorello/redis-university-ru102n-redis-for-net-developers-30om&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mapping-asp.net-core-minimal-api-endpoints-with-c-source-generators"&gt;Mapping ASP.NET Core minimal API endpoints with C# source generators&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/joaofbantunes/mapping-aspnet-core-minimal-api-endpoints-with-c-source-generators-3faj"&gt;https://dev.to/joaofbantunes/mapping-aspnet-core-minimal-api-endpoints-with-c-source-generators-3faj&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="play-audio-and-video-in.net-maui-apps-with-the-new-mediaelement"&gt;Play Audio and Video in .NET MAUI apps with the new MediaElement&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-communitytoolkit-mediaelement/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-communitytoolkit-mediaelement/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c"&gt;C#でコンソール出力時の文字エンコーディングを制御する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/oyasumi731/articles/26309b705704cc"&gt;https://zenn.dev/oyasumi731/articles/26309b705704cc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="generating-argument-expressions-for-minimal-apis-continued-behind-the-scenes-of-minimal-apis-part-5"&gt;Generating argument expressions for minimal APIs (continued): Behind the scenes of minimal APIs - Part 5&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-5-generating-argument-expressions-for-minimal-apis-continuted/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-5-generating-argument-expressions-for-minimal-apis-continuted/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="bloom-filters"&gt;Bloom Filters&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;marcioalthmann/bloom-filters-8dde17bc7ee6"&gt;https://medium.com/&amp;#64;marcioalthmann/bloom-filters-8dde17bc7ee6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="integration-testing-with-respawn-in-asp.net-core"&gt;Integration testing with Respawn in ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;niko.kantaria/integration-testing-with-respawn-in-asp-net-core-6de63dcfc7ba"&gt;https://medium.com/&amp;#64;niko.kantaria/integration-testing-with-respawn-in-asp-net-core-6de63dcfc7ba&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="basic-windows-machine-hardware-information-from-wmi-for-exception-logging-from.net"&gt;Basic Windows Machine Hardware information from WMI for Exception Logging from .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2023/Feb/02/Basic-Windows-Machine-Hardware-information-from-WMI-for-Exception-Logging-from-NET"&gt;https://weblog.west-wind.com/posts/2023/Feb/02/Basic-Windows-Machine-Hardware-information-from-WMI-for-Exception-Logging-from-NET&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="sql-server-computed-columns-with-ef-core"&gt;SQL-Server: Computed columns with Ef Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/sql-server-computed-columns-with-ef-core-3h8d"&gt;https://dev.to/karenpayneoregon/sql-server-computed-columns-with-ef-core-3h8d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dapper-qiita"&gt;個人的に使っているDapper の使うときの小技とか - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mania3bb2007/items/3319279676ff820998cb"&gt;https://qiita.com/mania3bb2007/items/3319279676ff820998cb&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-appsettings.json-qiita"&gt;【.NET】設定ファイル(例 appsettings.json)をクラスにマッピングする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/3c0de1341e6c96cc1afa"&gt;https://qiita.com/yaju/items/3c0de1341e6c96cc1afa&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="static-and-non-static-interface-member-calls-in.net-they-are-not-the-same"&gt;Static and non-static interface member calls in .NET: they are not the same&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ocoanet/static-and-non-static-interface-member-calls-in-net-they-are-not-the-same-b22bf2d00ae5"&gt;https://medium.com/&amp;#64;ocoanet/static-and-non-static-interface-member-calls-in-net-they-are-not-the-same-b22bf2d00ae5&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharpsimdlinq-drop-in-replacement-of-linq-aggregation-operations-extremely-faster-with-simd"&gt;Cysharp/SimdLinq: Drop-in replacement of LINQ aggregation operations extremely faster with SIMD.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/SimdLinq/"&gt;https://github.com/Cysharp/SimdLinq/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neue.cc/2023/01/30-SimdLinq.html"&gt;neue cc - SimdLinq - LINQをそのままSIMD対応して超高速化するライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="jjconsultingjjmasterdata-jjmasterdata-is-an-open-source.net-library-to-help-you-create-cruds-at-runtime-quickly-from-data-dictionaries-metadata"&gt;JJConsulting/JJMasterData: JJMasterData is an open-source .NET library to help you create CRUDs at runtime quickly from data dictionaries (metadata).&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jjconsulting/JJMasterData"&gt;https://github.com/jjconsulting/JJMasterData&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/gumbarros/jjmasterdata-a-net-library-to-generate-cruds-from-database-metadata-at-runtime-3d5b"&gt;JJMasterData - A .NET library to generate CRUDs from database metadata at runtime.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/egorbo/status/1619448596360994816?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;🎉Roslyn team has just merged &amp;quot;faster switch over string literals&amp;quot; optimization - &lt;a href="https://t.co/kIBIfjBIXp"&gt;https://t.co/kIBIfjBIXp&lt;/a&gt; Here is a quick explanation: &lt;a href="https://t.co/EnN8snC3sN"&gt;pic.twitter.com/EnN8snC3sN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1619448596360994816?ref_src=twsrc%5Etfw"&gt;January 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="enable-support-for-nativeaot-targeting-ios-via-opt-in-feature-issue-80905-dotnetruntime"&gt;Enable support for NativeAOT targeting iOS via opt-in feature · Issue #80905 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/80905"&gt;https://github.com/dotnet/runtime/issues/80905&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://twitter.com/austinwise/status/1619228434680680448?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;With much guidance from from &lt;a href="https://twitter.com/JanKotas7?ref_src=twsrc%5Etfw"&gt;&amp;#64;JanKotas7&lt;/a&gt; , &lt;a href="https://twitter.com/MStrehovsky?ref_src=twsrc%5Etfw"&gt;&amp;#64;MStrehovsky&lt;/a&gt; , and &lt;a href="https://twitter.com/v_sadov?ref_src=twsrc%5Etfw"&gt;&amp;#64;v_sadov&lt;/a&gt;, I ported the Objective-C Marshal API to NativeAOT:&lt;a href="https://t.co/Ay1n51hnjN"&gt;https://t.co/Ay1n51hnjN&lt;/a&gt;&lt;br&gt;I&amp;#39;m pleasantly surprised to see it may be part of experimental NativeAOT iOS support in .NET 8:&lt;a href="https://t.co/DlRYJS1erx"&gt;https://t.co/DlRYJS1erx&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;/p&gt;&amp;mdash; Austin Wise (&amp;#64;AustinWise) &lt;a href="https://twitter.com/AustinWise/status/1619228434680680448?ref_src=twsrc%5Etfw"&gt;January 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-01-28: Key Trends for C#, Microsoft.Data.SqlClient 5.1.0, Uno Platform 4.7</title>
			<link>/2023/01/28/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/01/28/updates</guid>
			<pubDate>Sat, 28 Jan 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="the-developer-ecosystem-in-2022-key-trends-for-c-the.net-tools-blog"&gt;The Developer Ecosystem in 2022: Key Trends for C# | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/26/the-developer-ecosystem-in-2022-key-trends-for-c/"&gt;https://blog.jetbrains.com/dotnet/2023/01/26/the-developer-ecosystem-in-2022-key-trends-for-c/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による2022年の開発者エコシステムでの C# の主なトレンドの調査。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C# のバージョン&lt;/li&gt;
&lt;li&gt;開発対象の分野&lt;/li&gt;
&lt;li&gt;使用しているランタイムのバージョン&lt;/li&gt;
&lt;li&gt;使用している IDE やエディター&lt;/li&gt;
&lt;li&gt;Visual Studio / Visual Studio Code でのプラグイン&lt;/li&gt;
&lt;li&gt;ユニットテストに使用しているフレームワーク&lt;/li&gt;
&lt;li&gt;プロファイラーや診断ツールを使用する頻度&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-the-git-status-bar-and-testing-improvements-in-visual-studio-for-mac-17.5-visual-studio-blog"&gt;Introducing the Git Status Bar and Testing Improvements in Visual Studio for Mac 17.5 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-the-git-status-bar-and-testing-improvements-in-visual-studio-for-mac-17-5/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-the-git-status-bar-and-testing-improvements-in-visual-studio-for-mac-17-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio for Mac 17.5 Preview 3 での Git ステータスバーとテスト関連の機能の改善について。&lt;/p&gt;
&lt;p&gt;ステータスバーから Git のブランチを確認変更するといった機能が追加されている。&lt;/p&gt;
&lt;h3 id="release-stable-release-v5.1.0-dotnetsqlclient"&gt;Release Stable Release v5.1.0 · dotnet/SqlClient&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/SqlClient/releases/tag/v5.1.0"&gt;https://github.com/dotnet/SqlClient/releases/tag/v5.1.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Data.SqlClient 5.1.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは TimeOnly, DateOnly を含む .NET 6 のサポート、SQL Server 2022 の TDS8 と TLS 1.3 のサポート、ARM64 .NET Framework のサポート、.NET Core 3.1 のサポートの削除などが含まれている。&lt;/p&gt;
&lt;!-- https://twitter.com/erikej/status/1616190245715775502?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Version 5.1 of &lt;a href="https://t.co/lkm75UGvzO"&gt;https://t.co/lkm75UGvzO&lt;/a&gt;.SqlClient is finally here with full support for SQL Server 2022 TDS8 protocol and TLS 1.3 - also adds support for DateOnly and TimeOnly with .NET 6&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/sqlserver?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#sqlserver&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/AzureSQL?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#AzureSQL&lt;/a&gt; &lt;a href="https://t.co/nvb1bhSKMN"&gt;https://t.co/nvb1bhSKMN&lt;/a&gt;&lt;/p&gt;&amp;mdash; ErikEJ (&amp;#64;ErikEJ) &lt;a href="https://twitter.com/ErikEJ/status/1616190245715775502?ref_src=twsrc%5Etfw"&gt;January 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="uno-platform-4.7-new-project-template-performance-improvements-and-more"&gt;Uno Platform 4.7 – New Project Template, Performance Improvements and more&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/uno-platform-4-7-new-project-template-performance-improvements-and-more/"&gt;https://platform.uno/blog/uno-platform-4-7-new-project-template-performance-improvements-and-more/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 4.7 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは新しいプロジェクトテンプレート、フォントの共有、WebAssembly や NativeAOT、Android などでのパフォーマンスの改善が行われた。&lt;/p&gt;
&lt;h3 id="release-v7.0.1-npgsqlnpgsql"&gt;Release v7.0.1 · npgsql/npgsql&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v7.0.1"&gt;https://github.com/npgsql/npgsql/releases/tag/v7.0.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Npgsql 7.0.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではデッドロックやなどいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="release-v1.2.3-microsoftwindowsappsdk"&gt;Release v1.2.3 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.3"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.2.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは複数のウィンドウを閉じた際にクラッシュする問題などいくつかの問題が修正されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/stable-channel#version-123-12230118102"&gt;バージョン 1.2.3 (1.2.230118.102) - Windows App SDK の安定チャネルのリリース ノート - Windows apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="resharper-tools-and-rider-2022.3.2-bug-fix-updates-have-arrived-the.net-tools-blog"&gt;ReSharper Tools and Rider 2022.3.2 Bug-fix Updates Have Arrived! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/27/resharper-rider-2022-3-2/"&gt;https://blog.jetbrains.com/dotnet/2023/01/27/resharper-rider-2022-3-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2022.3.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;それぞれ ASP.NET Core プロジェクトでクラッシュする問題や誤ってエラーとなってしまう問題などが修正されている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="memorypack-yucchiys-note"&gt;MemoryPackで独自のバージョニングを行う | Yucchiy's Note&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.yucchiy.com/2023/01/memorypack-custom-versioning/"&gt;https://blog.yucchiy.com/2023/01/memorypack-custom-versioning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MemoryPack のシリアライズ時に追加の情報を埋め込むことで独自のバージョニングを実現する方法について。&lt;/p&gt;
&lt;h3 id="using-command-binding-in-windows-forms-apps-to-go-cross-platform.net-blog"&gt;Using Command Binding in Windows Forms apps to go Cross-Platform - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/winforms-cross-platform-dotnet-maui-command-binding/"&gt;https://devblogs.microsoft.com/dotnet/winforms-cross-platform-dotnet-maui-command-binding/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 の Windows Forms で可能となったコマンドバインディングを使用して MVVM パターンを実現し、.NET MAUI とのコードの共有を試みることについて。&lt;/p&gt;
&lt;h3 id="generating-argument-expressions-for-minimal-apis-behind-the-scenes-of-minimal-apis-part-4"&gt;Generating argument expressions for minimal APIs: Behind the scenes of minimal APIs - Part 4&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-4-generating-argument-expressions-for-minimal-apis/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-4-generating-argument-expressions-for-minimal-apis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Minimal APIs の裏側でハンドラーの引数の式ツリーの構築やオプショナルな引数の取り扱いなどについての解説。&lt;/p&gt;
&lt;h3 id="wpfwinforms"&gt;WPFとWinFormsを汎用ホストに簡易に組み込む&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nin_neko/articles/292f8a6f0d7ee4"&gt;https://zenn.dev/nin_neko/articles/292f8a6f0d7ee4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF と Windows Forms アプリケーションで Generic Host を使用する方法について。&lt;/p&gt;
&lt;h3 id="c-visual-studio"&gt;[C#] Visual Studioで独自の警告を作ってチームで共有する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tackme31/articles/2e57a1b1f592ff"&gt;https://zenn.dev/tackme31/articles/2e57a1b1f592ff&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;独自の Roslyn アナライザーと CodeFix の開発方法とローカルパッケージでの配布方法について。&lt;/p&gt;
&lt;h3 id="net-maui-features-for-building-great-desktop-apps.net-blog"&gt;5 .NET MAUI Features for Building Great Desktop Apps - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/5-dotnet-maui-desktop-features/"&gt;https://devblogs.microsoft.com/dotnet/5-dotnet-maui-desktop-features/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI のデスクトップアプリ向けの5つの機能を紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;マルチウィンドウ&lt;/li&gt;
&lt;li&gt;メニューバー&lt;/li&gt;
&lt;li&gt;コンテキストメニュー&lt;/li&gt;
&lt;li&gt;ツールチップ&lt;/li&gt;
&lt;li&gt;ポインタージェスチャー&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="keyboard-shortcuts-to-master-your-git-flow-in-visual-studio-visual-studio-blog"&gt;Keyboard Shortcuts to Master Your Git Flow in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/keyboard-shortcuts-to-master-your-git-flow-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/keyboard-shortcuts-to-master-your-git-flow-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio で Git フローに役立つキーボードショートカットを紹介している。&lt;/p&gt;
&lt;h3 id="a-simple-union-between.net-core-and-python"&gt;A Simple Union Between .NET Core and Python&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/devleader/a-simple-union-between-net-core-and-python-5949"&gt;https://dev.to/devleader/a-simple-union-between-net-core-and-python-5949&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pythonnet を使用して .NET から Python 呼び出す例の簡単な紹介。&lt;/p&gt;
&lt;h3 id="basic-authentication-in-asp.net-core-software-engineering"&gt;Basic Authentication in ASP.NET Core | Software Engineering&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2023/01/23/basic-authentication-in-asp-net-core/"&gt;https://damienbod.com/2023/01/23/basic-authentication-in-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;idunno.Authentication.Basic パッケージを使用して ASP.NET Core アプリケーションに Basic 認証を実装する方法について。&lt;/p&gt;
&lt;h3 id="tracing.net-applications-easily-with-opentelemetry-code-maze"&gt;Tracing .NET Applications Easily With OpenTelemetry - Code Maze&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code-maze.com/tracing-dotnet-applications-opentelemetry/"&gt;https://code-maze.com/tracing-dotnet-applications-opentelemetry/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry を使用して .NET アプリケーションのトレースを取得する方法について。&lt;/p&gt;
&lt;p&gt;記事では SQL Server へのクエリーの取得や、Jaeger を使用して表示する手順についても触れている。&lt;/p&gt;
&lt;h3 id="c-12-primary-constructors"&gt;C# 12: Primary Constructors&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/a210c97e-fe68-45de-afa1-d053d75f6f7d"&gt;https://steven-giesel.com/blogPost/a210c97e-fe68-45de-afa1-d053d75f6f7d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で導入候補となっているプライマリーコンストラクターについての解説。&lt;/p&gt;
&lt;h3 id="ef-core-debugging-part-1"&gt;EF Core debugging part 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/ef-core-debugging-part-1-512f"&gt;https://dev.to/karenpayneoregon/ef-core-debugging-part-1-512f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で開発中のデバッグに役立つ機能とログの記録方法についての紹介&lt;/p&gt;
&lt;h3 id="static-libraries"&gt;Static libraries&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ericsink.com/native_aot/mul_cpp_win_static.html"&gt;https://ericsink.com/native_aot/mul_cpp_win_static.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NativeAOT で静的ライブラリーとして発行することと、その場合に発生するほかにリンクすべきライブラリーがあることについて。&lt;/p&gt;
&lt;h3 id="getting-started-with-integration-testing-for-your-minimal-api"&gt;Getting started with integration testing for your Minimal API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/this-is-learning/getting-started-with-integration-testing-for-your-minimal-api-3j0l"&gt;https://dev.to/this-is-learning/getting-started-with-integration-testing-for-your-minimal-api-3j0l&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Minimal APIs で実装した ASP.NET Core アプリケーションの統合テストをする方法について。&lt;/p&gt;
&lt;h3 id="steve-sanderson-wows-web-devs-with-peek-at-blazor-united-for.net-8-visual-studio-magazine"&gt;Steve Sanderson Wows Web-Devs with Peek at 'Blazor United' for .NET 8 -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/articles/2023/01/26/blazor-united.aspx"&gt;https://visualstudiomagazine.com/articles/2023/01/26/blazor-united.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor 向けに開発しているプロトタイプ Blazor United について。&lt;/p&gt;
&lt;p&gt;Blazor United は Razor Pages、Blazor Server、Blazor WebAssembly がクライアント上でシームレスに移行していく仕組みを提供するプロトタイプとなっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=48G_CEGXZZM"&gt;Blazor United prototype - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharpstructureofarraysgenerator-structure-of-arrays-source-generator-to-make-cpu-cache-and-simd-friendly-data-structure-for-high-performance-code-in.net-and-unity"&gt;Cysharp/StructureOfArraysGenerator: Structure of arrays source generator to make CPU Cache and SIMD friendly data structure for high-performance code in .NET and Unity.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/StructureOfArraysGenerator"&gt;https://github.com/Cysharp/StructureOfArraysGenerator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Structure of Arrays と呼ばれるデータ構造を簡単に扱えるようにする Source Generator&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neue.cc/2023/01/27_StructureOfArraysGenerator.html"&gt;neue cc - StructureOfArraysGenerator - C#でSoAを簡単に利用するためのSource Generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Visual Studio 2022 Preview では .http ファイルによる VSCode の REST Client のようなことができるという話。&lt;/p&gt;
&lt;!-- https://twitter.com/hassanrezkhabib/status/1617734005306294272?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Have you heard of .http files?&lt;br&gt;In &lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;VisualStudio&lt;/a&gt; you can write an http file with API calls in it in less than a minute and test all your live endpoints.&lt;br&gt;&lt;br&gt;Huge thanks to &lt;a href="https://twitter.com/sayedihashimi?ref_src=twsrc%5Etfw"&gt;&amp;#64;sayedihashimi&lt;/a&gt; for this amazing tip - I appreciate you, brother.&lt;a href="https://twitter.com/hashtag/visualstudio?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#visualstudio&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://t.co/JXN0fyerm5"&gt;pic.twitter.com/JXN0fyerm5&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hassan Habib (&amp;#64;HassanRezkHabib) &lt;a href="https://twitter.com/HassanRezkHabib/status/1617734005306294272?ref_src=twsrc%5Etfw"&gt;January 24, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio 2022 Preview では ASP.NET Core プロジェクトのエンドポイントを確認できる Endpoints Explorer を利用できるという話(Rider には似た機能がある)&lt;/p&gt;
&lt;!-- https://twitter.com/hassanrezkhabib/status/1617064597105823748?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Check it out.&lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;visualstudio&lt;/a&gt; now has Endpoints Explorer feature to show you all the endpoints available in your &lt;a href="https://t.co/JTjq1dTEAo"&gt;https://t.co/JTjq1dTEAo&lt;/a&gt; Core project.&lt;br&gt;&lt;br&gt;This feature is available in Visual Studio 2022 Preview 3.0&lt;a href="https://twitter.com/hashtag/visualstudio?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#visualstudio&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/endpoints?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#endpoints&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/apis?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#apis&lt;/a&gt; &lt;a href="https://t.co/h4str5c0Kq"&gt;pic.twitter.com/h4str5c0Kq&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hassan Habib (&amp;#64;HassanRezkHabib) &lt;a href="https://twitter.com/HassanRezkHabib/status/1617064597105823748?ref_src=twsrc%5Etfw"&gt;January 22, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="api-proposal-non-cooperative-abortion-of-code-execution-issue-69622-dotnetruntime"&gt;[API Proposal]: Non-cooperative abortion of code execution · Issue #69622 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/69622"&gt;https://github.com/dotnet/runtime/issues/69622&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 から実行しているコードを強制的に中断できる &lt;code&gt;ControlledExecution.Run&lt;/code&gt; というメソッドが追加されている。&lt;/p&gt;
&lt;p&gt;アプリケーションの内部状態が保証されない可能性があるため、運用環境ではなく REPL のようなものでの利用を想定しているものとなっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/api/system.runtime.controlledexecution.run?view=net-7.0"&gt;ControlledExecution.Run(Action, CancellationToken) Method (System.Runtime) | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://twitter.com/kookiz/status/1616428424104402945?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I just discovered that an alternative to Thread.Abort was introduced in .NET 7: &lt;a href="https://t.co/a1jS9jrRpF"&gt;https://t.co/a1jS9jrRpF&lt;/a&gt;&lt;br&gt;I hope I&amp;#39;ll never need it but it&amp;#39;s good to know it&amp;#39;s there.&lt;br&gt;And the documentation does a good job at underlining how dangerous this API is.&lt;/p&gt;&amp;mdash; Kevin Gosse (&amp;#64;KooKiz) &lt;a href="https://twitter.com/KooKiz/status/1616428424104402945?ref_src=twsrc%5Etfw"&gt;January 20, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="wasi-support-tracking-issue-65895-dotnetruntime"&gt;WASI support tracking · Issue #65895 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/65895"&gt;https://github.com/dotnet/runtime/issues/65895&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET での WASI (WebAssembly System Interface) のサポートの進行状況の Issue。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-01-20: .NET 7.0.2 &amp; 6.0.13, ReSharper &amp; Rider 2023.1 EAP 1, Visual Studio 2022 17.5 Preview 3, .NET Community Toolkit 8.1, DigiD code made public</title>
			<link>/2023/01/20/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/01/20/updates</guid>
			<pubDate>Fri, 20 Jan 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-january-2023-updates.net-7.0.2.net-6.0.13.net-blog"&gt;.NET January 2023 Updates – .NET 7.0.2, .NET 6.0.13 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/january-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/january-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7.0.2 と .NET 6.0.13 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 6 の DoS 脆弱性が修正されている。この脆弱性は公開されたエンドポイントに悪意あるリクエストを送信することでスタックオーバーフローを発生させ、サービス拒否攻撃が可能となるもの。&lt;/p&gt;
&lt;h3 id="resharper-2023.1-starts-its-early-access-program-the.net-tools-blog"&gt;ReSharper 2023.1 Starts Its Early Access Program | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/19/resharper-2023-1-eap-starts/"&gt;https://blog.jetbrains.com/dotnet/2023/01/19/resharper-2023-1-eap-starts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.1 の EAP  (早期アクセスプロブラム) が開始となった。&lt;/p&gt;
&lt;p&gt;ReSharper 2023.1 EAP 1 では &lt;code&gt;#region&lt;/code&gt; のクイックフィックスや &lt;code&gt;Span.SequenceEquel&lt;/code&gt; の &lt;code&gt;is&lt;/code&gt; への書き換えといったコードインスペクションの改善、C++ サポートの改善が含まれている。&lt;/p&gt;
&lt;h3 id="rider-2023.1-early-access-program-has-started-the.net-tools-blog"&gt;Rider 2023.1 Early Access Program Has Started | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/19/rider-2023-1-eap-start/"&gt;https://blog.jetbrains.com/dotnet/2023/01/19/rider-2023-1-eap-start/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.1 の EAP  (早期アクセスプロブラム) が開始となった。&lt;/p&gt;
&lt;p&gt;Rider 2023.1 EAP 1 では Unity の API のポップアップからドキュメントへのリンクや Unreal Engine での新しいクラス作成時の UI の再実装、Docker の高速モードサポート、 &lt;code&gt;#region&lt;/code&gt; のクイックフィックスや &lt;code&gt;Span.SequenceEquel&lt;/code&gt; の &lt;code&gt;is&lt;/code&gt; への書き換えといったコードインスペクションの改善、メインツールバーの UI 修正が含まれている。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.5-preview-3-is-here-visual-studio-blog"&gt;Visual Studio 2022 17.5 Preview 3 is here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-5-preview-3-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-5-preview-3-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.5 Preview 3 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全般的な IDE シェル、Git、エディター、デバッガー、診断
&lt;ul&gt;
&lt;li&gt;アクセシビリティチェッカー&lt;/li&gt;
&lt;li&gt;スペルチェッカー&lt;/li&gt;
&lt;li&gt;外部ソースデバッグの改善
&lt;ul&gt;
&lt;li&gt;逆コンパイルパフォーマンスの向上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Markdown のデフォルトエディター化&lt;/li&gt;
&lt;li&gt;VS インテントベースの提案&lt;/li&gt;
&lt;li&gt;Microsoft.Data.SQL.Client を使用した SQLServer への接続&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET
&lt;ul&gt;
&lt;li&gt;Razor ファイルでの HTML コードアクションのサポート
&lt;ul&gt;
&lt;li&gt;タグの削除、画像の Base64 エンコード、画像の幅と高さの挿入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Razor および Roslyn のパフォーマンス改善
&lt;ul&gt;
&lt;li&gt;プロジェクト構成切り替え、コード分析の高速化、UI 遅延を減らすための入力改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;より速いインクリメンタルビルドのためのビルド高速化
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/project-system/blob/main/docs/build-acceleration.md"&gt;project-system/build-acceleration.md at main · dotnet/project-system · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++
&lt;ul&gt;
&lt;li&gt;ブレースのペアの色付け&lt;/li&gt;
&lt;li&gt;ターミナルで開発コンテナー(devcontainer)を開く&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;セットアップ
&lt;ul&gt;
&lt;li&gt;winget での Visual Studio パッケージの改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-community-toolkit-8.1-better-faster-mvvm-source-generators.net-7-support-and-more.net-blog"&gt;Announcing .NET Community Toolkit 8.1! Better, faster MVVM source generators, .NET 7 support, and more! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-the-dotnet-community-toolkit-810/"&gt;https://devblogs.microsoft.com/dotnet/announcing-the-dotnet-community-toolkit-810/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Community Toolkit 8.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ObservableProperty&lt;/code&gt; へのカスタム属性、MVVM Toolkit アナライザー、MVVM Toolkit Source Generator の最適化、&lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt; メッセンジャー拡張、.NET 7 と C# 11 のサポート。&lt;/p&gt;
&lt;h3 id="minbzkwoo-besluit-broncode-digid-app"&gt;MinBZK/woo-besluit-broncode-digid-app&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MinBZK/woo-besluit-broncode-digid-app"&gt;https://github.com/MinBZK/woo-besluit-broncode-digid-app&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オランダの DigiD というアプリケーションがオープンソースとして公開された。(国のアプリで、政府の透明性維持活動の一環と思われる)&lt;/p&gt;
&lt;p&gt;1500万ユーザーのアクティブユーザーがいるアプリケーションで、Xamarin.Forms 製とのこと。&lt;/p&gt;
&lt;!-- https://twitter.com/jfversluis/status/1615362028457332738?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;This is huge! One of THE biggest apps in The Netherlands with 15 million active users, has been open-sourced. And guess what, it&amp;#39;s using Microsoft technology. And not just that, they&amp;#39;re using Xamarin.Forms 🤩&lt;br&gt;&lt;br&gt;Read the (translated) press release here: &lt;a href="https://t.co/5DtK06MNHQ"&gt;https://t.co/5DtK06MNHQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Gerald Versluis (&amp;#64;jfversluis) &lt;a href="https://twitter.com/jfversluis/status/1615362028457332738?ref_src=twsrc%5Etfw"&gt;January 17, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digid.nl/en"&gt;DigiD | Home English&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.logius.nl/actueel/broncode-digid-app-openbaar-gemaakt"&gt;Broncode DigiD app openbaar gemaakt | Logius&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-7.0.58-service-release-2-dotnetmaui"&gt;Release 7.0.58 Service Release 2 · dotnet/maui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/maui/releases/tag/7.0.58"&gt;https://github.com/dotnet/maui/releases/tag/7.0.58&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI 7.0.58 Service Release 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは様々な不具合の修正や Windows App SDK の更新などが行われている。&lt;/p&gt;
&lt;h3 id="net-framework-january-2023-cumulative-update-preview.net-blog"&gt;.NET Framework January 2023 Cumulative Update Preview - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-january-2023-update/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-january-2023-update/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework の2023年1月の累積アップデートプレビューがリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは WPF のいくつかの不具合と、Socket で稀に発生する問題が修正されている。&lt;/p&gt;
&lt;h3 id="visual-studio-spell-checker-preview-now-available-visual-studio-blog"&gt;Visual Studio Spell Checker Preview Now Available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-spell-checker-preview-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-spell-checker-preview-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio のプレビューで使用できるようになったスペルチェッカーについての紹介。&lt;/p&gt;
&lt;p&gt;記事ではスペルチェッカーの使用方法やどのようなパターンでどのようにチェックされるか、カスタマイズの方法といったことについて紹介している。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c-12-ienumerable-c-c"&gt;【C# 12 候補】IEnumerable 向けリスト パターン | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/1/list-pattern-enumerable/"&gt;https://ufcpp.net/blog/2023/1/list-pattern-enumerable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 候補となっている &lt;code&gt;IEnumerable&lt;/code&gt; 向けのリストパターンマッチを紹介している。&lt;/p&gt;
&lt;h3 id="c-12-c-c"&gt;【C# 12 候補】半自動プロパティ | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/1/semi-auto-property"&gt;https://ufcpp.net/blog/2023/1/semi-auto-property&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 候補となっている半自動プロパティ (バッキングフィールドのみ自動生成) を紹介している。&lt;/p&gt;
&lt;p&gt;初期化子やオーバーライド時の挙動などについても解説している。&lt;/p&gt;
&lt;h3 id="beginners-guide-to-get-started-with-smart-contract-in-c"&gt;Beginners Guide to Get Started with Smart Contract in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/satyakarki/beginners-guide-to-get-started-with-smart-contract-in-c-3c7e"&gt;https://dev.to/satyakarki/beginners-guide-to-get-started-with-smart-contract-in-c-3c7e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stratis という C# でスマートコントラクトを実装可能なプラットフォームを使用してスマートコントラクトを実装することを紹介。&lt;/p&gt;
&lt;h3 id="net-native-aot"&gt;.NET Native AOT&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ericsink.com/native_aot/index.html"&gt;https://ericsink.com/native_aot/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Native AOT についての解説やサンプルコードを取り扱うシリーズ。&lt;/p&gt;
&lt;h3 id="top-10-bugs-found-in-c-projects-in-2022"&gt;Top 10 bugs found in C# projects in 2022&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://pvs-studio.com/en/blog/posts/csharp/1020/"&gt;https://pvs-studio.com/en/blog/posts/csharp/1020/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2022年に PVS-Studio の開発者が見つけて記事にしていたオープンソースプロジェクトのバグの Top 10 をまとめたもの。&lt;/p&gt;
&lt;h3 id="securing-sensitive-information-with.net-user-secrets-the.net-tools-blog"&gt;Securing Sensitive Information with .NET User Secrets | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/17/securing-sensitive-information-with-net-user-secrets/"&gt;https://blog.jetbrains.com/dotnet/2023/01/17/securing-sensitive-information-with-net-user-secrets/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET User Secrets を使用してローカルでの機密情報の保存とアプリケーションからの使用についての紹介。&lt;/p&gt;
&lt;p&gt;JetBrains Rider でのシークレットの管理とアプリケーションからの使用方法を紹介している。&lt;/p&gt;
&lt;h3 id="new-better-search-in-visual-studio-visual-studio-blog"&gt;New: Better search in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/new-better-search-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/new-better-search-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio でプレビューとなっている新しいオールインワン検索についての紹介。&lt;/p&gt;
&lt;h3 id="rate-limiting-with-asp.net-core-7.0"&gt;Rate Limiting with ASP.NET Core 7.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/abp-community/rate-limiting-with-asp-net-core-7-0-e7834a94b8c5"&gt;https://medium.com/abp-community/rate-limiting-with-asp-net-core-7-0-e7834a94b8c5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 でのレートリミット API の紹介と ASP.NET Core で使用する方法について。&lt;/p&gt;
&lt;h3 id="exploring-the-model-binding-logic-of-minimal-apis-behind-the-scenes-of-minimal-apis-part-3"&gt;Exploring the model-binding logic of minimal APIs: Behind the scenes of minimal APIs - Part 3&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-3-exploring-the-model-binding-logic-of-minimal-apis/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-3-exploring-the-model-binding-logic-of-minimal-apis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Minimal API でのモデルバインディングの仕組みを解説。&lt;/p&gt;
&lt;p&gt;記事ではどのような流れで受け取ったリクエストをハンドラーの引数にバインドするかといった仕組みと流れを解説している。&lt;/p&gt;
&lt;h3 id="multiple-file-drag-and-drop-upload-with-asp.net-core-khalid-abuhakmeh"&gt;Multiple File Drag and Drop Upload with ASP.NET Core | Khalid Abuhakmeh&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/multiple-file-drag-and-drop-upload-with-aspnet-core"&gt;https://khalidabuhakmeh.com/multiple-file-drag-and-drop-upload-with-aspnet-core&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;複数のファイルをドラッグアンドドロップでアップロードする Razor ページを実装する方法について。&lt;/p&gt;
&lt;h3 id="reading-object-in-memory-starting-with-stacks"&gt;Reading “object” in memory - starting with stacks&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/reading-object-in-memory-starting-with-stacks-aaef54bd521d"&gt;https://chnasarre.medium.com/reading-object-in-memory-starting-with-stacks-aaef54bd521d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;診断プロトコルの nettrace で受信できるオブジェクトのペイロードを読み取る方法についての解説。&lt;/p&gt;
&lt;h3 id="learn-dateonly-timeonly"&gt;Learn DateOnly &amp;amp; TimeOnly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/learn-dateonly-timeonly-23j0"&gt;https://dev.to/karenpayneoregon/learn-dateonly-timeonly-23j0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DateOnly と TimeOnly の基本の紹介と、Json.NET, System.Text.Json などのライブラリーでの対応について。&lt;/p&gt;
&lt;h3 id="propertychangedeventmanager-qiita"&gt;PropertyChangedEventManagerはスレッドプールでは失敗する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/emoacht/items/3f7e216b43431e960751"&gt;https://qiita.com/emoacht/items/3f7e216b43431e960751&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PropertyChangedEventManager&lt;/code&gt; の &lt;code&gt;AddListener&lt;/code&gt;/&lt;code&gt;RemoveListener&lt;/code&gt; は同じスレッドから呼び出す必要があることについて。&lt;/p&gt;
&lt;h3 id="c-dictionaryhashtable"&gt;[C#] Dictionary(HashTable)を自作して理解する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/fugi/articles/d2a5ef35e4190f"&gt;https://zenn.dev/fugi/articles/d2a5ef35e4190f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dictionary のような構造を実装して、ハッシュの扱いを理解してみるという試み。&lt;/p&gt;
&lt;h3 id="sta"&gt;非同期メイン関数でスレッドアパートメントがSTAにならない&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nin_neko/articles/6f08f2fdace43f"&gt;https://zenn.dev/nin_neko/articles/6f08f2fdace43f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;エントリーポイントに &lt;code&gt;STAThread&lt;/code&gt; 属性をつけていても、&lt;code&gt;async Task&lt;/code&gt; と非同期メソッドになっている場合、スレッドアパートメントが STA に設定されないことについてとその対処方法。&lt;/p&gt;
&lt;h3 id="net-appsettings.json-qiita"&gt;【.NET】設定ファイル(例 appsettings.json)にコメント書けるってよ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/35d94a20e8e3e8ca268c"&gt;https://qiita.com/yaju/items/35d94a20e8e3e8ca268c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.Configuration.Json (appsettings.json など) は JavaScript または C# スタイルのコメントを JSON に書くことが許可されていることについて。&lt;/p&gt;
&lt;h3 id="asp.net-core-qiita"&gt;ASP.NET Core でカスタム検証属性を作成する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/gushwell/items/d659027304645b30b805"&gt;https://qiita.com/gushwell/items/d659027304645b30b805&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で &lt;code&gt;ValidationAttribute&lt;/code&gt; を使ったカスタム検証属性を実装する方法について。&lt;/p&gt;
&lt;h3 id="the-evolution-of-delegate-performance-in.net"&gt;The evolution of delegate performance in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;skyake/the-evolution-of-delegate-performance-in-net-c8f23572b8b1"&gt;https://medium.com/&amp;#64;skyake/the-evolution-of-delegate-performance-in-net-c8f23572b8b1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 で行われた PGO によるデリゲートの最適化についての解説。&lt;/p&gt;
&lt;h3 id="track-your-coding-progress-on-github-with-a.net-worker-service"&gt;Track your coding progress on GitHub with a .NET Worker Service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/sannae/track-my-coding-progress-on-github-with-a-net-worker-service-49g4"&gt;https://dev.to/sannae/track-my-coding-progress-on-github-with-a-net-worker-service-49g4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub で自分のリポジトリーの言語統計を取る仕組みをワーカーサービスとして実装してみる例。&lt;/p&gt;
&lt;h3 id="using-alias-c-c"&gt;using alias を任意の型に対応 | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/1/using-alias-any-types/"&gt;https://ufcpp.net/blog/2023/1/using-alias-any-types/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;using&lt;/code&gt; によるエイリアスで定義できるものを拡張するという提案についての解説。&lt;/p&gt;
&lt;h3 id="profiling.net-on-linux-with-benchmarkdotnet"&gt;Profiling .NET on Linux with BenchmarkDotNet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://adamsitnik.com/PerfCollectProfiler/"&gt;https://adamsitnik.com/PerfCollectProfiler/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BenchmarkDotNet を使用して Linux 上で .NET のプロファイリングをする方法について。&lt;/p&gt;
&lt;p&gt;0.13.3 で導入された PerfCollectProfiler プラグインによって PerfView や SpeedScope、perf ファイルをサポートするツールで開ける形でプロファイリング結果をエクスポートできる。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="dots-the-friendly.net-sdk-manager-johnnys.news"&gt;Dots - the friendly .NET SDK manager - Johnnys.News&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://johnnys.news/2023/01/Dots-a-dotnet-SDK-manager"&gt;https://johnnys.news/2023/01/Dots-a-dotnet-SDK-manager&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;様々な .NET SDK のインストール、アンインストールを行える GUI ツール。&lt;/p&gt;
&lt;h3 id="veloxdbveloxdb-an-object-oriented-database-for-building-next-generation-solutions-with.net-and-c"&gt;VeloxDB/VeloxDB: An object oriented database for building next generation solutions with .NET and C#.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/VeloxDB/VeloxDB"&gt;https://github.com/VeloxDB/VeloxDB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# で記述された .NET 向けオブジェクト指向データベース。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/defufna/introducing-veloxdb-26j1"&gt;Introducing VeloxDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="otterkitotterkit-otterkit-cobol-compiler"&gt;otterkit/otterkit: Otterkit COBOL Compiler&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/otterkit/otterkit"&gt;https://github.com/otterkit/otterkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET プラットフォーム向け ISO COBOL 2022 のコンパイラーとランタイム実装。&lt;/p&gt;
&lt;h3 id="stablediffusiondiscordbot"&gt;StableDiffusionDiscordBot&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://stablediffusiondiscordbot.azurewebsites.net/"&gt;https://stablediffusiondiscordbot.azurewebsites.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stable Diffusion などで AI 画像生成を行う Discord Bot とそのサイト。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/kawa0x0a/articles/d2a1ca23be053a"&gt;AI画像生成(Stable Diffusionなど)を行うDiscordのBotを追加するサイトをBlazorで作成したお話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="marplexwpfsnowfall-fully-customizable-wpf-snowfall-control"&gt;Marplex/WpfSnowfall: Fully customizable WPF snowfall control&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Marplex/WpfSnowfall"&gt;https://github.com/Marplex/WpfSnowfall&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF アプリケーションで雪を降らせることのできるコントロール。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/marplex/add-some-snow-in-your-wpf-apps-3dck"&gt;Add some snow in your WPF apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="net-microsoft-learn"&gt;ベースライン パッケージ検証コントロール - .NET | Microsoft Learn&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/dotnet/fundamentals/package-validation/baseline-version-validator"&gt;https://learn.microsoft.com/ja-jp/dotnet/fundamentals/package-validation/baseline-version-validator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 以降で導入された NuGet のパッケージ検証機能について説明。&lt;/p&gt;
&lt;p&gt;NuGet パッケージを作成時に指定したベースラインバージョンからの API の破壊的変更を検出することができる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meziantou.net/detecting-breaking-changes-between-two-versions-of-a-nuget-package-at-packaging.htm"&gt;Detecting breaking changes between two versions of a NuGet package at packaging time - Gérald Barré&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ml.net-10.net"&gt;ML.NET チュートリアル | 10 分で始める | .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnet.microsoft.com/ja-jp/learn/ml-dotnet/get-started-tutorial/intro"&gt;https://dotnet.microsoft.com/ja-jp/learn/ml-dotnet/get-started-tutorial/intro&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/engineercafe/articles/985c6594d1a326"&gt;ML .NETでテキストに含まれる感情を分析してみた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ML.NET を使用してテキストのポジティブ/ネガティブを判定するチュートリアル。&lt;/p&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;.NET 8 の Kestrel で名前付きパイプをサポートするという話。&lt;/p&gt;
&lt;!-- https://twitter.com/jamesnk/status/1615902642492039180?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Coming in .NET 8: Support for named pipes in Kestrel.&lt;br&gt;&lt;br&gt;⚒️ Build a server for inter-process communication with Kestrel + .NET&lt;br&gt;🖥️ Call it from other Windows apps using named pipes. &lt;a href="https://t.co/9QsksD1N3N"&gt;pic.twitter.com/9QsksD1N3N&lt;/a&gt;&lt;/p&gt;&amp;mdash; James Newton-King ♔ (&amp;#64;JamesNK) &lt;a href="https://twitter.com/JamesNK/status/1615902642492039180?ref_src=twsrc%5Etfw"&gt;January 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-01-13: paint.net 5.0, ReSharper &amp; Rider 2023.1 Roadmap, Swashbuckle.AspNetCore 6.5.0</title>
			<link>/2023/01/13/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/01/13/updates</guid>
			<pubDate>Fri, 13 Jan 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="paint.net-5.0-is-now-available"&gt;paint.net 5.0 is now available!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://forums.getpaint.net/topic/121643-paintnet-50-is-now-available/"&gt;https://forums.getpaint.net/topic/121643-paintnet-50-is-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Paint.NET 5.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは筆圧検知の対応、GPU を使用したレンダリングや画像処理、新しいエフェクトプラグインシステム、様々なパフォーマンスの向上や改善などが行われている。&lt;/p&gt;
&lt;p&gt;また、.NET 7 を使用してビルドされるようになり、レガシーな C++/CLI コードは &lt;a href="https://github.com/terrafx/terrafx.interop.windows"&gt;TerraFX.Interop.Windows&lt;/a&gt; に置き換えられたとのこと。&lt;/p&gt;
&lt;h3 id="resharper-2023.1-roadmap-the.net-tools-blog"&gt;ReSharper 2023.1 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/10/resharper-2023-1-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2023/01/10/resharper-2023-1-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.1 のロードマップ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ショートカットのオーバーホール&lt;/li&gt;
&lt;li&gt;アウトオブプロセスへの移行&lt;/li&gt;
&lt;li&gt;文法チェック
&lt;ul&gt;
&lt;li&gt;組み込みのスペルチェッカーから JetBrains Grazie への移行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ユニットテスト自動化&lt;/li&gt;
&lt;li&gt;ローカリゼーション
&lt;ul&gt;
&lt;li&gt;簡体字中国語、日本語、韓国語&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;UX/UI の再デザイン&lt;/li&gt;
&lt;li&gt;その他
&lt;ul&gt;
&lt;li&gt;Web 開発&lt;/li&gt;
&lt;li&gt;更新ダイアログ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rider-2023.1-roadmap-the.net-tools-blog"&gt;Rider 2023.1 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/10/rider-2023-1-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2023/01/10/rider-2023-1-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.1 のロードマップ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;設定の同期プラグイン&lt;/li&gt;
&lt;li&gt;Docker サポートの改善&lt;/li&gt;
&lt;li&gt;データベーススキーマ比較&lt;/li&gt;
&lt;li&gt;ゲーム開発
&lt;ul&gt;
&lt;li&gt;Unity
&lt;ul&gt;
&lt;li&gt;DOTS のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unreal Engine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;文法チェック
&lt;ul&gt;
&lt;li&gt;組み込みのスペルチェッカーから JetBrains Grazie への移行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;その他
&lt;ul&gt;
&lt;li&gt;パフォーマンス&lt;/li&gt;
&lt;li&gt;新しい UI の調整&lt;/li&gt;
&lt;li&gt;ローカリゼーション
&lt;ul&gt;
&lt;li&gt;簡体字中国語、日本語、韓国語&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-v6.5.0-domaindrivendevswashbuckle.aspnetcore"&gt;Release v6.5.0 · domaindrivendev/Swashbuckle.AspNetCore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v6.5.0"&gt;https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v6.5.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swashbuckle.AspNetCore 6.5.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではターゲットフレームワークに .NET 7 が追加されたほか、Swagger UI のアップデートが行われている。&lt;/p&gt;
&lt;h3 id="release-release-v1.46.6-grpcgrpc"&gt;Release Release v1.46.6 · grpc/grpc&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc/releases/tag/v1.46.6"&gt;https://github.com/grpc/grpc/releases/tag/v1.46.6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gRPC 1.46.6 (C-Core) がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは zlib に関する脆弱性の対応といくつかの不具合の修正が行われている。&lt;/p&gt;
&lt;h3 id="release-6.9.0-fluentassertionsfluentassertions"&gt;Release 6.9.0 · fluentassertions/fluentassertions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/fluentassertions/fluentassertions/releases/tag/6.9.0"&gt;https://github.com/fluentassertions/fluentassertions/releases/tag/6.9.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FluentAssertions 6.9.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;TimeOnly や型やメソッドなどのリフレクションなどに関するアサーションメソッドの追加。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="cdatetime-qiita"&gt;【C#】DateTimeの和暦表示 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/ikuzak/items/b0fa005d267041890ed6"&gt;https://qiita.com/ikuzak/items/b0fa005d267041890ed6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DateTime を和暦でフォーマットする際に R (令和) のようなアルファベットにする方法について。&lt;/p&gt;
&lt;h3 id="c-io"&gt;C# で本当の非同期 IO&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/k_taro56/articles/csharp-true-async-io"&gt;https://zenn.dev/k_taro56/articles/csharp-true-async-io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FileStream の非同期 I/O を使用するかどうかの &lt;code&gt;useAsync&lt;/code&gt; はデフォルトで &lt;code&gt;false&lt;/code&gt; となっているので非同期 I/O とならないことについて。&lt;/p&gt;
&lt;h3 id="inheritance-strategies-in-entity-framework-core-7"&gt;Inheritance Strategies in Entity Framework Core 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/abp-community/inheritance-strategies-in-entity-framework-core-7-e0cfd42877a5"&gt;https://medium.com/abp-community/inheritance-strategies-in-entity-framework-core-7-e0cfd42877a5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core の継承したモデルの格納方法として EF 7 でサポートされた TPC (コンクリート型ごとのテーブル)とそれ以前からサポートされていた TPH, TPT についての簡単な紹介。&lt;/p&gt;
&lt;h3 id="sqlitepclraw-and-open-source-sustainability"&gt;SQLitePCLRaw and open source sustainability&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ericsink.com/entries/sqlitepclraw_sustainability.html"&gt;https://ericsink.com/entries/sqlitepclraw_sustainability.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SQLitePCLRaw (SQLite のネイティブバインディング) を維持する上での現状や懸念点、利益など。&lt;/p&gt;
&lt;h3 id="parsing-a-template-language-with-c-and-pidgin-zach-on-code"&gt;Parsing a template language with C# and Pidgin | Zach on Code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zachoncode.dev/blog/parsing-template-language-with-csharp-and-pidgin/"&gt;https://zachoncode.dev/blog/parsing-template-language-with-csharp-and-pidgin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;パーサーライブラリーの Pidgin を使用してテンプレート言語を実装する方法を解説。&lt;/p&gt;
&lt;h3 id="reactiveproperty-v9.0.0"&gt;ReactiveProperty v9.0.0 のプレリリース版を出してみました&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/okazuki/articles/reactiveproperty-v9-0-0-pre1"&gt;https://zenn.dev/okazuki/articles/reactiveproperty-v9-0-0-pre1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReactiveProperty v9.0.0 のプレリリースで行った改善や再構成、新しいクラスの追加などを解説。&lt;/p&gt;
&lt;h3 id="the-road-to-out-of-process-resharper-asynchronous-typing-the.net-tools-blog"&gt;The Road to Out-of-Process ReSharper: Asynchronous Typing | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/05/resharper-out-of-process/"&gt;https://blog.jetbrains.com/dotnet/2023/01/05/resharper-out-of-process/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper を Visual Studio とは別のプロセス(アウトオブプロセス)で動作させる形に移行するためのハードルや行なっていることを解説。&lt;/p&gt;
&lt;h3 id="net-conf-2022-recap-event-microsoft-japan-community-event-tour-series"&gt;[オンデマンド版] .NET Conf 2022 Recap Event 東京 ~ Microsoft Japan Community Event Tour Series&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://info.microsoft.com/JA-ModApps-VDEO-FY23-12Dec-23-MKTO-FY23-dotnetconf-2022-Recap-Tokyo-Gated-video-SRGCM8691_LP01-Registration---Form-in-Body.html"&gt;https://info.microsoft.com/JA-ModApps-VDEO-FY23-12Dec-23-MKTO-FY23-dotnetconf-2022-Recap-Tokyo-Gated-video-SRGCM8691_LP01-Registration---Form-in-Body.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2022 Recap Event 東京 のセッションのオンデマンド動画。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/cms/api/am/binary/RE5c8Zg"&gt;アジェンダ (PDF)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="c-qiita"&gt;フォルダの書き込みに管理者権限が不要かどうかをC#で判定する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Alone-and-Slow/items/a2332bcb500051e19fbc"&gt;https://qiita.com/Alone-and-Slow/items/a2332bcb500051e19fbc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows 環境でフォルダーに対する書き込み権限があるかどうかを確認する方法。&lt;/p&gt;
&lt;h3 id="testing-asp.net-core-fastendpoints-khalid-abuhakmeh"&gt;Testing ASP.NET Core FastEndpoints | Khalid Abuhakmeh&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/testing-aspnet-core-fastendpoints"&gt;https://khalidabuhakmeh.com/testing-aspnet-core-fastendpoints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core 上に構築されたフレームワーク FastEndpoints を使用した際のユニットテストについての解説。&lt;/p&gt;
&lt;h3 id="implement-a-custom-configuration-provider-in.net-7"&gt;Implement a Custom Configuration Provider in .NET 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;gokerakce/implement-a-custom-configuration-provider-in-net-7-c0a195dcd05f"&gt;https://medium.com/&amp;#64;gokerakce/implement-a-custom-configuration-provider-in-net-7-c0a195dcd05f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 での Microsoft.Extensions.Configuration のカスタムの構成プロバイダーを実装する方法の解説。&lt;/p&gt;
&lt;p&gt;記事では SQL Server から値を読み出し、再読み込みが可能なプロバイダーを実装している。&lt;/p&gt;
&lt;h3 id="how-to-run-disposable-databases-for-your-tests.improve-your-integration-tests-accuracy-with-testcontainers"&gt;How to run disposable databases for your tests. Improve your integration tests accuracy with Testcontainers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.genezini.com/p/how-to-run-disposable-databases-for-your-tests.-improve-your-integration-tests-accuracy-with-testcontainers/"&gt;https://blog.genezini.com/p/how-to-run-disposable-databases-for-your-tests.-improve-your-integration-tests-accuracy-with-testcontainers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Testcontainers を使用して使い捨てのデータベースを起動して、ユニットテストや統合テストを行う方法を解説。&lt;/p&gt;
&lt;h3 id="five-shortcuts-to-boost-your-productivity-visual-studio-blog"&gt;Five shortcuts to boost your productivity - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/the-visual-studio-editor-can-do-that/"&gt;https://devblogs.microsoft.com/visualstudio/the-visual-studio-editor-can-do-that/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio で生産性を高める5つのショートカットを紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;D&lt;/kbd&gt;: 行の複製&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;L&lt;/kbd&gt;: 行全体の削除&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;.&lt;/kbd&gt;: 次の同じ単語を選択&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+選択: ボックス(矩形)選択&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Ctrl&lt;/kbd&gt;+マウスクリック: 複数カーソルの挿入&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="confusing.net-debuggers-proxy-objects"&gt;Confusing .NET Debuggers: Proxy Objects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://washi.dev/blog/posts/debugger-proxy-objects/"&gt;https://washi.dev/blog/posts/debugger-proxy-objects/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プロキシーオブジェクトを差し込むことで、逆コンパイラーやそれに付随したデバッガーなどを欺く手法について解説。&lt;/p&gt;
&lt;h3 id="c-12-params-c-c"&gt;【C# 12 候補】ラムダ式のデフォルト引数と params 引数 | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/1/lambda-default/"&gt;https://ufcpp.net/blog/2023/1/lambda-default/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12の機能の候補であるラムダ式でのデフォルト引数と params 引数を許可する改善について。&lt;/p&gt;
&lt;h3 id="language-injection-improvements-in-rider-2022.3-the.net-tools-blog"&gt;Language Injection Improvements in Rider 2022.3 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/12/language-injection-improvements-in-rider-2022-3/"&gt;https://blog.jetbrains.com/dotnet/2023/01/12/language-injection-improvements-in-rider-2022-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2022.3 での言語インジェクションの改善の紹介。&lt;/p&gt;
&lt;p&gt;生文字列リテラルでの対応や、文字列結合での補完文字列の対応、LanguageInjection 属性の対応、.NET 7 の StringSyntax 属性の対応など。&lt;/p&gt;
&lt;h3 id="debugging-encoded-text-visual-studio-blog"&gt;Debugging Encoded Text - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/debugging-encoded-text/"&gt;https://devblogs.microsoft.com/visualstudio/debugging-encoded-text/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最新の Visual Studio プレビューで利用できるデバッガーのテキストビジュアライザーの紹介。&lt;/p&gt;
&lt;p&gt;プレビューでのテキストビジュアライザーは Base64 や URL のエンコードとデコード、JWT のデコードを行った結果を表示できる。&lt;/p&gt;
&lt;h3 id="extracting-metadata-from-a-minimal-api-handler-behind-the-scenes-of-minimal-apis-part-2"&gt;Extracting metadata from a minimal API handler: Behind the scenes of minimal APIs - Part 2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-2-extracting-metadata-from-a-minimal-api-handler/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-2-extracting-metadata-from-a-minimal-api-handler/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Minimal API のエンドポイントのハンドラーとして渡される Delegate からどのようにしてメタデータを抽出し、RequestDelegate を作っているかを解説。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="jellyfinjellyfin-the-free-software-media-system"&gt;jellyfin/jellyfin: The Free Software Media System&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jellyfin/jellyfin"&gt;https://github.com/jellyfin/jellyfin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Emby や Plex のような .NET で構築されたメディアサーバー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jellyfin.org/"&gt;The Free Software Media System | Jellyfin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/awsmfoss/foss-spotlight-jellyfin-452g"&gt;FOSS Spotlight: 📺 Jellyfin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="jonpsmithnet.localizemessagesanderrors-this-library-provides-extra-code-to-make-it-easier-to-support-in-different-languages-in-your.net-application"&gt;JonPSmith/Net.LocalizeMessagesAndErrors: This library provides extra code to make it easier to support in different languages in your .NET application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/JonPSmith/Net.LocalizeMessagesAndErrors"&gt;https://github.com/JonPSmith/Net.LocalizeMessagesAndErrors&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET アプリケーションのローカリゼーションの実装を支援するライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.thereformedprogrammer.net/improving-the-support-of-multiple-languages-in-net-applications/"&gt;Improving the support of multiple languages in .NET applications – The Reformed Programmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="linq-me-up"&gt;LINQ Me Up&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://linqmeup.com/"&gt;https://linqmeup.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AI を使用して SQL の SELECT 文を LINQ に変換するツール。&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;C# はコンテキストキーワードが多いので一見予約語のような識別子を持つものを定義して変なコードを書けてしまうという話。&lt;/p&gt;
&lt;!-- https://twitter.com/jaredpar/status/1613615815231934468?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The .NET Community Stand up was fun today. Got to show viewers the evolution of code that leads us to the following being legal &lt;a href="https://t.co/PZNe9XT4Ij"&gt;pic.twitter.com/PZNe9XT4Ij&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jared Parsons (&amp;#64;jaredpar) &lt;a href="https://twitter.com/jaredpar/status/1613615815231934468?ref_src=twsrc%5Etfw"&gt;January 12, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;.NET では同じ完全修飾名で同じアセンブリなのに同一プロセス内で異なる型として認識されるケースがあるという話。(AssemblyLoadContext が異なる場合など)。これは殆どのユーザーには問題がないが、Analyzer や Source Generator といった文脈で問題となることがある。&lt;/p&gt;
&lt;!-- https://twitter.com/jaredpar/status/1613211080918192133?s=12&amp;t=zFu2JC3YBugL-SiMBxWFeg --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;If you think that having two types with the same fully qualified name but diff assemblies in .NET is weird, wait until you have to deal with the same type in the same assembly having two different identities in the same process.&lt;/p&gt;&amp;mdash; Jared Parsons (&amp;#64;jaredpar) &lt;a href="https://twitter.com/jaredpar/status/1613211080918192133?ref_src=twsrc%5Etfw"&gt;January 11, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="rewrite-how-matrix3x2-and-matrix4x4-are-implemented-by-tannergooding-pull-request-80091-dotnetruntime"&gt;Rewrite how Matrix3x2 and Matrix4x4 are implemented by tannergooding · Pull Request #80091 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/80091"&gt;https://github.com/dotnet/runtime/pull/80091&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-01-06: grpc-dotnet v2.51.0, WinUI 2.8.2, Snoop 5.0.0</title>
			<link>/2023/01/06/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/01/06/updates</guid>
			<pubDate>Fri, 06 Jan 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-release-v2.51.0-grpcgrpc-dotnet"&gt;Release Release v2.51.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.51.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.51.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gRPC (grpc-dotnet) v2.51.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではロギングメッセージの改善などいくつかの修正と改善が含まれている。&lt;/p&gt;
&lt;h3 id="release-microsoft.ui.xaml-v2.8.2-microsoftmicrosoft-ui-xaml"&gt;Release Microsoft.UI.Xaml v2.8.2 · microsoft/microsoft-ui-xaml&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/microsoft-ui-xaml/releases/tag/v2.8.2"&gt;https://github.com/microsoft/microsoft-ui-xaml/releases/tag/v2.8.2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI v2.8.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは主に不具合の修正が数多く含まれている。&lt;/p&gt;
&lt;h3 id="release-v5.0.0-snoopwpfsnoopwpf"&gt;Release v5.0.0 · snoopwpf/snoopwpf&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/snoopwpf/snoopwpf/releases/tag/v5.0.0"&gt;https://github.com/snoopwpf/snoopwpf/releases/tag/v5.0.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Snoop v5.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET Framework 4.5.2 以前のバージョンと .NET Core 3.0 のサポートが削除され .NET 6 以上のバージョンのサポートが追加された。その他いくつかの修正と改善が含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="memorypack-yucchiys-note"&gt;MemoryPackでシリアライズ・デシリアライズをカスタマイズするいくつかの方法 | Yucchiy's Note&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.yucchiy.com/2023/01/memorypack-custom-serialize-deserialize/"&gt;https://blog.yucchiy.com/2023/01/memorypack-custom-serialize-deserialize/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MemoryPack のシリアライズとデシリアライズの処理の前後で独自の処理を挟み込む方法などシリアライズ処理のカスタマイズを紹介している。&lt;/p&gt;
&lt;h3 id="lnkcswin32"&gt;ショートカットファイル(.lnk)からリンク先を取得する(CsWin32編)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/udaken/articles/cswin32_get_target_from_shortcut_file"&gt;https://zenn.dev/udaken/articles/cswin32_get_target_from_shortcut_file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CsWin32 を使用して COM 呼び出しを行い、ショートカットファイルのリンク先を取得する方法について。&lt;/p&gt;
&lt;h3 id="difference-between-add-and-addasync-in-ef-core"&gt;Difference between Add and AddAsync in EF Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/medialesson/difference-between-add-and-addasync-in-ef-core-6b8cfd8f7cdb"&gt;https://medium.com/medialesson/difference-between-add-and-addasync-in-ef-core-6b8cfd8f7cdb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entify Framework Core の Add と AddAsync メソッドの違いについての解説。&lt;/p&gt;
&lt;p&gt;AddAsync は SQLServer の特別な値ジェネレーターが使用される時のみ非同期となり、それ以外のパターンでは Add を使用すべきという話。&lt;/p&gt;
&lt;h3 id="years-of-naudio"&gt;20 Years of NAudio&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://markheath.net/post/naudio-20-year-anniversary"&gt;https://markheath.net/post/naudio-20-year-anniversary&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NAudio の20年の振り返りと現在のプロジェクトのステータスについて。&lt;/p&gt;
&lt;h3 id="iservicecollection-qiita"&gt;IServiceCollection に対する拡張メソッド一覧 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mxProject/items/7d7a835adfb300d07fec"&gt;https://qiita.com/mxProject/items/7d7a835adfb300d07fec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.DependencyInjection をはじめとした Microsoft.Extensions が IServiceCollection に対して提供している拡張メソッドを紹介。&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-january-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | January 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/01/04/net-annotated-monthly-january-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/01/04/net-annotated-monthly-january-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による2023年1月の .NET 関連情報まとめ記事。&lt;/p&gt;
&lt;h3 id="a-first-look-behind-the-scenes-of-minimal-api-endpoints-behind-the-scenes-of-minimal-apis-part-1"&gt;A first look behind the scenes of minimal API endpoints: Behind the scenes of minimal APIs - Part 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-1-a-first-look-behind-the-scenes-of-minimal-api-endpoints/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-1-a-first-look-behind-the-scenes-of-minimal-api-endpoints/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core の Minimal API によるエンドポイント構築処理の裏側を解説。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;FNA では NativeAOT をコンソール向けに移植したという話。&lt;/p&gt;
&lt;!-- https://twitter.com/thespydog/status/1609602883418296320?s=12&amp;t=d6NIoMx9sGgDHxHGPEHOIA --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;NativeAOT allows C# game developers to build their games directly for console platforms, without any C++ transpilation! This means you get to use modern .NET on consoles, with build times around 10 seconds instead of 10 minutes.&lt;br&gt;&lt;br&gt;If you’re interested, please get in touch with us! &lt;a href="https://t.co/NOkhPdIYNb"&gt;https://t.co/NOkhPdIYNb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Caleb Cornett (&amp;#64;TheSpydog) &lt;a href="https://twitter.com/TheSpydog/status/1609602883418296320?ref_src=twsrc%5Etfw"&gt;January 1, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;bflat (C# をネイティブバイナリーにコンパイルするツール) で UEFI をターゲットにしてビルドできるようになった(ベアメタルで動くように)という話。&lt;/p&gt;
&lt;!-- https://twitter.com/mstrehovsky/status/1610043782061514752?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;New version of bflat, my take on C# with Go-like tooling is out. New in the 7.0.1 release: build C# apps that run on bare metal hardware without an OS. &lt;a href="https://t.co/kkCEg0K5nO"&gt;https://t.co/kkCEg0K5nO&lt;/a&gt; &lt;a href="https://t.co/At2nYFGWdd"&gt;pic.twitter.com/At2nYFGWdd&lt;/a&gt;&lt;/p&gt;&amp;mdash; Michal Strehovský (&amp;#64;MStrehovsky) &lt;a href="https://twitter.com/MStrehovsky/status/1610043782061514752?ref_src=twsrc%5Etfw"&gt;January 2, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2022-12-31: BenchmarkDotNet 0.13.3</title>
			<link>/2022/12/31/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2022/12/31/updates</guid>
			<pubDate>Sat, 31 Dec 2022 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="benchmarkdotnet-v0.13.3-benchmarkdotnet"&gt;BenchmarkDotNet v0.13.3 | BenchmarkDotNet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://benchmarkdotnet.org/changelog/v0.13.3.html"&gt;https://benchmarkdotnet.org/changelog/v0.13.3.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BenchmarkDotNet 0.13.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは ARM64 逆アセンブラー、.NET 8 の初期サポート、.NET 6/7 の Mono VM サポート、armv6 と ppc64le のサポートといったプラットフォーム技術への対応が追加された。
その他 WASM や NativeAOT、 Android でのさまざまな改善や ExceptionDiagnoser や PerfCollectProfiler といった機能の追加が行われている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="practicing-algorithms-using-polyglot-notebooks-part-1-setup"&gt;Practicing algorithms using Polyglot Notebooks - part 1 (setup)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/kkoziarski/practicing-algorithms-using-polyglot-notebooks-part-1-setup-1fp3"&gt;https://dev.to/kkoziarski/practicing-algorithms-using-polyglot-notebooks-part-1-setup-1fp3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polyglot Notebooks (.NET Interactive) を使用したアルゴリズムの勉強記事シリーズ。セットアップやヘルパーなどを紹介している。&lt;/p&gt;
&lt;h3 id="json-c-c"&gt;JSON とかの中身確認ツール | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2022/12/binarytool/"&gt;https://ufcpp.net/blog/2022/12/binarytool/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MessagePack や JSON などのデータをパースして表示、再シリアライズするといったツールを Blazor WebAssembly で作成したという記事。&lt;/p&gt;
&lt;h3 id="how-to-use-change-tokens-in.net-7"&gt;How to Use Change Tokens in .NET 7?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;gokerakce/how-to-use-change-tokens-in-net-7-3db9cc43910f"&gt;https://medium.com/&amp;#64;gokerakce/how-to-use-change-tokens-in-net-7-3db9cc43910f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IOptionsMonitor などで使用される ChangeToken の使い方を紹介している記事。&lt;/p&gt;
&lt;h3 id="semgrep-sql-injection-1"&gt;Semgrep で SQL Injection と戦う #1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/masakura/articles/3e65ba04401256"&gt;https://zenn.dev/masakura/articles/3e65ba04401256&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;静的コード解析ツールの Semgrep で C# のコードを解析し、SQL インジェクションを検出する方法についての記事。
記事では Dapper での対応と、いくつかの C# のコードパターンに対応させる方法を紹介している。&lt;/p&gt;
&lt;h3 id="udp-qiita"&gt;UDPでパケットが失われたり入れ替わることを検証 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/diontools/items/822772f8f2d54be8260a"&gt;https://qiita.com/diontools/items/822772f8f2d54be8260a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UDP で送受信した際にどこ程度ドロップや並び替えが発生するのかを検証してみたという記事。&lt;/p&gt;
&lt;h3 id="a-heavy-lift-bringing-kestrel-yarp-to-azure-app-services-qiita"&gt;A Heavy Lift: Bringing Kestrel + YARP to Azure App Services をピックアップして訳しつつ補足する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nt-7/items/786ec694b17d8816c2c9"&gt;https://qiita.com/nt-7/items/786ec694b17d8816c2c9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure App Service のフロントエンドを Kestrel + YARP へ移行したことについての公式ブログ記事を訳して紹介している記事。&lt;/p&gt;
&lt;h3 id="fun-with-nanoframework-running.net-c-on-esp32"&gt;Fun with NanoFramework, running .Net C# on ESP32&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sandervandevelde.wordpress.com/2022/12/15/fun-with-nanoframework-running-net-charp-on-esp32/"&gt;https://sandervandevelde.wordpress.com/2022/12/15/fun-with-nanoframework-running-net-charp-on-esp32/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP32 で .NET nanoFramework 使用して C# のコードを動かす方法を解説している記事。&lt;/p&gt;
&lt;p&gt;記事では MP3 の再生や Wi-Fi への接続方法なども紹介している。&lt;/p&gt;
&lt;h3 id="visual-studio-qiita"&gt;Visual Studioから利用できるプロジェクトテンプレートを作成する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kamikawa_m/items/75c337f101d9d2f6080e"&gt;https://qiita.com/kamikawa_m/items/75c337f101d9d2f6080e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio で使用できるプロジェクトテンプレートを作成する手順を紹介している記事。&lt;/p&gt;
&lt;h3 id="asp.net-core-identity-qiita"&gt;ASP.NET Core Identity の拡張性を探る - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/MugeSo/items/7ada1f2713b8917970c3"&gt;https://qiita.com/MugeSo/items/7ada1f2713b8917970c3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Identity のユーザーデータやパスワード関連など細かく拡張するためのインターフェースを紹介している記事。&lt;/p&gt;
&lt;h3 id="top.net-blog-posts-of-2022.net-blog"&gt;Top .NET Blog Posts of 2022 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/top-dotnet-blog-posts-of-2022/"&gt;https://devblogs.microsoft.com/dotnet/top-dotnet-blog-posts-of-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Blog の2022年のトップ投稿を改めて紹介している記事。&lt;/p&gt;
&lt;h3 id="top.net-videos-live-streams-of-2022.net-blog"&gt;Top .NET Videos &amp;amp; Live Streams of 2022 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/top-dotnet-videos-live-streams-of-2022/"&gt;https://devblogs.microsoft.com/dotnet/top-dotnet-videos-live-streams-of-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET チームによる2022年のトップ動画とライブストリーミングを紹介している記事。&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;C#のソースコードから差分のあるメソッドだけを抜き出す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/myosotis/items/fa48b8aa940f53405218"&gt;https://qiita.com/myosotis/items/fa48b8aa940f53405218&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Roslyn を使用してソースコードを解析して、二つのソースコード間のメソッドを比較して追加、削除、変更を抽出を試みるという記事。&lt;/p&gt;
&lt;h3 id="asp.net-core-7.0-blazor"&gt;ASP.NET Core 7.0 Blazor の新機能のカスタム エレメントを使ってみよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/okazuki/articles/blazor-customtag"&gt;https://zenn.dev/okazuki/articles/blazor-customtag&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 の Blazor で対応した、コンポーネントを一般的な HTML の要素のように使用できる仕組みであるカスタムエレメントを使用する方法についての記事。&lt;/p&gt;
&lt;h3 id="better-assertions-for-your-unit-tests"&gt;Better assertions for your unit tests&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.johansmarius.dev/2022/12/better-assertions-for-your-unit-tests.html?m=1"&gt;https://www.johansmarius.dev/2022/12/better-assertions-for-your-unit-tests.html?m=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ユニットテストでアサーションを Fluent な形で記述する FluentAssertions の紹介をしている記事。&lt;/p&gt;
&lt;h3 id="keycloak-as-authorization-server-in.net"&gt;Keycloak as Authorization Server in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/nikiforovall/keycloak-as-authorization-server-in-net-91m"&gt;https://dev.to/nikiforovall/keycloak-as-authorization-server-in-net-91m&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Keycloak をASP.NET Core の認証サーバーとして使用する方法について紹介している記事。&lt;/p&gt;
&lt;h3 id="accelerate-ml.net-training-with-intel-onedal"&gt;Accelerate ML.NET training with Intel oneDAL&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/accelerate-ml-net-training-with-intel-onedal/"&gt;https://devblogs.microsoft.com/dotnet/accelerate-ml-net-training-with-intel-onedal/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET 3.0 のプレビューリリースで Intel oneDAL バックエンドを利用できるようになったというアナウンス。&lt;/p&gt;
&lt;h3 id="vb.netmodvb-qiita"&gt;【VB.NET】拡張コンパイラModVBの紹介(インストール編) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/2c154a939b9896c855e2"&gt;https://qiita.com/yaju/items/2c154a939b9896c855e2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VB.NET を拡張したコンパイラー ModVB の導入方法を紹介している記事。&lt;/p&gt;
&lt;h3 id="blazor-javascript"&gt;Blazor から JavaScript のクラスのコンストラクタを呼びたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/okazuki/articles/call-js-constructor-from-blazor"&gt;https://zenn.dev/okazuki/articles/call-js-constructor-from-blazor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor の C# 側から JavaScript のクラスのインスタンスを作る方法についての記事。
.NET 8 では直接インスタンスを作ることができるが、.NET 7 では生成用の関数を呼び出すといった形をとる必要がある。&lt;/p&gt;
&lt;h3 id="net-maui-entityframeworkcore"&gt;【.NET MAUI 】EntityFrameworkCore のマイグレーションができない時の対処法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomori_k/articles/9cb07c31a1fdca"&gt;https://zenn.dev/tomori_k/articles/9cb07c31a1fdca&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI プロジェクトでは Entity Framework Core のマイグレーションを実行できない問題とその対処についての記事。&lt;/p&gt;
&lt;h3 id="c-tipudp-qiita"&gt;[C#] メモtip:UDPマルチキャストを受信する(送受信同一ホスト対応) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Yothuba3/items/ae6d7822b6b3cfe63be7"&gt;https://qiita.com/Yothuba3/items/ae6d7822b6b3cfe63be7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UDP マルチキャストを同一ホストでの送信も含めて受信する方法についての記事。&lt;/p&gt;
&lt;h3 id="cdapper-qiita"&gt;【C#】Dapper忘備録【基本編】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/YuMo_tea/items/ee4182260a0e3216237e"&gt;https://qiita.com/YuMo_tea/items/ee4182260a0e3216237e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dapper の基本的なメソッドと使い方を紹介している記事。&lt;/p&gt;
&lt;h3 id="ctencent-trtc-sdk-qiita"&gt;C#でTencent TRTC SDK使ってみた！ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SoeAtsu/items/6085c647b2c61feed5cb"&gt;https://qiita.com/SoeAtsu/items/6085c647b2c61feed5cb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tencent Real-Time Communication の SDK を使用して WPF アプリケーションにビデオ通話を組み込んでみるという記事。&lt;/p&gt;
&lt;h3 id="system.threading.ratelimiting-qiita"&gt;種類を分けて流量制限をする(System.Threading.RateLimiting) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/265111dd440041e66e5a"&gt;https://qiita.com/skitoy4321/items/265111dd440041e66e5a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 で導入されたレートリミットの API でURLやリソースといった種類ごとに流量制限を行うための PartitionedRateLimiter クラスの解説記事。&lt;/p&gt;
&lt;h3 id="ix.netmaxby.net-6maxbywithties-qiita"&gt;Ix.NETのMaxBy、.NET 6から加わった標準メソッドと名称が衝突したので、MaxByWithTiesになってた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/RyotaMurohoshi/items/9072987415bcab80b703"&gt;https://qiita.com/RyotaMurohoshi/items/9072987415bcab80b703&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 で LINQ に MaxBy などが追加された影響で Ix.NET の同名のメソッドが変わったことについての記事。&lt;/p&gt;
&lt;h3 id="azure-app-service-asp.net-core-app-service-getconnectionstring-jsakamoto"&gt;Azure App Service に配置した ASP.NET Core アプリで、App Service 上に設定した接続文字列を GetConnectionString で取得できない? | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/29454749/"&gt;https://devadjust.exblog.jp/29454749/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure App Service の接続文字列設定 (Configuration の  Connection strings) で PostgreSQL のみ正しく取得できない問題について。&lt;/p&gt;
&lt;p&gt;App Service で設定した接続文字列には各データベース種類ごとのプレフィックスがついており、M.E.Configuration は環境変数から読み取る際にそれらを考慮しているが PostgreSQL のみ考慮されていない問題がある。&lt;/p&gt;
&lt;h3 id="generatedregex-qiita"&gt;GeneratedRegexで遊ぶ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kurema/items/068385ba2f8bbe3858e1"&gt;https://qiita.com/kurema/items/068385ba2f8bbe3858e1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 で導入された正規表現の処理をあらかじめソースジェネレーターで生成する GeneratedRegex について解説している記事。&lt;/p&gt;
&lt;p&gt;記事では使用方法のほか、実装についての解説、パフォーマンスの比較といったことに触れている。&lt;/p&gt;
&lt;h3 id="hybrid-blazor-nativeaot"&gt;Hybrid Blazor + NativeAOT = ❤️&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codevision.medium.com/hybrid-blazor-nativeaot-%EF%B8%8F-a6c93de6ede3"&gt;https://codevision.medium.com/hybrid-blazor-nativeaot-%EF%B8%8F-a6c93de6ede3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Hybrid を Windows Forms 上の WebView2 で表示し、NativeAOT で動作させる方法についての記事。&lt;/p&gt;
&lt;h3 id="net-conf-2022-recap-event.net-7-windows"&gt;.NET Conf 2022 Recap Event 福岡で .NET 7 時代の Windows アプリケーション開発について話しました - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20221226/1671991195"&gt;https://blog.shibayan.jp/entry/20221226/1671991195&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2022 Recap Event 福岡での .NET 7 時代の Windows アプリケーション開発についてのセッションの振り返りとスライドの記事。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="kareaditakavita-kavita-is-a-fast-feature-rich-cross-platform-reading-server.built-with-a-focus-for-manga-and-the-goal-of-being-a-full-solution-for-all-your-reading-needs.setup-your-own-server-and-share-your-reading-collection-with-your-friends-and-family"&gt;Kareadita/Kavita: Kavita is a fast, feature rich, cross platform reading server. Built with a focus for manga and the goal of being a full solution for all your reading needs. Setup your own server and share your reading collection with your friends and family.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Kareadita/Kavita"&gt;https://github.com/Kareadita/Kavita&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Web ベースの書籍リーダーアプリケーション。&lt;/p&gt;
&lt;p&gt;ZIP ファイルなどを取り扱えるいわゆる自炊などのマンガビューアー。&lt;/p&gt;
&lt;h3 id="mkaringconfuserex-an-open-source-free-protector-for.net-applications"&gt;mkaring/ConfuserEx: An open-source, free protector for .NET applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mkaring/ConfuserEx"&gt;https://github.com/mkaring/ConfuserEx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET アプリケーションの難読化を行うツール。&lt;/p&gt;
&lt;p&gt;コマンドラインツールや MSBuild タスクといった形での利用が可能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/myosotis/items/e14e6e448eeaef574172"&gt;.Netの単一実行ファイルを難読化する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="mrdave1999dotenv.core-dotenv.core-is-a-class-library-for-read-and-parsing.env-files-in.net-core"&gt;MrDave1999/dotenv.core: dotenv.core is a class library for read and parsing .env files in .NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MrDave1999/dotenv.core?hss_channel=tw-2384354214"&gt;https://github.com/MrDave1999/dotenv.core?hss_channel=tw-2384354214&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.env (環境変数を記述したファイル) を .NET から取り扱うライブラリー。&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="soysign"&gt;SoySign | シンプルな電子契約サービス&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://soysign.com/"&gt;https://soysign.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor で実装された電子サインサービス。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/nekojoker/articles/11942566354b49"&gt;【Blazor】電子サインができるWebサービスを4ヶ月かけて作った話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2022-12-23: Oracle Entity Framework Core 7, ReSharper and Rider 2022.3.1</title>
			<link>/2022/12/23/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2022/12/23/updates</guid>
			<pubDate>Fri, 23 Dec 2022 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;p&gt;今週は都合によりリンクだけの紹介となっていますことご了承ください。&lt;/p&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing-oracle-entity-framework-core-7"&gt;Announcing Oracle Entity Framework Core 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/oracledevs/announcing-oracle-entity-framework-core-7-d89a2495b7db"&gt;https://medium.com/oracledevs/announcing-oracle-entity-framework-core-7-d89a2495b7db&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-and-rider-2022.3.1-bug-fixes-are-here"&gt;ReSharper and Rider 2022.3.1 Bug Fixes Are Here&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2022/12/21/resharper-and-rider-2022-3-1-bug-fixes/"&gt;https://blog.jetbrains.com/dotnet/2022/12/21/resharper-and-rider-2022-3-1-bug-fixes/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="write-markdown-without-leaving-visual-studio-visual-studio-blog"&gt;Write markdown without leaving Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/write-markdown-without-leaving-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/write-markdown-without-leaving-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forest.watch.impress.co.jp/docs/news/1466186.html"&gt;「Visual Studio 2022」にMarkdownエディターが導入へ ～拡張機能なしで編集・プレビュー／「Visual Studio 2022 17.5 Preview 2」でテスト中 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="sticky-scroll-now-in-preview-visual-studio-blog"&gt;Sticky Scroll now in preview - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/sticky-scroll-now-in-preview/"&gt;https://devblogs.microsoft.com/visualstudio/sticky-scroll-now-in-preview/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forest.watch.impress.co.jp/docs/news/1464242.html"&gt;「VS Code」でも人気の「固定スクロール」が「Visual Studio 2022」に／「Visual Studio 2022 17.5 Preview 2」でテスト中 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="kb5022083-wpf-xps-microsoft"&gt;KB5022083 WPF ベースのアプリケーションが XPS ドキュメントをレンダリングする方法の変更 - Microsoft サポート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://support.microsoft.com/ja-jp/topic/kb5022083-wpf-%E3%83%99%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%8C-xps-%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92%E3%83%AC%E3%83%B3%E3%83%80%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95%E3%81%AE%E5%A4%89%E6%9B%B4-a4ae4fa4-bc58-4c37-acdd-5eebc4e34556"&gt;https://support.microsoft.com/ja-jp/topic/kb5022083-wpf-%E3%83%99%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%8C-xps-%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92%E3%83%AC%E3%83%B3%E3%83%80%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95%E3%81%AE%E5%A4%89%E6%9B%B4-a4ae4fa4-bc58-4c37-acdd-5eebc4e34556&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forest.watch.impress.co.jp/docs/news/1465037.html"&gt;2022年12月「.NET」セキュリティ更新に問題、WPFアプリでXPS文書が正しく表示されない／セキュリティ強化策の影響、Microsoftが回避策を案内 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="unsafe-c-c"&gt;Unsafe クラスの敗北 (関数ポインター) | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2022/12/unsafer-unsafe/"&gt;https://ufcpp.net/blog/2022/12/unsafer-unsafe/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-7-bindafter-input-qiita"&gt;.NET 7 の新機能 &amp;#64;bind:after で input 入力を即時処理する (そしてもう一度死ぬ) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jsakamoto/items/0a265288cacea70634b4"&gt;https://qiita.com/jsakamoto/items/0a265288cacea70634b4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="app-service-authentication-easy-auth-asp.net"&gt;App Service Authentication (Easy Auth) と ASP.NET のフォーム認証を共存させつつ利用する - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20221218/1671348695"&gt;https://blog.shibayan.jp/entry/20221218/1671348695&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-interface"&gt;(C#) interface の静的仮想メンバーでジェネリックコンストラクタ - ネコのために鐘は鳴る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ikorin2.hatenablog.jp/entry/2022/12/17/212228"&gt;https://ikorin2.hatenablog.jp/entry/2022/12/17/212228&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="neue-cc-2022c-incremental-source-generator"&gt;neue cc - 2022年のC# (Incremental) Source Generator開発手法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2022/12/16_IncrementalSourceGenerator.html"&gt;https://neue.cc/2022/12/16_IncrementalSourceGenerator.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="libraryimportattribute.net-7"&gt;LibraryImportAttributeが.NET 7で追加されたので触ってみました - プログラム系統備忘録ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://tan.hatenadiary.jp/entry/2022/12/16/002739"&gt;https://tan.hatenadiary.jp/entry/2022/12/16/002739&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="t4-c-c"&gt;必ず、かの邪知暴虐の T4 を除かねばならぬと決意した | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2022/12/no-more-t4/"&gt;https://ufcpp.net/blog/2022/12/no-more-t4/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="experimenting-with.net-webassembly-running.net-based-spin-application-on-wasi-node-pool-in-aks"&gt;Experimenting With .NET &amp;amp; WebAssembly - Running .NET Based Spin Application On WASI Node Pool in AKS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.tpeczek.com/2022/12/experimenting-with-net-webassembly.html"&gt;https://www.tpeczek.com/2022/12/experimenting-with-net-webassembly.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="gitlab-code-quality-sast"&gt;GitLab でも好きな静的解析ツール (Code Quality &amp;amp; SAST) を使う&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/masakura/articles/ff74864c9af28d"&gt;https://zenn.dev/masakura/articles/ff74864c9af28d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazordatafactoryel-qiita"&gt;BlazorとDataFactoryで作るお手軽ELアプリ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/bitflyer/items/3b4ef34a9bdf5991b8f6"&gt;https://qiita.com/bitflyer/items/3b4ef34a9bdf5991b8f6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="adding-new-files-just-got-a-lot-faster-visual-studio-blog"&gt;Adding new files just got a lot faster - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/adding-new-files-just-got-a-lot-faster/"&gt;https://devblogs.microsoft.com/visualstudio/adding-new-files-just-got-a-lot-faster/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-ibm-power-1-qiita"&gt;.NET をIBM Powerで動かしてみた話 #1 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Nakaji1106/items/f0761c4d1dce58c0b8d5"&gt;https://qiita.com/Nakaji1106/items/f0761c4d1dce58c0b8d5&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/Nakaji1106/items/7ac09e9579a8b3f271f3"&gt;.NET をIBM Powerで動かしてみた話 #2 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/Nakaji1106/items/d6360a44b52ab360f76d"&gt;.NET をIBM Powerで動かしてみた話 #3 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="c11"&gt;C#11ではリストパターンが使えるようになった。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/yuchiki/articles/csharp-list-pattern"&gt;https://zenn.dev/yuchiki/articles/csharp-list-pattern&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-inumbert-qiita"&gt;[C#] INumberTの実装総覧 (分数型の実装例付き) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/YuHima03/items/20b59013d42d294b9839"&gt;https://qiita.com/YuHima03/items/20b59013d42d294b9839&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="build-your-own-podcast-app-with.net-7-blazor-and.net-maui.net-blog"&gt;Build Your Own Podcast App with .NET 7, Blazor, and .NET MAUI - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/build-your-own-podcast-app-with-dotnet-blazor-and-dotnet-maui/"&gt;https://devblogs.microsoft.com/dotnet/build-your-own-podcast-app-with-dotnet-blazor-and-dotnet-maui/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="nanoframeworknode-redmqtt"&gt;nanoFrameworkでNode-REDにMQTT通信してみた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/matsuataru/articles/0237a66beb73db"&gt;https://zenn.dev/matsuataru/articles/0237a66beb73db&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="xamarin.android.net6-qiita"&gt;Xamarin.Androidを.NET6に移行する方法について。 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/secile/items/10266c6b6bd5b179dc23"&gt;https://qiita.com/secile/items/10266c6b6bd5b179dc23&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="when-pulumi-met-nuke-a.net-love-story"&gt;When Pulumi met Nuke: a .NET love story&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/techwatching/when-pulumi-met-nuke-a-net-love-story-4omd"&gt;https://dev.to/techwatching/when-pulumi-met-nuke-a-net-love-story-4omd&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windowsc-qiita"&gt;Windowsの画面ロックをC#で検知する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/unasenohkoku/items/380e4fb4613b5abe96ea"&gt;https://qiita.com/unasenohkoku/items/380e4fb4613b5abe96ea&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-framework-nuget-nu5218-qiita"&gt;.NET Framework の NuGet パッケージに依存関係が設定されない件に対処する（NU5218警告） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mxProject/items/f031321ef0d229659f25"&gt;https://qiita.com/mxProject/items/f031321ef0d229659f25&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-mauiazure-ad-b2cmicrosoftaccount-qiita"&gt;.NET MAUIでAzure AD B2Cで認証する(まずはMicrosoftAccountでやってみる) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/MAUIHighSchool/items/b8faf3aba00082b023ac"&gt;https://qiita.com/MAUIHighSchool/items/b8faf3aba00082b023ac&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/MAUIHighSchool/items/dbc288e0997003cb242e"&gt;.NET MAUIでAzure AD B2Cで認証する(Googleアカウント認証追加してみる) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asyncsync-qiita"&gt;Asyncとsync混ぜるな危険 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/superriver/items/1f1b83d2d2c6b70ba408"&gt;https://qiita.com/superriver/items/1f1b83d2d2c6b70ba408&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="string.format-qiita"&gt;String.Formatメソッドを再実装してみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/t0r/items/f83f6ee4ddca1bcf27eb"&gt;https://qiita.com/t0r/items/f83f6ee4ddca1bcf27eb&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="unity-2021.2-c-qiita"&gt;Unity 2021.2 から新しく使えるようになったC#のクラスを眺める - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Gaku_Ishii/items/23d85defb8339fe3e9c0"&gt;https://qiita.com/Gaku_Ishii/items/23d85defb8339fe3e9c0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazorexcel-jshandsontable-qiita"&gt;BlazorでExcel ライクなグリッドJSライブラリ「Handsontable」を使ってみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/bcca337af393f15a6795"&gt;https://qiita.com/yaju/items/bcca337af393f15a6795&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2022.3jsonc-qiita"&gt;Rider 2022.3から、JSONからC#のクラスやレコードを作る機能が追加された - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/RyotaMurohoshi/items/0c6730d0988b022378e6"&gt;https://qiita.com/RyotaMurohoshi/items/0c6730d0988b022378e6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2022.3resharper-2022.3il-viewerilc-qiita"&gt;Rider 2022.3とReSharper 2022.3のIL Viewerで、ILをC#にデコンパイルできるようになった - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/RyotaMurohoshi/items/1f8244f0af50ad30583e"&gt;https://qiita.com/RyotaMurohoshi/items/1f8244f0af50ad30583e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-how-to-write-a-source-generator-part-15-planning"&gt;C# How to Write a Source Generator Part 1/5: Planning&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kafkawannafly.medium.com/c-how-to-write-a-source-generator-part-1-5-planning-6b4ab6ea5f63"&gt;https://kafkawannafly.medium.com/c-how-to-write-a-source-generator-part-1-5-planning-6b4ab6ea5f63&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-wasm-azure-ad"&gt;Blazor WASM でログイン後に Azure AD のセキュリティグループで認可をする&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/okazuki/articles/auth-securitygroup-blazorwasm"&gt;https://zenn.dev/okazuki/articles/auth-securitygroup-blazorwasm&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-webassembly-mark2-qiita"&gt;Blazor WebAssemblyでつくったマークシートシステム Mark2をオープンソースとして公開 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kaorumori/items/5b7255e3244159b082d3"&gt;https://qiita.com/kaorumori/items/5b7255e3244159b082d3&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="netcode-firstgrpcgrpc-web-qiita"&gt;.NETでCode-firstなgRPC（gRPC-Web）を使う - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/michi_wkwk/items/194276f0014df74cac41"&gt;https://qiita.com/michi_wkwk/items/194276f0014df74cac41&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-7-suspicious-places-and-errors-in-the-source-code"&gt;.NET 7: suspicious places and errors in the source code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/_sergvasiliev_/net-7-suspicious-places-and-errors-in-the-source-code-cgd"&gt;https://dev.to/_sergvasiliev_/net-7-suspicious-places-and-errors-in-the-source-code-cgd&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cardboard-qiita"&gt;今年もクリスマスプレゼントにCardboardでゲームを作ろう。 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/secile/items/69928aa1e52152034489"&gt;https://qiita.com/secile/items/69928aa1e52152034489&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-webassembly"&gt;Blazor WebAssemblyで新規の業務システムを開発している話&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/rkatsura/articles/4b0e0b3dbb9a59"&gt;https://zenn.dev/rkatsura/articles/4b0e0b3dbb9a59&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="unityindexrange-qiita"&gt;UnityでもIndex/Rangeを使おう！ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Euglenach/items/c433afe78d72fc1a18fc"&gt;https://qiita.com/Euglenach/items/c433afe78d72fc1a18fc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="csoundmaker-qiita"&gt;C#で昔のゲームのような音を生成する「SoundMaker」を公開しました - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/DTB_AutumnSky/items/8d78520567211d9a8dd2"&gt;https://qiita.com/DTB_AutumnSky/items/8d78520567211d9a8dd2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="frognote-qiita"&gt;ノートの作成・管理・ふりかえりソフトウェア 「FrogNote」を開発しました - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/DTB_AutumnSky/items/1d691e2428ac7fa9330c"&gt;https://qiita.com/DTB_AutumnSky/items/1d691e2428ac7fa9330c&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="system.text.jsonunity-yucchiys-note"&gt;System.Text.Jsonのソース生成をUnityで試す | Yucchiy's Note&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.yucchiy.com/2022/12/csharp-advent-calendar-system-text-json-unity/"&gt;https://blog.yucchiy.com/2022/12/csharp-advent-calendar-system-text-json-unity/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="nenonaninutypedsignalr.client.typescript-typescript-source-generator-to-provide-strongly-typed-signalr-clients-by-analyzing-c-type-definitions"&gt;nenoNaninu/TypedSignalR.Client.TypeScript: TypeScript source generator to provide strongly typed SignalR clients by analyzing C# type definitions.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/nenoNaninu/TypedSignalR.Client.TypeScript"&gt;https://github.com/nenoNaninu/TypedSignalR.Client.TypeScript&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.neno.dev/entry/2022/12/21/100259"&gt;【C#】SignalR にも SwaggerUI 的なのがほしい！ - ねののお庭。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="mxprojectwindowsformgenerichost-this-is-an-extension-library-for-generic-host.runs-a-windows-forms-application-on-generic-host"&gt;mxProject/WindowsFormGenericHost: This is an extension library for Generic Host. Runs a Windows Forms application on Generic Host.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mxProject/WindowsFormGenericHost"&gt;https://github.com/mxProject/WindowsFormGenericHost&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/mxProject/items/432f7b63b15bf270f842"&gt;汎用ホストでWindowsフォームアプリケーションを実行する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introduction-cadl"&gt;Introduction | Cadl&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://microsoft.github.io/cadl/"&gt;https://microsoft.github.io/cadl/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/niku/scraps/130738ff4eef50"&gt;おためしcadl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/timheuer/status/1603880562204495877?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;🔐 &lt;br&gt;Now in &lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;VisualStudio&lt;/a&gt; more text visualizers -- need to double-check that JWT token claim data, no problem... &lt;a href="https://t.co/sx1KnDtXlL"&gt;pic.twitter.com/sx1KnDtXlL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Tim (&amp;#64;timheuer) &lt;a href="https://twitter.com/timheuer/status/1603880562204495877?ref_src=twsrc%5Etfw"&gt;December 16, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://twitter.com/ufcpp/status/1605378308882935809?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;&lt;a href="https://t.co/varu5oDw8H"&gt;https://t.co/varu5oDw8H&lt;/a&gt;&lt;br&gt;VBでもちゃんとrequiredメンバーに対応するよ！&lt;br&gt;(毎年恒例、数か月遅れ。)&lt;/p&gt;&amp;mdash; ++C++; // 管理人: 岩永 (&amp;#64;ufcpp) &lt;a href="https://twitter.com/ufcpp/status/1605378308882935809?ref_src=twsrc%5Etfw"&gt;December 21, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>