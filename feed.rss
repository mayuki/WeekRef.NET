<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>WeekRef.NET</title>
		<link>/</link>
		<description>.NET 関連の情報をほぼ週刊配信</description>
		<copyright>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</copyright>
		<managingEditor>Mayuki Sawatari</managingEditor>
		<pubDate>Fri, 14 Jun 2024 10:03:12 GMT</pubDate>
		<lastBuildDate>Fri, 14 Jun 2024 10:03:12 GMT</lastBuildDate>
		<item>
			<title>2024-06-14: .NET MAUI Extension for VS Code, Windows App SDK 1.5.4, .NET 9 Preview 5</title>
			<link>/2024/06/14/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/06/14/updates</guid>
			<pubDate>Fri, 14 Jun 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="the.net-maui-extension-for-visual-studio-code-is-now-generally-available.net-blog"&gt;The .NET MAUI Extension for Visual Studio Code is now Generally Available - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-dotnet-maui-extension-for-visual-studio-code-is-now-generally-available/"&gt;https://devblogs.microsoft.com/dotnet/the-dotnet-maui-extension-for-visual-studio-code-is-now-generally-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code 向けの .NET MAUI の拡張機能が一般公開された。&lt;/p&gt;
&lt;p&gt;このリリースでは XAML の編集体験の向上やホットリロードといったものが可能となった。この機能拡張は C# Dev Kit と C# 拡張機能の上に構築されているため、ライセンスはそれらと同様のライセンスが必要となる。&lt;/p&gt;
&lt;h3 id="windows-app-sdk-windows-apps"&gt;バージョン 1.5.4 (1.5.240607001) - Windows App SDK の安定チャネルのリリース ノート - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/stable-channel#version-154-15240607001"&gt;https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/stable-channel#version-154-15240607001&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.5.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは WebView2 に関する問題をはじめとしていくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="net-9-preview-5-dotnetcore-discussion-9350"&gt;.NET 9 Preview 5 · dotnet/core · Discussion #9350&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/discussions/9350"&gt;https://github.com/dotnet/core/discussions/9350&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 5 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AI 向けの &lt;code&gt;TensorPrimitives&lt;/code&gt; と &lt;code&gt;Tensor&amp;lt;T&amp;gt;&lt;/code&gt; の強化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Span&lt;/code&gt; オーバーロードでの &lt;code&gt;params&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SearchValues&lt;/code&gt; を使用した文字列の検索&lt;/li&gt;
&lt;li&gt;完了したタスクから &lt;code&gt;foreach&lt;/code&gt; できる &lt;code&gt;Task.WhenEach&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;優先順位付けされた Unbounded Channel (無制限のチャンネル)&lt;/li&gt;
&lt;li&gt;より柔軟な OpenTelemetry アクティビティリンク&lt;/li&gt;
&lt;li&gt;TypeDescriptor のトリミングサポート&lt;/li&gt;
&lt;li&gt;型名パース&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rider-2024.1.3-and-resharper-2024.1.3-updates-are-out-the.net-tools-blog"&gt;Rider 2024.1.3 and ReSharper 2024.1.3 Updates Are Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/10/rd-rsrp-2024-1-3/"&gt;https://blog.jetbrains.com/dotnet/2024/06/10/rd-rsrp-2024-1-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider と ReSharper 2024.1.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Rider と ReSharper ともに Razor での PartialAsync の不要な呼び出しの検出対応が追加され、Rider はセキュリティ修正や最新の SDK の Roslyn への対応、その他 UI の改善などが含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="statically-sized-dynamically-sized-and-other"&gt;Statically Sized, dynamically sized, and other.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_1_3.html"&gt;https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_1_3.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust を MSIL にコンパイルするバックエンドを開発している中で起こしたバグについて。&lt;/p&gt;
&lt;h3 id="using-postgresql-with.net-and-entra-id.net-blog"&gt;Using PostgreSQL with .NET and Entra ID - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/using-postgre-sql-with-dotnet-and-entra-id/"&gt;https://devblogs.microsoft.com/dotnet/using-postgre-sql-with-dotnet-and-entra-id/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire から PostgreSQL を使用する方法と、Entra ID を使用して PostgreSQL をマネージド ID で保護する方法について。&lt;/p&gt;
&lt;h3 id="add-performance-monitor-to-your-nunit-tests"&gt;Add Performance Monitor to Your NUnit Tests&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;nw_enterprise/add-performance-monitor-to-your-nunit-tests-a716de6d74ac"&gt;https://medium.com/&amp;#64;nw_enterprise/add-performance-monitor-to-your-nunit-tests-a716de6d74ac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NUnit でユニットテストを実行時にパフォーマンスカウンターから CPU 使用率やメモリー使用率を取得してモニターする方法について。&lt;/p&gt;
&lt;h3 id="net-aspire"&gt;マイクロサービスを作らない人による .NET Aspire の概要説明（普通に便利）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet-aspire"&gt;https://zenn.dev/microsoft/articles/dotnet-aspire&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire の概要と各種提供している機能について。&lt;/p&gt;
&lt;h3 id="neue-cc-consoleappframework-v5-native-aotccli"&gt;neue cc - ConsoleAppFramework v5 - ゼロオーバーヘッド・Native AOT対応のC#用CLIフレームワーク&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/06/13_ConsoleAppFramework_v5.html"&gt;https://neue.cc/2024/06/13_ConsoleAppFramework_v5.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新たに書き直された Source Generator ベースの CLI フレームワーク ConsoleAppFramework の技術的な解説。&lt;/p&gt;
&lt;h3 id="c-array-and-list-fastest-loop-in-2024-ndepend-blog"&gt;C# Array and List Fastest Loop in 2024 - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/c-array-and-list-fastest-loop/"&gt;https://blog.ndepend.com/c-array-and-list-fastest-loop/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024年の C# における配列と List のループパフォーマンスについての調査。&lt;/p&gt;
&lt;h3 id="catch-up-on-the-latest-git-tooling-features-in-17.10-ga-visual-studio-blog"&gt;Catch up on the latest Git tooling features in 17.10 GA - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/catch-up-on-the-latest-git-tooling-features-in-17-10-ga/"&gt;https://devblogs.microsoft.com/visualstudio/catch-up-on-the-latest-git-tooling-features-in-17-10-ga/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 での Git ツール機能の新機能についての紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コミットメッセージの生成&lt;/li&gt;
&lt;li&gt;Pull request の説明の生成&lt;/li&gt;
&lt;li&gt;コミット履歴の Explain&lt;/li&gt;
&lt;li&gt;ワークアイテムをリンクした Visual Studio からの Pull request の作成 (Azure DevOps)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-17.10-performance-enhancements-visual-studio-blog"&gt;Visual Studio 2022 - 17.10 Performance Enhancements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-performance-enhancements/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-performance-enhancements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 でのパフォーマンス向上についての解説。&lt;/p&gt;
&lt;p&gt;17.10 では Windows Forms デザイナーの読み込み速度の向上、Razor での C# コードの色付け速度の向上、.NET ソリューションの読み込みの高速化、リファクタリングとチューニングによる読み込まれる DLL の削減といった改善が行われている。&lt;/p&gt;
&lt;h3 id="building-generative-ai-apps-with.net-8.net-blog"&gt;Building Generative AI apps with .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/build-gen-ai-with-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/build-gen-ai-with-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で生成 AI のアプリケーションを作ることについて。始め方、監視、エコシステムなどについて簡単に紹介。&lt;/p&gt;
&lt;h3 id="introducing-collection-expressions-in-c12-behind-the-scenes-of-collection-expressions-part-1"&gt;Introducing collection expressions in C#12: Behind the scenes of collection expressions - Part 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-1-introducing-collection-expressions-in-csharp12/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-1-introducing-collection-expressions-in-csharp12/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で導入されたコレクション式についての解説。&lt;/p&gt;
&lt;p&gt;記事ではコレクション初期化子の紹介や、型推論、ReadOnlySpan や空コレクション、スプレッドといった機能を紹介している。&lt;/p&gt;
&lt;h3 id="the-resharper-2024.2-early-access-program-begins-the.net-tools-blog"&gt;The ReSharper 2024.2 Early Access Program begins! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/10/resharper-2024-2-eap-begins/"&gt;https://blog.jetbrains.com/dotnet/2024/06/10/resharper-2024-2-eap-begins/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.2 EAP が開始された。&lt;/p&gt;
&lt;p&gt;この EAP の初期リリースでは Resharper C++ や dotMemory, dotTrace, dotPeek の改善が含まれている。&lt;/p&gt;
&lt;h3 id="rider-starts-its-early-access-program-for-version-2024.2-the.net-tools-blog"&gt;Rider Starts Its Early Access Program for Version 2024.2 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/10/rider-eap-2024-2-2/"&gt;https://blog.jetbrains.com/dotnet/2024/06/10/rider-eap-2024-2-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 EAP が開始された。&lt;/p&gt;
&lt;p&gt;この EAP の初期リリースでは新しい UI のデフォルト化、各種 UI の改善、バージョンコントロールの改善、Web 開発の改善、Unreal Engine アプリケーションのデバッグの改善、パフォーマンスとメモリーのプロファイリングの改善、デコンパイラーの改善、その他ランタイムの更新などが含まれている。&lt;/p&gt;
&lt;h3 id="automated-tests-instrumentation-via-opentelemetry-and-aspire-dashboard"&gt;Automated Tests instrumentation via OpenTelemetry and Aspire Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/nikiforovall/automated-tests-instrumentation-via-opentelemetry-and-aspire-dashboard-13dj"&gt;https://dev.to/nikiforovall/automated-tests-instrumentation-via-opentelemetry-and-aspire-dashboard-13dj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry と Aspire Dashboard を使用して自動テストの計測を行う方法について。&lt;/p&gt;
&lt;h3 id="build-a-generative-ai-rag-app-in-c-with-phi-3-onnx-and-sharpvector-build5nines"&gt;Build A Generative AI + RAG App In C# With Phi-3, ONNX, And SharpVector | Build5Nines&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://build5nines.com/build-a-generative-ai-rag-app-in-c-with-phi-3-onnx-and-sharpvector/"&gt;https://build5nines.com/build-a-generative-ai-rag-app-in-c-with-phi-3-onnx-and-sharpvector/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# と Phi-3、ONNX に著者の実装したインメモリーベクトルデータベースを組み合わせて RAG アプリケーションを実装する方法について。&lt;/p&gt;
&lt;h3 id="getting-started-with-ui-testing.net-maui-apps-using-appium.net-blog"&gt;Getting started with UI testing .NET MAUI apps using Appium - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-maui-ui-testing-appium/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-maui-ui-testing-appium/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Appium を使用して .NET MAUI アプリケーションの UI テストを行う方法について。&lt;/p&gt;
&lt;p&gt;記事では導入方法から記述方法、様々な環境での実行などについても触れている。&lt;/p&gt;
&lt;h3 id="polymorphic-serialization-via-system.text.json-in-asp.net-core-minimal-api"&gt;Polymorphic serialization via System.Text.Json in ASP.NET Core Minimal API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nikiforovall.github.io/dotnet/aspnetcore/2024/04/06/openapi-polymorphism.html"&gt;https://nikiforovall.github.io/dotnet/aspnetcore/2024/04/06/openapi-polymorphism.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Minimal API と System.Text.Json でポリモーフィックな JSON のシリアライズを行う方法について。&lt;/p&gt;
&lt;h3 id="encoding.getstring"&gt;Encoding.GetString()は救われない&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/3d19bf4bb22e6e"&gt;https://zenn.dev/sayurin/articles/3d19bf4bb22e6e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Encoding.GetString&lt;/code&gt; で文字列を作成する際に一時配列を作ってしまうことがあるケースについて。&lt;/p&gt;
&lt;h3 id="net-aspire-1"&gt;マイクロサービス作らなくても .NET Aspire って便利&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet-aspire-minimal"&gt;https://zenn.dev/microsoft/articles/dotnet-aspire-minimal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire をローカル開発サーバー環境(DB、Cacheなど)のセットアップとして活用する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-tmdstmds.ssh.net-ssh-client-library"&gt;GitHub - tmds/Tmds.Ssh: .NET SSH client library&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/tmds/Tmds.Ssh"&gt;https://github.com/tmds/Tmds.Ssh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;モダンな .NET をベースに実装された SSH クライアントの実装。&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;ASP.NET Core MVC, Razor Pages を必要としない ASP.NET Core 向け Razor ベーステンプレートエンジンの Razor Slices がトリミングに対応。&lt;/p&gt;
&lt;!-- https://x.com/damianedwards/status/1799122783802401092?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Razor plus native AOT? Now you can! I finally released my updates to RazorSlices which now supports trimming &amp;amp; native AOT! Use in conjunction with Minimal APIs to get small, fast apps that start instantly.&lt;a href="https://t.co/f7YIgJ1GyD"&gt;https://t.co/f7YIgJ1GyD&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/aspnetcore?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#aspnetcore&lt;/a&gt;&lt;/p&gt;&amp;mdash; Damian Edwards (&amp;#64;DamianEdwards) &lt;a href="https://twitter.com/DamianEdwards/status/1799122783802401092?ref_src=twsrc%5Etfw"&gt;June 7, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="obsolete-servicepointmanager-by-mihazupan-pull-request-103456-dotnetruntime"&gt;Obsolete ServicePointManager 🎉 by MihaZupan · Pull Request #103456 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/103456"&gt;https://github.com/dotnet/runtime/pull/103456&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ServicePointManager&lt;/code&gt; を Obsolete にするという PR。&lt;/p&gt;
&lt;h3 id="use-new-system.net.serversentevents-package-in-signalr-by-brennanconroy-pull-request-56206-dotnetaspnetcore"&gt;Use new System.Net.ServerSentEvents package in SignalR by BrennanConroy · Pull Request #56206 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/pull/56206"&gt;https://github.com/dotnet/aspnetcore/pull/56206&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Server-Sents Events の実装が SignalR の内部のものから新たに追加された System.Net.ServerSentsEvents に移行する PR。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/runtime/pull/102238"&gt;Add System.Net.ServerSentEvents by stephentoub · Pull Request #102238 · dotnet/runtime · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-06-07: MSTest 3.4, OpenAI for .NET 2.0.0-beta.1, Serilog 4.0.0, Windows App SDK 1.6.0-experimental1</title>
			<link>/2024/06/07/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/06/07/updates</guid>
			<pubDate>Fri, 07 Jun 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="mstest-3.4-is-here-with-winui-support-and-new-analyzers.net-blog"&gt;MSTest 3.4 is here with WinUI support and new analyzers! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-mstest-34/"&gt;https://devblogs.microsoft.com/dotnet/introducing-mstest-34/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSTest 3.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは MSTest.Analyzer の様々な改善とバグ修正、STA スレッドのサポート、フィクスチャーメソッドのタイムアウトサポート、MSTest.Sdk での Playwright や Aspire のサポート、MSTest.Runner の WinUI のサポートといった改善が行われている。&lt;/p&gt;
&lt;h3 id="announcing-the-official-openai-library-for.net.net-blog"&gt;Announcing the official OpenAI library for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/openai-dotnet-library/"&gt;https://devblogs.microsoft.com/dotnet/openai-dotnet-library/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenAI の公式クライアントの最初のベータ版である 2.0.0-beta.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このライブラリーでは OpenAI の API のほとんどをカバーし、GPT-4o や IAsyncEnumerable といったものへの対応などが含まれ、今後も最新の機能に合わせて改善が続けられる。&lt;/p&gt;
&lt;p&gt;記事ではこれまでの OpenAI v1.x NuGet パッケージやその他パッケージのコミュニティーについても触れている。&lt;/p&gt;
&lt;h3 id="release-v4.0.0-serilogserilog"&gt;Release v4.0.0 · serilog/serilog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/serilog/serilog/releases/tag/v4.0.0"&gt;https://github.com/serilog/serilog/releases/tag/v4.0.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Serilog 4.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではバッチ処理を簡単に実装できる仕組みがサポートされたほか、実験的なドット付き名前キャプチャーのサポートなどが追加されている。&lt;/p&gt;
&lt;p&gt;またこのリリースから 2.0.0.0 に固定されていたアセンブリバージョンがパッケージのバージョンと一致するようになったため .NET Framework で使用する場合にアセンブリリダイレクトが必要になる場合があるとのこと。&lt;/p&gt;
&lt;h3 id="experimental1-windows-sdk-windows-apps-microsoft-learn"&gt;バージョン 1.6 試験的 (1.6.0-experimental1) - Windows アプリ SDK の最新の試験段階チャネル リリース ノート - Windows apps | Microsoft Learn&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-16-experimental-160-experimental1"&gt;https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-16-experimental-160-experimental1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.6.0-experimental1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは NativeAOT のサポートの追加、TabView の改善、新しい TitleBar コントロール、その他いくつかの改善と新しい API の追加が行われている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6-exp1"&gt;Release Windows App SDK 1.6-experimental1 · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-the-revamped-visual-studio-resource-explorer-visual-studio-blog"&gt;Introducing the Revamped Visual Studio Resource Explorer - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-visual-studio-resource-explorer/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-visual-studio-resource-explorer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 Preview 2 で導入された新しくなったリソースエクスプローラーの紹介。&lt;/p&gt;
&lt;p&gt;新しくなったリソースエクスプローラーではソリューション全体でのビューやダークモード、検索とフィルターといった操作をサポートし、リソースの取り扱いが容易になっている。&lt;/p&gt;
&lt;p&gt;現時点では CSV でのインポート、エクスポートには未対応とのこと。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="thoughts-about-primary-constructors-3-pros-and-5-cons"&gt;Thoughts about primary constructors: 3 pros and 5 cons&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/thoughts-about-primary-constructors-3-pros-and-5-cons/"&gt;https://andrewlock.net/thoughts-about-primary-constructors-3-pros-and-5-cons/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のプライマリーコンストラクターの良いところ3つと落とし穴や微妙なところ5つを紹介している。&lt;/p&gt;
&lt;h3 id="asp.net-mvc-coreactionfilterattributedi3httpclient-qiita"&gt;ASP.NET MVC CoreのActionFilterAttributeにDIする3つの方法（＋アクションフィルタ内でHttpClientを使う） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jun1s/items/c000763f31e6a42bdd3b"&gt;https://qiita.com/jun1s/items/c000763f31e6a42bdd3b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core MVC のアクションフィルターで DI コンテナーからサービスを取り出して使用するための方法について。&lt;code&gt;ServiceFilter&lt;/code&gt;, &lt;code&gt;TypeFilter&lt;/code&gt;, &lt;code&gt;IFilterFactory&lt;/code&gt; を紹介している。&lt;/p&gt;
&lt;h3 id="giving-our-azure-marketplace-images-a-makeover-visual-studio-blog"&gt;Giving our Azure marketplace images a makeover - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/giving-our-visual-studio-azure-marketplace-images-a-makeover/"&gt;https://devblogs.microsoft.com/visualstudio/giving-our-visual-studio-azure-marketplace-images-a-makeover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Marketplace での Visual Studio のインストールされた新しいイメージの追加と非推奨となったオファーについて。&lt;/p&gt;
&lt;h3 id="how-to-readwrite-from-credential-manager-in.net-8"&gt;How to Read/Write from Credential Manager in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/issamboutissante/how-to-readwrite-from-credential-manager-in-net-8-1ag"&gt;https://dev.to/issamboutissante/how-to-readwrite-from-credential-manager-in-net-8-1ag&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows の資格マネージャーを読み書きする方法について。記事では &lt;code&gt;Meziantou.Framework.Win32&lt;/code&gt; パッケージを使用して読み書きを行う方法を紹介している。&lt;/p&gt;
&lt;h3 id="rider-2024.2-roadmap-the.net-tools-blog"&gt;Rider 2024.2 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/05/rider-2024-2-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2024/06/05/rider-2024-2-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 のロードマップ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;パフォーマンス&lt;/li&gt;
&lt;li&gt;ユーザーエクスペリエンス
&lt;ul&gt;
&lt;li&gt;ナビゲーションバーの刷新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;デバッガー
&lt;ul&gt;
&lt;li&gt;タスクビューとタスクの依存関係グラフ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ゲーム開発
&lt;ul&gt;
&lt;li&gt;Unity の IL2CPP バックエンド使用時のデバッグの改善やコレクションビジュアライザーの改善、シェーダーバリアント&lt;/li&gt;
&lt;li&gt;Unreal Engine のデバッグ改善&lt;/li&gt;
&lt;li&gt;Godot のデバッグを含む GDScript のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;フレームワークとテクノロジー&lt;/li&gt;
&lt;li&gt;フルラインコード補完&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="a-beginners-guide-to-mapping-arrays-in-ef-core-8.net-blog"&gt;A beginner's guide to mapping arrays in EF Core 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/array-mapping-in-ef-core-8/"&gt;https://devblogs.microsoft.com/dotnet/array-mapping-in-ef-core-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entiy Framework Core 8 での配列マッピングについての解説。&lt;/p&gt;
&lt;p&gt;記事では PostgreSQL の配列型やそれ以外のデータベースでの JSON を使用した配列、型付き配列、それらがどのように展開されるのかといったことを開設している。&lt;/p&gt;
&lt;h3 id="get-hands-on-with-visual-studio-and-azure-live-at-microsoft-hq-this-august-visual-studio-blog"&gt;Get Hands-On with Visual Studio and Azure: Live at Microsoft HQ this August! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/get-hands-on-with-visual-studio-and-azure-live-at-microsoft-hq-this-august/"&gt;https://devblogs.microsoft.com/visualstudio/get-hands-on-with-visual-studio-and-azure-live-at-microsoft-hq-this-august/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8月5日から9日にかけて Microsoft 本社にて行われる Visual Studio LIVE! イベントの告知。&lt;/p&gt;
&lt;p&gt;記事では Visual Studio LIVE! イベントの概要や早期特別割引の案内を紹介している。&lt;/p&gt;
&lt;h3 id="creating-shell-extensions-in.net-8-with-sharpshell"&gt;Creating Shell Extensions in .NET 8 with SharpShell&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/issamboutissante/creating-shell-extensions-in-net-8-with-sharpshell-2ioe"&gt;https://dev.to/issamboutissante/creating-shell-extensions-in-net-8-with-sharpshell-2ioe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 と &lt;code&gt;SharpShell&lt;/code&gt; を使用してコンテキストメニューのシェル拡張を実装する方法について。&lt;/p&gt;
&lt;h3 id="net-8-blazor-errorboundary"&gt;.NET 8 での Blazor で ErrorBoundary を使ったエラーハンドリングの注意点&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-errorboundary"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-errorboundary&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor における ErrorBoundary を使用してエラーをハンドリングする方法と注意すべき点について。&lt;/p&gt;
&lt;h3 id="state-machines-light-switches-and-space-travel-with-stateless-and.net-8"&gt;State Machines, Light Switches, and Space Travel with Stateless and .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/state-machines-light-switches-and-space-travel-with-stateless-and-dotnet-8"&gt;https://khalidabuhakmeh.com/state-machines-light-switches-and-space-travel-with-stateless-and-dotnet-8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Stateless&lt;/code&gt; を使用したステートマシンの実装方法の紹介。記事では UmlDotGraph を使用したグラフの出力などについても触れている。&lt;/p&gt;
&lt;h3 id="understanding-the-exception.hresult-property-in-c"&gt;Understanding the Exception.HResult property in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/understanding-the-exception-hresult-property-in-c/"&gt;https://blog.elmah.io/understanding-the-exception-hresult-property-in-c/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exception の HResult プロパティーについての解説。&lt;/p&gt;
&lt;p&gt;記事では HResult はどのような役割でどのようなルールで値が設定されるのか、その読み方と調べ方について振れている。&lt;/p&gt;
&lt;h3 id="microsoft-photos-migrating-from-uwp-to-windows-app-sdk"&gt;Microsoft Photos: Migrating from UWP to Windows App SDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blogs.windows.com/windowsdeveloper/2024/06/03/microsoft-photos-migrating-from-uwp-to-windows-app-sdk/"&gt;https://blogs.windows.com/windowsdeveloper/2024/06/03/microsoft-photos-migrating-from-uwp-to-windows-app-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows のフォトアプリを UWP から Windows App SDK へ移行した事例についての説明。&lt;/p&gt;
&lt;p&gt;記事ではプロセスモデルが変わったこと、WebView2 を使用できるようになったこと、メンテナンス性の向上、ASTA から STA にかわったことや AutoPlay といった技術的なチャレンジといった点を解説している。&lt;/p&gt;
&lt;h3 id="c-onnx-runtime-generative-ai-directml-phi-3"&gt;C# と ONNX Runtime Generative AI (DirectML) を使って Phi-3 をローカルで動かす - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20240604/1717465930"&gt;https://blog.shibayan.jp/entry/20240604/1717465930&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ONNX Runtime Generative AI (DirectML) を使用して Phi-3 モデルをローカル環境で動かしてみる解説。&lt;/p&gt;
&lt;h3 id="why-you-should-batch-message-processing-and-how-to-do-it-with.net-asyncenumerable-event-driven.io"&gt;Why you should batch message processing and how to do it with .NET AsyncEnumerable - Event-Driven.io&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://event-driven.io/en/batching_async_enumerable/"&gt;https://event-driven.io/en/batching_async_enumerable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AsyncEnumerable を使用しつつメッセージをバッチ処理する方法について。&lt;/p&gt;
&lt;p&gt;記事では Open.ChannelExtensions ライブラリーを使用して Channel を元に AsyncEnumerable を作成する方法を紹介している。&lt;/p&gt;
&lt;h3 id="primitive-vs-strongly-typed-dictionary-keys-feat.frozen-collections-and-benchmarkdotnet"&gt;Primitive vs strongly typed dictionary keys (feat. frozen collections and BenchmarkDotNet)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.codingmilitia.com/2024/04/13/primitive-vs-strongly-typed-dictionary-keys-feat-frozen-collections-and-benchmarkdotnet/"&gt;https://blog.codingmilitia.com/2024/04/13/primitive-vs-strongly-typed-dictionary-keys-feat-frozen-collections-and-benchmarkdotnet/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="weakly-and-strongly-typed-values-in.net"&gt;Weakly and strongly typed values in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://yoh.dev/weakly-and-strongly-typed-values-in-dotnet"&gt;https://yoh.dev/weakly-and-strongly-typed-values-in-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プリミティブ(弱い型)とそれをラップした強い型を使用した FrozenDictionary の参照パフォーマンスについて。&lt;/p&gt;
&lt;h3 id="com-cexcel-qiita"&gt;COM の解放について (C#、Excel) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nnkanegon/items/1715b0da782e3dd713c9"&gt;https://qiita.com/nnkanegon/items/1715b0da782e3dd713c9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;COM オブジェクトの解放に関する問題と、解放漏れによるリークを調査する方法について。&lt;/p&gt;
&lt;h3 id="microsoft-ime-qiita"&gt;Microsoft IME の変換候補だけ欲しい - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Fom/items/d9e421bae516be85d675"&gt;https://qiita.com/Fom/items/d9e421bae516be85d675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IME による変換候補を取得するライブラリーとその利用方法についての簡単な紹介。&lt;/p&gt;
&lt;h3 id="refactor-your-code-using-alias-any-type.net-blog"&gt;Refactor your code using alias any type - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/refactor-your-code-using-alias-any-type/"&gt;https://devblogs.microsoft.com/dotnet/refactor-your-code-using-alias-any-type/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 の任意の型のエイリアスを使用してリファクタリングしよう、という記事。&lt;/p&gt;
&lt;h3 id="using-keycloak-in.net-aspire-projects"&gt;Using Keycloak in .NET Aspire projects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nikiforovall.github.io/dotnet/keycloak/2024/06/02/aspire-support-for-keycloak.html"&gt;https://nikiforovall.github.io/dotnet/keycloak/2024/06/02/aspire-support-for-keycloak.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="netplaywright"&gt;.NETでPlaywrightのテスト環境を構築しよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/vscode_playwright"&gt;https://zenn.dev/zead/articles/vscode_playwright&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Playwright を使用したブラウザーテストの環境構築について。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-05-31: Build 2024, grpc-dotnet v2.63.0</title>
			<link>/2024/05/31/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/05/31/updates</guid>
			<pubDate>Fri, 31 May 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="catch-up-on-microsoft-build-2024-essential-sessions-for.net-developers.net-blog"&gt;Catch Up on Microsoft Build 2024: Essential Sessions for .NET Developers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/catching-up-on-microsoft-build-2024-essential-sessions-for-dotnet-developers/"&gt;https://devblogs.microsoft.com/dotnet/catching-up-on-microsoft-build-2024-essential-sessions-for-dotnet-developers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Build 2024 での .NET 開発者向けの動画の紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLdo4fOcmZ0oUZz7p8H1HsQjgv5tRRIvAS"&gt;.NET at Microsoft Build 2024 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-release-v2.63.0-grpcgrpc-dotnet"&gt;Release Release v2.63.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.63.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.63.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.63.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではメモリーリークやレースコンディションといったいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="introducing-libvlcsharp-for-maui"&gt;Introducing LibVLCSharp for MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/mfkl/introducing-libvlcsharp-for-maui-naj"&gt;https://dev.to/mfkl/introducing-libvlcsharp-for-maui-naj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LibVLCSharp の .NET MAUI 対応版のリリース。&lt;/p&gt;
&lt;p&gt;この初期リリースでは Android と iOS をサポートし、WinUI への対応はフィードバックなどを経て検討とのこと。&lt;/p&gt;
&lt;h3 id="introducing-links-to-source-code-for.net-api-docs.net-blog"&gt;Introducing links to source code for .NET API Docs - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-docs-link-to-source-code/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-docs-link-to-source-code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;learn.microsoft.com の .NET API ドキュメントからソースコードへのリンクが実装されたことと、その実装の裏側の解説。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="testcontainers-for.netpodman"&gt;Testcontainers for .NETをpodmanで動かす&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/k_maru/articles/testcontainersdotnet_podman"&gt;https://zenn.dev/k_maru/articles/testcontainersdotnet_podman&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Testcontainers for .NET によるコンテナーの実行を Docker の代わりに Podman を使用する方法について。&lt;/p&gt;
&lt;h3 id="a-modern-extension-manager-has-arrived-with-visual-studio-17.10-visual-studio-blog"&gt;A modern Extension Manager has arrived with Visual Studio 17.10 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-extension-manager-17-10/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-extension-manager-17-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 で導入された新しくなった拡張マネージャーについての紹介。&lt;/p&gt;
&lt;h3 id="things-you-didnt-know-about-jetbrains-riders-nuget-support-the.net-tools-blog"&gt;9 Things You Didn't Know About JetBrains Rider's NuGet Support | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/29/9-things-you-didn-t-know-about-jetbrains-rider-s-nuget-support/"&gt;https://blog.jetbrains.com/dotnet/2024/05/29/9-things-you-didn-t-know-about-jetbrains-rider-s-nuget-support/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider の NuGet サポートに関する9つのポイントの紹介。&lt;/p&gt;
&lt;p&gt;ツールウィンドウ、パッケージソース管理、キャッシュ管理、Assembly Explorer でパッケージを開く、プレリリース版チェックボックス、Checkmarx を使用したセキュリティー、依存してるコードの検索、一か所でのパッケージアップデート、設定、など。&lt;/p&gt;
&lt;h3 id="wpfgo"&gt;脱初心者！WPFで次のステップへGO！&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/luxiar/articles/f25596cd1876a2"&gt;https://zenn.dev/luxiar/articles/f25596cd1876a2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF のアプリケーションを作るとっかかりとなる構成とテクニックの紹介。&lt;/p&gt;
&lt;h3 id="choosing-the-best-immutable-dictionary-for-your-c-projects"&gt;Choosing the Best Immutable Dictionary for Your C# Projects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://goatreview.com/choosing-best-immutable-dictionary-csharp-projects/"&gt;https://goatreview.com/choosing-best-immutable-dictionary-csharp-projects/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;イミュータブルな Dictionary について ReadOnlyDictionary, ImmutableDictionary, FrozenDictionary のパフォーマンスと特性を比較、説明している。&lt;/p&gt;
&lt;h3 id="visualstudio.extensibility-17.10-debug-your-extensions-with-the-diagnostics-explorer-visual-studio-blog"&gt;VisualStudio.Extensibility 17.10: Debug your extensions with the Diagnostics Explorer - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-10/"&gt;https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新しい Visual Studio の拡張モデル、VisualStudio.Extensibility の 17.10 での新機能について。&lt;/p&gt;
&lt;p&gt;Diagnostics Explorer によるデバッグ、XAML リソース、ファイルの選択、プロジェクトに対してクエリーした結果のトラッキングなど。&lt;/p&gt;
&lt;h3 id="xunit-ilogger-qiita"&gt;xUnit の単体テストで ILogger への出力を実現する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/higege-amdeker/items/4e2adfcc1b57628d2c71"&gt;https://qiita.com/higege-amdeker/items/4e2adfcc1b57628d2c71&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;xUnit を使用したユニットテストで ILogger への出力をテストアウトプットへ出力する方法について。&lt;/p&gt;
&lt;h3 id="blocking-primary-constructor-member-capture-using-a-roslyn-analyzer"&gt;Blocking primary constructor member capture using a Roslyn Analyzer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/blocking-primary-constructor-member-capture-using-an-analyzer/"&gt;https://andrewlock.net/blocking-primary-constructor-member-capture-using-an-analyzer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プライマリーコンストラクターのキャプチャーをブロックする Analyzer を Roslyn.Diagnostics.Analyzers から使用、または独自の Analyzer で実装する方法について。&lt;/p&gt;
&lt;h3 id="publish-and-view-mstest-test-results-in-github-actions"&gt;Publish and view MSTest test results in Github Actions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ma11hewthomas/publish-and-view-mstest-test-results-in-github-actions-35f11d97a259"&gt;https://medium.com/&amp;#64;ma11hewthomas/publish-and-view-mstest-test-results-in-github-actions-35f11d97a259&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSTest の結果を .NET 向け CTRF レポーターと github-actions-ctrf によって GitHub Actions のレポートに出力する方法。&lt;/p&gt;
&lt;h3 id="how-to-update-a-nuget-library-once-the-author-isnt-available-the-reformed-programmer"&gt;How to update a NuGet library once the author isn’t available – The Reformed Programmer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.thereformedprogrammer.net/how-to-update-a-nuget-library-once-the-author-isnt-available/"&gt;https://www.thereformedprogrammer.net/how-to-update-a-nuget-library-once-the-author-isnt-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;認知症となった著者がライブラリーを更新できなくなった時にも他の人が更新できるようにするために行ったことについて。&lt;/p&gt;
&lt;h3 id="net-aspire-aspirebuild-2024"&gt;.NET Aspire が正式リリース！Aspireを紹介したBuild 2024のセッションを紹介します&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/adf174ff96d3cb"&gt;https://zenn.dev/jtechjapan_pub/articles/adf174ff96d3cb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Build 2024 で .NET Aspire について触れているセッションの紹介。&lt;/p&gt;
&lt;h3 id="casyncawait-annulus-games"&gt;【C#】非同期処理とasync/await - Annulus Games&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://annulusgames.com/blog/async-await/"&gt;https://annulusgames.com/blog/async-await/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 非同期についてC# の async/await をはじめ、キャンセルや IAsyncEnumerable などについて仕組みを含めた解説。&lt;/p&gt;
&lt;h3 id="avalonia-ui-enhance-your-app-with-fluentavalonia-theme-customization"&gt;Avalonia UI: Enhance Your App with FluentAvalonia Theme Customization&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;faruk.akyapak/avalonia-ui-enhance-your-app-with-fluentavalonia-theme-customization-0e8b9bdb4b16"&gt;https://medium.com/&amp;#64;faruk.akyapak/avalonia-ui-enhance-your-app-with-fluentavalonia-theme-customization-0e8b9bdb4b16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia の FluentAvalonia テーマをカスタマイズする方法について。&lt;/p&gt;
&lt;h3 id="c.netbyteskb-mb-gb"&gt;C# (.NET)でバイト(Bytes)をKB, MB, GBに変換したい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/hirosukekayaba/articles/77d3ae2d90956a"&gt;https://zenn.dev/hirosukekayaba/articles/77d3ae2d90956a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ファイルサイズをKB, MB, GB といった単位で文字列フォーマットするテクニックについて。&lt;/p&gt;
&lt;h3 id="trigger-your-gcs-with-dotnet-fullgc"&gt;Trigger your GCs with dotnet-fullgc!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/trigger-your-gcs-with-dotnet-fullgc-c51bc3e364dc"&gt;https://chnasarre.medium.com/trigger-your-gcs-with-dotnet-fullgc-c51bc3e364dc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コマンドラインから実行中の .NET プロセスで GC を実行するツールとその実装方法について。&lt;/p&gt;
&lt;h3 id="net-8-blazor-wasm-grpc"&gt;.NET 8 の Blazor で WASM + gRPC のプロジェクトを作る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasm-with-grpc"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasm-with-grpc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor WebAssembly プロジェクトで gRPC (Web) を使用した通信を行う方法について。&lt;/p&gt;
&lt;h3 id="re-observability"&gt;Re:ゼロから始める Observability - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2024/05/25/164314"&gt;https://blog.neno.dev/entry/2024/05/25/164314&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Observability とは何かや OpenTelemetry の用語について、C#/.NET での取り扱いや Collector の活用について。&lt;/p&gt;
&lt;h3 id="colorpalettepublic-constructor"&gt;ColorPaletteクラスにpublic constructorが登場！&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/2700249955ee48"&gt;https://zenn.dev/sayurin/articles/2700249955ee48&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で System.Drawing.Imaging.ColorPalette クラスのコンストラクターが公開されることについて。&lt;/p&gt;
&lt;p&gt;これにより従来カラーパレット捜査上取り扱いづらい問題があった点が緩和される。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="microsoft-build-japan-20240627-1000"&gt;Microsoft Build Japan (2024/06/27 10:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msdevjp.connpass.com/event/320534/"&gt;https://msdevjp.connpass.com/event/320534/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor.net-20240704-1330"&gt;Blazor+ローコードで実現する.NET資産のモダナイズ (2024/07/04 13:30〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codeer.connpass.com/event/319762/"&gt;https://codeer.connpass.com/event/319762/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="f"&gt;関数型ドメインモデリング ドメイン駆動設計とF#でソフトウェアの複雑さに立ち向かおう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.kadokawa.co.jp/product/302405003608/"&gt;https://www.kadokawa.co.jp/product/302405003608/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ドメイン駆動開発に関数型プログラミング F# を用いてモデリング、構築する方法を紹介する本。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-05-24: .NET Aspire GA, Visual Studio 2022 17.10, .NET 9 Preview 4</title>
			<link>/2024/05/24/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/05/24/updates</guid>
			<pubDate>Fri, 24 May 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-announcements-updates-from-microsoft-build-2024.net-blog"&gt;.NET Announcements &amp;amp; Updates from Microsoft Build 2024 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-build-2024-announcements/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-build-2024-announcements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Build 2024 での .NET に関するアナウンスとアップデート。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AI 関連
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Tensor&amp;lt;T&amp;gt;&lt;/code&gt; 型の導入&lt;/li&gt;
&lt;li&gt;Smart Component の紹介&lt;/li&gt;
&lt;li&gt;AI エコシステムの拡張&lt;/li&gt;
&lt;li&gt;LLM アプリケーションのモニタリング
&lt;ul&gt;
&lt;li&gt;Semantic Kernel のテレメトリー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET を使用したクラウドネイティブな開発
&lt;ul&gt;
&lt;li&gt;.NET Aspire の GA&lt;/li&gt;
&lt;li&gt;Linux ネイティブな .NET
&lt;ul&gt;
&lt;li&gt;Ubuntu や RedHat など公式フィードからのインストール&lt;/li&gt;
&lt;li&gt;Ubuntu Chiseled コンテナー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;メモリー使用量の削減
&lt;ul&gt;
&lt;li&gt;.NET 9 でのサーバーの GC の変更による使用量の削減&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C# 13
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; の拡張&lt;/li&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; の &lt;code&gt;Span&amp;lt;T&amp;gt;&lt;/code&gt; 対応&lt;/li&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; とインターフェース&lt;/li&gt;
&lt;li&gt;Extension types&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web 開発
&lt;ul&gt;
&lt;li&gt;ビルトイン OpenAPI ドキュメント生成&lt;/li&gt;
&lt;li&gt;HybridCache API による分散キャッシュ&lt;/li&gt;
&lt;li&gt;Blazor によるフルスタック Web UI
&lt;ul&gt;
&lt;li&gt;コンポーネントのコンストラクターインジェクション&lt;/li&gt;
&lt;li&gt;WebSocket の圧縮&lt;/li&gt;
&lt;li&gt;グローバルにインタラクティブなアプリにおける静的ページ生成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;マルチプラットフォーム開発&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="general-availability-of.net-aspire-simplifying.net-cloud-native-development.net-blog"&gt;General Availability of .NET Aspire: Simplifying .NET Cloud-Native Development - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-aspire-general-availability/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-aspire-general-availability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire が GA (一般提供) となった。&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.10 や最新の .NET CLI, Visual Studio Code を通して使用可能となっている。&lt;/p&gt;
&lt;p&gt;記事では .NET Aspire を選択する理由や App Host プロジェクトを通してローカルでの開発体験について、ダッシュボードで OpenTelemetry のデータを表示できること、サードパーティーコンポーネント、クラウドへのプロビジョニング/デプロイについてなどが解説されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/developing-cloud-native-apps-with-aspire/"&gt;Developing cloud native apps with Aspire - Visual Studio Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-17.10-and-github-copilot-your-coding-partner-for-faster-and-smarter-development-visual-studio-blog"&gt;Visual Studio 2022 17.10 and GitHub Copilot: Your Coding Partner for Faster and Smarter Development - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.10 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは以前まで拡張機能として提供されていた GitHub Copilot と Copilot Chat の Visual Studio への統合が行われており、記事では GitHub Copilot を使ったコーディング体験やデバッグの効率化、テストのスキャフォールディングなどが紹介されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/ja-jp/visualstudio/releases/2022/release-notes#17.10.0"&gt;Visual Studio 2022 バージョン 17.10.0 | Visual Studio 2022 リリース ノート | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing-nuget-6.10-the-nuget-blog"&gt;Announcing NuGet 6.10 - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/"&gt;https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet 6.10 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは &lt;code&gt;dotnet nuget config&lt;/code&gt; コマンドの追加、&lt;code&gt;packages.config&lt;/code&gt; の脆弱性監査、キャッシュされた資格情報の利用、といった改善が含まれている。&lt;/p&gt;
&lt;h3 id="net-9-preview-4-issue-309-dotnetannouncements"&gt;.NET 9 Preview 4 · Issue #309 · dotnet/announcements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/announcements/issues/309"&gt;https://github.com/dotnet/announcements/issues/309&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 4 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;UnsafeAccessorAttribute&lt;/code&gt; のジェネリックパラメーターサポート&lt;/li&gt;
&lt;li&gt;トリミングサポートのためのフィーチャースイッチ&lt;/li&gt;
&lt;li&gt;トークナイザーライブラリーの強化&lt;/li&gt;
&lt;li&gt;OpenTelemetry: より柔軟なアクティビティーのリンク&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System.Reflection.Emit.PersistedAssemblyBuilder&lt;/code&gt; の PDB サポート&lt;/li&gt;
&lt;li&gt;.NET Data と EF Core
&lt;ul&gt;
&lt;li&gt;Azure Cosmos DB for NoSQL プロバイダーの強化&lt;/li&gt;
&lt;li&gt;複合型の GroupBy&lt;/li&gt;
&lt;li&gt;読み取り専用プリミティブコレクション&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET MAUI
&lt;ul&gt;
&lt;li&gt;新しい入力キーボード&lt;/li&gt;
&lt;li&gt;Android 15 Beta 1 サポート&lt;/li&gt;
&lt;li&gt;iOS と Mac Catalyst の NativeAOT 改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core
&lt;ul&gt;
&lt;li&gt;OpenAPI ドキュメント生成のビルトインサポート&lt;/li&gt;
&lt;li&gt;HybridCache の導入&lt;/li&gt;
&lt;li&gt;開発者向け例外ページの改善&lt;/li&gt;
&lt;li&gt;QuickGrid の OverscanCount パラメーターの追加&lt;/li&gt;
&lt;li&gt;グローバルにインタラクティブな Blazor Web アプリの静的 SSR ページ&lt;/li&gt;
&lt;li&gt;IIS でのアプリリサイクル中の 503 の回避&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WPF
&lt;ul&gt;
&lt;li&gt;テーマの改善: Windows 11 テーマのサポート&lt;/li&gt;
&lt;li&gt;ハイフンベースの合字サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="first-preview-of-visual-studio-2022-v17.11-visual-studio-blog"&gt;First preview of Visual Studio 2022 v17.11 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-11/"&gt;https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-11/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.11 Preview 1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは主に開発者とワークロードの QoL の向上にフォーカスした改善が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/ja-jp/visualstudio/releases/2022/release-notes-preview#version-1711-preview-1"&gt;バージョン 17.11 Preview 1 | Visual Studio 2022 Preview リリース ノート | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="maximizing-joy-and-minimizing-toil-with-great-developer-experiences-visual-studio-blog"&gt;Maximizing joy and minimizing toil with great developer experiences - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/maximizing-joy-and-minimizing-toil-with-great-developer-experiences/"&gt;https://devblogs.microsoft.com/visualstudio/maximizing-joy-and-minimizing-toil-with-great-developer-experiences/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Build 2024 で発表のあった新製品や新機能を中心とした開発者向けの紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studio 2022 17.10 の一般提供&lt;/li&gt;
&lt;li&gt;GitHub Copilot for Azure プレビュー&lt;/li&gt;
&lt;li&gt;.NET Aspire の一般提供&lt;/li&gt;
&lt;li&gt;AI Toolkit for Visual Studio Code の発表&lt;/li&gt;
&lt;li&gt;Azure API Management での生成 AI ゲートウェイ&lt;/li&gt;
&lt;li&gt;Azure API Center の一般提供&lt;/li&gt;
&lt;li&gt;Azure Container Apps のサンドボックス実行 (Dynamic Sessions)&lt;/li&gt;
&lt;li&gt;Microsoft Dev Box と Azure Deployment Environments の新機能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="winui3microsoft.ui.xaml.dll"&gt;WinUI3のプロジェクトでMicrosoft.UI.Xaml.dllが見つからないエラー&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nin_neko/articles/1085f4cc2ca6d6"&gt;https://zenn.dev/nin_neko/articles/1085f4cc2ca6d6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最新の Visual Studio に含まれる WinUI 3 のプロジェクトテンプレートで非パッケージのデバッグ実行でエラーが出る問題と解消方法について。&lt;/p&gt;
&lt;h3 id="ccmsorchard-core"&gt;C#ベースのオープンソースCMS「Orchard Core」の環境構築&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/orchardcore-setup"&gt;https://zenn.dev/zead/articles/orchardcore-setup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Orchard Core をテンプレートから作成して立ち上げる手順について。&lt;/p&gt;
&lt;h3 id="introduction-to-shortcircuit-and-mapshortcircuit-in.net-8"&gt;Introduction to ShortCircuit and MapShortCircuit in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/moh_moh701/introduction-to-shortcircuit-and-mapshortcircuit-in-net-8-12ml"&gt;https://dev.to/moh_moh701/introduction-to-shortcircuit-and-mapshortcircuit-in-net-8-12ml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core で導入された &lt;code&gt;ShortCircuit&lt;/code&gt; と &lt;code&gt;MapShortCircuit&lt;/code&gt; について。&lt;/p&gt;
&lt;h3 id="on"&gt;イベントハンドラ名のプレフィックス「on」の解釈&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/lilytechlab/articles/ba599338ce469b"&gt;https://zenn.dev/lilytechlab/articles/ba599338ce469b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;イベントハンドラー名に慣習的に使われる &lt;code&gt;On&lt;/code&gt; プレフィックスについての考察。&lt;/p&gt;
&lt;h3 id="observe-file-system-changes-with-reactive-extensions-for.net-endjin"&gt;Observe File System Changes with Reactive Extensions for .NET | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2024/05/observe-file-system-changes-with-rx-dotnet"&gt;https://endjin.com/blog/2024/05/observe-file-system-changes-with-rx-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rx を使用してファイルシステム上の変更を監視するコードを記述することについて。&lt;/p&gt;
&lt;h3 id="net-9-linq-performance-edition"&gt;.NET 9 LINQ Performance Edition&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/783a404a-e39e-480f-bc99-a514a75d752d"&gt;https://steven-giesel.com/blogPost/783a404a-e39e-480f-bc99-a514a75d752d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で改善される LINQ のオペレーターを .NET 8 と比較して紹介。&lt;/p&gt;
&lt;h3 id="project-idx.net-6-azure-functions-qiita"&gt;ベータ版の Project IDX で .NET 6 と Azure Functions の開発環境を作ってみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mnrst/items/3f15c85167efe846ee2c"&gt;https://qiita.com/mnrst/items/3f15c85167efe846ee2c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google のブラウザーベースの IDE Project IDX で .NET 6 と Azure Functions の開発環境を構築する手順について。&lt;/p&gt;
&lt;h3 id="netroslyn-light11"&gt;【.NET】Roslynを使った構文解析とセマンティック解析のやり方まとめ - LIGHT11&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://light11.hatenadiary.com/entry/2024/05/20/190949"&gt;https://light11.hatenadiary.com/entry/2024/05/20/190949&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Roslyn でのコードの解析についての解説。記事では構文解析とセマンティック解析について触れている。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ref struct&lt;/code&gt; のインターフェースの話。(Roslyn 側ではすでにマージされている)&lt;/p&gt;
&lt;!-- https://x.com/jaredpar/status/1792689177206882745?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;ref struct can now implement interfaces and participate in generics. Excited to see all of the ways the community finds to use this &lt;a href="https://t.co/VKXeNdisBq"&gt;https://t.co/VKXeNdisBq&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jared Parsons (&amp;#64;jaredpar) &lt;a href="https://twitter.com/jaredpar/status/1792689177206882745?ref_src=twsrc%5Etfw"&gt;May 20, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-05-18: Npgsql security fix, .NET 6.0.30/7.0.19/8.0.5, Windows App SDK 1.4.6</title>
			<link>/2024/05/18/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/05/18/updates</guid>
			<pubDate>Sat, 18 May 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-v8.0.3-npgsqlnpgsql"&gt;Release v8.0.3 · npgsql/npgsql&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v8.0.3"&gt;https://github.com/npgsql/npgsql/releases/tag/v8.0.3&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v7.0.7"&gt;Release v7.0.7 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v6.0.11"&gt;Release v6.0.11 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v5.0.18"&gt;Release v5.0.18 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v4.1.13"&gt;Release v4.1.13 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v4.0.14"&gt;Release v4.0.14 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-and.net-framework-may-2024-servicing-updates.net-blog"&gt;.NET and .NET Framework May 2024 Servicing Updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-may-2024-servicing-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-may-2024-servicing-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-windows-app-sdk-1.4.6-1.4.240512000-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.4.6 (1.4.240512000) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.6"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mongodb-provider-for-entity-framework-core-now-generally-available-mongodb-blog"&gt;MongoDB Provider for Entity Framework Core Now Generally Available | MongoDB Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.mongodb.com/blog/post/mongodb-provider-entity-framework-core-now-generally-available"&gt;https://www.mongodb.com/blog/post/mongodb-provider-entity-framework-core-now-generally-available&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2024.1.2-is-available-for-download-the.net-tools-blog"&gt;ReSharper 2024.1.2 Is Available For Download | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/07/resharper-2024-1-2/"&gt;https://blog.jetbrains.com/dotnet/2024/05/07/resharper-2024-1-2/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2024.1.2-is-now-available-the.net-tools-blog"&gt;Rider 2024.1.2 Is Now Available! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/07/rider-2024-1-2/"&gt;https://blog.jetbrains.com/dotnet/2024/05/07/rider-2024-1-2/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-nuget-commands-in-c-dev-kit-the-nuget-blog"&gt;Announcing NuGet Commands in C# Dev Kit - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/"&gt;https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="package-management-improved.net-aspire-support-come-to-c-dev-kit.net-blog"&gt;Package Management &amp;amp; improved .NET Aspire support come to C# Dev Kit - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/may-release-of-csharp-dev-kit/"&gt;https://devblogs.microsoft.com/dotnet/may-release-of-csharp-dev-kit/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-8.4.0-app-vnextpolly"&gt;Release 8.4.0 · App-vNext/Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.4.0"&gt;https://github.com/App-vNext/Polly/releases/tag/8.4.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v6.6.1-domaindrivendevswashbuckle.aspnetcore"&gt;Release v6.6.1 · domaindrivendev/Swashbuckle.AspNetCore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v6.6.1"&gt;https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v6.6.1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="get-ready-for-visual-studio-at-build-2024-join-thousands-online-visual-studio-blog"&gt;Get Ready for Visual Studio at Build 2024: Join Thousands Online! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-at-build-2024/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-at-build-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="what-is-new-in-entity-framework-6.5-classic"&gt;What is new in Entity Framework 6.5 Classic&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://erikej.github.io/ef6/dotnet/2024/05/16/ef6-whatsnew.html"&gt;https://erikej.github.io/ef6/dotnet/2024/05/16/ef6-whatsnew.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-in-orleans-8-for-scalable-distributed-applications.net-blog"&gt;What's new in Orleans 8 for Scalable Distributed Applications - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/whats-new-in-orleans-8/"&gt;https://devblogs.microsoft.com/dotnet/whats-new-in-orleans-8/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-preview-7.net-aspire"&gt;.NET Aspire preview 7 - .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-7"&gt;https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-7&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="v1.11.0-meadow-v1.releases-wilderness-labs-developer-portal"&gt;v1.11.0 | Meadow v1.* Releases | Wilderness Labs Developer Portal&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://developer.wildernesslabs.co/Meadow/Release_Notes/v1/#v1110"&gt;https://developer.wildernesslabs.co/Meadow/Release_Notes/v1/#v1110&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクルなど&lt;/h2&gt;
&lt;h3 id="null-ef-core-code-first-qiita"&gt;null 許容参照型と EF Core Code First - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SurferOnWww/items/67d8e8d86234ac138445"&gt;https://qiita.com/SurferOnWww/items/67d8e8d86234ac138445&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the.net-generic-math-library-ndepend-blog"&gt;The .NET Generic Math Library - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/dotnet-generic-math/"&gt;https://blog.ndepend.com/dotnet-generic-math/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="a-complete.net-developers-guide-to-span-with-stephen-toub-youtube"&gt;A Complete .NET Developer's Guide to Span with Stephen Toub - YouTube&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=5KdICNWOfEQ&amp;amp;list=PLdo4fOcmZ0oX8eqDkSw4hH9cSehrGgdr1&amp;amp;index=5"&gt;https://www.youtube.com/watch?v=5KdICNWOfEQ&amp;amp;list=PLdo4fOcmZ0oX8eqDkSw4hH9cSehrGgdr1&amp;amp;index=5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8-blazor-wasm-api"&gt;.NET 8 の Blazor で WASM + API のプロジェクトを作る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasm-with-apis"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasm-with-apis&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improve-your-code-quality-with-github-copilot-in-visual-studio-visual-studio-blog"&gt;Improve your code quality with GitHub Copilot in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/improve-your-code-quality-with-github-copilot-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/improve-your-code-quality-with-github-copilot-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ccmsorchard-core"&gt;C#ベースのオープンソースCMS「Orchard Core」について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/f604f9ad31f941"&gt;https://zenn.dev/zead/articles/f604f9ad31f941&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mastering-slash-commands-with-github-copilot-in-visual-studio-visual-studio-blog"&gt;Mastering Slash Commands with GitHub Copilot in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/mastering-slash-commands-with-github-copilot-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/mastering-slash-commands-with-github-copilot-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-switchif-qiita"&gt;【C#】 拡張メソッドで型によるswitchやif判定をできるだけ消す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/toRisouP/items/12afeb98a0971095d409"&gt;https://qiita.com/toRisouP/items/12afeb98a0971095d409&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azure-toolkit-for-rider-v4.0-preview-request-for-feedback-the.net-tools-blog"&gt;Azure Toolkit for Rider v4.0 Preview - Request For Feedback | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/14/azure-toolkit-for-rider-v4-0-preview-request-for-feedback/"&gt;https://blog.jetbrains.com/dotnet/2024/05/14/azure-toolkit-for-rider-v4-0-preview-request-for-feedback/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-introduction-to-primary-constructors-in-c12"&gt;An introduction to primary constructors in C#12&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/an-introduction-to-primary-constructors-in-csharp-12/"&gt;https://andrewlock.net/an-introduction-to-primary-constructors-in-csharp-12/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cplaywright-qiita"&gt;C#で自動テスト(Playwright) 環境構築～テスト実行手順 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/noritama08/items/ed3f79e7feb061e36774"&gt;https://qiita.com/noritama08/items/ed3f79e7feb061e36774&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="configureawait-qiita"&gt;ConfigureAwait によるデッドロックの回避 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SurferOnWww/items/2dd628101923419cc44a"&gt;https://qiita.com/SurferOnWww/items/2dd628101923419cc44a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="await-task.result-qiita"&gt;await と Task.Result によるデッドロック - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SurferOnWww/items/bd4e483cce7acaee4f30"&gt;https://qiita.com/SurferOnWww/items/bd4e483cce7acaee4f30&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qiita"&gt;非同期プログラミング - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SurferOnWww/items/06dc1e3df702596272ba"&gt;https://qiita.com/SurferOnWww/items/06dc1e3df702596272ba&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-ssr-web-components-and-enhance-wasm"&gt;ASP.NET Core, SSR Web Components, and Enhance Wasm&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/aspnet-core-ssr-web-components-and-enhance-wasm"&gt;https://khalidabuhakmeh.com/aspnet-core-ssr-web-components-and-enhance-wasm&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="localizing-a.net-console-or-desktop-application"&gt;Localizing a .NET console or desktop application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.axantum.com/2024/05/localizing-net-console-or-desktop.html?m=1"&gt;https://blog.axantum.com/2024/05/localizing-net-console-or-desktop.html?m=1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="nuxt3.net-core"&gt;Nuxt3を静的ファイルとしてビルドし、.NET Coreに表示する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/yorimichi/articles/initial_csharp_nuxt3"&gt;https://zenn.dev/yorimichi/articles/initial_csharp_nuxt3&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="does-readonly-make-your-code-faster"&gt;Does readonly make your code faster?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/50b84029-4f1e-4e6d-8fd1-0311b0605562"&gt;https://steven-giesel.com/blogPost/50b84029-4f1e-4e6d-8fd1-0311b0605562&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazorjavascript.net-qiita"&gt;BlazorでJavaScriptから.NETの動的(インスタンス)メソッドを呼び出す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/44b207477d1cb1c81bfb"&gt;https://qiita.com/yaju/items/44b207477d1cb1c81bfb&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azure-openai-service-vb-c"&gt;Azure OpenAI Service を使って VB から C# にコードを変換する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/convert-vb-to-cs"&gt;https://zenn.dev/microsoft/articles/convert-vb-to-cs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ahead-of-the-game-exploring-helm-features-with.net-aspire-aspir8-preview-7"&gt;Ahead of the Game: Exploring Helm Features with .NET Aspire &amp;amp; Aspir8 Preview 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;josephsims1/ahead-of-the-game-exploring-helm-features-with-net-aspire-aspir8-preview-7-d327ade09b91"&gt;https://medium.com/&amp;#64;josephsims1/ahead-of-the-game-exploring-helm-features-with-net-aspire-aspir8-preview-7-d327ade09b91&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-discriminated-union-whats-driving-the-c-communitys-inquiries-ndepend-blog"&gt;C# Discriminated Union: What's Driving the C# Community's Inquiries? - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/csharp-discriminated-union/"&gt;https://blog.ndepend.com/csharp-discriminated-union/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="join-the.net-team-at-microsoft-build-2024.net-blog"&gt;Join the .NET Team at Microsoft Build 2024! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/join-the-dotnet-team-microsoft-build-2024/"&gt;https://devblogs.microsoft.com/dotnet/join-the-dotnet-team-microsoft-build-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="nxuicavaloniaui"&gt;【NXUI】C#でワンライナー・クロスプラットホームデスクトップアプリ【AvaloniaUI】&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/inuinu/articles/528550aab764e8"&gt;https://zenn.dev/inuinu/articles/528550aab764e8&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="refactor-your-code-with-c-collection-expressions.net-blog"&gt;Refactor your code with C# collection expressions - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/refactor-your-code-with-collection-expressions/"&gt;https://devblogs.microsoft.com/dotnet/refactor-your-code-with-collection-expressions/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="diagnose-memory-leaks-in.net-applications-with-windbg-a-hands-on-approach"&gt;Diagnose Memory Leaks in .NET Applications with WinDbg: A Hands-on Approach&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://levelup.gitconnected.com/diagnose-memory-leaks-in-net-applications-with-windbg-a-hands-on-approach-f41986f69967"&gt;https://levelup.gitconnected.com/diagnose-memory-leaks-in-net-applications-with-windbg-a-hands-on-approach-f41986f69967&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-quickgrid-qiita"&gt;Blazor QuickGrid でリッチなテーブルをサクッと作成する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/higege-amdeker/items/8150dcefe5d891a20c53"&gt;https://qiita.com/higege-amdeker/items/8150dcefe5d891a20c53&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="using-github-copilot-as-your-coding-gps-visual-studio-blog"&gt;Using GitHub Copilot as your Coding GPS - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/using-github-copilot-as-your-coding-gps/"&gt;https://devblogs.microsoft.com/visualstudio/using-github-copilot-as-your-coding-gps/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dotinsights-may-2024-the.net-tools-blog"&gt;dotInsights | May 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/06/dotinsights-may-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/05/06/dotinsights-may-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dapper"&gt;Dapper マルチマッピングで多対多の関係先を生成する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tetr4lab/articles/35cd18af364499"&gt;https://zenn.dev/tetr4lab/articles/35cd18af364499&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c1ms-qiita"&gt;C#で使える1msタイマーを探す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/qiitatosh/items/cc88e398be26e00fafe0"&gt;https://qiita.com/qiitatosh/items/cc88e398be26e00fafe0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="adventures-serializing-absolutely-everything-in-c-isadora"&gt;Adventures serializing absolutely everything in C# – isadora&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://isadorasophia.com/articles/serialization/"&gt;https://isadorasophia.com/articles/serialization/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mvvm-toolkit"&gt;MVVM ToolKit の使い方&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/maedan/articles/c691e858e3fa44"&gt;https://zenn.dev/maedan/articles/c691e858e3fa44&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-connect-phi-3-mini-onnx-model-in-semantic-kernel"&gt;How To connect Phi-3 Mini ONNX model in Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://towardsdev.com/how-to-connect-phi-3-mini-onnx-model-in-semantic-kernel-fc96b758129f"&gt;https://towardsdev.com/how-to-connect-phi-3-mini-onnx-model-in-semantic-kernel-fc96b758129f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="aarch64arm64linuxseleniumc-qiita"&gt;AArch64(arm64)のLinuxでSeleniumを使う方法（C#版） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/noobow/items/52ed93726b757e2a3dbc"&gt;https://qiita.com/noobow/items/52ed93726b757e2a3dbc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="oci.net-sdkoci-streaming-qiita"&gt;【OCI】.NET SDKを使ってOCI Streamingにデータを送信してみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/atwits/items/f23283cc58ee2a24a79e"&gt;https://qiita.com/atwits/items/f23283cc58ee2a24a79e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="maui-blazorrazor-classlib"&gt;Maui BlazorでRazor ClassLibを使ってコンポーネントをプロジェクト分離する - ねこさんのぶろぐ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.neko3cs.net/entry/separate-component-to-project-maui-blazor"&gt;https://www.neko3cs.net/entry/separate-component-to-project-maui-blazor&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;スライド&lt;/h2&gt;
&lt;h3 id="blazor-wasm-code-first-grpc-c"&gt;Blazor WASM × Code-first gRPC で始める C# ⼤統⼀理論&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/sansantech/sansan-20240515-2"&gt;https://speakerdeck.com/sansantech/sansan-20240515-2&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="ee7a89ebea5943e0b2100b47fdc1a670" data-ratio="1.7772511848341233" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="net-graphql-client"&gt;.NET GraphQL Client のリアル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/sansantech/sansan-20240515-1"&gt;https://speakerdeck.com/sansantech/sansan-20240515-1&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="d86f71fcc0934390bebab2edb88f497d" data-ratio="1.7772511848341233" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-nikiforovallkeycloak-authorization-services-dotnet-authentication-and-authorization-with-keycloak-and-asp.net-core"&gt;GitHub - NikiforovAll/keycloak-authorization-services-dotnet: Authentication and Authorization with Keycloak and ASP.NET Core 🔐&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/NikiforovAll/keycloak-authorization-services-dotnet"&gt;https://github.com/NikiforovAll/keycloak-authorization-services-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nikiforovall.github.io/dotnet/keycloak/2024/05/05/keycloak-v2-0-0.html"&gt;Announcement - Keycloak.AuthServices v2.0.0 is out 🎉!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-05-03: Windows App SDK 1.5.3, .NET MAUI Community Tookit v8</title>
			<link>/2024/05/03/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/05/03/updates</guid>
			<pubDate>Fri, 03 May 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;p&gt;.NET 7 が今月14日にサポート終了(End of Support)となります。.NET 7 をご利用中の方は .NET 8 へのアップグレードをご検討ください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/ja-jp/platform/support/policy/dotnet-core"&gt;.NET および .NET Core オフィシャル サポート ポリシー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-7-end-of-support/"&gt;.NET 7 will reach End of Support on May 14, 2024 - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="version-1.5.3-1.5.240428000-stable-channel-release-notes-for-the-windows-app-sdk-windows-apps"&gt;Version 1.5.3 (1.5.240428000) - Stable channel release notes for the Windows App SDK - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-153-15240428000"&gt;https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-153-15240428000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.5.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではクラッシュやビルド時などのいくつかの不具合が修正されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.3"&gt;Release Windows App SDK 1.5.3 (1.5.240428000) · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing.net-maui-community-tookit-v8-touchbehavior-support-is-here.net-blog"&gt;Introducing .NET MAUI Community Tookit v8: TouchBehavior support is here! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-maui-community-toolkit-touchbehavior/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-maui-community-toolkit-touchbehavior/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Community Tookit v8 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Xamarin.Forms における Xamarin Community Toolkit の TouchEffect に代わる TouchBehavior の追加、Windows での Snackbar の破壊的変更、Android におけるナビゲーションバーの色設定、その他多くの不具合の修正といったものが含まれている。&lt;/p&gt;
&lt;h3 id="whats-new-for.net-in-ubuntu-24.04.net-blog"&gt;What's new for .NET in Ubuntu 24.04 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/whats-new-for-dotnet-in-ubuntu-2404/"&gt;https://devblogs.microsoft.com/dotnet/whats-new-for-dotnet-in-ubuntu-2404/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu 24.04 における .NET の扱いについて。&lt;/p&gt;
&lt;p&gt;Ubuntu 24.04 のリリースに合わせて .NET が公式の Ubuntu フィードから提供されることや 24.04 をベースとした .NET コンテナーイメージの提供についての解説。&lt;/p&gt;
&lt;h3 id="introducing-typespec-a-new-language-for-api-centric-development-typespec"&gt;Introducing TypeSpec: A New Language for API-Centric Development | TypeSpec&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://typespec.io/blog/2024-04-25-introducing"&gt;https://typespec.io/blog/2024-04-25-introducing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;API 定義言語の TypeSpec が公開された。&lt;/p&gt;
&lt;p&gt;TypeSpec は TypeScript と C# に影響を受けた API 定義用の言語で、現在 OpenAPI、JSON Schema または Protobuf へのコンパイルが可能。Microsoft 社内では Azure サービスや Microsoft Graph などでドッグフーディングしているとのこと。&lt;/p&gt;
&lt;p&gt;Visual Studio と Visual Studio Code 向けのエディター拡張が提供されており、プロジェクトは MIT License で GitHub 上で公開されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://typespec.io/"&gt;TypeSpec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/typespec"&gt;microsoft/typespec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://x.com/davidfowl/status/1785047593963454896?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We blogged about Type Spec:&lt;br&gt;&lt;br&gt;&amp;quot;Introducing TypeSpec: A New Language for API-Centric Development&amp;quot;&lt;a href="https://t.co/8IcGzcL8ta"&gt;https://t.co/8IcGzcL8ta&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1785047593963454896?ref_src=twsrc%5Etfw"&gt;April 29, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="release-release-v1.63.0-grpcgrpc"&gt;Release Release v1.63.0 · grpc/grpc&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc/releases/tag/v1.63.0"&gt;https://github.com/grpc/grpc/releases/tag/v1.63.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gRPC 1.63.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Grpc.Tools の protoc の出力に関連する修正が含まれている。&lt;/p&gt;
&lt;h3 id="odata.net-8-preview-release-odata"&gt;OData .NET 8 Preview Release - OData&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/odata/odata-net-8-preview-release/"&gt;https://devblogs.microsoft.com/odata/odata-net-8-preview-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OData .NET 8 Preview がリリースされた。&lt;/p&gt;
&lt;p&gt;8年ぶりとなるメジャーアップデートで .NET Framework のサポートを終了、技術スタックの最新化といった多くの破壊的変更が含まれる。今後サポートポリシーの導入やライフサイクルサポートの文章化、移行ガイドなども公開するとのこと。&lt;/p&gt;
&lt;h3 id="cascadia-code-2404.23"&gt;Cascadia Code 2404.23&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/commandline/cascadia-code-2404-23/"&gt;https://devblogs.microsoft.com/commandline/cascadia-code-2404-23/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cascadia Code 2404.23 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Quadrants(四分儀) や Sextants (六分儀)、Octants(八分儀)、Large Type Pieces をはじめとして多くのレガシーコンピューティングシンボルが追加された。その他 Nerd Font を組み込んだ &lt;code&gt;Cascadia Code NF&lt;/code&gt;, &lt;code&gt;Cascadia Mono NF&lt;/code&gt; といったファミリーも追加された。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル&lt;/h2&gt;
&lt;h3 id="nativeintnativeptrtvoidptr"&gt;nativeintとnativeptr&amp;lt;'T&amp;gt;とvoidptr&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/3dfaa375223b0e"&gt;https://zenn.dev/sayurin/articles/3dfaa375223b0e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# でポインターを扱う際に使用する3つの型について。&lt;/p&gt;
&lt;h3 id="help-us-by-sharing-your-experience-with.net-dev-tooling-the.net-tools-blog"&gt;Help us by sharing your experience with .NET dev tooling | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/01/share-your-experience-with-dotnet-dev-tooling/"&gt;https://blog.jetbrains.com/dotnet/2024/05/01/share-your-experience-with-dotnet-dev-tooling/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 開発ツールのアンケート。&lt;/p&gt;
&lt;p&gt;回答者の中から抽選で Amazon Gift Card $50 分または 1年分の All Products Pack が当たる。&lt;/p&gt;
&lt;h3 id="c-azure-openai-service-20245"&gt;C# で Azure OpenAI Service のトークン数を数えよう 2024年5月版&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/count-token-with-csharp"&gt;https://zenn.dev/microsoft/articles/count-token-with-csharp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Microsoft.ML.Tokenizers&lt;/code&gt; を使用してトークンを数える方法について。&lt;/p&gt;
&lt;h3 id="idesktopwallpaper-qiita"&gt;IDesktopWallpaperの使い方 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nnkanegon/items/3309afd8433d38659147"&gt;https://qiita.com/nnkanegon/items/3309afd8433d38659147&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# から &lt;code&gt;IDesktopWallpaper&lt;/code&gt; COM インターフェースを使用して Windows のデスクトップの壁紙を変更する実装方法について。&lt;/p&gt;
&lt;h3 id="embrace-ai-driven-productivity-in.net-with-jetbrains-ai-assistant-in-resharper-the.net-tools-blog"&gt;Embrace AI-Driven Productivity in .NET with JetBrains AI Assistant in ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/04/30/jet-brains-ai-assistant-in-resharper/"&gt;https://blog.jetbrains.com/dotnet/2024/04/30/jet-brains-ai-assistant-in-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper の AI アシスタント機能についての紹介。&lt;/p&gt;
&lt;p&gt;コンテキストを読むチャットや複数行のコード補完、問題検出、リファクタリング、単体テストの生成やコードの説明とドキュメント化といった機能について。&lt;/p&gt;
&lt;h3 id="secure-your-container-build-and-publish-with.net-8.net-blog"&gt;Secure your container build and publish with .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/secure-your-container-build-and-publish-with-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/secure-your-container-build-and-publish-with-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 でセキュアなコンテナーのビルドと公開を行う方法について。&lt;/p&gt;
&lt;p&gt;記事ではどのような脅威があるかや root を使用しないコンテナーイメージの作成などについて。&lt;/p&gt;
&lt;h3 id="creating-a.net-asciimath-parser-and-using-it-in-a-markdig-extension"&gt;Creating a .NET AsciiMath parser and using it in a Markdig extension&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/creating-a-dotnet-asciimath-parser-and-using-it-in-a-markdig-extension/"&gt;https://andrewlock.net/creating-a-dotnet-asciimath-parser-and-using-it-in-a-markdig-extension/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AsciiDoctor/AsciiMath の Ruby 実装を .NET に移植し、Markdig から使用できるようにしたことについて。&lt;/p&gt;
&lt;h3 id="asp.net-core-hosting-module-with-shadow-copy-not-starting-separate-your-shadow-copy-folders"&gt;ASP.NET Core Hosting Module with Shadow Copy Not Starting: Separate your Shadow Copy Folders!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2024/Apr/28/ASPNET-Core-Module-with-Shadow-Copy-Not-Starting-Separate-your-Shadow-Copy-Folders"&gt;https://weblog.west-wind.com/posts/2024/Apr/28/ASPNET-Core-Module-with-Shadow-Copy-Not-Starting-Separate-your-Shadow-Copy-Folders&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IIS 向けの ASP.NET Core Module を 8.0.4 に更新したのちに発生したシャドウコピーに関連する問題とその対処方法について。&lt;/p&gt;
&lt;h3 id="marten-postgresql-and.net-aspire-walk-into-a-bar"&gt;Marten, PostgreSQL, and .NET Aspire walk into a bar…&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jeremydmiller.com/2024/05/01/marten-postgresql-and-net-aspire-walk-into-a-bar/"&gt;https://jeremydmiller.com/2024/05/01/marten-postgresql-and-net-aspire-walk-into-a-bar/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL を使用したイベントメッセージングフレームワーク Marten を .NET Aspire で構成する方法について。&lt;/p&gt;
&lt;h3 id="asp.net-core-blazor-typescript"&gt;ASP.NET Core Blazor 向けに TypeScript で開発する方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/how-to-develop-ts-for-blazor"&gt;https://zenn.dev/microsoft/articles/how-to-develop-ts-for-blazor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Blazor アプリケーションで JavaScript を使用する代わりに TypeScript を使用するように構成する方法について。&lt;/p&gt;
&lt;p&gt;記事では Razor コンポーネントに付随する JavaScript と Razor クラスライブラリーの JavaScript イニシャライザーを TypeScript で開発する方法について触れている。&lt;/p&gt;
&lt;h3 id="blazor-javascript"&gt;Blazor で起動時に自動的に読み込まれる JavaScript ファイルを作りたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/how-to-load-js-onstartup"&gt;https://zenn.dev/microsoft/articles/how-to-load-js-onstartup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor アプリケーションで起動時に自動的に読み込まれる JavaScript を Razor クラスライブラリープロジェクトに含める方法について。&lt;/p&gt;
&lt;h3 id="the-journey-to-accessible-apps-keyboard-accessibility-and.net-maui.net-blog"&gt;The Journey to Accessible Apps: Keyboard Accessibility and .NET MAUI - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-journey-to-accessible-apps-keyboard-accessible/"&gt;https://devblogs.microsoft.com/dotnet/the-journey-to-accessible-apps-keyboard-accessible/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI アプリケーションにおけるキーボードアクセシビリティについて。&lt;/p&gt;
&lt;p&gt;記事ではモーダルページのキーボードナビゲーション、Android でのフォーカス操作、キーボードアクセラレーターといった機能を紹介している。&lt;/p&gt;
&lt;h3 id="redisgarnet-qiita"&gt;Redis互換サービスのGarnetにおけるメモリ消費とチェックポイント作成の注意点 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/3498ddbbc27d3ce6e9f0"&gt;https://qiita.com/skitoy4321/items/3498ddbbc27d3ce6e9f0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Garnet のメモリー消費の見積もりやレコードの保全の挙動と設定、圧縮やチェックポイントの作成時の挙動などについての調査のまとめ。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント、スライドなど&lt;/h2&gt;
&lt;h3 id="cs-youtube"&gt;#CSパフォーマンス勉強会 ライブ - YouTube&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=wg3CibR0mWI"&gt;https://www.youtube.com/watch?v=wg3CibR0mWI&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cs-reading.connpass.com/event/309714/"&gt;C#パフォーマンス勉強会 (2024/04/27 13:30〜)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="gitlab-cicd-cwpf"&gt;GitLab CI/CD で C#/WPFアプリケーションのテストとインストーラーのビルド・デプロイを自動化する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/hacarus/wpfapurikesiyonnotesutotoinsutoranobirudodepuroiwozi-dong-hua-suru"&gt;https://speakerdeck.com/hacarus/wpfapurikesiyonnotesutotoinsutoranobirudodepuroiwozi-dong-hua-suru&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="b98d2f84fe844e8f8cf326e9636a669e" data-ratio="1.7772511848341233" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="unsafe"&gt;ベクトルプログラミングとunsafe | ドクセル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docswell.com/s/binnmti/Z4Q8V8-2024-04-27-234152"&gt;https://www.docswell.com/s/binnmti/Z4Q8V8-2024-04-27-234152&lt;/a&gt;&lt;/p&gt;
&lt;script async class="docswell-embed" src="https://bcdn.docswell.com/assets/libs/docswell-embed/docswell-embed.min.js" data-src="https://www.docswell.com/slide/Z4Q8V8/embed" data-aspect="0.5625"&gt;&lt;/script&gt;&lt;div class="docswell-link"&gt;&lt;a href="https://www.docswell.com/s/binnmti/Z4Q8V8-2024-04-27-234152"&gt;ベクトルプログラミングとunsafe by &amp;#64;binnmti&lt;/a&gt;&lt;/div&gt;
&lt;h3 id="r3linq"&gt;R3のコードから見る実践LINQ実装最適化・コンカレントプログラミング実例&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/neuecc/r3nokodokarajian-rushi-jian-linqshi-zhuang-zui-shi-hua-konkarentopuroguramingushi-li"&gt;https://speakerdeck.com/neuecc/r3nokodokarajian-rushi-jian-linqshi-zhuang-zui-shi-hua-konkarentopuroguramingushi-li&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="205627770b434599925567dbfeca229c" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neue.cc/2024/05/01_R3_Presentation.html"&gt;neue cc - R3のコードから見るC#パフォーマンス最適化技法実例とTimeProviderについて&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-tips-2024-edition"&gt;今日からできる！簡単 .NET 高速化 Tips -2024 edition-&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/xin9le/jin-ri-karadekiru-jian-dan-net-gao-su-hua-tips-2024-edition"&gt;https://speakerdeck.com/xin9le/jin-ri-karadekiru-jian-dan-net-gao-su-hua-tips-2024-edition&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="b4e671fb76c94b038e86b0aa84a280f8" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="net-profiling-tools"&gt;今どきの.NET Profiling Tools&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/kkamegawa/dot-net-profiler-in-2024"&gt;https://speakerdeck.com/kkamegawa/dot-net-profiler-in-2024&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="d0286dff060f41798909daa6da084dac" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kkamegawa.hatenablog.jp/entry/2024/04/27/163003"&gt;Azure TravelerとC#パフォーマンス勉強会の資料公開 - kkamegawa's weblog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="dotnetbenchmarks.com.net-benchmark-directory"&gt;DotnetBenchmarks.com - .NET benchmark directory&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnetbenchmarks.com/"&gt;https://dotnetbenchmarks.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主に BenchmarkDotNet でのベンチマーク結果を共有できるサイト。&lt;/p&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/opensilverteam/status/1785264961926598758?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Today, we&amp;#39;ve achieved the unthinkable 😄: Microsoft LightSwitch support is here!&lt;br&gt;&lt;br&gt;For the first time ever, Visual Studio LightSwitch apps can run seamlessly on modern browsers—no rewrites, just a bit of magic 🧙‍♂️&lt;br&gt;&lt;br&gt;Discover the wonders of OpenSilver 2.2 &amp;amp; help us tell the world… &lt;a href="https://t.co/OVamaodkUP"&gt;pic.twitter.com/OVamaodkUP&lt;/a&gt;&lt;/p&gt;&amp;mdash; OpenSilver (Silverlight replacement) (&amp;#64;OpenSilverTeam) &lt;a href="https://twitter.com/OpenSilverTeam/status/1785264961926598758?ref_src=twsrc%5Etfw"&gt;April 30, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/terrajobst/status/1784256998340739323?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Looks like while nobody was looking, .NET Core use on &lt;a href="https://t.co/UWFXzzBQuY"&gt;https://t.co/UWFXzzBQuY&lt;/a&gt; has surpassed .NET Framework.&lt;br&gt;&lt;br&gt;Also more than a quarter of managed packages compile with nullable reference types now. Nice work everyone! &lt;a href="https://t.co/kOGkeR6DFo"&gt;pic.twitter.com/kOGkeR6DFo&lt;/a&gt;&lt;/p&gt;&amp;mdash; Immo Landwerth (&amp;#64;terrajobst) &lt;a href="https://twitter.com/terrajobst/status/1784256998340739323?ref_src=twsrc%5Etfw"&gt;April 27, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-04-26: Uno Platform 5.2, MySqlConnector 2.3.7, .NET Aspire preview 6</title>
			<link>/2024/04/26/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/04/26/updates</guid>
			<pubDate>Fri, 26 Apr 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing-the-first-ever-true.net-single-project-for-mobile-web-desktop-and-embedded-apps"&gt;Announcing the first-ever true .NET Single Project for Mobile, Web, Desktop, and Embedded apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/the-first-and-only-true-single-project-for-mobile-web-desktop-and-embedded-in-net/"&gt;https://platform.uno/blog/the-first-and-only-true-single-project-for-mobile-web-desktop-and-embedded-in-net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 5.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Skia レンダラーの強化によるパフォーマンスの向上やマルチウィンドウのサポート、Uno SDK の改善、.NET 9 Preview のサポートなどが含まれている。&lt;/p&gt;
&lt;p&gt;またプロジェクトテンプレートの更新により、単一のプロジェクトですべてのプラットフォームをサポートできるようになったとのこと。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unoplatform/uno/releases/tag/5.2.80"&gt;Release 5.2.80 · unoplatform/uno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-2.3.7-mysql-netmysqlconnector"&gt;Release 2.3.7 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.7"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MySqlConnector 2.3.7 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="net-aspire-preview-6.net-aspire"&gt;.NET Aspire preview 6 - .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-6"&gt;https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire の Preview 6 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Obsolete な API の削除や変更、Aspire ダッシュボードのトークンによる認証、Qdrant ベクターデータベースのサポート、その他細かい変更が含まれている。&lt;/p&gt;
&lt;h3 id="introducing-elastics-opentelemetry-sdk-for.net"&gt;Introducing Elastic's OpenTelemetry SDK for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.elastic.co/jp/blog/elastic-opentelemetry-distribution-dotnet-applications"&gt;https://www.elastic.co/jp/blog/elastic-opentelemetry-distribution-dotnet-applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elastic .NET OpenTelemetry SDK のアルファーバージョンが公開された。&lt;/p&gt;
&lt;p&gt;Elastic OpenTelemetry ディストリビューションは Elastic による OpenTelemetry のデフォルト構成や OpenTelemtry SDK を使用した拡張。現時点でのアルファリリースではバニラバージョンとの差異はほとんどないが今後機能追加を行う予定とのこと。&lt;/p&gt;
&lt;h3 id="building-a-scalable-gateway-with.net-for-microsoft-ai.net-blog"&gt;Building a scalable gateway with .NET for Microsoft AI - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/building-a-scalable-gateway-for-microsoft-ai/"&gt;https://devblogs.microsoft.com/dotnet/building-a-scalable-gateway-for-microsoft-ai/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft の Bing や Copilot といった AI サービスのフロントエンドゲートウェイを .NET と YARP で構築した事例について。&lt;/p&gt;
&lt;p&gt;記事ではミラーリングやレートリミット、動的構成変更など YARP の柔軟な構成を活用した例を紹介している。&lt;/p&gt;
&lt;h3 id="release-v8.1.0-dotnetorleans"&gt;Release v8.1.0 · dotnet/orleans&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/orleans/releases/tag/v8.1.0"&gt;https://github.com/dotnet/orleans/releases/tag/v8.1.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Orleans v8.1.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Aspire との統合がサポートされたほか、様々な修正と改善が含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="detecting-blocking-calls-using-async-in-c-james-crosswell-code-blog"&gt;Detecting blocking calls using async in C# | James Crosswell | Code Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.jamescrosswell.dev/posts/async-detecting-blocking-calls"&gt;https://www.jamescrosswell.dev/posts/async-detecting-blocking-calls&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;非同期メソッドにおいてブロッキングコールを調査する方法について。&lt;/p&gt;
&lt;p&gt;記事では Ben.BlockingDetector を使用した検出とそれを Sentry に組み込んだことについて、Sentry 上で確認できるようにしたことについて書かれている。&lt;/p&gt;
&lt;h3 id="net"&gt;.NETの正規表現 - キャプチャ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/76f6739d7ac75f"&gt;https://zenn.dev/sayurin/articles/76f6739d7ac75f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET の正規表現におけるキャプチャーについて。&lt;/p&gt;
&lt;p&gt;名前付きキャプチャーが複数ある場合についてや F# での名前付きキャプチャーを自然に取り扱えるようにする方法など。&lt;/p&gt;
&lt;h3 id="refactor-your-c-code-with-primary-constructors.net-blog"&gt;Refactor your C# code with primary constructors - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/csharp-primary-constructors-refactoring/"&gt;https://devblogs.microsoft.com/dotnet/csharp-primary-constructors-refactoring/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プライマリーコンストラクターを使用したリファクタリングについて。&lt;/p&gt;
&lt;p&gt;記事では ILogger のようなものをコンストラクターで渡すパターンをプライマリーコンストラクターで置き換える例について紹介している。&lt;/p&gt;
&lt;h3 id="hacking-together-an-asciimath-parser-for.net"&gt;Hacking together an AsciiMath parser for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/hacking-together-an-asciimath-parser-for-dotnet/"&gt;https://andrewlock.net/hacking-together-an-asciimath-parser-for-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AsciiMath パーサーを .NET から扱う方法について。&lt;/p&gt;
&lt;p&gt;記事ではいくつかの言語の AsciiMath パーサーを紹介して、最終的に JavaScript 実装を Jint を使用して .NET から実行できるようにするという方法を解説している。&lt;/p&gt;
&lt;h3 id="asp.net-core-minimal-api-qiita"&gt;ASP.NET Core Minimal API を本番でも大規模でも使えるように構成する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/654c6e0d0bb7c92854a8"&gt;https://qiita.com/takashiuesaka/items/654c6e0d0bb7c92854a8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Minimal APIs で API を定義、実装する際のコードを整理する手法の紹介 (翻訳)。拡張メソッドによる集約や MapGroup でのグルーピングなど。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tessferrandez.com/blog/2023/10/31/organizing-minimal-apis.html"&gt;Organizing ASP.NET Core Minimal APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="how-to-create-a-link-between-two-spans-in-opentelemetry"&gt;How to create a link between two spans in OpenTelemetry&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/koma_koma_d/how-to-create-a-link-between-two-spans-in-opentelemetry-424i"&gt;https://dev.to/koma_koma_d/how-to-create-a-link-between-two-spans-in-opentelemetry-424i&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry の Span 間の関連付けをする span-link を作る方法について。&lt;/p&gt;
&lt;h3 id="jwt-unable-to-decode-the-payload"&gt;【JWT】デコード時に発生したエラー Unable to decode the payload の解決方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/o0rororo0o/articles/028202490cc99d"&gt;https://zenn.dev/o0rororo0o/articles/028202490cc99d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.AspNetCore.Authentication.JwtBearer 7.0.14 以降で JWT の iat フィールドが数値以外となっているとエラーになることについて。&lt;/p&gt;
&lt;h3 id="optimizing-string-searches-in-c-with-searchvalues"&gt;Optimizing String Searches in C# with SearchValues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/admirmujkic/optimizing-string-searches-in-c-with-searchvalues-1105"&gt;https://dev.to/admirmujkic/optimizing-string-searches-in-c-with-searchvalues-1105&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で追加された特定の値が含まれていることを検索することに特化した定義が可能な &lt;code&gt;SearchValues&lt;/code&gt; クラスの使い方とパフォーマンスについて。&lt;/p&gt;
&lt;h3 id="the-first-set-of-bug-fixes-for-resharper-and-rider-2024.1-are-here-the.net-tools-blog"&gt;The First Set of Bug Fixes for ReSharper and Rider 2024.1 Are Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/04/17/the-first-set-of-bug-fixes-for-resharper-and-rider-2024-1-are-here/"&gt;https://blog.jetbrains.com/dotnet/2024/04/17/the-first-set-of-bug-fixes-for-resharper-and-rider-2024-1-are-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2024.1.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースは ReSharper と Rider 2024.1 の最初のバグフィックスで、いくつかの細かい不具合が修正されている。&lt;/p&gt;
&lt;h3 id="itsmattkcdotnet9x-backport-of.net-2.0-3.5-to-windows-9x"&gt;itsmattkc/dotnet9x: Backport of .NET 2.0 - 3.5 to Windows 9x&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/itsmattkc/dotnet9x"&gt;https://github.com/itsmattkc/dotnet9x&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework 2.0-3.5 を Windows 9x にバックポート(移植)を試みるプロジェクト。&lt;/p&gt;
&lt;p&gt;-&lt;a href="https://pc.watch.impress.co.jp/docs/news/yajiuma/1584811.html"&gt;【やじうまPC Watch】 .NET FrameworkをWindows 95にバックポートした強者現る&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="will-visual-studio-be-migrated-to.net-core-and-become-multi-platform-ndepend-blog"&gt;Will Visual Studio Be Migrated to .NET Core and Become Multi-Platform? - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/visual-studio-multi-platform/"&gt;https://blog.ndepend.com/visual-studio-multi-platform/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio は .NET CoreCLR 化するのかということを考えるべく、現状の Visual Studio のアセンブリの構成を調査し推察している。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="c-20240427-1330"&gt;C#パフォーマンス勉強会 (2024/04/27 13:30〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cs-reading.connpass.com/event/309714/"&gt;https://cs-reading.connpass.com/event/309714/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c.net-web-grpc-graphql-blazor-20240515-1900"&gt;イマドキのC# .NET Web開発 〜gRPC, GraphQL, Blazorもあるよ〜 (2024/05/15 19:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sansan.connpass.com/event/316664/"&gt;https://sansan.connpass.com/event/316664/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharpkcptransport-kcptransport-is-a-pure-c-implementation-of-rudp-for-high-performance-real-time-network-communication"&gt;Cysharp/KcpTransport: KcpTransport is a Pure C# implementation of RUDP for high-performance real-time network communication&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/KcpTransport"&gt;https://github.com/Cysharp/KcpTransport&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/skywind3000/kcp/blob/master/README.en.md"&gt;KCP&lt;/a&gt;(UDP ベースの RUDP 的なプロトコル) の .NET 移植実装。&lt;/p&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;ローカル関数がコンパイルされて IL になった際、&lt;code&gt;g_&lt;/code&gt; で始まる名前のメソッドになるが、その &lt;code&gt;g_&lt;/code&gt; について。&lt;/p&gt;
&lt;!-- https://x.com/khyperia/status/1782787967703998667?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;fun fact: if you&amp;#39;ve ever decompiled a local function in C#, you might have noticed a &amp;quot;g&amp;quot; in the mangled name. I chose that letter!&lt;br&gt;&lt;br&gt;My logic was that in math, functions are typically called &amp;quot;f&amp;quot; first, then &amp;quot;g&amp;quot; second - local functions are kinda the second function, so g it is! &lt;a href="https://t.co/0sSq9u8Vg3"&gt;pic.twitter.com/0sSq9u8Vg3&lt;/a&gt;&lt;/p&gt;&amp;mdash; Ashley (&amp;#64;khyperia) &lt;a href="https://twitter.com/khyperia/status/1782787967703998667?ref_src=twsrc%5Etfw"&gt;April 23, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;code&gt;IList&amp;lt;T&amp;gt;&lt;/code&gt; が &lt;code&gt;IReadOnlyList&amp;lt;T&amp;gt;&lt;/code&gt; になるかもしれないという話。&lt;/p&gt;
&lt;!-- https://x.com/terrajobst/status/1782922704997498982?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;For .NET 9 P4, we&amp;#39;re trying to make the long desired change that all the mutable collection interfaces extend the IReadOnly interfaces, so this code becomes valid: &lt;a href="https://t.co/tPf10vLf2m"&gt;pic.twitter.com/tPf10vLf2m&lt;/a&gt;&lt;/p&gt;&amp;mdash; Immo Landwerth (&amp;#64;terrajobst) &lt;a href="https://twitter.com/terrajobst/status/1782922704997498982?ref_src=twsrc%5Etfw"&gt;April 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="list-add-is-way-slower-almost-3-times-in-net9.0-preview-3-than-with-net8.0-issue-101437-dotnetruntime"&gt;List Add is way slower (almost 3 times) in &lt;code&gt;net9.0 preview 3&lt;/code&gt; than with &lt;code&gt;net8.0&lt;/code&gt; · Issue #101437 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/101437"&gt;https://github.com/dotnet/runtime/issues/101437&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JIT の変更により .NET 9 の List が遅くなることがある問題について。現状 Apple Silicon (Arm64) でのみ発生している。&lt;/p&gt;
&lt;!-- https://x.com/davidfowl/status/1782961890580414894?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;This is an example of a great investigation an engineering discussion &lt;a href="https://t.co/crFlo1Xnwc"&gt;https://t.co/crFlo1Xnwc&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1782961890580414894?ref_src=twsrc%5Etfw"&gt;April 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-04-17: .NET 9 Preview 3, .NET April 2024 Updates, ReSharper and Rider 2024.1</title>
			<link>/2024/04/17/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/04/17/updates</guid>
			<pubDate>Wed, 17 Apr 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-9-preview-3-dotnetcore-discussion-9271"&gt;.NET 9 Preview 3 · dotnet/core · Discussion #9271&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/discussions/9271"&gt;https://github.com/dotnet/core/discussions/9271&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは TimeSpan.From* に対するオーバーロードの追加、動的に生成したアセンブリを保存できる PersistableAssemblyBuilder の追加、例外ハンドリングの高速化、共有ジェネリクスの実行時ルックアップのインライン化、ターミナルロガー(&lt;code&gt;dotnet&lt;/code&gt; コマンドの出力)のユーザビリティ強化などが含まれている。&lt;/p&gt;
&lt;p&gt;その他、ML.NET の Tokenizer の強化、ActivatorUtilities.CreateInstance のActivatorUtilitiesConstructor 属性を常に使用するようになるといった変更も行われている。&lt;/p&gt;
&lt;h3 id="net-april-2024-updates.net-8.0.4-7.0.18.net-6.0.29.net-blog"&gt;.NET April 2024 Updates – .NET 8.0.4, 7.0.18, .NET 6.0.29 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/april-2024-updates/"&gt;https://devblogs.microsoft.com/dotnet/april-2024-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8.0.4, 7.0.18, 6.0.29 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースは2024年4月のアップデートで、いくつかの不具合の修正と WPF の特権昇格の脆弱性の修正が含まれている。&lt;/p&gt;
&lt;h3 id="resharper-2024.1-improved-handling-of-collections-collection-expressions-and-disposable-resources-new-assembly-diff-tool-window-and-more-the.net-tools-blog"&gt;ReSharper 2024.1: Improved Handling of Collections, Collection Expressions, and Disposable Resources, New Assembly Diff Tool Window, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/04/09/resharper-2024-1/"&gt;https://blog.jetbrains.com/dotnet/2024/04/09/resharper-2024-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではコレクション式のサポート強化やコレクションの変更の解析、&lt;code&gt;ISpanFormattable&lt;/code&gt; などのフォーマット系メンバーの生成、非同期メソッド内の Disposable のサポートの強化、Razor のサポートの改善、ソリューションワイド解析の高リソース利用モード、リファクタリングの速度改善などが含まれている。&lt;/p&gt;
&lt;p&gt;そのほか Assembly Diff ビューの追加やコマンドラインツールの出力フォーマットの SALIF のデフォルト化なども含まれる。&lt;/p&gt;
&lt;h3 id="rider-2024.1-a-better-experience-for-debugging-performance-monitoring-and-game-development-the.net-tools-blog"&gt;Rider 2024.1: A Better Experience for Debugging, Performance Monitoring, and Game Development | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/04/09/rider-2024-1/"&gt;https://blog.jetbrains.com/dotnet/2024/04/09/rider-2024-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではデバッグ中のメモリー使用量や CPU 使用率を表示できる Monitoring ツールウィンドウの追加、コレクションビジュアライザー、ステップ時間表示、Blazor WebAssembly のホットリロード、エディターでの固定行表示、更新された新しいプロジェクトダイアログ、ReSharper 同様の C# のサポートの強化が含まれている。&lt;/p&gt;
&lt;p&gt;その他 Unity の Odin Inspector サポート、.NET Aspire プラグイン、AI アシスタントのアンバンドル(プラグイン化)といった変更も含まれている。&lt;/p&gt;
&lt;h3 id="dotcover-dotmemory-dotpeek-and-dottrace-2024.1-are-out-the.net-tools-blog"&gt;dotCover, dotMemory, dotPeek, and dotTrace 2024.1 Are Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/04/09/dotnet-tools-241-release/"&gt;https://blog.jetbrains.com/dotnet/2024/04/09/dotnet-tools-241-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dotCover, dotMemory, dotPeek, dotTrace 2024.1 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dotMemory 2024.1
&lt;ul&gt;
&lt;li&gt;デスクトップ MAUI アプリケーションのサポート&lt;/li&gt;
&lt;li&gt;Frozen Objects Heap (FOH) のサポート&lt;/li&gt;
&lt;li&gt;Linux および macOS での新しいビュー (Similar Retention, Sunburst dialog)&lt;/li&gt;
&lt;li&gt;macOS において実行ファイルの代わりにアプリケーションバンドル &lt;code&gt;.app&lt;/code&gt; を指定するオプション&lt;/li&gt;
&lt;li&gt;JetBrains Rider での macOS 実行構成でのプロファイリング。対応フレームワーク: &lt;code&gt;net7.0-macos&lt;/code&gt;, &lt;code&gt;net8.0-macos&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;dotTrace 2024.1
&lt;ul&gt;
&lt;li&gt;デスクトップ MAUI アプリケーションのサポート&lt;/li&gt;
&lt;li&gt;UI プリセット (特定のアプリケーションに向けた UI の表示構成)&lt;/li&gt;
&lt;li&gt;macOS において実行ファイルの代わりにアプリケーションバンドル &lt;code&gt;.app&lt;/code&gt; を指定するオプション&lt;/li&gt;
&lt;li&gt;JetBrains Rider での macOS 実行構成でのプロファイリング。対応フレームワーク: &lt;code&gt;net7.0-macos&lt;/code&gt;, &lt;code&gt;net8.0-macos&lt;/code&gt;, &lt;code&gt;net7.0-maccatalyst&lt;/code&gt;, &lt;code&gt;net8.0-maccatalyst&lt;/code&gt;, &lt;code&gt;Xamarin.Mac&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;dotCover 2024.1
&lt;ul&gt;
&lt;li&gt;MAUI のカバレッジ解析 (.NET 7 以降の WinUI デスクトップアプリケーションのみ)&lt;/li&gt;
&lt;li&gt;コードカバレッジハイライトの改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;dotPeek 2024.1
&lt;ul&gt;
&lt;li&gt;新たに独立した Assembly Diff ツールウィンドウ&lt;/li&gt;
&lt;li&gt;Web Assembly の WebCIL パッケージフォーマットのサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="version-1.5.2-stable-channel-release-notes-for-the-windows-app-sdk-windows-apps"&gt;Version 1.5.2 - Stable channel release notes for the Windows App SDK - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-152-15240404000"&gt;https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-152-15240404000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.5.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合修正に加え、Widget に関する API の追加が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.2"&gt;Release Windows App SDK 1.5.2 (1.5.240404000) · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-aspire-preview-5.net-aspire"&gt;.NET Aspire preview 5 - .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/dotnet/aspire/whats-new/preview-5"&gt;https://learn.microsoft.com/ja-jp/dotnet/aspire/whats-new/preview-5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire preview 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではパッケージの分割や様々な API の変更、ダッシュボードの改善、Visual Studio Code C# DevKit からの起動、Azure Event Hubs や NATS, Seq といったコンポーネントのサポート、Azure サポートの強化、AWS サポートの追加といったものが含まれている。&lt;/p&gt;
&lt;h3 id="introducing-mstest-sdk-improved-configuration-flexibility.net-blog"&gt;Introducing MSTest SDK - Improved Configuration &amp;amp; Flexibility - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-mstest-sdk/"&gt;https://devblogs.microsoft.com/dotnet/introducing-mstest-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSBuild Project SDK をベースにした MSTest SDK についてのアナウンス。&lt;/p&gt;
&lt;p&gt;MSTest に必要な構成が含まれたプロジェクト SDK が提供されることで、デフォルト値が提供され利用も簡素化される。&lt;/p&gt;
&lt;h3 id="announcing-pldotnet-version-0.99-beta"&gt;Announcing pl/dotnet, version 0.99 (beta)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.postgresql.org/about/news/announcing-pldotnet-version-099-beta-2838/"&gt;https://www.postgresql.org/about/news/announcing-pldotnet-version-099-beta-2838/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pl/dotnet 0.99 (ベータ) がリリースされた。&lt;/p&gt;
&lt;p&gt;pl/dotnet は PostgreSQL に C#/F# サポートを追加するしくみで、.NET で関数やプロシージャといったものを記述できる。ベンチマークによると C#/F# は最速の Procedural Language (PL/*) であるとのこと。PostgreSQL ライセンスにて提供される。&lt;/p&gt;
&lt;!-- https://x.com/toddglewis/status/1777783647031931183?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We added C# and F# support to PostgreSQL.  It&amp;#39;s the best-tested and fastest procedural language in PostgreSQL, in our benchmarks.&lt;br&gt;&lt;br&gt;It&amp;#39;s also the only one that maps the database to stored procedures using the native database API, allowing DLLs to run unmodified in the client or…&lt;/p&gt;&amp;mdash; Todd Lewis (&amp;#64;toddglewis) &lt;a href="https://twitter.com/toddglewis/status/1777783647031931183?ref_src=twsrc%5Etfw"&gt;April 9, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="build-test-resilient-apps-in.net-with-dev-proxy.net-blog"&gt;Build &amp;amp; test resilient apps in .NET with Dev Proxy - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/build-test-resilient-apps-dotnet-dev-proxy/"&gt;https://devblogs.microsoft.com/dotnet/build-test-resilient-apps-dotnet-dev-proxy/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;外部 API の呼び出し時におけるパフォーマンス悪化やエラー、レートリミットといった問題を Dev Proxy を使用してシミュレートして開発する方法についての紹介。&lt;/p&gt;
&lt;h3 id="how-to-use-github-copilot-chat-in-visual-studio-visual-studio-blog"&gt;How to use GitHub Copilot Chat in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/how-to-use-github-copilot-chat-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/how-to-use-github-copilot-chat-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio での GitHub Copilot Chat の使用方法について。&lt;/p&gt;
&lt;p&gt;記事では Copilot Chat を使用したコードの変換時の操作やプレビューについて紹介している。&lt;/p&gt;
&lt;h3 id="exploring-collections-datatables-the.net-tools-blog"&gt;Exploring Collections &amp;amp; DataTables | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/04/15/exploring-collections-and-datatables/"&gt;https://blog.jetbrains.com/dotnet/2024/04/15/exploring-collections-and-datatables/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.1 に組み込まれたコレクションビジュアライザーの紹介。&lt;/p&gt;
&lt;p&gt;新しいコレクションビジュアライザーでの絞り込みや検索、チャート形式での表示といった機能について触れている。&lt;/p&gt;
&lt;h3 id="streamline-your-container-build-and-publish-with.net-8.net-blog"&gt;Streamline your container build and publish with .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/streamline-container-build-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/streamline-container-build-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の dotnet コマンドでコンテナーイメージをビルド、発行する方法について。&lt;/p&gt;
&lt;p&gt;記事では簡単な使い方から、ディストリビューションの変更や chiseled/extra イメージについて触れている。&lt;/p&gt;
&lt;h3 id="how-to-test-logging-with-fakelogger"&gt;How to Test Logging with FakeLogger&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/canro91/how-to-test-logging-with-fakelogger-4dgc"&gt;https://dev.to/canro91/how-to-test-logging-with-fakelogger-4dgc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.Diagnostics.Testing の FakeLogger を使用したテスト方法について。&lt;/p&gt;
&lt;h3 id="net-aspire-dashboard-is-the-best-tool-to-visualize-your-opentelemetry-data-during-local-development"&gt;.NET Aspire dashboard is the best tool to visualize your OpenTelemetry data during local development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://anthonysimmon.com/dotnet-aspire-dashboard-best-tool-visualize-opentelemetry-local-dev/"&gt;https://anthonysimmon.com/dotnet-aspire-dashboard-best-tool-visualize-opentelemetry-local-dev/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire ダッシュボードを .NET Aspire とは関係なくローカル開発での OpenTelemetry のダッシュボードとして使用する方法について。&lt;/p&gt;
&lt;h3 id="blazor-web-app-asp.net-core-identity"&gt;Blazor Web App + ASP.NET Core Identity にカスタムユーザークレームを使用した認証と認可を実装する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/hat_kotap/articles/421e9bc3419aa8"&gt;https://zenn.dev/hat_kotap/articles/421e9bc3419aa8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Web App と ASP.NET Core Identity の組み合わせでの認証と認可を実装する方法について。&lt;/p&gt;
&lt;h3 id="useful-features-in-entity-framework-core-8-for-your-application"&gt;Useful features in Entity Framework Core 8 for your application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dateo-software.de/blog/entity-framework-8"&gt;https://dateo-software.de/blog/entity-framework-8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 8 の便利な機能の紹介。&lt;/p&gt;
&lt;p&gt;記事ではプリミティブコレクションマッピング、複合型、JSON カラム、Sentinel 値を取り上げている。&lt;/p&gt;
&lt;h3 id="errorvisualstudio-qiita"&gt;Error以上のログ出力するときにVisualStudioを中断/ブレークする忘備録 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kokeiro001/items/ee6221153ed868f77733"&gt;https://qiita.com/kokeiro001/items/ee6221153ed868f77733&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;エラーログ出力時にデバッガーをブレークするアイデアについて。記事では Serilog での実装例を紹介している。&lt;/p&gt;
&lt;h3 id="automated-nuget-package-version-range-updates-in.net-projects-using-renovate"&gt;Automated NuGet package version range updates in .NET projects using Renovate&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/automated-nuget-package-version-range-updates-in-net-projects-using-renovate-15il"&gt;https://dev.to/asimmon/automated-nuget-package-version-range-updates-in-net-projects-using-renovate-15il&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet パッケージバージョンを Renovate でアップデートする際にバージョンが範囲指定となっている場合の対処方法について。&lt;/p&gt;
&lt;h3 id="app-service.net-qiita"&gt;App Service にデプロイした .NET アプリの応答遅延を分析する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/georgeOsdDev&amp;#64;github/items/166d9ed85c1effc648e8"&gt;https://qiita.com/georgeOsdDev&amp;#64;github/items/166d9ed85c1effc648e8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure App Service にデプロイした .NET アプリケーションのパフォーマンス分析を行うためのポイントやツールといったものの紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[App Service にデプロイした .NET アプリの応答遅延を分析する その２ - Qiita])(&lt;a href="https://qiita.com/georgeOsdDev&amp;#64;github/items/825bbc63679472248e1a"&gt;https://qiita.com/georgeOsdDev&amp;#64;github/items/825bbc63679472248e1a&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="semantic-kernel-json-mode"&gt;Semantic Kernel で JSON Mode を使おう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-v1-005"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-v1-005&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel で OpenAI API の JSON モード (JSON で回答を受けとれるモード) を使用する方法について。&lt;/p&gt;
&lt;h3 id="treatwarningsaserrors-and-warnaserror-are-not-the-same"&gt;TreatWarningsAsErrors and warnaserror are not the same&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/treatwarningsaserrors-and-warnaserror-are-not-the-same-4h9c"&gt;https://dev.to/asimmon/treatwarningsaserrors-and-warnaserror-are-not-the-same-4h9c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.csproj の &lt;code&gt;TreatWarningsAsErrors&lt;/code&gt; と &lt;code&gt;dotnet build&lt;/code&gt; のスイッチ &lt;code&gt;-warnaserror&lt;/code&gt; の違いについて。&lt;/p&gt;
&lt;h3 id="introducing-the-new-copilot-experience-in-visual-studio-visual-studio-blog"&gt;Introducing the new Copilot experience in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-the-new-copilot-experience-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-the-new-copilot-experience-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Copilot 関連の機能が Visual Studio 17.10 Preview 3 で統合されたことについての紹介。&lt;/p&gt;
&lt;p&gt;Visual Studio 17.10 以降、GitHub Copilot および Copilot Chat は1つに統合され、 Visual Studio のコンポーネントの一部として提供される。&lt;/p&gt;
&lt;h3 id="candorid-qiita"&gt;【C#】サーバー側でAndoridのレシートを署名検証する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/simoyama2323/items/cdbb45031bbef405bd25"&gt;https://qiita.com/simoyama2323/items/cdbb45031bbef405bd25&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google Play のレシート検証を行う方法について。&lt;/p&gt;
&lt;h3 id="cazure.ai.openai-aoai-azure-ai-search-rag-chat"&gt;【C#】Azure.AI.OpenAI パッケージで AOAI &amp;amp; Azure AI Search を使う RAG と Chat のコード例&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/cf284df0a1c693"&gt;https://zenn.dev/jtechjapan_pub/articles/cf284df0a1c693&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure.AI.OpenAI を使用して Azure OpenAI と Azure AI Search で RAG を行うチャットの例の解説。&lt;/p&gt;
&lt;h3 id="dapr-state-management-qiita"&gt;Dapr を使ってみる - State management 編 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/713499c531095d5687c2"&gt;https://qiita.com/takashiuesaka/items/713499c531095d5687c2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dapr でステート管理を行うサービスを使用する方法について。&lt;/p&gt;
&lt;p&gt;記事では Redis を立ち上げる手順や .NET アプリケーションから利用する方法、.NET Aspire との連携についても触れている。&lt;/p&gt;
&lt;h3 id="c-visual-studio-2022.net-framework.net-framework-2.0-qiita"&gt;[C#] Visual Studio 2022 で古い .NET Framework を使えるようにする方法 (.NET Framework 2.0 以降) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/diontools/items/b193ae8394161fc26698"&gt;https://qiita.com/diontools/items/b193ae8394161fc26698&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 で公式サポート外の .NET Framework を使用できるようにする方法について。&lt;/p&gt;
&lt;h3 id="aspireazure-functions"&gt;AspireプロジェクトとAzure Functions プロジェクトを並行開発する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/d51d86c3105634"&gt;https://zenn.dev/jtechjapan_pub/articles/d51d86c3105634&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire と Azure Functions を組み合わせたプロジェクト開発構成について。&lt;/p&gt;
&lt;h3 id="ef-core-mysql-uuid_to_bin-bin_to_uuid"&gt;EF Core で MySQL の UUID_TO_BIN, BIN_TO_UUID と同じフォーマットにするメモ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/hikarin/articles/6964d684573076"&gt;https://zenn.dev/hikarin/articles/6964d684573076&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で Guid を MySQL の &lt;code&gt;UUID_TO_BIN&lt;/code&gt;, &lt;code&gt;BIN_TO_UUID&lt;/code&gt; に合わせた形に変換する方法について。&lt;/p&gt;
&lt;h3 id="visual-studioslnx-kkamegawas-weblog"&gt;Visual Studioの新しいソリューション形式slnx - kkamegawa's weblog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kkamegawa.hatenablog.jp/entry/2024/04/12/051622"&gt;https://kkamegawa.hatenablog.jp/entry/2024/04/12/051622&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.0 Preview 3 で追加された XML ベースの新しいソリューション形式 .slnx について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="session-catalog-microsoft-build-may-21-23-2024-seattle-and-online"&gt;Session catalog | Microsoft Build | May 21-23, 2024 | Seattle and Online&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://build.microsoft.com/en-US/sessions"&gt;https://build.microsoft.com/en-US/sessions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5月21日から開催される Microsoft Build のセッションカタログ。&lt;/p&gt;
&lt;h3 id="deep-dive-on-linq-with-stephen-toub"&gt;Deep Dive on LINQ with Stephen Toub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=xKr96nIyCFM"&gt;https://www.youtube.com/watch?v=xKr96nIyCFM&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/xKr96nIyCFM?si=nlCG309DdxEEBVor" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Scott Hanselman 氏と Stephan Toub 氏による LINQ の実装についての解説。&lt;/p&gt;
&lt;h3 id="lets-learn.net-containers-japanese"&gt;Let's Learn .NET: Containers (Japanese)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=PFUy3W-FeAY"&gt;https://www.youtube.com/watch?v=PFUy3W-FeAY&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/PFUy3W-FeAY?si=VkjJtLezVdcbpOj2" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/dave_dotnet/status/1778501853312934200?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET 8 v .NET 9 Exception Handling benchmarks&lt;br&gt;&lt;br&gt;Have just ran these on preview 3, wow ❤.&lt;br&gt;&lt;br&gt;76% faster handling in .NET 9 for the benchmark code I ran (in the 2nd tweet below). &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/6LVeN4cRwJ"&gt;pic.twitter.com/6LVeN4cRwJ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1778501853312934200?ref_src=twsrc%5Etfw"&gt;April 11, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-04-07: AWS Message Processing Framework for .NET, .NET 7 EoS, grpc-dotnet 2.62.0</title>
			<link>/2024/04/07/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/04/07/updates</guid>
			<pubDate>Sun, 07 Apr 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="introducing-the-aws-message-processing-framework-for.net-preview-amazon-web-services"&gt;Introducing the AWS Message Processing Framework for .NET (Preview) | Amazon Web Services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/jp/blogs/developer/introducing-the-aws-message-processing-framework-for-net-preview/"&gt;https://aws.amazon.com/jp/blogs/developer/introducing-the-aws-message-processing-framework-for-net-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS Message Processing Framework for .NET のプレビューが公開された。&lt;/p&gt;
&lt;p&gt;.NET で AWS の SQS や EventBridge を使用してメッセージ処理を行うためのフレームワーク。メッセージのハンドラーを記述する形で処理を行え、機能も AWS に特化した調整が行われている。&lt;/p&gt;
&lt;p&gt;OpenTelemetry でのインストゥルメンテーションなどもサポートされている。&lt;/p&gt;
&lt;h3 id="net-7-will-reach-end-of-support-on-may-14-2024.net-blog"&gt;.NET 7 will reach End of Support on May 14, 2024 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/donet-7-end-of-support/"&gt;https://devblogs.microsoft.com/dotnet/donet-7-end-of-support/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 が2024年5月14日にサポート終了となることについて。&lt;/p&gt;
&lt;p&gt;.NET 7 は STS (Standard Term Support) のためリリースの18か月後である2024年5月14日にサポートが終了となる。.NET 8 へのアップグレードが推奨される。&lt;/p&gt;
&lt;p&gt;また、サポート終了後 Visual Studio 17.6 および 17.4 のサービス更新にて .NET 7 はサポート対象外のコンポーネントとなる。&lt;/p&gt;
&lt;h3 id="a-new-msbuild-editing-experience-visual-studio-blog"&gt;A new MSBuild editing experience - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/experimental-msbuild-editor/"&gt;https://devblogs.microsoft.com/visualstudio/experimental-msbuild-editor/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSBuild ファイルの編集をより良い体験にするための実験的な Visual Studio 拡張のリリース。&lt;/p&gt;
&lt;p&gt;.csproj ファイルのような MSBuild のプロジェクトファイルをソースコードエディターで編集する際にクイックヒントやポップアップ、ナビゲーションにコード補完といった高度な支援を受けられるようにする拡張。&lt;/p&gt;
&lt;p&gt;現時点では Visual Studio の拡張となっているが、今後 Visual Studio Code 向けにも移植予定とされている。&lt;/p&gt;
&lt;h3 id="release-release-v2.62.0-grpcgrpc-dotnet"&gt;Release Release v2.62.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.62.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.62.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.62.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは UWP での検出のエラーが修正されている。&lt;/p&gt;
&lt;h3 id="testing-your-native-aot-applications.net-blog"&gt;Testing Your Native AOT Applications - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/testing-your-native-aot-dotnet-apps/"&gt;https://devblogs.microsoft.com/dotnet/testing-your-native-aot-dotnet-apps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Native AOT のユニットテストをサポートした MSTest の早期プレビューが公開された。&lt;/p&gt;
&lt;p&gt;このプレビューでは MSTest 向けのユニットテストを Native AOT でコンパイルし、テストを実行できる仕組みが提供される。これにより Native AOT として実行した際のランタイムエラーなどをチェックできるようになる。&lt;/p&gt;
&lt;p&gt;このプレビューではコードカバレッジと TRX レポートの生成がサポートされているが、テストケースの検出などは最低限のもののみがサポートされているとのこと。&lt;/p&gt;
&lt;h3 id="bing-on.net-8-the-impact-of-dynamic-pgo.net-blog"&gt;Bing on .NET 8: The Impact of Dynamic PGO - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/bing-on-dotnet-8-the-impact-of-dynamic-pgo/"&gt;https://devblogs.microsoft.com/dotnet/bing-on-dotnet-8-the-impact-of-dynamic-pgo/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bing での .NET 8 の Dynamic PGO の導入について。&lt;/p&gt;
&lt;p&gt;実際に .NET 8 で Dynamic PGO をテストしたところ定常的なパフォーマンスは向上したが、一部のワークロードでスパイクの遅延が見られた。調査した結果、コードベースが巨大なため再 JIT キューがたまりすぎていたことに起因していた。これはウォームアップクエリーの追加や設定の変更などで解消できた。&lt;/p&gt;
&lt;p&gt;結果として CPU サイクルは 13% 減少するといったパフォーマンスの向上が得られたほか、GC の影響を受けるクエリーの割合も減少したとのこと。&lt;/p&gt;
&lt;h3 id="retirement-support-for-the-in-process-model-for.net-apps-in-azure-functions-ends-10-november-2026"&gt;Retirement: Support for the in-process model for .NET apps in Azure Functions ends 10 November 2026.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://azure.microsoft.com/en-us/updates/retirement-support-for-the-inprocess-model-for-net-apps-in-azure-functions-ends-10-november-2026/"&gt;https://azure.microsoft.com/en-us/updates/retirement-support-for-the-inprocess-model-for-net-apps-in-azure-functions-ends-10-november-2026/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Functions における .NET アプリのインプロセスモデルのサポートが2026年11月10日にサポート終了となる。&lt;/p&gt;
&lt;p&gt;当該アプリケーションは期日までにアウトプロセスモデルへの移行する必要がある。&lt;/p&gt;
&lt;h3 id="retirement-support-for.net-6-ends-on-12-november-2024upgrade-your-azure-functions-apps-to.net-8"&gt;Retirement: Support for .NET 6 ends on 12 November 2024—upgrade your Azure Functions apps to .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://azure.microsoft.com/en-us/updates/retirement-support-for-net-6-ends-on-12-november-2024-upgrade-your-azure-functions-apps-to-net-8/"&gt;https://azure.microsoft.com/en-us/updates/retirement-support-for-net-6-ends-on-12-november-2024-upgrade-your-azure-functions-apps-to-net-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Functions において .NET 6 のサポートは2024年11月12日で終了となる。&lt;/p&gt;
&lt;p&gt;現在 .NET 6 で稼働しているアプリケーションは .NET 8 へのアップグレードが必要となる。&lt;/p&gt;
&lt;h3 id="odp.net-23c-major-dev-release-update"&gt;ODP.NET 23c — Major Dev Release Update&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;alex.keh/odp-net-23c-major-dev-release-update-016297dea26c"&gt;https://medium.com/&amp;#64;alex.keh/odp-net-23c-major-dev-release-update-016297dea26c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ODP.NET 23c Developer Release 23.3.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Metrics API や OpenTelemetry への対応、Azure Key Vault や OCI Vault のような構成プロバイダーからの接続情報の取得、mTLS の証明書の選択、接続確立の高速化といった変更が含まれている。&lt;/p&gt;
&lt;h3 id="release-ilspy-9.0-preview-1-icsharpcodeilspy"&gt;Release ILSpy 9.0 Preview 1 · icsharpcode/ILSpy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/icsharpcode/ILSpy/releases/tag/v9.0-preview1"&gt;https://github.com/icsharpcode/ILSpy/releases/tag/v9.0-preview1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ILSpy 9.0 Preview 1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは ECMA-335 メタデータや WebCIL の読み取りのサポート、言語のサポートの強化やパフォーマンス改善などが含まれている。&lt;/p&gt;
&lt;!-- https://x.com/ilspy/status/1774839673870852465?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Preview 1 of &lt;a href="https://twitter.com/hashtag/ILSpy?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#ILSpy&lt;/a&gt; 9.0 is now available - as usual, we pack lots of breaking changes into P1. But also a few nuggets like WebCIL &amp;amp; ECMA-335 metadata support. For details (eg performance improvements!) and download see &lt;a href="https://t.co/7JfzITdWMP"&gt;https://t.co/7JfzITdWMP&lt;/a&gt;&lt;/p&gt;&amp;mdash; ILSpy Team (&amp;#64;ilspy) &lt;a href="https://twitter.com/ilspy/status/1774839673870852465?ref_src=twsrc%5Etfw"&gt;April 1, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="lock-c-c"&gt;Lock クラス | &lt;ins&gt;C&lt;/ins&gt;; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/4/lock-class/"&gt;https://ufcpp.net/blog/2024/4/lock-class/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 および C# 13 で導入される &lt;code&gt;Lock&lt;/code&gt; クラスについて。&lt;/p&gt;
&lt;h3 id="refref-struct-c-c"&gt;ref/ref struct 変数を非同期メソッド中で使えるように | &lt;ins&gt;C&lt;/ins&gt;; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/4/ref-in-async/"&gt;https://ufcpp.net/blog/2024/4/ref-in-async/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 13 で対応が予定されている &lt;code&gt;ref&lt;/code&gt;/&lt;code&gt;ref struct&lt;/code&gt; を非同期メソッド内で使用できるようにする対応について、Lock/lock に関連した話。&lt;/p&gt;
&lt;h3 id="how-to-use-comments-to-prompt-github-copilot-for-visual-studio-visual-studio-blog"&gt;How to use Comments to Prompt GitHub Copilot for Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/how-to-use-comments-to-prompt-github-copilot-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/how-to-use-comments-to-prompt-github-copilot-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の GitHub Copilot でのコメントをプロンプトとして使用し、コメントそのものを生成する機能について。&lt;/p&gt;
&lt;h3 id="dotinsights-april-2024-the.net-tools-blog"&gt;dotInsights | April 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/04/03/dotinsights-april-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/04/03/dotinsights-april-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 関連情報の2024年4月のまとめ。&lt;/p&gt;
&lt;h3 id="making-ai-powered.net-apps-more-consistent-and-intelligent-with-redis.net-blog"&gt;Making AI powered .NET apps more consistent and intelligent with Redis - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/redis-makes-intelligent-apps-smarter-and-consistent/"&gt;https://devblogs.microsoft.com/dotnet/redis-makes-intelligent-apps-smarter-and-consistent/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Redis と Azure OpenAI Services を組み合わせた .NET アプリケーションで Semantic Kernel での RAG や、ページ出力のキャッシュを行う方法について。&lt;/p&gt;
&lt;h3 id="how-to-install-github-copilot-in-visual-studio-visual-studio-blog"&gt;How to Install GitHub Copilot in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/how-to-install-github-copilot-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/how-to-install-github-copilot-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio に GitHub Copilot をインストールする方法についての解説。&lt;/p&gt;
&lt;h3 id="semantic-kernel-v1"&gt;利用者目線での Semantic Kernel v1 入門&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-v1-004"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-v1-004&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel についての入門。記事では OpenAI の API の呼び出し、テンプレートエンジン、プラグインやプランナーといった仕組みを使用する方法について触れている。&lt;/p&gt;
&lt;h3 id="asp.net-core"&gt;ASP.NET Core でコントローラーやサービスの実行時にログを自動挿入する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/kos59125/articles/82b4d827d4a581"&gt;https://zenn.dev/kos59125/articles/82b4d827d4a581&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のコントローラーなどで使用される DI 由来のサービスの呼び出しで自動でロギングを行う方法について。 Microsoft.Extensions.DependencyInjection でのサービス解決時に DispatchProxy を使用してロギングをする方法を紹介している。&lt;/p&gt;
&lt;h3 id="net-aspire-qiita"&gt;.NET Aspire のダッシュボードを単独で使う - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/338ae64ca2033e078f7f"&gt;https://qiita.com/takashiuesaka/items/338ae64ca2033e078f7f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire 向けに提供されているサンプルダッシュボードアプリケーションを Aspire なしの OpenTelemetry の受け皿として使用する方法について。&lt;/p&gt;
&lt;h3 id="asp.net-core-mvclambda-web-adapterlambda"&gt;ASP.NET Core MVCアプリケーションをLambda Web Adapterを使ってLambda上で動かす&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/awwa500/articles/556d1ea8ca5c9f"&gt;https://zenn.dev/awwa500/articles/556d1ea8ca5c9f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lambda Web Adapter を使用して一般的な ASP.NET Core MVC アプリケーションを AWS Lambda 上で動かす手順について。&lt;/p&gt;
&lt;h3 id="net-aspire-sql-server-qiita"&gt;.NET Aspire でデータベースを扱う - SQL Server 編 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/6d5ec4d4994649c5dca5"&gt;https://qiita.com/takashiuesaka/items/6d5ec4d4994649c5dca5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire アプリケーションで SQL Server を使用する方法について。記事では開発環境向けに SQL Server をコンテナーで動作させたり、初期値を投入する、実際のデプロイ時の考慮といった点についても触れている。&lt;/p&gt;
&lt;h3 id="net-aspire-postgresql-qiita"&gt;.NET Aspire でデータベースを扱う - PostgreSQL編 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/137cb1450c3d9fbc8d1e"&gt;https://qiita.com/takashiuesaka/items/137cb1450c3d9fbc8d1e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire アプリケーションで PostgreSQL を使用する方法について。記事では開発環境向けに PostgreSQL をコンテナーで動作させたり、初期値を投入する、実際のデプロイ時の考慮といった点についても触れている。&lt;/p&gt;
&lt;h3 id="winui-3"&gt;WinUI 3 の多言語化&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/winui3-multi-lang"&gt;https://zenn.dev/shinta0806/articles/winui3-multi-lang&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 (Windows App SDK) アプリケーションで多言語対応するための仕組みについて。&lt;/p&gt;
&lt;h3 id="cjson"&gt;C#で型で状態を表しつつJsonで永続化をしたデータのデシリアライズに失敗する理由と解決方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/28f84dad6b435b"&gt;https://zenn.dev/jtechjapan_pub/articles/28f84dad6b435b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL の JSONB カラムに .NET の型情報を持った JSON を保存した際にデシリアライズに失敗する問題について。&lt;/p&gt;
&lt;h3 id="docfxcxml-qiita"&gt;DocFX（C#のXMLコメントをドキュメント化）へプライベートメソッドも出力する方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mounntainn/items/270c8ca34dd67bf257ce"&gt;https://qiita.com/mounntainn/items/270c8ca34dd67bf257ce&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DocFx でドキュメントを作成する際にプライベートメソッドも含めて出力する方法について。&lt;/p&gt;
&lt;h3 id="in-4-weeks-visual-studio-live-chicago-2024-visual-studio-blog"&gt;In 4 Weeks: Visual Studio LIVE! Chicago 2024 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-live-2024-chicago/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-live-2024-chicago/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4週間後(2024年4月29日)にせまった Visual Studio LIVE! Chicago 2024 というイベントについて。&lt;/p&gt;
&lt;h3 id="blazor-c-claude-api-qiita"&gt;Blazor C# チュートリアル - Claude APIを使ってみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/firesign2023/items/702407263cdfff117e05"&gt;https://qiita.com/firesign2023/items/702407263cdfff117e05&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Claude API を使用した Blazor アプリケーションでのチュートリアル。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/firesign2023/items/fd539a7eb3a07dce2847"&gt;Blazor C# チュートリアル - Claude APIで画像入力 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="the-rider-2024.1-release-candidate-is-now-available-the.net-tools-blog"&gt;The Rider 2024.1 Release Candidate Is Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/27/the-rider-2024-1-rc/"&gt;https://blog.jetbrains.com/dotnet/2024/03/27/the-rider-2024-1-rc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.1 Release Candidate がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは新しい Monitoring ウィンドウやコレクションビジュアライザー、刷新された Terminal ウィンドウ、Blazor WASM のホットリロードなど様々な新機能が含まれる。&lt;/p&gt;
&lt;h3 id="the-resharper-2024.1-release-candidate-is-now-available-the.net-tools-blog"&gt;The ReSharper 2024.1 Release Candidate Is Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/27/the-resharper-2024-1-rc/"&gt;https://blog.jetbrains.com/dotnet/2024/03/27/the-resharper-2024-1-rc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.1 Release Candidate がリリースされた。&lt;/p&gt;
&lt;h3 id="aspire.c-tokyo"&gt;「自作ライブラリのAspire対応をしてみての感想 ...」に関してC# Tokyoで登壇しました&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/685212103358fe"&gt;https://zenn.dev/jtechjapan_pub/articles/685212103358fe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;自作のライブラリーを .NET Aspire に対応したことについてのセッションのフォローアップ記事。&lt;/p&gt;
&lt;h3 id="box.net-sdk"&gt;新しいBox .NET SDKの使用&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/box-developer-japan-blog/%E6%96%B0%E3%81%97%E3%81%84box-net-sdk%E3%81%AE%E4%BD%BF%E7%94%A8-17a51df64e00"&gt;https://medium.com/box-developer-japan-blog/%E6%96%B0%E3%81%97%E3%81%84box-net-sdk%E3%81%AE%E4%BD%BF%E7%94%A8-17a51df64e00&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Box の新しいコード生成ベースの .NET SDK の紹介と簡単な使い方について。&lt;/p&gt;
&lt;p&gt;新しい Box SDK は Box API を広くカバーし、コード生成ベースとなったことになったことにより最新の API の反映が迅速に可能となったとのこと。&lt;/p&gt;
&lt;h3 id="implement-api-gateway-with-token-handler-pattern-using.net-redis-and-keycloak"&gt;Implement API Gateway with Token Handler Pattern using .NET, Redis and Keycloak&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ahmedmohamedelahmar/implement-api-gateway-with-token-handler-pattern-using-net-redis-and-keycloak-38250bfbd733"&gt;https://medium.com/&amp;#64;ahmedmohamedelahmar/implement-api-gateway-with-token-handler-pattern-using-net-redis-and-keycloak-38250bfbd733&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;YARP と Redis、Keycloak を使用したトークン認証 API ゲートウェイを実装する方法について。&lt;/p&gt;
&lt;h3 id="net-framework-march-2024-cumulative-update-preview.net-blog"&gt;.NET Framework - March 2024 Cumulative Update Preview - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-march-2024-cumulative-update-preview/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-march-2024-cumulative-update-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework 2024年3月の累積アップデートのプレビューがリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではスレッドプールの問題や 32bit アプリケーションで Interlocked.Read の速度が低下する問題、ASP.NET の1月でのアップデートのパフォーマンス問題の修正などが含まれている。&lt;/p&gt;
&lt;h3 id="beautiful.net-test-reports-using-github-actions"&gt;Beautiful .NET Test Reports Using GitHub Actions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://seankilleen.com/2024/03/beautiful-net-test-reports-using-github-actions/"&gt;https://seankilleen.com/2024/03/beautiful-net-test-reports-using-github-actions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Actions でテストやコードカバレッジレポートを生成し、コメントとして反映するといった方法について。&lt;/p&gt;
&lt;h3 id="c-win32api-qiita"&gt;C# Win32API完全入門 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nekotadon/items/f376d17de85dfb84fbd5"&gt;https://qiita.com/nekotadon/items/f376d17de85dfb84fbd5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# (.NET) での Win32 API の利用についての定義や実際の API の紹介とコード例といった入門。&lt;/p&gt;
&lt;h3 id="deploying.net-maui-blazor-app-to-programfiles"&gt;Deploying .NET MAUI Blazor App to ProgramFiles'&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://mitchelsellers.com/blog/article/deploying-net-maui-blazor-app-to-programfiles"&gt;https://mitchelsellers.com/blog/article/deploying-net-maui-blazor-app-to-programfiles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Blazor アプリケーションを Program Files (や書き込み不可)ディレクトリーに配置した際に WebView2 が問題となるケースについて。&lt;/p&gt;
&lt;h3 id="net-aspire"&gt;20240326_NET Aspire概要 | ドクセル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docswell.com/s/tanaka_733/ZXYX8N-2024-03-26-aspire"&gt;https://www.docswell.com/s/tanaka_733/ZXYX8N-2024-03-26-aspire&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire とはどのようなものや機能、コードの記述かといったものを Preview 4 の時点の情報でまとめたスライド。&lt;/p&gt;
&lt;script async class="docswell-embed" src="https://www.docswell.com/assets/libs/docswell-embed/docswell-embed.min.js" data-src="https://www.docswell.com/slide/ZXYX8N/embed" data-aspect="0.5625"&gt;&lt;/script&gt;&lt;div class="docswell-link"&gt;&lt;a href="https://www.docswell.com/s/tanaka_733/ZXYX8N-2024-03-26-aspire"&gt;20240326_NET Aspire概要 by &amp;#64;tanaka_733&lt;/a&gt;&lt;/div&gt;
&lt;h2 id="section-2"&gt;イベント、ライブなど&lt;/h2&gt;
&lt;h3 id="net-20244azure-20240427-1300"&gt;.NETラボ 勉強会 2024年4月＆Azureわいがや会 (2024/04/27 13:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnetlab.connpass.com/event/314310/"&gt;https://dotnetlab.connpass.com/event/314310/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="lets-learn.net-youtube"&gt;Let's Learn .NET: コンテナー（日本語） - YouTube&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=PFUy3W-FeAY"&gt;https://www.youtube.com/watch?v=PFUy3W-FeAY&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharputf8streamreader-utf8-based-streamreader-for-high-performance-text-processing"&gt;Cysharp/Utf8StreamReader: Utf8 based StreamReader for high performance text processing.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/Utf8StreamReader"&gt;https://github.com/Cysharp/Utf8StreamReader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UTF-8 テキストを Stream から効率的に読み込むためのライブラリー。&lt;/p&gt;
&lt;h3 id="endjindotnet-adr-a-cross-platform.net-global-tool-for-creating-and-managing-architectural-decision-records-adrs"&gt;endjin/dotnet-adr: A cross platform .NET Global Tool for creating and managing Architectural Decision Records (ADRs).&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/endjin/dotnet-adr"&gt;https://github.com/endjin/dotnet-adr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Architectural Decision Records (ADRs) を作成するためのツール。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://endjin.com/blog/2024/03/adr-a-dotnet-tool-for-creating-and-managing-architecture-decision-records?WT.mc_id=link-twitter-isaacl"&gt;adr - A .NET Tool for Creating &amp;amp; Managing Architecture Decision Records | endjin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;learn.microsoft.com の .NET API ドキュメントからソースコードへジャンプするためのリンクが追加された話。(日本語版にはまだない)&lt;/p&gt;
&lt;!-- https://twitter.com/screechowl25/status/1775934677330862488?s=46&amp;t=ca5OZfzUD88PkVRWAC0PMg --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The .NET API ref docs now include links to the source code! We&amp;#39;ve had many requests for this feature over the years and it&amp;#39;s finally here. If the docs don&amp;#39;t tell you what you need to know, now you have a direct link to the implementation. Example page: &lt;a href="https://t.co/vrxkE67paw"&gt;https://t.co/vrxkE67paw&lt;/a&gt;. &lt;a href="https://t.co/fOBMMAacXE"&gt;pic.twitter.com/fOBMMAacXE&lt;/a&gt;&lt;/p&gt;&amp;mdash; Genevieve Warren (&amp;#64;screechowl25) &lt;a href="https://twitter.com/screechowl25/status/1775934677330862488?ref_src=twsrc%5Etfw"&gt;April 4, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="add-task.wheneach-to-process-tasks-as-they-complete-by-stephentoub-pull-request-100316-dotnetruntime"&gt;Add Task.WhenEach to process tasks as they complete by stephentoub · Pull Request #100316 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/100316"&gt;https://github.com/dotnet/runtime/pull/100316&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;複数の Task を待機し、終わったものから返す Task.WhenEach の追加 PR。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-03-27: Garnet, MySqlConnector 2.3.6</title>
			<link>/2024/03/27/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/03/27/updates</guid>
			<pubDate>Wed, 27 Mar 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="microsoftgarnet-garnet-is-a-remote-cache-store-from-microsoft-research-that-offers-strong-performance-throughput-and-latency-scalability-storage-recovery-cluster-sharding-key-migration-and-replication-features.garnet-can-work-with-existing-redis-clients"&gt;microsoft/garnet: Garnet is a remote cache-store from Microsoft Research that offers strong performance (throughput and latency), scalability, storage, recovery, cluster sharding, key migration, and replication features. Garnet can work with existing Redis clients.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/garnet"&gt;https://github.com/microsoft/garnet&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/research/blog/introducing-garnet-an-open-source-next-generation-faster-cache-store-for-accelerating-applications-and-services/"&gt;Garnet–open-source faster cache-store speeds up applications, services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-2.3.6-mysql-netmysqlconnector"&gt;Release 2.3.6 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.6"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="adding-apple-privacy-manifest-support-to.net-ios.net-maui-apps.net-blog"&gt;Adding Apple Privacy Manifest Support to .NET iOS &amp;amp; .NET MAUI apps - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/apple-privacy-manifest-support/"&gt;https://devblogs.microsoft.com/dotnet/apple-privacy-manifest-support/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing.net-smart-components-ai-powered-ui-controls.net-blog"&gt;Introducing .NET Smart Components - AI-powered UI controls - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-dotnet-smart-components/"&gt;https://devblogs.microsoft.com/dotnet/introducing-dotnet-smart-components/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-sql-server-data-tools-ssdt-for-arm64-architecture-in-visual-studio-17.10-preview-2-visual-studio-blog"&gt;Announcing SQL Server Data Tools (SSDT) for ARM64 Architecture in Visual Studio 17.10 Preview 2 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/arm64-in-ssdt/"&gt;https://devblogs.microsoft.com/visualstudio/arm64-in-ssdt/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcement-swashbuckle.aspnetcore-is-being-removed-in.net-9-issue-54599-dotnetaspnetcore"&gt;Announcement: Swashbuckle.AspNetCore is being removed in .NET 9 · Issue #54599 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/54599"&gt;https://github.com/dotnet/aspnetcore/issues/54599&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-update-on-xamarin-support-in-rider-the.net-tools-blog"&gt;An Update on Xamarin Support in Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/15/an-update-on-xamarin-support-in-rider/"&gt;https://blog.jetbrains.com/dotnet/2024/03/15/an-update-on-xamarin-support-in-rider/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="collection-expressions-using-c-12-in-rider-and-resharper-the.net-tools-blog"&gt;Collection Expressions – Using C# 12 in Rider and ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/26/collection-expressions-using-csharp-12-in-rider-and-resharper/"&gt;https://blog.jetbrains.com/dotnet/2024/03/26/collection-expressions-using-csharp-12-in-rider-and-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="implementing-dijkstras-algorithm-for-finding-the-shortest-path-between-two-nodes-using-priorityqueue-in.net-9"&gt;Implementing Dijkstra's algorithm for finding the shortest path between two nodes using PriorityQueue in .NET 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/implementing-dijkstras-algorithm-for-finding-the-shortest-path-between-two-nodes-using-priorityqueue-in-dotnet-9/"&gt;https://andrewlock.net/implementing-dijkstras-algorithm-for-finding-the-shortest-path-between-two-nodes-using-priorityqueue-in-dotnet-9/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-dashboard-is-the-best-tool-to-visualize-your-opentelemetry-data-during-local-development"&gt;.NET Aspire dashboard is the best tool to visualize your OpenTelemetry data during local development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/net-aspire-dashboard-is-the-best-tool-to-visualize-your-opentelemetry-data-during-local-development-9dl"&gt;https://dev.to/asimmon/net-aspire-dashboard-is-the-best-tool-to-visualize-your-opentelemetry-data-during-local-development-9dl&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="see-your-pull-request-comments-with-the-latest-preview-visual-studio-blog"&gt;See Your Pull Request Comments with the Latest Preview - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/see-your-pull-request-comments-with-the-latest-preview/"&gt;https://devblogs.microsoft.com/visualstudio/see-your-pull-request-comments-with-the-latest-preview/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="wixsharpnuget-qiita"&gt;WiXSharpのカスタムアクションに、NuGetのライブラリを追加する方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/299b6ba7eab25e7ad0f5"&gt;https://qiita.com/spc_ksudoh/items/299b6ba7eab25e7ad0f5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="source-code-disclosure-in-asp.net-apps"&gt;Source Code Disclosure in ASP.NET apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://swarm.ptsecurity.com/source-code-disclosure-in-asp-net-apps/"&gt;https://swarm.ptsecurity.com/source-code-disclosure-in-asp-net-apps/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="aspire-insights-in-production-with-sentry-and-opentelemetry"&gt;Aspire Insights in Production with Sentry and OpenTelemetry&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.sentry.io/aspire-insights-in-production-with-sentry/"&gt;https://blog.sentry.io/aspire-insights-in-production-with-sentry/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="webbrowser-webview2-pdf"&gt;WebBrowser と WebView2 の PDF ファイル表示のデフォルトアプリ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nasrisilva/articles/4925cd69967725"&gt;https://zenn.dev/nasrisilva/articles/4925cd69967725&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio"&gt;Visual Studioでラズパイをデバッグしよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/kotaproj/articles/pi_dotnet_hello"&gt;https://zenn.dev/kotaproj/articles/pi_dotnet_hello&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cjson"&gt;C#レコード型とJSON: データ構造の自由度と整合性&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/ccdb92e7d660b1"&gt;https://zenn.dev/jtechjapan_pub/articles/ccdb92e7d660b1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8.0apijwtjsonwebtoken-qiita"&gt;.NET 8.0でAPIがJWTの検証に失敗するようになった場合は、JsonWebTokenを使うように構成を変更してみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/0736cfb273abbc2aee2e"&gt;https://qiita.com/karuakun/items/0736cfb273abbc2aee2e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="sirenixs-odin-inspector-support-comes-to-rider-a-jetbrains-ide-the.net-tools-blog"&gt;Sirenix’s Odin Inspector Support Comes to Rider, a JetBrains IDE | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/20/sirenix-s-odin-inspector-support-comes-to-rider-a-jetbrains-ide/"&gt;https://blog.jetbrains.com/dotnet/2024/03/20/sirenix-s-odin-inspector-support-comes-to-rider-a-jetbrains-ide/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;C#非同期メソッドを指定したスレッド上で動かす - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/qiitatosh/items/45e2a3dc7ba9694dcc92"&gt;https://qiita.com/qiitatosh/items/45e2a3dc7ba9694dcc92&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="our-favorite-jetbrains-rider-shortcuts-that-arent-altenter-or-shiftshift-the.net-tools-blog"&gt;Our Favorite JetBrains Rider Shortcuts that aren’t Alt+Enter or Shift+Shift | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/03/20/our-favorite-jetbrains-rider-shortcuts-that-arent-altenter-or-shiftshift/"&gt;https://blog.jetbrains.com/dotnet/2024/03/20/our-favorite-jetbrains-rider-shortcuts-that-arent-altenter-or-shiftshift/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cvisual-studio-github-copilot-qiita"&gt;【C#】Visual Studio で GitHub Copilot に複数のファイルやコードを認識させる方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yuu-dev/items/9e0d22191e4655342d88"&gt;https://qiita.com/yuu-dev/items/9e0d22191e4655342d88&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windowswixsharpwix-toolset-qiita"&gt;Windowsインストーラ作成に、WiXSharpという選択肢もありますよ（ただしWiX Toolsetが使える人限定） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/afab902b6dea7fd4f6ed"&gt;https://qiita.com/spc_ksudoh/items/afab902b6dea7fd4f6ed&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cxml-github-copilot-qiita"&gt;【C#】XMLドキュメンテーションを GitHub Copilot で生成する手順 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yuu-dev/items/b58fb4b041b2c2e5f538"&gt;https://qiita.com/yuu-dev/items/b58fb4b041b2c2e5f538&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="entity-framework-core-audit-trial-with-audit.net"&gt;Entity Framework Core Audit Trial With Audit.Net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/hirushafernando/entity-framework-core-audit-trial-with-auditnet-3o8l"&gt;https://dev.to/hirushafernando/entity-framework-core-audit-trial-with-auditnet-3o8l&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="running-ruby-on-rails-web-apps-with.net-aspire"&gt;Running Ruby on Rails web apps with .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/running-ruby-on-rails-web-apps-with-net-aspire-1pee"&gt;https://dev.to/asimmon/running-ruby-on-rails-web-apps-with-net-aspire-1pee&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-developers-begging-for-ecosystem-destruction"&gt;.NET Developers Begging for Ecosystem Destruction&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aaronstannard.com/dotnet-eventing-backslide/"&gt;https://aaronstannard.com/dotnet-eventing-backslide/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazors-css-isolation-deep-issue-and-solution"&gt;Blazor’s CSS isolation ::deep issue and solution&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/blazors-css-isolation-deep-issue-and-solution"&gt;https://khalidabuhakmeh.com/blazors-css-isolation-deep-issue-and-solution&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="understanding-system.diagnostics-diagnosticsource-and-diagnosticlistener-part-1-steve-gordon-code-with-steve"&gt;Understanding System.Diagnostics DiagnosticSource and DiagnosticListener (Part 1) - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/understanding-system-diagnostics-diagnosticsource-and-diagnosticlistener-part-1"&gt;https://www.stevejgordon.co.uk/understanding-system-diagnostics-diagnosticsource-and-diagnosticlistener-part-1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8-blazor"&gt;簡単に .NET 8 の Blazor にオレオレ ログイン機能を付けよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-tryaddauth2"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-tryaddauth2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="flux.net"&gt;Fluxパターンと.NETでの実装とか&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/gab_km/articles/f2dcf0f17c8c94"&gt;https://zenn.dev/gab_km/articles/f2dcf0f17c8c94&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="spant-gc"&gt;SpanT の GC 保護について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ongaeshi/articles/0d271a6e42cf41"&gt;https://zenn.dev/ongaeshi/articles/0d271a6e42cf41&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-2-1-opencvsharpimagesharpskiasharp-jsakamoto"&gt;C# で背景透過な 2 つの画像を合成した 1 枚の画像を生成する - OpenCVSharp、ImageSharp、SkiaSharp を使った作例 | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/30007598/"&gt;https://devadjust.exblog.jp/30007598/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-12"&gt;C# 12の新機能を紹介──型エイリアスやインライン配列など、待望の新機能とは？&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codezine.jp/article/detail/19164"&gt;https://codezine.jp/article/detail/19164&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="figuring-out-mysterious-missingmethodexception-in-a-simple-c-application"&gt;Figuring out mysterious MissingMethodException in a simple C# application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sergeyteplyakov.github.io/Blog/csharp/2024/03/21/Mythical_MissingMethodException.html"&gt;https://sergeyteplyakov.github.io/Blog/csharp/2024/03/21/Mythical_MissingMethodException.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cstringbuilderdefaultinterpolatedstringhandler"&gt;【C#】StringBuilderとDefaultInterpolatedStringHandlerの処理速度・メモリ確保量を比べてみる - はなちるのマイノート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.hanachiru-blog.com/entry/2024/03/22/120000"&gt;https://www.hanachiru-blog.com/entry/2024/03/22/120000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cspanmemory-annulus-games"&gt;【C#】SpanとMemory - Annulus Games&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://annulusgames.com/blog/span-and-memory/"&gt;https://annulusgames.com/blog/span-and-memory/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="extensions"&gt;Extensions (拡張型)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/3/extensions/"&gt;https://ufcpp.net/blog/2024/3/extensions/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-and-github-copilot-at-gdc-2024-visual-studio-blog"&gt;Visual Studio and GitHub Copilot at GDC 2024 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-and-github-copilot-at-gdc-2024/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-and-github-copilot-at-gdc-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="neue-cc-redisgarnetc-customcommand"&gt;neue cc - Redis互換の超高速インメモリデータストア「Garnet」にC# CustomCommandを実装してコマンドを拡張する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/03/19_Garnet.html"&gt;https://neue.cc/2024/03/19_Garnet.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="neue-cc-claudia-anthropic-claudec-sdkcapi"&gt;neue cc - Claudia - Anthropic ClaudeのC# SDKと現代的なC#によるウェブAPIクライアントの作り方&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/03/18_Claudia.html"&gt;https://neue.cc/2024/03/18_Claudia.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-13"&gt;C# 13 でのコレクション式 - ディクショナリ式&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2024/3/dictionary-expressions/"&gt;https://ufcpp.net/blog/2024/3/dictionary-expressions/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="db-3"&gt;DB のチューニングで実際に成果が出た 3 つの施策&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nekojoker/articles/1c97263ebd23d1"&gt;https://zenn.dev/nekojoker/articles/1c97263ebd23d1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="toyota-migrates-mobile-app-to-uno-platform"&gt;Toyota migrates mobile app to Uno Platform&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/toyota-migrates-mobile-app-to-uno-platform/"&gt;https://platform.uno/blog/toyota-migrates-mobile-app-to-uno-platform/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-mayukiyafp-a-toolkit-for-implementing-forward-proxy-based-on-asp.net-core-and-yarp"&gt;GitHub - mayuki/Yafp: A toolkit for implementing forward proxy based on ASP.NET Core and YARP.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mayuki/Yafp"&gt;https://github.com/mayuki/Yafp&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/mkristensen/status/1770874082466377969?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Happy 27th birthday Visual Studio.  I have been a fan and happy user for more than half of my life. The first version I used in school was VS 97 and the first I bought with my own money was Visual Studio .NET 2003. &lt;br&gt;&lt;br&gt;What&amp;#39;s your VS story? &lt;a href="https://t.co/lRbE40JdeS"&gt;pic.twitter.com/lRbE40JdeS&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1770874082466377969?ref_src=twsrc%5Etfw"&gt;March 21, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>