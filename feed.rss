<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>WeekRef.NET</title>
		<link>/</link>
		<description>.NET 関連の情報をほぼ週刊配信</description>
		<copyright>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</copyright>
		<managingEditor>Mayuki Sawatari</managingEditor>
		<pubDate>Sun, 09 Jul 2023 14:21:49 GMT</pubDate>
		<lastBuildDate>Sun, 09 Jul 2023 14:21:49 GMT</lastBuildDate>
		<item>
			<title>2023-07-09: Avalonia UI v11, .NET Community Toolkit 8.2.1</title>
			<link>/2023/07/09/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/07/09/updates</guid>
			<pubDate>Sun, 09 Jul 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="avalonia-ui-welcome-to-the-new-era-of-app-development-introducing-avalonia-v11"&gt;Avalonia UI - Welcome to the New Era of App Development: Introducing Avalonia v11&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/Blog/welcome-to-the-new-era-of-app-development-introducing-avalonia-v11,a8907121-eae9-4a16-aca8-2432e1dac13a"&gt;https://avaloniaui.net/Blog/welcome-to-the-new-era-of-app-development-introducing-avalonia-v11,a8907121-eae9-4a16-aca8-2432e1dac13a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improved-source-generators-and-code-fixers-arrive-in.net-community-toolkit-8.2.1.net-blog"&gt;Improved Source Generators and Code Fixers Arrive in .NET Community Toolkit 8.2.1! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-the-dotnet-community-toolkit-821/"&gt;https://devblogs.microsoft.com/dotnet/announcing-the-dotnet-community-toolkit-821/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v12.1.0-jbogardmediatr"&gt;Release v12.1.0 · jbogard/MediatR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jbogard/MediatR/releases/tag/v12.1.0"&gt;https://github.com/jbogard/MediatR/releases/tag/v12.1.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.2-eap-7-introduces-a-predictive-debugger-and-other-updates-the.net-tools-blog"&gt;ReSharper 2023.2 EAP 7 Introduces a Predictive Debugger and Other Updates | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/03/resharper-2023-2-eap-7/"&gt;https://blog.jetbrains.com/dotnet/2023/07/03/resharper-2023-2-eap-7/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.2-eap-7-is-out-the.net-tools-blog"&gt;Rider 2023.2 EAP 7 Is Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/03/rider-2023-2-eap-7-is-out/"&gt;https://blog.jetbrains.com/dotnet/2023/07/03/rider-2023-2-eap-7-is-out/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improvements-to-the-caching-abstraction-in-asp.net-core.net-blog"&gt;Improvements to the Caching Abstraction in ASP.NET Core - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/caching-abstraction-improvements-in-aspnetcore/"&gt;https://devblogs.microsoft.com/dotnet/caching-abstraction-improvements-in-aspnetcore/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-release-v2.55.0-grpcgrpc-dotnet"&gt;Release Release v2.55.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.55.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.55.0&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="improved-f-hints-in-visual-studio.net-blog"&gt;Improved F# hints in Visual Studio - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/improved-fsharp-hints-in-visual-studio/"&gt;https://devblogs.microsoft.com/dotnet/improved-fsharp-hints-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="moq-techniques-how-to-pick-the-best-syntax-when-configuring-your-mocks"&gt;Moq Techniques: How to Pick the Best Syntax when Configuring Your Mocks&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/ant_f_dev/moq-techniques-how-to-pick-the-best-syntax-when-configuring-your-mocks-3aa1"&gt;https://dev.to/ant_f_dev/moq-techniques-how-to-pick-the-best-syntax-when-configuring-your-mocks-3aa1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-july-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | July 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/05/net-annotated-monthly-july-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/07/05/net-annotated-monthly-july-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="share-your-thoughts-about-game-development-for-the-chance-to-win-a-prize-the-jetbrains-blog"&gt;Share Your Thoughts About Game Development for the Chance to Win a Prize | The JetBrains Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/2023/07/04/share-your-thoughts-about-game-development-for-the-chance-to-win-a-prize/"&gt;https://blog.jetbrains.com/2023/07/04/share-your-thoughts-about-game-development-for-the-chance-to-win-a-prize/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="examining-suspicious-code-fragments-in-aws-sdk-for.net"&gt;Examining suspicious code fragments in AWS SDK for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/_sergvasiliev_/examining-suspicious-code-fragments-in-aws-sdk-for-net-2p9l"&gt;https://dev.to/_sergvasiliev_/examining-suspicious-code-fragments-in-aws-sdk-for-net-2p9l&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="crafting-beautiful-interactive-console-apps-with-system.commandline-and-spectre.console"&gt;Crafting beautiful interactive console apps with System.CommandLine and Spectre.Console&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/crafting-beautiful-interactive-console-apps-with-systemcommandline-and-spectreconsole-c6f"&gt;https://dev.to/asimmon/crafting-beautiful-interactive-console-apps-with-systemcommandline-and-spectreconsole-c6f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="http-client-tools-everywhere-the.net-tools-blog"&gt;HTTP Client Tools Everywhere! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/04/http-client-tools-everywhere/"&gt;https://blog.jetbrains.com/dotnet/2023/07/04/http-client-tools-everywhere/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-nullmodelbinder-qiita"&gt;ASP.NET Core で配列プロパティへのバインドがnullになる問題を解決するModelBinderの作成 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jun1s/items/f432ae774cb737d58edf"&gt;https://qiita.com/jun1s/items/f432ae774cb737d58edf&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the-minimal-api-aot-compilation-template-exploring-the.net-8-preview-part-2"&gt;The minimal API AOT compilation template: Exploring the .NET 8 preview - Part 2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-the-minimal-api-aot-template/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-the-minimal-api-aot-template/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="timeprovider-and-itimer-writing-unit-tests-with-time-in.net-8-preview-4"&gt;TimeProvider and ITimer: Writing Unit Tests with Time in .NET 8 Preview 4&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/articles/dotnet-unit-tests-time-timezone/"&gt;https://www.infoq.com/articles/dotnet-unit-tests-time-timezone/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;[C#] キャッシング戦略とパフォーマンスプロファイリング - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/syantien/items/d4df7b58611223ae0d02"&gt;https://qiita.com/syantien/items/d4df7b58611223ae0d02&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="entityframework-toolsno-build-qiita"&gt;EntityFramework Toolsのno-buildオプション - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/c0b1b95dba5eecf8db38"&gt;https://qiita.com/karuakun/items/c0b1b95dba5eecf8db38&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="adding-a-readme-to-nuget-package-landing-pages"&gt;Adding a Readme to NuGet Package Landing Pages&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/adding-a-readme-to-nuget-package-landing-pages"&gt;https://khalidabuhakmeh.com/adding-a-readme-to-nuget-package-landing-pages&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="issue-employee-verifiable-credentials-using-entra-verified-id-and-asp.net-core"&gt;Issue Employee verifiable credentials using Entra Verified ID and ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2023/07/03/issue-employee-verifiable-credentials-using-entra-verified-id-and-asp-net-core/"&gt;https://damienbod.com/2023/07/03/issue-employee-verifiable-credentials-using-entra-verified-id-and-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="using-encryption-to-verify-a-license-key"&gt;Using encryption to verify a license key&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/199617-A/using-encryption-to-verify-a-license-key"&gt;https://ayende.com/blog/199617-A/using-encryption-to-verify-a-license-key&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="migrating-xamarin.android-xamarin.ios-applications-to.net-6"&gt;Migrating Xamarin.Android &amp;amp; Xamarin.iOS Applications to .NET 6&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ruby.verma10/migrating-xamarin-android-xamarin-ios-applications-to-net-6-f398ba74b992"&gt;https://medium.com/&amp;#64;ruby.verma10/migrating-xamarin-android-xamarin-ios-applications-to-net-6-f398ba74b992&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-at-oracle-cloudworld-2023"&gt;.NET at Oracle CloudWorld 2023&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/oracledevs/net-at-oracle-cloudworld-2023-fbecf93e911a"&gt;https://medium.com/oracledevs/net-at-oracle-cloudworld-2023-fbecf93e911a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="tmemorytspantref-qiita"&gt;T[]（配列）・MemoryT・SpanT・ポインタ・参照変数（ref）の使い分けと相互変換 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Funny_Silkie/items/ea21dd1e3d06d48ffdad"&gt;https://qiita.com/Funny_Silkie/items/ea21dd1e3d06d48ffdad&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="netmsiwixtoolset-v4-qiita"&gt;.NETでMSIインストーラーを操作する(wixtoolset v4) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/d2f7ba641cbd27566c67"&gt;https://qiita.com/skitoy4321/items/d2f7ba641cbd27566c67&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="casp.net-core-w3c-trace-context"&gt;【C#】ASP.NET Core と W3C Trace Context とお手軽ロギング。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/07/04/181843"&gt;https://blog.neno.dev/entry/2023/07/04/181843&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="neue-cc-magicphysx.net"&gt;neue cc - MagicPhysX - .NET用のクロスプラットフォーム物理エンジン&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2023/07/04_MagicPhysX.html"&gt;https://neue.cc/2023/07/04_MagicPhysX.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="funny-silkiecuilib-library-for.net-cui-application"&gt;Funny-Silkie/CuiLib: Library for .NET CUI application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Funny-Silkie/CuiLib"&gt;https://github.com/Funny-Silkie/CuiLib&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/Funny_Silkie/items/432763d0725bfa6dc743"&gt;C#のCUIアプリケーション用ライブラリ『CuiLib』 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miloszkrajewskik4os.streams-implementation-for-pooled-in-memory-streams-for.net"&gt;MiloszKrajewski/K4os.Streams: Implementation for pooled in-memory streams for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MiloszKrajewski/K4os.Streams"&gt;https://github.com/MiloszKrajewski/K4os.Streams&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://twitter.com/mrkrashan/status/1677045966631841792?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/dotnet?ref_src=twsrc%5Etfw"&gt;&amp;#64;dotnet&lt;/a&gt; &lt;br&gt;Low allocation, high performance, pooled in-memory streams for &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;br&gt;Faster than MemoryStream (a lot) and RecyclableMemoryStream (with caveats), YMMV.&lt;a href="https://t.co/I8fOjKq00s"&gt;https://t.co/I8fOjKq00s&lt;/a&gt;&lt;/p&gt;&amp;mdash; Milosz Krajewski (&amp;#64;MrKrashan) &lt;a href="https://twitter.com/MrKrashan/status/1677045966631841792?ref_src=twsrc%5Etfw"&gt;July 6, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="add-searchvaluesstring-by-mihazupan-pull-request-88394-dotnetruntime"&gt;Add SearchValuesstring by MihaZupan · Pull Request #88394 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/88394"&gt;https://github.com/dotnet/runtime/pull/88394&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-07-02: ReSharper &amp; Rider 2023.2 EAP 6, MagicPhysX</title>
			<link>/2023/07/02/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/07/02/updates</guid>
			<pubDate>Sun, 02 Jul 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="ai-assistant-comes-to-resharper-the.net-tools-blog"&gt;AI Assistant Comes to ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/26/resharper-ai-assistant/"&gt;https://blog.jetbrains.com/dotnet/2023/06/26/resharper-ai-assistant/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.2 EAP 6 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは大規模言語モデルを活用した AI アシスタントが組み込まれた。これによりチャットによるコードの改善についての質問といったことが Visual Studio 上で行えるようになる。&lt;/p&gt;
&lt;p&gt;その他 C# サポート、LINQ のインレイヒント、dotTrace の Linux, macOS のソースビューなど。&lt;/p&gt;
&lt;h3 id="ai-assistant-comes-to-rider-the.net-tools-blog"&gt;AI Assistant Comes to Rider! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/26/rider-ai-assistant/"&gt;https://blog.jetbrains.com/dotnet/2023/06/26/rider-ai-assistant/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.2 EAP 6 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは大規模言語モデルを活用した AI アシスタントが組み込まれｔ。これによりチャット形式でのアシスト、コミットメッセージの生成、ファイル生成といった機能が提供される。&lt;/p&gt;
&lt;p&gt;その他 C# サポートの更新、新規ユーザーにおける新しい UI のデフォルト化、プロジェクトごとのカスタムカラー設定、アクセシビリティーの向上、Structure ビューのフィルターとソートの追加、Roslyn (Source Generator) に関する改善とテンプレートの追加、リモートデバッガーでの ARM32 サポートなど。&lt;/p&gt;
&lt;h3 id="cysharpmagicphysx.net-physx-5-binding-to-all-platformswin-osx-linux-for-3d-engine-deep-learning-dedicated-server-of-gaming"&gt;Cysharp/MagicPhysX: .NET PhysX 5 binding to all platforms(win, osx, linux) for 3D engine, deep learning, dedicated server of gaming.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/MagicPhysX"&gt;https://github.com/Cysharp/MagicPhysX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;物理エンジンの PhysX 5 の .NET バインディングライブラリーがリリースされた。&lt;/p&gt;
&lt;!-- https://twitter.com/neuecc/status/1674688540339499010?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;MagicPhysXという .NET で PhysX 5を動かすバインディングライブラリを公開しました！サーバーサイドで物理エンジンがないなら動かせばいいじゃない、という発想により、Rustとcsbindgenを経由することで持ち込みに成功しました！&lt;a href="https://t.co/AgRLtQY50a"&gt;https://t.co/AgRLtQY50a&lt;/a&gt;&lt;/p&gt;&amp;mdash; neuecc (&amp;#64;neuecc) &lt;a href="https://twitter.com/neuecc/status/1674688540339499010?ref_src=twsrc%5Etfw"&gt;June 30, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-8-sdk-preview-4-assemblyinformationalversion-jsakamoto"&gt;.NET 8 SDK Preview 4 から AssemblyInformationalVersion 属性に何かハッシュが付くようになった | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/29614447/?fbclid=IwAR0xwYcrAFtldsg6H1-jr9OHBo4zSBNIOA7sof4LTakIpqWyyzOpaVvdyco"&gt;https://devadjust.exblog.jp/29614447/?fbclid=IwAR0xwYcrAFtldsg6H1-jr9OHBo4zSBNIOA7sof4LTakIpqWyyzOpaVvdyco&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 4 の SDK でビルドしたアセンブリの AssemblyInformationVersion にソースコードのリビジョンがつくようになったことについて。&lt;/p&gt;
&lt;p&gt;記事ではリビジョンを付けないようにするための設定方法についても紹介している。&lt;/p&gt;
&lt;h3 id="implementing-websocket-client-and-server-on-asp.net-core-6.0-c"&gt;Implementing WebSocket Client and Server on ASP.NET Core 6.0 (C#)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/bina-nusantara-it-division/implementing-websocket-client-and-server-on-asp-net-core-6-0-c-4fbda11dbceb"&gt;https://medium.com/bina-nusantara-it-division/implementing-websocket-client-and-server-on-asp-net-core-6-0-c-4fbda11dbceb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で WebSocket のサーバーを実装し、クライアントと通信する実装の仕方について。&lt;/p&gt;
&lt;h3 id="c-semantic-kernel-qiita"&gt;C# で Semantic Kernel：複数プラグインを連携させる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/1fe094f4f1a0556045ae"&gt;https://qiita.com/fsdg-adachi_h/items/1fe094f4f1a0556045ae&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel で複数のプラグインを連携させる方法について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/875583d556552ff14d4d"&gt;C# で Semantic Kernel：AI で作曲する (複数プラグインを連携させる) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="elevating-c-code-quality-with-qodana-a-journey-towards-perfection-the.net-tools-blog"&gt;Elevating C# Code Quality with Qodana: A Journey Towards Perfection | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/29/elevating-csharp-code-quality-with-qodana-a-journey-towards-perfection/"&gt;https://blog.jetbrains.com/dotnet/2023/06/29/elevating-csharp-code-quality-with-qodana-a-journey-towards-perfection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# をコードを解析してレポートする Jetbrains Qodana の紹介。&lt;/p&gt;
&lt;h3 id="open-source-alternative-to-visual-studio-marketplace-avoids-decommission-visual-studio-magazine"&gt;Open Source Alternative to Visual Studio Marketplace Avoids Decommission -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/articles/2023/06/27/open-vsx-registry.aspx"&gt;https://visualstudiomagazine.com/articles/2023/06/27/open-vsx-registry.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Marketplace の代替となる Open VSX Registry について。&lt;/p&gt;
&lt;h3 id="microsoft-store-open-source-series-appservices-library-ifdef-windows"&gt;Microsoft Store Open Source Series — AppServices library - #ifdef Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/ifdef-windows/microsoft-store-open-source-series-appservices-library/"&gt;https://devblogs.microsoft.com/ifdef-windows/microsoft-store-open-source-series-appservices-library/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Store アプリにおいて利用している UWP と完全信頼 Win32 アプリで通信する AppService という仕組みとそれを活用するライブラリーを紹介している。&lt;/p&gt;
&lt;p&gt;記事では Community Kit Lab にはプロキシーを Source Generator で生成する仕組みを利用することについて触れている。&lt;/p&gt;
&lt;h3 id="using-the-new-configuration-binder-source-generator-exploring-the.net-8-preview-part-1"&gt;Using the new configuration binder source generator: Exploring the .NET 8 preview - Part 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-using-the-new-configuration-binder-source-generator/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-using-the-new-configuration-binder-source-generator/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 で導入された Microsoft.Extensions.Configuration の Source Generator ベースのバインダーについての解説。&lt;/p&gt;
&lt;p&gt;記事では導入方法と実際の仕組み、現時点での問題/制限について触れている。&lt;/p&gt;
&lt;h3 id="asp.net-coreantiforgeryjwt400-bad-request-qiita"&gt;ASP.NET Coreでクッキー認証+AntiForgery+JWTによるリモートサーバとの認証情報共有と400 Bad Request対策 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jun1s/items/903570264d1bfb62cf14"&gt;https://qiita.com/jun1s/items/903570264d1bfb62cf14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションで Cookie 認証かつ JWT を使用する構成で、AntiForgery を使用している場合に JWT のリフレッシュが発生すると AntiForgery トークンの検証失敗する問題についてと解決方法。&lt;/p&gt;
&lt;h3 id="how-to-use-runtimehelpers.isreferenceorcontainsreferences-to-micro-optimize-collections-gerald-barre"&gt;How to use RuntimeHelpers.IsReferenceOrContainsReferences to micro-optimize collections - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/how-to-use-runtimehelpers-isreferenceorcontainsreferences-to-micro-optimize-coll.htm"&gt;https://www.meziantou.net/how-to-use-runtimehelpers-isreferenceorcontainsreferences-to-micro-optimize-coll.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RuntimeHelpers.IsReferenceOrContainsReferences を使用したコレクションのマイクロ最適化について。&lt;/p&gt;
&lt;p&gt;例えば Pop するような場面で参照型は内部配列から参照を外す必要があるが、値型の場合に要素を削除せずインデックスを減らすだけにするといったテクニックがあり、その際に IsReferenceOrContainsReferences が役立つ。&lt;/p&gt;
&lt;h3 id="using-stringbuilder-to-replace-values"&gt;Using StringBuilder To Replace Values&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/using-stringbuilder-to-replace-values"&gt;https://khalidabuhakmeh.com/using-stringbuilder-to-replace-values&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StringBuilder を使用して文字列置換を行うことについて。&lt;/p&gt;
&lt;p&gt;StringBuilder を使用した場合、String の Replace で置換した場合よりもアロケーションを削減できる。&lt;/p&gt;
&lt;h3 id="system.diagnostics.process.getprocessesbyname-qiita"&gt;System.Diagnostics.Process.GetProcessesByNameのアロケーションに絶望した僕は、異世界で復讐することにした - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/gazf/items/085a93cabf10e745e227"&gt;https://qiita.com/gazf/items/085a93cabf10e745e227&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Process.GetProcessesByName をアロケーションの少ない形で再実装してみる試み。&lt;/p&gt;
&lt;h3 id="section-2"&gt;モジュール初期化子が呼ばれる順&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/6/init-order/"&gt;https://ufcpp.net/blog/2023/6/init-order/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;モジュール初期化子 (&lt;code&gt;ModuleInitializer&lt;/code&gt;) が複数ある場合の実行順序についての解説。&lt;/p&gt;
&lt;h3 id="writing-a.net-profiler-in-c-part-4"&gt;Writing a .NET profiler in C# — Part 4&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minidump.net/writing-a-net-profiler-in-c-part-4-c54df903b9ce"&gt;https://minidump.net/writing-a-net-profiler-in-c-part-4-c54df903b9ce&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# (NativeAOT) を使用して .NET プロファイラーを作成するシリーズの Part 4。&lt;/p&gt;
&lt;h3 id="swashbuckle.aspnetcore.cli-fileloadexception-xin9le.net"&gt;Swashbuckle.AspNetCore.Cli で FileLoadException が出る場合の対処 - xin9le.net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.xin9le.net/entry/2023/06/25/230203"&gt;https://blog.xin9le.net/entry/2023/06/25/230203&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swashbuckle.AspNetCore.Cli が Top-level Statements に対応していないため生成に失敗してしまう問題への対策。&lt;/p&gt;
&lt;p&gt;特別に呼び出される IHost を生成するメソッドを実装する方法について紹介している。&lt;/p&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;MessagePack-CSharp が個人のアカウントから Organization に移動したという話(と pre-release 版で Source Generator に対応した話)。&lt;/p&gt;
&lt;!-- https://twitter.com/neuecc/status/1674179032349306884?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;MessagePack for C#、neuecc配下から専用organizationに移行しました！なお直近のpre-release版ではついにSource Generator対応(Unityも対応済み！)しています。&lt;a href="https://t.co/E5XlxsMX9Z"&gt;https://t.co/E5XlxsMX9Z&lt;/a&gt;&lt;/p&gt;&amp;mdash; neuecc (&amp;#64;neuecc) &lt;a href="https://twitter.com/neuecc/status/1674179032349306884?ref_src=twsrc%5Etfw"&gt;June 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;.csproj で MapPath プロパティを設定することでスタックトレースに表示されるパスを変更できるという話。&lt;/p&gt;
&lt;!-- https://twitter.com/karenpaynemvp/status/1674152970668351488?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Did you know when logging exceptions you can remove the path to lines of code? &lt;a href="https://t.co/z2srKipRdf"&gt;pic.twitter.com/z2srKipRdf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Karen Payne MVP (&amp;#64;KarenPayneMVP) &lt;a href="https://twitter.com/KarenPayneMVP/status/1674152970668351488?ref_src=twsrc%5Etfw"&gt;June 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio 2022 17.7 Preview 3 に C# 12 の Inline Arrays がマージされた。&lt;/p&gt;
&lt;!-- https://twitter.com/jcouv/status/1673780113434091520?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We merged a preview C# 12 feature into VS 17.7 (preview 3): inline arrays.&lt;br&gt;&lt;br&gt;It provides a general-purpose and safe mechanism for declaring inline arrays within classes, structs, and interfaces using the `[InlineArray(size)]` attribute.&lt;a href="https://t.co/VxQNdB3pav"&gt;https://t.co/VxQNdB3pav&lt;/a&gt;&lt;/p&gt;&amp;mdash; Julien Couvreur (&amp;#64;jcouv) &lt;a href="https://twitter.com/jcouv/status/1673780113434091520?ref_src=twsrc%5Etfw"&gt;June 27, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-06-25: grpc-dotnet v2.54.0, Microsoft Forms Service’s Journey to .NET 6, ReSharper &amp; Rider 2023.1.3</title>
			<link>/2023/06/25/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/06/25/updates</guid>
			<pubDate>Sun, 25 Jun 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-release-v2.54.0-grpcgrpc-dotnet"&gt;Release Release v2.54.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.54.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.54.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet (gRPC for .NET) v2.54.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは認証インターセプターでの CancellationToken のサポートをはじめいくつかの改善と不具合の修正が含まれている。&lt;/p&gt;
&lt;h3 id="microsoft-forms-services-journey-to.net-6.net-blog"&gt;Microsoft Forms Service’s Journey to .NET 6 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/microsoft-forms-services-journey-to-dotnet-6/"&gt;https://devblogs.microsoft.com/dotnet/microsoft-forms-services-journey-to-dotnet-6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Forms (アンケートを作成するサービス) のマイクロサービスを .NET 6 へ移行した事例について。&lt;/p&gt;
&lt;p&gt;Microsoft Forms は .NET Framework 4.7.2 の WebForms と Web API で構築されたマイクロサービスであったが、そのフロントエンド REST API とバックエンド REST API サービスを .NET 6 に移行したとのこと。&lt;/p&gt;
&lt;p&gt;記事では移行に向けたアプローチと導入の結果を紹介している。移行のアプローチとしては初めに HttpContext の排除、次に依存の更新とプロジェクトの netstandard2.0 や net472, net6.0 といったマルチターゲットビルドへの変更を行った。その際マルチターゲットビルドが増えることによる問題についても紹介している。導入の結果としても CPU 使用率とレスポンスのレイテンシーが大きく改善されたとのこと。&lt;/p&gt;
&lt;h3 id="resharper-and-rider-2023.1.3-another-set-of-bug-fixes-is-here-the.net-tools-blog"&gt;ReSharper and Rider 2023.1.3 – Another Set of Bug-fixes Is Here | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/23/rsrp-and-rd-2023-1-3-bug-fix/"&gt;https://blog.jetbrains.com/dotnet/2023/06/23/rsrp-and-rd-2023-1-3-bug-fix/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2023.1.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;ReSharper の Visual Studio でのパフォーマンス問題の修正、dotTrace と dotMemory のバグの修正、Rider のアップデータのクラッシュする問題やその他 IDE のバグの修正が含まれている。&lt;/p&gt;
&lt;h3 id="whats-new-in-npoi-2.6.1"&gt;What’s New in NPOI 2.6.1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://tonyqus.medium.com/whats-new-in-npoi-2-6-1-92b5f07c479c"&gt;https://tonyqus.medium.com/whats-new-in-npoi-2-6-1-92b5f07c479c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NPOI 2.6.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではエリアチャートやパイチャートのサポート追加をはじめとしていくつかの改善と不具合の修正が含まれている。&lt;/p&gt;
&lt;h3 id="get-ready-for-fsharpconf-2023.net-blog"&gt;Get ready for fsharpConf 2023! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/tune-in-for-fsharpconf-2023/"&gt;https://devblogs.microsoft.com/dotnet/tune-in-for-fsharpconf-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# のコミュニティーイベントの fsharpConf 2023 の紹介している記事。&lt;/p&gt;
&lt;p&gt;fsharpConf 2023 は6月26日に開催される F# のコミュニティーのバーチャルイベント。記事ではイベントのタイムテーブルを紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fsharpconf.com/"&gt;fsharpConf: The F# Community Virtual Conference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-the-new-t4-command-line-tool-for.net.net-blog"&gt;Introducing the New T4 Command-Line Tool for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/t4-command-line-tool-for-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/t4-command-line-tool-for-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 以降で利用可能となった .NET 向けの T4 のコマンドラインツールの紹介。&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 以降では .NET 6 で動作する新しいバージョンの T4 (Text Template) 実行のコマンドラインツールが同梱されるようになった。&lt;/p&gt;
&lt;p&gt;この新しいバージョンのツールは .NET 6 ランタイムで動作することで T4 のテンプレートからモダンな .NET のライブラリーを使用することができるようになる。現時点での制限として IDE から実行と MSBuild Task による実行はサポートされない。&lt;/p&gt;
&lt;p&gt;今後に向けてのフィードバックについても求めており、記事からリンクされたアンケートも用意されている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="cmstestfine-code-coverage-qiita"&gt;C#のMSTestでFine Code Coverageでカバレッジを計測する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/YoshijiGates/items/efc700574edbf8eb1ab2"&gt;https://qiita.com/YoshijiGates/items/efc700574edbf8eb1ab2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 Community でコードカバレッジを確認する方法について。&lt;/p&gt;
&lt;p&gt;記事では Fine Code Coverage 拡張機能を導入して確認する方法を紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=FortuneNgwenya.FineCodeCoverage2022"&gt;Fine Code Coverage - Visual Studio Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="how-to-build-a-flight-network-analysis-graph-based-asp.net-application-with-memgraph-c-and-d3.js"&gt;How to Build a Flight Network Analysis Graph-Based ASP.NET Application with Memgraph, C#, and D3.js&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/memgraph/how-to-build-a-flight-network-analysis-graph-based-asp-net-application-with-memgraph-c-and-d3-js-601d7e7a6bdb"&gt;https://medium.com/memgraph/how-to-build-a-flight-network-analysis-graph-based-asp-net-application-with-memgraph-c-and-d3-js-601d7e7a6bdb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Memgraph というインメモリのグラフ DB を使用し、ASP.NET アプリケーションで D3.js でビジュアライズするツールを構築するチュートリアル。&lt;/p&gt;
&lt;h3 id="c-chatgpt-api-ai-function-calling-qiita"&gt;C# で ChatGPT API： AI で作曲する (Function calling を使用) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/7b2e75fa916cd6d4d804"&gt;https://qiita.com/fsdg-adachi_h/items/7b2e75fa916cd6d4d804&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ChatGPT の API を活用し AI で作曲、 MIDI ファイルを作成する方法について。&lt;/p&gt;
&lt;p&gt;記事では ChatGPT の Function Calling を使用する形で実装している。&lt;/p&gt;
&lt;h3 id="parsing-websites-in-c-with-html-agility-pack-or-anglesharp"&gt;Parsing websites in C# with Html Agility Pack or AngleSharp&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/parsing-websites-in-c-with-html-agility-pack-or-anglesharp/"&gt;https://blog.elmah.io/parsing-websites-in-c-with-html-agility-pack-or-anglesharp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Html Agility Pack と AngleSharp を使用して Web サイトをスクレイピングする方法について。&lt;/p&gt;
&lt;h3 id="improved.net-debugging-experience-with-source-link-ndepend"&gt;Improved .NET Debugging Experience with Source Link - NDepend&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/improved-net-debugging-experience-with-source-link"&gt;https://blog.ndepend.com/improved-net-debugging-experience-with-source-link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Link による .NET のデバッグ体験の向上についての紹介。&lt;/p&gt;
&lt;h3 id="hash-signing-and-signature-validation-in-c-using-the-yubikey.net-sdk"&gt;Hash Signing and Signature Validation in C# Using the YubiKey .NET SDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;matt.heimlich/hash-signing-and-signature-validation-in-c-using-the-yubikey-net-sdk-dbaa227255dd"&gt;https://medium.com/&amp;#64;matt.heimlich/hash-signing-and-signature-validation-in-c-using-the-yubikey-net-sdk-dbaa227255dd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;YubiKey の .NET SDK を使用して YubiKey を使用したハッシュ署名と署名の検証を行う方法について。&lt;/p&gt;
&lt;h3 id="how-to-build-a-shared-library-in-java-and-call-it-from.net-code"&gt;How to Build a Shared Library in Java and Call it From .NET Code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;sixpeteunder/how-to-build-a-shared-library-in-java-and-call-it-from-dotnet-code-b47c22300456"&gt;https://medium.com/&amp;#64;sixpeteunder/how-to-build-a-shared-library-in-java-and-call-it-from-dotnet-code-b47c22300456&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET から共有ライブラリーとしてビルドされた Java のライブラリーを呼び出す方法について。&lt;/p&gt;
&lt;p&gt;記事では GraalVM でネイティブライブラリーにビルドされたものを C 言語によるラッパーを通して .NET から呼び出す形を紹介している。&lt;/p&gt;
&lt;h3 id="caws-lambdagithub-actions-qiita"&gt;C#で作成したAWS Lambdaの関数をGitHub Actionsで自動デプロイする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/shin4488/items/20660044f6c86cfdead2"&gt;https://qiita.com/shin4488/items/20660044f6c86cfdead2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET の AWS Lambda 関数を GitHub Actions からデプロイする方法について。&lt;/p&gt;
&lt;h3 id="ncmbcmauixamarin-sdk-qiita"&gt;NCMBのC#（MAUI/Xamarin） SDKがプッシュ通知の操作に対応しました - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/goofmint/items/585b63dcb6374382afb1"&gt;https://qiita.com/goofmint/items/585b63dcb6374382afb1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ニフクラ mobile backend (NCMB) のコミュニティーによる SDK でプッシュ通知の操作に対応したことと使い方について。&lt;/p&gt;
&lt;h3 id="xiao-esp32c3nanoframework-adc"&gt;XIAO ESP32C3で始めるnanoFramework &lt;sub&gt;ADC&lt;/sub&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/matsujirushi/articles/8bdbccd464d571"&gt;https://zenn.dev/matsujirushi/articles/8bdbccd464d571&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Seeed Studio XIAO ESP32C3 で nanoFramework を使用して ADC の値を読み取る方法について。&lt;/p&gt;
&lt;h3 id="xamarin.mac.net-7"&gt;Xamarin.Macに別れを告げ、.NET 7に移行した話&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/dogfortune/articles/51d1b2aa17be27"&gt;https://zenn.dev/dogfortune/articles/51d1b2aa17be27&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Xamarin.Mac から .NET 7 に移行作業でのポイントをいくつかまとめた記事。&lt;/p&gt;
&lt;h3 id="net-on-power-4-mariadbodbc-qiita"&gt;.NET on Power を動かしてみた話 #4 - MariaDBへODBCドライバを使用して接続 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Nakaji1106/items/429034b3707c65c4d6ff"&gt;https://qiita.com/Nakaji1106/items/429034b3707c65c4d6ff&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Power アーキテクチャーで .NET を動かし、MariaDB に ODBC ドライバーで接続してみたという記事。&lt;/p&gt;
&lt;h3 id="microsoft-store-qiita"&gt;アプリをMicrosoft Storeに提出してみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/dhq_boiler/items/781b2ef98ce26a090566"&gt;https://qiita.com/dhq_boiler/items/781b2ef98ce26a090566&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アプリケーションを Microsoft Store に提出し、公開されるまでの流れについての解説。&lt;/p&gt;
&lt;h3 id="reset-passwords-in-asp.net-core-using-delegated-permissions-and-microsoft-graph"&gt;Reset passwords in ASP.NET Core using delegated permissions and Microsoft Graph&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2023/06/19/reset-passwords-in-asp-net-core-using-delegated-permissions-and-microsoft-graph/"&gt;https://damienbod.com/2023/06/19/reset-passwords-in-asp-net-core-using-delegated-permissions-and-microsoft-graph/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションから Microsoft Graph を使用してユーザーのパスワードをリセットする方法について。&lt;/p&gt;
&lt;h3 id="getting-the.net-desktop-runtime-installed-with-a-custom-runtime-checker-and-installer"&gt;Getting the .NET Desktop Runtime Installed with a Custom Runtime Checker and Installer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2023/Jun/21/Creating-a-Runtime-Checker-and-Installer-for-a-NET-Core-WPF-Application"&gt;https://weblog.west-wind.com/posts/2023/Jun/21/Creating-a-Runtime-Checker-and-Installer-for-a-NET-Core-WPF-Application&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET ランタイムのインストール状況をチェックし、インストールするカスタムインストーラーについて。&lt;/p&gt;
&lt;p&gt;記事ではランタイムの配布について、自己完結型配布について、共有ランタイムについて、インストーラーの実装解説といった内容が解説されている。&lt;/p&gt;
&lt;h3 id="wsl2.net-sdk-kkamegawas-weblog"&gt;WSL2の .NET SDKが認識されない現象を修復する - kkamegawa's weblog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kkamegawa.hatenablog.jp/entry/2023/06/24/191525"&gt;https://kkamegawa.hatenablog.jp/entry/2023/06/24/191525&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WSL 2 で .NET SDK が正常に認識されなくなった場合のトラブルシューティングについて。&lt;/p&gt;
&lt;h3 id="validating-nested-dataannotation-ioptions-recursively-with-minivalidation"&gt;Validating nested DataAnnotation IOptions recursively with MiniValidation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/validating-nested-dataannotation-options-recursively-with-minivalidation/"&gt;https://andrewlock.net/validating-nested-dataannotation-options-recursively-with-minivalidation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IOptions の検証として標準の &lt;code&gt;ValidateDataAnnotations&lt;/code&gt; を使用した場合、ネストされた検証が行われない問題を回避する方法について。&lt;/p&gt;
&lt;p&gt;記事では MiniValidation を使用して検証する方法を紹介している。&lt;/p&gt;
&lt;h3 id="windowswixtoolsetv4-qiita"&gt;Windowsインストーラーを作れるwixtoolsetの概要(v4) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/194888be042e5c4c32ad"&gt;https://qiita.com/skitoy4321/items/194888be042e5c4c32ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WiX v4 についての概要をまとめた記事。WiX で使用されるファイルやビルド方法といったことを解説している。&lt;/p&gt;
&lt;h3 id="c-12.0-c-c"&gt;C# 12.0 の新機能 | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/study/csharp/cheatsheet/ap_ver12/"&gt;https://ufcpp.net/study/csharp/cheatsheet/ap_ver12/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 (現時点ではプレビュー) で導入される新機能の解説。&lt;/p&gt;
&lt;h3 id="net-c-c"&gt;.NET の文字列比較でカルチャー未指定を検知する | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/6/ca-specify-culture/"&gt;https://ufcpp.net/blog/2023/6/ca-specify-culture/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文字列比較でカルチャーが未指定の場合に警告/エラーとするようにして事前に気づけるようにする方法について。&lt;/p&gt;
&lt;p&gt;記事では .NET 5 で導入された NetAnalyzers と .editorconfig を使用してエラーにする手法を紹介している。&lt;/p&gt;
&lt;h3 id="announcing-create-a-pull-request-in-visual-studio-visual-studio-blog"&gt;Announcing Create a Pull Request in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/create-a-pull-request-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/create-a-pull-request-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.7 preview 2 で追加された Pull request の作成機能の紹介。&lt;/p&gt;
&lt;h3 id="how-to-detect-heap-allocations"&gt;How to detect heap allocations&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bartwullems.blogspot.com/2023/06/how-to-detect-heap-allocations.html"&gt;https://bartwullems.blogspot.com/2023/06/how-to-detect-heap-allocations.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ヒープアロケーションを検出する方法について。&lt;/p&gt;
&lt;p&gt;記事では Visual Studio のプロファイラーと ClrHeapAllocationAnalyzer を使用したコード上での検出を紹介している。&lt;/p&gt;
&lt;h3 id="treat-your.net-minimal-api-endpoint-as-the-application-layer"&gt;Treat your .NET Minimal API Endpoint as the application layer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://timdeschryver.dev/blog/treat-your-net-minimal-api-endpoint-as-the-application-layer"&gt;https://timdeschryver.dev/blog/treat-your-net-minimal-api-endpoint-as-the-application-layer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core の Minimal API をアーキテクチャー上のアプリケーション層としてあつかう構成について。&lt;/p&gt;
&lt;h3 id="how-does-list-work-under-the-hood-in.net"&gt;How does List work under the hood in .NET?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/06e2c8e8-0119-4e8d-9227-3cb922a8c916"&gt;https://steven-giesel.com/blogPost/06e2c8e8-0119-4e8d-9227-3cb922a8c916&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; の内部の実装についての簡単な解説。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Visual Studio 2022 17.6 では GC や CPU が高負荷な状況をテレメトリーで見るようになったという話。&lt;/p&gt;
&lt;p&gt;続くスレッドではどのような体制でどのように活用できているのかを説明している。&lt;/p&gt;
&lt;!-- https://twitter.com/davkean/status/1672295235026829312?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In Visual Studio 17.6, we rolled out new a couple of new telemetry systems that capture high-GC and high-CPU usage within Visual Studio. This supplements our existing crash, hang, freeze, thread pool &amp;amp; memory usage performance &amp;amp; reliability telemetry.&lt;/p&gt;&amp;mdash; David Kean (&amp;#64;davkean) &lt;a href="https://twitter.com/davkean/status/1672295235026829312?ref_src=twsrc%5Etfw"&gt;June 23, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-06-18: .NET 8 Preview 5, Visual Studio 2022 17.7 Preview 2, Polly 8.0.0-alpha.1, .NET 7.0.7 &amp; 6.0.18</title>
			<link>/2023/06/18/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/06/18/updates</guid>
			<pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-8-preview-5.net-blog"&gt;Announcing .NET 8 Preview 5 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-5/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 5 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SDK: メトリクス API の改善
&lt;ul&gt;
&lt;li&gt;Dependency Injection (DI) フレンドリーなメトリクス API&lt;/li&gt;
&lt;li&gt;タグ付きのメーターやインストルメントの作成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SDK: .NET SDK の一部となったソースリンク&lt;/li&gt;
&lt;li&gt;SDK: 新しい .NET ライブラリーのアナライザー&lt;/li&gt;
&lt;li&gt;SDK: Linux での self-contained ビルド&lt;/li&gt;
&lt;li&gt;SDK: self-contained の非デフォルト化&lt;/li&gt;
&lt;li&gt;Alpine ASP.NET Core Docker コンポジットイメージ
&lt;ul&gt;
&lt;li&gt;アセンブリーを単一のバイナリーにまとめる新しい形式(コンポジット)の Ready-to-Run で ASP.NET Core をコンパイルすることでサイズの削減などが行える半面、複数のバージョンを取り扱うことはできなくなる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ランタイムホストはデフォルトで RID グラフを使用せず、RID 固有のアセットを決定&lt;/li&gt;
&lt;li&gt;Codegen
&lt;ul&gt;
&lt;li&gt;Dynamic PGO のデフォルト化&lt;/li&gt;
&lt;li&gt;GC 型の ThreadStatic フィールドアクセスの最適化&lt;/li&gt;
&lt;li&gt;Arm64, AVX-512&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C# Dev Kit 拡張と VSCode での生産性の向上&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-17.7-preview-2-is-here-visual-studio-blog"&gt;Visual Studio 2022 17.7 Preview 2 is here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-preview-2-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-preview-2-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.7 Preview 2 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDE 生産性とパフォーマンス
&lt;ul&gt;
&lt;li&gt;ファイルの比較の改善&lt;/li&gt;
&lt;li&gt;Pull Request の作成&lt;/li&gt;
&lt;li&gt;複数ブランチグラフサポートの強化&lt;/li&gt;
&lt;li&gt;パラレルスタックのフィルタリング&lt;/li&gt;
&lt;li&gt;F5 の速度の改善&lt;/li&gt;
&lt;li&gt;編集速度の最適化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET 開発
&lt;ul&gt;
&lt;li&gt;外部 .NET コードの自動デコンパイル&lt;/li&gt;
&lt;li&gt;CPU 使用率の新しい自動インサイト&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;モダン C++ とゲーム開発
&lt;ul&gt;
&lt;li&gt;Build Insights for C++&lt;/li&gt;
&lt;li&gt;Unreal Engine Blueprint Find All References&lt;/li&gt;
&lt;li&gt;Doxygen オーバーロード解決の強化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ クロスプラットフォームと組み込み開発
&lt;ul&gt;
&lt;li&gt;リモートファイルのアップデート&lt;/li&gt;
&lt;li&gt;WSL 自動取得&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JavaScript と TypeScript 開発
&lt;ul&gt;
&lt;li&gt;React と Vue の Vite 新規プロジェクト作成サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;エンタープライズ管理
&lt;ul&gt;
&lt;li&gt;標準ユーザーによる Visual Studio のアップデートと更新&lt;/li&gt;
&lt;li&gt;インストーラーの「利用可能」タブへの管理者によるプライベートなレイアウト追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-5.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 5 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-5/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 5 での ASP.NET Core のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ASP.NET Core デバッグ体験の向上
&lt;ul&gt;
&lt;li&gt;HttpContext, HttpRequest, HttpRequest, ClaimsPrincipal に DebuggerDisplay 属性がついた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;サーバーとミドルウェア
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IHttpSysRequestTimingFeature&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ITlsHandshakeFeature&lt;/code&gt; での SNI ホスト名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IExceptionHandler&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Blazor
&lt;ul&gt;
&lt;li&gt;新しい Blazor Web アプリプロジェクトテンプレート&lt;/li&gt;
&lt;li&gt;Blazor ルーターのエンドポイントルーティングとの統合&lt;/li&gt;
&lt;li&gt;Blazor サーバーの個別コンポーネントの対話の有効化&lt;/li&gt;
&lt;li&gt;Webcil パッケージの強化&lt;/li&gt;
&lt;li&gt;Blazor Content Security Policy (CSP) 互換性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API オーサリング
&lt;ul&gt;
&lt;li&gt;ジェネリック属性のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SignalR
&lt;ul&gt;
&lt;li&gt;SignalR シームレス再接続&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Native AOT
&lt;ul&gt;
&lt;li&gt;AsParameters とコンパイル時生成 Minimal APIs の自動メタデータ生成のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;認証と認可
&lt;ul&gt;
&lt;li&gt;ASP.NET Core SPA テンプレートの認証のアップデート&lt;/li&gt;
&lt;li&gt;AuthrizationBuilder の推奨使用方法に関する新しいアナライザー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-maui-in.net-8-preview-5.net-blog"&gt;Announcing .NET MAUI in .NET 8 Preview 5 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-5/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 5 での .NET MAUI のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iOS キーボードスクロール&lt;/li&gt;
&lt;li&gt;テストの強化&lt;/li&gt;
&lt;li&gt;パフォーマンスの改善&lt;/li&gt;
&lt;li&gt;バグ修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-8.0.0-alpha.1-app-vnextpolly-github"&gt;Release 8.0.0-alpha.1 · App-vNext/Polly · GitHub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.0.0-alpha.1"&gt;https://github.com/App-vNext/Polly/releases/tag/8.0.0-alpha.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polly 8.0.0-alpha.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;Polly v8 では API を大きく変更し、オーバーヘッドの少ない新しい API で構築される。このリリースはその最初のプレビューリリースとなる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/App-vNext/Polly/issues/1048"&gt;Polly v8 - Architectural changes · Issue #1048 · App-vNext/Polly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thepollyproject.org/2023/03/03/we-want-your-feedback-introducing-polly-v8/"&gt;We want your feedback! Introducing Polly v8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-framework-june-2023-security-and-quality-rollup.net-blog"&gt;.NET Framework June 2023 Security and Quality Rollup - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-june-2023-security-and-quality-rollup/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-june-2023-security-and-quality-rollup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework の2023年6月のセキュリティー修正と累積アップデートがリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは6つのセキュリティー修正と複数の不具合修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2023-24897: リモートコード実行 (MSDIA SDK による PDB が引き起こすヒープオーバーフロー)&lt;/li&gt;
&lt;li&gt;CVE-2023-29326: リモートコード実行 (WPF の BAML による特権昇格)&lt;/li&gt;
&lt;li&gt;CVE-2023-24895: リモートコード実行 (WPF XAML パーサーの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-24936: 特権昇格 (DataSet や DataTable の XML デシリアライズの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-24936: サービス拒否 (AIAのクライアント証明書取得プロセスの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-29330: サービス拒否 (X509Certificate2 ファイルのファイルハンドリングの脆弱性)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-june-2023-updates.net-7.0.7.net-6.0.18.net-blog"&gt;.NET June 2023 Updates – .NET 7.0.7, .NET 6.0.18 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/june-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/june-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7.0.7, 6.0.18 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは様々なセキュリティー修正といくつかの不具合修正や品質向上の修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2023-24895: リモートコード実行 (XAML Frame 要素のハンドリングの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-24897: リモートコード実行 (MSDIA SDK による PDB が引き起こすヒープオーバーフロー)&lt;/li&gt;
&lt;li&gt;CVE-2023-24936: 特権昇格 (DataSet や DataTable の XML デシリアライズの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-29330: サービス拒否 (X509Certificate2 ファイルのファイルハンドリングの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-29337: NuGet クライアントリモートコード実行 (レースコンディションによるシンボリック攻撃可能な脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-32032: サービス拒否 (Tarファイルの展開の脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-33126: サービス拒否 (クラッシュとスタックトレースのシナリオ中の脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-33128: サービス拒否 (P/Invoke の Source Generator の生成コードのメモリ解放の脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-33135: サービス拒否 (.NET SDK のツール復元での特権昇格の脆弱性)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-creatorkit-servicestack"&gt;Introducing CreatorKit - ServiceStack&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://servicestack.net/posts/creatorkit"&gt;https://servicestack.net/posts/creatorkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で実装された Mailchimp のセルフホスト代替ソリューションとなる CreatorKit がリリースされた。&lt;/p&gt;
&lt;p&gt;メーリングリストやニュースレターの購読管理、カスタマイズ可能なメール送信といったことが行え、管理ダッシュボードも含めた一式のツールとなっている。&lt;/p&gt;
&lt;p&gt;ServiceStack に含まれる製品で、個人やオープンソースプロジェクトでは無料で利用できる。&lt;/p&gt;
&lt;h3 id="release-2.6.116-stackexchangestackexchange.redis"&gt;Release 2.6.116 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.116"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.116&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.6.116 がリリースされた。&lt;/p&gt;
&lt;p&gt;不具合の修正と Native AOT サポートのためのアップデートなどが含まれている。&lt;/p&gt;
&lt;h3 id="blazor-essentials-new-guide-tutorial-the.net-tools-blog"&gt;Blazor Essentials – New Guide Tutorial | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/13/blazor-essentials-new-guide-tutorial/"&gt;https://blog.jetbrains.com/dotnet/2023/06/13/blazor-essentials-new-guide-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による Blazor の入門ガイドコンテンツが公開となった。&lt;/p&gt;
&lt;p&gt;Blazor について、から、フォームの実装、JavaScript との相互運用、パブリッシュといった部分をカバーする。&lt;/p&gt;
&lt;h3 id="releasing.net-framework-4.8.1-to-the-release-preview-channel"&gt;Releasing .NET Framework 4.8.1 to the Release Preview Channel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blogs.windows.com/windows-insider/2023/06/13/releasing-net-framework-4-8-1-to-the-release-preview-channel/"&gt;https://blogs.windows.com/windows-insider/2023/06/13/releasing-net-framework-4-8-1-to-the-release-preview-channel/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework 4.8.1 が Windows Insider の Release Preview チャンネル向けにリリースされた。&lt;/p&gt;
&lt;p&gt;Windows 11 21H2, Windows 10 21H2, 22H2 の Insider Preview Release Preview チャンネルに配信される。&lt;/p&gt;
&lt;p&gt;.NET Framework 4.8.1 には Arm64 アーキテクチャー対応やアクセシビリティーをはじめとする改善の含まれている。&lt;/p&gt;
&lt;h3 id="rider-2023.2-eap-5-improved-support-for-c-better-performance-profiling-and-more.the.net-tools-blog"&gt;Rider 2023.2 EAP 5: Improved Support for C#, Better Performance Profiling, and More. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/16/rider-2023-2-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2023/06/16/rider-2023-2-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.2 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンではラムダのデフォルトパラメーターのサポート、Disposable のインスペクションの改善、ターミナルの WinPTY から ConPTY への移行、dotTrace のスレッドによるグループ化表示などが含まれている。&lt;/p&gt;
&lt;h3 id="resharper-2023.2-eap-5-improved-control-over-object-disposal-support-for-default-lambda-parameters-and-c23-standard-library-modules.the.net-tools-blog"&gt;ReSharper 2023.2 EAP 5: Improved Control Over Object Disposal, Support for Default Lambda Parameters, and C++23 Standard Library Modules. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/16/resharper-2023-2-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2023/06/16/resharper-2023-2-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.2 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンではラムダのデフォルトパラメーターのサポート、Disposable のインスペクションの改善、C++ での C++ 23 標準ライブラリーのサポート、dotTrace のスレッドによるグループ化表示などが含まれている。&lt;/p&gt;
&lt;h3 id="introducing-the-microsoft-store-channel-on-discord-ifdef-windows"&gt;Introducing the Microsoft Store channel on Discord - #ifdef Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/ifdef-windows/introducing-the-microsoft-store-channel-on-discord/"&gt;https://devblogs.microsoft.com/ifdef-windows/introducing-the-microsoft-store-channel-on-discord/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Discord に #microsoft-store チャンネルが開設された。&lt;/p&gt;
&lt;p&gt;このチャンネルは UWP コミュニティーサーバーにあり、Microsoft Store アプリやサイト、パートナーセンター、MSIX パッケージやインストーラに関するトピックについて話し合うことのできる。&lt;/p&gt;
&lt;p&gt;コミュニティーでのディスカッションや Microsoft のチームとの交流などが行えるとのこと。&lt;/p&gt;
&lt;h3 id="release-v1.0-windows-maps-introducing-the-maps-control-for-windows-communitytoolkitmaui"&gt;Release v1.0 Windows Maps: Introducing the Maps control for Windows · CommunityToolkit/Maui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/CommunityToolkit/Maui/releases/tag/1.0.0-maps"&gt;https://github.com/CommunityToolkit/Maui/releases/tag/1.0.0-maps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Community Toolkit で Windows 向けの Map コントロールがリリースされた。&lt;/p&gt;
&lt;p&gt;Windows はプラットフォームの機能としてマップを持たず .NET MAUI の Map コントロールがサポートされていないため、コミュニティー実装として Bing を WebView2 でホストする形の Map コントロールを提供する。&lt;/p&gt;
&lt;h3 id="public-preview-app-service-support-for.net-8-azure-updates-microsoft-azure"&gt;Public Preview: App Service support for .NET 8 | Azure updates | Microsoft Azure&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://azure.microsoft.com/en-us/updates/public-preview-app-service-support-for-net-8/"&gt;https://azure.microsoft.com/en-us/updates/public-preview-app-service-support-for-net-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure App Service で .NET 8 の早期アクセスについてのアナウンス。&lt;/p&gt;
&lt;p&gt;Azure App Service (Windows および Linux) での .NET 8 の早期アクセスによる利用が可能となる。&lt;/p&gt;
&lt;h3 id="configure-visual-studio-policies-using-microsoft-endpoint-manager-intune-visual-studio-blog"&gt;Configure Visual Studio policies using Microsoft Endpoint Manager (Intune) - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/configure-visual-studio-policies-using-microsoft-endpoint-manager-intune/"&gt;https://devblogs.microsoft.com/visualstudio/configure-visual-studio-policies-using-microsoft-endpoint-manager-intune/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Endpoint Manager (Intune) の設定カタログに Visual Studio のグローバルポリシーが追加された。&lt;/p&gt;
&lt;p&gt;これにより Intune から Visual Studio の構成オプションを展開するにあたり ADMX の手動アップロードが必要だったものが、Intune から直接管理できるようになる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="asp.net.net-framework-session-state-provider"&gt;ASP.NET (.NET Framework) 向けの各 Session State Provider が大規模アップデート - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20230618/1687080471"&gt;https://blog.shibayan.jp/entry/20230618/1687080471&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET (.NET Framework) 向けの Session State Provider の更新についてのまとめ。&lt;/p&gt;
&lt;p&gt;ASP.NET 向けの Session State Provider として SQL Server と Cosmos DB、Redis を使用するものがありそれぞれ今年に入って更新されたポイントについて詳しく解説している。&lt;/p&gt;
&lt;h3 id="vscode-c-aws-lambdaclambda-function-qiita"&gt;【VSCode, C#, AWS Lambda】C#で作成したLambda Functionをローカルで動作確認する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/shin4488/items/a01fdf54daf626cb8742"&gt;https://qiita.com/shin4488/items/a01fdf54daf626cb8742&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で実装した AWS Lambda のファンクションをローカルの Visual Studio Code で動作確認する方法について。&lt;/p&gt;
&lt;h3 id="running-large-language-models-locally-your-own-chatgpt-like-ai-in-c"&gt;Running Large Language Models locally – Your own ChatGPT-like AI in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/maartenba/running-large-language-models-locally-your-own-chatgpt-like-ai-in-c-jco"&gt;https://dev.to/maartenba/running-large-language-models-locally-your-own-chatgpt-like-ai-in-c-jco&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LLamaSharp を使用してローカルの環境で ChatGPT のような LLM による AI チャットを実装する方法について。&lt;/p&gt;
&lt;h3 id="compile-f-to-rust"&gt;Compile F# to Rust 🦀&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jkone27-3876.medium.com/compile-f-to-rust-22cf5aa9021"&gt;https://jkone27-3876.medium.com/compile-f-to-rust-22cf5aa9021&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# のコードを Rust に変換して実行する方法について。&lt;/p&gt;
&lt;p&gt;Fable を使用することで F# のコードを Rust のコードに変換して実行する方法を紹介している。&lt;/p&gt;
&lt;h3 id="implementing-dapr-state-management-in-asp.net-core-web-apis"&gt;Implementing Dapr State Management in ASP.NET Core Web APIs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/willvelida/implementing-dapr-state-management-in-aspnet-core-web-apis-42lk"&gt;https://dev.to/willvelida/implementing-dapr-state-management-in-aspnet-core-web-apis-42lk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dapr の状態管理を利用して ASP.NET Core Web API アプリケーションを実装する方法について。&lt;/p&gt;
&lt;h3 id="speed-up-your-app-search-engine-using-sonic"&gt;Speed up your app search engine using Sonic&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;jesielpadilha.ti/speed-up-your-app-search-engine-using-sonic-a4ae788c4d6a"&gt;https://medium.com/&amp;#64;jesielpadilha.ti/speed-up-your-app-search-engine-using-sonic-a4ae788c4d6a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;セルフホストの検索エンジン Sonic を使用して検索、追加などを実装する方法について。&lt;/p&gt;
&lt;h3 id="cchatgpt-api-2-readablestream-qiita"&gt;C#でChatGPT APIを触りたい 2 ~ ReadableStream ~ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/TellMin/items/9059423600a6897cef0c"&gt;https://qiita.com/TellMin/items/9059423600a6897cef0c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ChatGPT API のレスポンスをストリーム(単語単位で徐々に返答が返ってくる形式)で扱う方法について。&lt;/p&gt;
&lt;h3 id="how-to-implement-a-soft-delete-strategy-with-entity-framework-core-the.net-tools-blog"&gt;How to Implement a Soft Delete Strategy with Entity Framework Core | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/14/how-to-implement-a-soft-delete-strategy-with-entity-framework-core/"&gt;https://blog.jetbrains.com/dotnet/2023/06/14/how-to-implement-a-soft-delete-strategy-with-entity-framework-core/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で論理削除を実装する方法について。&lt;/p&gt;
&lt;p&gt;記事ではインターセプターによる削除処理のフック、自動的なクエリーフィルターといった手法を紹介している。&lt;/p&gt;
&lt;h3 id="bulkcopyc-sqlclient"&gt;食わず嫌いのBulkCopy（C＃ SqlClient実装例）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/panda728/articles/55f45ba18cf29f"&gt;https://zenn.dev/panda728/articles/55f45ba18cf29f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SqlClient (SQL Server) での BulkCopy についての簡単な紹介。&lt;/p&gt;
&lt;h3 id="using-project-orleans-to-build-actor-based-solutions-on-the.net-platform"&gt;Using Project Orleans to Build Actor-Based Solutions on the .NET platform&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/articles/project-orleans-actor-based/"&gt;https://www.infoq.com/articles/project-orleans-actor-based/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Orleans についての紹介と実装、メリットについての紹介。&lt;/p&gt;
&lt;h3 id="asp.net-core-qiita"&gt;ASP.NET Core でローカルにシークレットをサクッと用意する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/higege-amdeker/items/f403cb10b4c8337a7980"&gt;https://qiita.com/higege-amdeker/items/f403cb10b4c8337a7980&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーション開発時にローカルでのみ保持するシークレットを取り扱うユーザーシークレットについて。&lt;/p&gt;
&lt;h3 id="supporting-legacy-browsers-and-samesite-cookies-without-useragent-sniffing-in-asp.net-core"&gt;Supporting legacy browsers and SameSite cookies without UserAgent sniffing in ASP.NET Core.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/supporting-legacy-browsers-and-samesite-cookies-without-useragent-sniffing-in-aspnetcore/"&gt;https://andrewlock.net/supporting-legacy-browsers-and-samesite-cookies-without-useragent-sniffing-in-aspnetcore/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;古いブラウザーで SameSite クッキーをユーザーエージェントによらずサポートするためのテクニック。&lt;/p&gt;
&lt;h3 id="asp.net-core-8-expose-timestamp-data-request-processing-with-ihttpsysrequesttimingfeature-when-using-http.sys"&gt;ASP.NET Core 8: Expose Timestamp data request processing with IHttpSysRequestTimingFeature when using HTTP.sys&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://anthonygiretti.com/2023/06/16/asp-net-core-8-expose-timestamp-data-request-processing-with-ihttpsysrequesttimingfeature-when-using-http-sys/"&gt;https://anthonygiretti.com/2023/06/16/asp-net-core-8-expose-timestamp-data-request-processing-with-ihttpsysrequesttimingfeature-when-using-http-sys/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core で追加された IHttpSysRequestTimingFeature を使用して HTTP.sys 環境下でリクエストのタイムスタンプを取得する方法について。&lt;/p&gt;
&lt;h3 id="kubernetes-mutating-admission-webhook-for-dotnet-monitor"&gt;Kubernetes mutating admission webhook for dotnet-monitor?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.poppastring.com/blog/kubernetes-mutating-admission-webhook-for-dotnetmonitor"&gt;https://www.poppastring.com/blog/kubernetes-mutating-admission-webhook-for-dotnetmonitor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dotnet-monitor を Kubernetes の admission webhook でサポートするかどうかフィードバックを求めている。&lt;/p&gt;
&lt;h3 id="c-valuetuple"&gt;(C#) ValueTuple のサイズとレイアウト - ネコのために鐘は鳴る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ikorin2.hatenablog.jp/entry/2023/06/14/184523"&gt;https://ikorin2.hatenablog.jp/entry/2023/06/14/184523&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ValueTuple のメモリー上のサイズとレイアウトについて。&lt;/p&gt;
&lt;p&gt;ValueTuple は &lt;code&gt;StructLayout(LayoutKind.Auto)&lt;/code&gt; が指定されているため、サイズとレイアウトは一定ではないことについて。&lt;/p&gt;
&lt;h3 id="installing-visual-studio-from-an-internal-website-visual-studio-blog"&gt;Installing Visual Studio from an Internal Website - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/installing-visual-studio-from-an-internal-website/"&gt;https://devblogs.microsoft.com/visualstudio/installing-visual-studio-from-an-internal-website/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;内部 Web サイトから Visual Studio をインストールする方法について。&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 以降ではイントラネットのサイトから Visual Studio のレイアウトを配布出来るようになったことについての解説。&lt;/p&gt;
&lt;h3 id="qt.net-hosting.net-code-in-a-qt-application-13"&gt;Qt/.NET — Hosting .NET code in a Qt application (1/3)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.qt.io/blog/qt/.net-hosting-.net-code-in-a-qt-application"&gt;https://www.qt.io/blog/qt/.net-hosting-.net-code-in-a-qt-application&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Qt アプリケーションで .NET をホストする方法について。&lt;/p&gt;
&lt;p&gt;記事では Qt/.NET を使用して .NET のコードをホストすることで Qt アプリケーションから .NET のコードを呼び出す方法やラッパーの実装方法について紹介している。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-06-11: C# Dev Kit, Uno Platform 4.9</title>
			<link>/2023/06/11/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/06/11/updates</guid>
			<pubDate>Sun, 11 Jun 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing-c-dev-kit-for-visual-studio-code-visual-studio-blog"&gt;Announcing C# Dev Kit for Visual Studio Code - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/announcing-csharp-dev-kit-for-visual-studio-code/"&gt;https://devblogs.microsoft.com/visualstudio/announcing-csharp-dev-kit-for-visual-studio-code/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forest.watch.impress.co.jp/docs/news/1507140.html"&gt;Microsoft、「C# Dev Kit」をプレビュー公開 ～「VS Code」でC#開発環境を構築／「Visual Studio」のコンセプトを「Visual Studio Code」にも&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-4.9.17-unoplatformuno"&gt;Release 4.9.17 · unoplatform/uno&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/unoplatform/uno/releases/tag/4.9.17"&gt;https://github.com/unoplatform/uno/releases/tag/4.9.17&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://platform.uno/blog/4-9-release-media-player-element-on-mobile-web-linux-webview2-support/"&gt;New Release: Media Player Element on Mobile, Web, Linux. WebView2 Support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-diagnostics-release-v7.0.430602-dotnetdiagnostics"&gt;Release Diagnostics Release - v7.0.430602 · dotnet/diagnostics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/diagnostics/releases/tag/v7.0.430602"&gt;https://github.com/dotnet/diagnostics/releases/tag/v7.0.430602&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.2-eap-3-improvements-for-working-with-raw-strings-and-more-c-features.the.net-tools-blog"&gt;ReSharper 2023.2 EAP 3: Improvements for Working with Raw Strings and More C++ Features. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/06/resharper-2023-2-eap-3/"&gt;https://blog.jetbrains.com/dotnet/2023/06/06/resharper-2023-2-eap-3/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.2-eap-4-is-out-the.net-tools-blog"&gt;Rider 2023.2 EAP 4 Is Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/09/rider-2023-2-eap-4/"&gt;https://blog.jetbrains.com/dotnet/2023/06/09/rider-2023-2-eap-4/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.2-eap-3-improvements-for-raw-strings-gitlab-integration-memory-snapshot-analysis-and-more-the.net-tools-blog"&gt;Rider 2023.2 EAP 3: Improvements for Raw Strings, GitLab Integration, Memory Snapshot Analysis, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/06/rider-2023-2-eap-3/"&gt;https://blog.jetbrains.com/dotnet/2023/06/06/rider-2023-2-eap-3/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="system.formats.tar-qiita"&gt;System.Formats.Tarの使い方 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/3ffe5ea62c9a75b6e397"&gt;https://qiita.com/skitoy4321/items/3ffe5ea62c9a75b6e397&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="debugging-jwtbearer-claim-problems-in-asp.net-core-tore-nestenius-trainer-and-senior-software-developer"&gt;Debugging JwtBearer Claim Problems in ASP.NET Core – Tore Nestenius | Trainer and Senior Software Developer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nestenius.se/2023/06/02/debugging-jwtbearer-claim-problems-in-asp-net-core/"&gt;https://nestenius.se/2023/06/02/debugging-jwtbearer-claim-problems-in-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="enhancing-data-validation-in.net-ioptions-pattern-utilizing-named-and-typed-ioptions-for-robust-configuration"&gt;Enhancing Data Validation in .NET IOptions Pattern: Utilizing Named and Typed IOptions for Robust Configuration.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/ahmedshahjr/enhancing-data-validation-in-net-ioptions-pattern-utilizing-named-and-typed-ioptions-for-robust-configuration-1oo4"&gt;https://dev.to/ahmedshahjr/enhancing-data-validation-in-net-ioptions-pattern-utilizing-named-and-typed-ioptions-for-robust-configuration-1oo4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-docker-fast-mode-works-in-rider-the.net-tools-blog"&gt;How Docker Fast Mode Works in Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/07/how-docker-fast-mode-works-in-rider/"&gt;https://blog.jetbrains.com/dotnet/2023/06/07/how-docker-fast-mode-works-in-rider/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="hacktogether-the-microsoft-teams-global-hack-keynote-recap-and-whats-coming.net-blog"&gt;HackTogether: the Microsoft Teams Global Hack - Keynote Recap and What’s Coming - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/hacktogether-recap-whats-coming/"&gt;https://devblogs.microsoft.com/dotnet/hacktogether-recap-whats-coming/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="understanding-dependency-injection-in.net-core"&gt;Understanding Dependency Injection in .NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://auth0.com/blog/dependency-injection-in-dotnet-core/"&gt;https://auth0.com/blog/dependency-injection-in-dotnet-core/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studios-intellisense-list-can-now-steer-github-copilot-code-completions-visual-studio-blog"&gt;Visual Studio's IntelliSense list can now steer GitHub Copilot code completions. - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/github-copilot-visual-studio-intellisense/"&gt;https://devblogs.microsoft.com/visualstudio/github-copilot-visual-studio-intellisense/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-communitytoolkit.highperformance"&gt;[.NET] CommunityToolkit.HighPerformance で画像処理を書く&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimat/articles/c08c3522cdbfbb"&gt;https://zenn.dev/shimat/articles/c08c3522cdbfbb&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="hey-yara-find-some-vulnerabilities-msrc-blog-microsoft-security-response-center"&gt;Hey Yara, find some vulnerabilities | MSRC Blog | Microsoft Security Response Center&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msrc.microsoft.com/blog/2023/06/hey-yara-find-some-vulnerabilities/"&gt;https://msrc.microsoft.com/blog/2023/06/hey-yara-find-some-vulnerabilities/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="avalonia-ui-what-does-vision-pro-mean-for-windows-developers"&gt;Avalonia UI - What does Vision Pro mean for Windows Developers?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/Blog/what-does-vision-pro-mean-for-windows-developers,3103cff3-0aa4-4952-a9a3-24eab63e7a6f"&gt;https://avaloniaui.net/Blog/what-does-vision-pro-mean-for-windows-developers,3103cff3-0aa4-4952-a9a3-24eab63e7a6f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor.net-connpass"&gt;未来を切り開くBlazor .NET開発者のための新たなチャンス - connpass&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://infragistics.connpass.com/event/286490/"&gt;https://infragistics.connpass.com/event/286490/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visualstudio2022liveunittesting-qiita"&gt;[VisualStudio2022]いまさらLiveUnitTesting使ってみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yusuke-sasaki/items/3cd31a6ab288e1791b3c"&gt;https://qiita.com/yusuke-sasaki/items/3cd31a6ab288e1791b3c&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="devcamp-2023-meadow-v1.0-meadow-cellular-meadow.cloud-and-more-blog.wildernesslabs.co"&gt;DevCamp 2023: Meadow v1.0, Meadow Cellular, Meadow.Cloud, and More! – blog.wildernesslabs.co&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.wildernesslabs.co/devcamp-2023-announcements/"&gt;https://blog.wildernesslabs.co/devcamp-2023-announcements/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="entityframework-core-qiita"&gt;EntityFramework Coreの一括更新 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/d2626b2b518d57420a39"&gt;https://qiita.com/karuakun/items/d2626b2b518d57420a39&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-dev-kit"&gt;C# Dev Kitを遊んでみる&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tnagata012/articles/play-csharp-dev-kit-2e404533dd7e99"&gt;https://zenn.dev/tnagata012/articles/play-csharp-dev-kit-2e404533dd7e99&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rd-devops.net-sansan-tech-blog"&gt;【R&amp;amp;D DevOps通信】研究開発部の.NET基盤をご紹介 - Sansan Tech Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://buildersbox.corp-sansan.com/entry/2023/04/13/110000"&gt;https://buildersbox.corp-sansan.com/entry/2023/04/13/110000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-june-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | June 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/01/net-annotated-monthly-june-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/06/01/net-annotated-monthly-june-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="easy-test-database-reset-in.net-with-respawn"&gt;Easy Test Database Reset in .NET with Respawn&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;kova98/easy-test-database-reset-in-net-with-respawn-d5a59f995e9d"&gt;https://medium.com/&amp;#64;kova98/easy-test-database-reset-in-net-with-respawn-d5a59f995e9d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="avalonia-ui-for.net-project-overview-from-mike-james"&gt;Avalonia UI for .NET: Project Overview from Mike James&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/news/2023/06/avalonia-mike-james/"&gt;https://www.infoq.com/news/2023/06/avalonia-mike-james/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-select-where-qiita"&gt;C# でリアクティブプログラミングを自作してみる：Select と Where オペレーター - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/01018ab1e0d3e71df9bd"&gt;https://qiita.com/fsdg-adachi_h/items/01018ab1e0d3e71df9bd&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-sep-possibly-the-worlds-fastest.net-csv-parser"&gt;Introducing Sep - Possibly the World's Fastest .NET CSV Parser&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nietras.com/2023/06/05/introducing-sep/"&gt;https://nietras.com/2023/06/05/introducing-sep/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="exploring-the-new-visual-studio-feature.http-files"&gt;Exploring the New Visual Studio Feature: .http Files&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/iamprincejkc/exploring-the-new-visual-studio-feature-http-files-1i99"&gt;https://dev.to/iamprincejkc/exploring-the-new-visual-studio-feature-http-files-1i99&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dependency-injection-in-uwp-apps"&gt;Dependency Injection in UWP apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kidjenius.medium.com/dependency-injection-in-uwp-apps-82e6eebf9e23"&gt;https://kidjenius.medium.com/dependency-injection-in-uwp-apps-82e6eebf9e23&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="nameof-gets-a-bit-better-in-c-12"&gt;nameof get's a bit better in C# 12&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/5b0bcb83-4508-4cde-9299-80940bf4709a"&gt;https://steven-giesel.com/blogPost/5b0bcb83-4508-4cde-9299-80940bf4709a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="where-are-objects-allocated-in-c-understanding-heap-and-stack"&gt;Where are Objects Allocated in C#? Understanding Heap and Stack&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gevorgchobanyan.medium.com/where-are-objects-allocated-in-c-understanding-heap-and-stack-951febcac8fe"&gt;https://gevorgchobanyan.medium.com/where-are-objects-allocated-in-c-understanding-heap-and-stack-951febcac8fe&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="embracing-simplicity-in-c-12-default-parameters-in-lambda-expressions"&gt;Embracing Simplicity in C# 12: Default Parameters in Lambda Expressions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;dilshanprasad3/embracing-simplicity-in-c-12-default-parameters-in-lambda-expressions-f72f566b63eb"&gt;https://medium.com/&amp;#64;dilshanprasad3/embracing-simplicity-in-c-12-default-parameters-in-lambda-expressions-f72f566b63eb&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/marcgravell/status/1666737677922705409?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Dapper; big thoughts and questions on vNext and future shape. Interested in database access in .NET (or Dapper specifically)? I want your thoughts! &lt;a href="https://t.co/YijaixF3bW"&gt;https://t.co/YijaixF3bW&lt;/a&gt;&lt;br&gt;&lt;br&gt;/cc &lt;a href="https://twitter.com/ajcvickers?ref_src=twsrc%5Etfw"&gt;&amp;#64;ajcvickers&lt;/a&gt; &lt;a href="https://twitter.com/shayrojansky?ref_src=twsrc%5Etfw"&gt;&amp;#64;shayrojansky&lt;/a&gt; &lt;a href="https://twitter.com/_dotnetbot_?ref_src=twsrc%5Etfw"&gt;&amp;#64;_dotnetbot_&lt;/a&gt;&lt;/p&gt;&amp;mdash; Marc Gravell (&amp;#64;marcgravell) &lt;a href="https://twitter.com/marcgravell/status/1666737677922705409?ref_src=twsrc%5Etfw"&gt;June 8, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://twitter.com/mjovanovictech/status/1666687568832872448?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Did you know you can use the Range syntax with LINQ?&lt;br&gt;&lt;br&gt;Range syntax is supported from C# 8+.&lt;br&gt;&lt;br&gt;It&amp;#39;s a concise way to represent a range using the `..` operator.&lt;br&gt;&lt;br&gt;For example, take the range `x..y`:&lt;br&gt;- `x` is the start of the range&lt;br&gt;- `y` is the end of the range&lt;br&gt;&lt;br&gt;However... &lt;a href="https://t.co/TUv553z0VW"&gt;pic.twitter.com/TUv553z0VW&lt;/a&gt;&lt;/p&gt;&amp;mdash; Milan Jovanović (&amp;#64;mjovanovictech) &lt;a href="https://twitter.com/mjovanovictech/status/1666687568832872448?ref_src=twsrc%5Etfw"&gt;June 8, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-06-04: .NET Upgrade Assistant CLI, Avalonia UI v11 RC 1, devtunnel CLI</title>
			<link>/2023/06/04/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/06/04/updates</guid>
			<pubDate>Sun, 04 Jun 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing-an-update-for.net-upgrade-assistant-with-a-new-cli-tool.net-blog"&gt;Announcing an update for .NET Upgrade Assistant with a new CLI tool! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/upgrade-assistant-cli/"&gt;https://devblogs.microsoft.com/dotnet/upgrade-assistant-cli/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コンソール版の .NET アップグレードアシスタントツールがアップデートされた。&lt;/p&gt;
&lt;p&gt;新しいバージョンのアップグレードアシスタントツールは Visual Studio の拡張と同様の恩恵が受けられるようになった。&lt;/p&gt;
&lt;h3 id="first-release-candidate-of-avalonia-ui-v11-now-available"&gt;First Release Candidate of Avalonia UI v11 Now Available!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/avalonia/first-release-candidate-of-avalonia-ui-v11-now-available-34c8"&gt;https://dev.to/avalonia/first-release-candidate-of-avalonia-ui-v11-now-available-34c8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia UI v11 のリリース候補版が公開された。&lt;/p&gt;
&lt;p&gt;API に大きな変更があり破壊的変更などもあるため RC を試してのフィードバックを求めている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.0-rc1.1"&gt;Release 11.0.0 Release Candidate 1.1 · AvaloniaUI/Avalonia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing-the-public-preview-of-the-devtunnel-cli"&gt;Announcing the public preview of the devtunnel CLI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/azure-developer-community-blog/announcing-the-public-preview-of-the-devtunnel-cli/ba-p/3823131"&gt;https://techcommunity.microsoft.com/t5/azure-developer-community-blog/announcing-the-public-preview-of-the-devtunnel-cli/ba-p/3823131&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dev Tunnel のコマンドライン版ツールのパブリックプレビューが公開された。&lt;/p&gt;
&lt;p&gt;Dev Tunnel は ngrok のような外部からローカルにアクセスできるような仕組みを提供するもので、Visual Studio 2022 に組み込まれていたがコマンドラインツールとしても利用できるようになる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="using-elasticsearch-and-nest-in-net"&gt;Using Elasticsearch and NEST in NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;lucasgarciaz2018/using-elasticsearch-and-nest-in-net-9821f64cfa76"&gt;https://medium.com/&amp;#64;lucasgarciaz2018/using-elasticsearch-and-nest-in-net-9821f64cfa76&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elasticsearch .NET クライアントを利用する方法について。&lt;/p&gt;
&lt;p&gt;記事では高レベルな操作である NEST についても触れている。&lt;/p&gt;
&lt;h3 id="handling-jwt-authentication-with-asp.net-core-testserver-jason-mitchell"&gt;Handling JWT authentication with ASP.NET Core TestServer | Jason Mitchell&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://json.codes/posts/dotnet/handling-jwt-authentication-with-aspnetcore-testserver/"&gt;https://json.codes/posts/dotnet/handling-jwt-authentication-with-aspnetcore-testserver/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションのユニットテストを行う際にテストサーバーで JWT 認証を取り扱う方法について。&lt;/p&gt;
&lt;h3 id="how-to-build-a-shared-library-in-c-and-call-it-from-java-code"&gt;How to Build a Shared Library in C# and Call it From Java Code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;sixpeteunder/how-to-build-a-shared-library-in-c-sharp-and-call-it-from-java-code-6931260d01e5"&gt;https://medium.com/&amp;#64;sixpeteunder/how-to-build-a-shared-library-in-c-sharp-and-call-it-from-java-code-6931260d01e5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NativeAOT を使用して C# の共有ライブラリーを作り、Java から呼び出す方法について。&lt;/p&gt;
&lt;h3 id="understanding-the-dapr-workflow-engine-authoring-workflows-in.net-diagrid"&gt;Understanding the Dapr Workflow engine &amp;amp; authoring workflows in .NET | Diagrid&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.diagrid.io/blog/authoring-dapr-workflows-in-dotnet"&gt;https://www.diagrid.io/blog/authoring-dapr-workflows-in-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dapr Workflow のワークフローやアクティビティを .NET で実装する方法について。&lt;/p&gt;
&lt;h3 id="typed-exceptions-for-jsinterop-in-blazor-kristoffer-strubes-blog"&gt;Typed exceptions for JSInterop in Blazor - Kristoffer Strube’s Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kristoffer-strube.dk/post/typed-exceptions-for-jsinterop-in-blazor/"&gt;https://kristoffer-strube.dk/post/typed-exceptions-for-jsinterop-in-blazor/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor の JavaScript 相互運用で JavaScript 側で発生した例外を .NET 側で固有の例外の型として変換して取り扱う方法について。&lt;/p&gt;
&lt;h3 id="speech-recognition-in.net-maui-with-communitytoolkit.net-blog"&gt;Speech Recognition in .NET MAUI with CommunityToolkit - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/speech-recognition-in-dotnet-maui-with-community-toolkit/"&gt;https://devblogs.microsoft.com/dotnet/speech-recognition-in-dotnet-maui-with-community-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Community Toolkit の Speech-to-Text (音声認識) 機能の紹介記事。&lt;/p&gt;
&lt;h3 id="iterating-on-your-welcome-experience-feedback-visual-studio-blog"&gt;Iterating on your Welcome Experience feedback - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/welcome-feedback/"&gt;https://devblogs.microsoft.com/visualstudio/welcome-feedback/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio プレビューで導入されている新しいウェルカムページ(起動時のプロジェクト選択や作成などの画面)体験の紹介。&lt;/p&gt;
&lt;p&gt;新しいウェルカムページはより多くの要素を表示できるようになったことやレスポンシブになったこと、MRU リストの取り扱いなどについて。&lt;/p&gt;
&lt;h3 id="net-avaloniaui-7chatgpt-api"&gt;.NET + AvaloniaUI 制作日誌⑦（ChatGPT APIクライアントアプリ：最終回）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jun_murakami/articles/a2a30d11efd14a"&gt;https://zenn.dev/jun_murakami/articles/a2a30d11efd14a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia UI を使用して ChatGPT のクライアントアプリを作成する中での学びなどをつづった制作記録(の最終回)。&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;【C#】ソースジェネレータを使ってみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/dsyuuto/items/4c13cc2234980a906863"&gt;https://qiita.com/dsyuuto/items/4c13cc2234980a906863&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Git の情報を埋め込むコードを生成する Source Generator を作ってみるという記事。&lt;/p&gt;
&lt;h3 id="create-a-microsoft-power-app-for-your-asp.net-core-web-api-visual-studio-blog"&gt;Create a Microsoft Power App for your ASP.NET Core Web API - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/create-a-microsoft-power-app-for-your-asp-net-core-web-api/"&gt;https://devblogs.microsoft.com/visualstudio/create-a-microsoft-power-app-for-your-asp-net-core-web-api/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 preview 2 で追加された Power App との接続とカスタムコネクター作成のサポートで ASP.NET Core Web API による API を作成する手順の紹介。&lt;/p&gt;
&lt;h3 id="level-up-with-live-templates-in-jetbrains-rider-the.net-tools-blog"&gt;Level Up with Live Templates in JetBrains Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/30/level-up-with-live-templates-in-jetbrains-rider/"&gt;https://blog.jetbrains.com/dotnet/2023/05/30/level-up-with-live-templates-in-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider のライブテンプレートの活用について。&lt;/p&gt;
&lt;p&gt;記事ではライブテンプレートとは何か、作成の仕方、共有方法について触れている。&lt;/p&gt;
&lt;h3 id="doing-aes-encryption-correct-in-your.net-application"&gt;Doing AES Encryption Correct in Your .NET Application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://propertyguru.tech/doing-aes-encryption-correct-in-your-net-application-5d66168b5b44"&gt;https://propertyguru.tech/doing-aes-encryption-correct-in-your-net-application-5d66168b5b44&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET アプリケーションで AES 暗号化を行う方法について。&lt;/p&gt;
&lt;p&gt;記事では簡単なキーローテーションなどについても触れている。&lt;/p&gt;
&lt;h3 id="concurrent-b-trees-concurrentsorteddictionary-c.net"&gt;Concurrent B+ Trees — ConcurrentSortedDictionary c#/.net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;mkrebser/concurrent-b-trees-concurrentsorteddictionary-c-net-f7c1c2a84141"&gt;https://medium.com/&amp;#64;mkrebser/concurrent-b-trees-concurrentsorteddictionary-c-net-f7c1c2a84141&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ConcurrentDictionary をベースとした ConcurrentSortedDictionary の B+ ツリーでの実装詳細についての解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mkrebser/ConcurrentSortedDictionary"&gt;mkrebser/ConcurrentSortedDictionary: ConcurrentSortedDictionary implementation in (c#, .NET 7) . It is implemented using a concurrent B+Tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="c-worker-services-and-kubernetes-liveness-probes"&gt;C# worker services and Kubernetes Liveness probes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;james.matson_64120/c-worker-services-and-kubernetes-liveness-probes-538c6839bbb5"&gt;https://medium.com/&amp;#64;james.matson_64120/c-worker-services-and-kubernetes-liveness-probes-538c6839bbb5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ワーカーサービス (コンソールアプリや BackgroundService) で Kubernetes 向けの Liveness probe を実装する方法について。&lt;/p&gt;
&lt;h3 id="serilog-logging-and-ef-core-logging"&gt;Serilog logging and EF Core logging&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/serilog-logging-and-ef-core-logging-25hm"&gt;https://dev.to/karenpayneoregon/serilog-logging-and-ef-core-logging-25hm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Serilog を使用して Entity Framework Core のログを記録する方法について。&lt;/p&gt;
&lt;h3 id="getting.net-library-projects-to-output-dependent-assemblies"&gt;Getting .NET Library Projects to Output Dependent Assemblies&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2023/May/29/Getting-NET-Library-Projects-to-Output-Dependent-Assemblies"&gt;https://weblog.west-wind.com/posts/2023/May/29/Getting-NET-Library-Projects-to-Output-Dependent-Assemblies&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ライブラリーの出力として依存しているアセンブリーも出力する方法について。&lt;/p&gt;
&lt;p&gt;依存しているアセンブリーそのものは通常のユースケースでは必要にならないが、例えばプラグインのようなケースでは依存しているアセンブリーも必要となる。&lt;/p&gt;
&lt;h3 id="how-to-detect-globalization-invariant-mode-in.net-gerald-barre"&gt;How to detect Globalization-Invariant mode in .NET - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/detect-globalization-invariant-mode-in-dotnet.htm"&gt;https://www.meziantou.net/detect-globalization-invariant-mode-in-dotnet.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Globalization Invariant モードで実行されているかどうかを検出するテクニック。&lt;/p&gt;
&lt;h3 id="the-art-of-http-connection-pooling-how-to-optimize-your-connections-for-peak-performance-developer-support"&gt;The Art of HTTP Connection Pooling: How to Optimize Your Connections for Peak Performance - Developer Support&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/premier-developer/the-art-of-http-connection-pooling-how-to-optimize-your-connections-for-peak-performance/"&gt;https://devblogs.microsoft.com/premier-developer/the-art-of-http-connection-pooling-how-to-optimize-your-connections-for-peak-performance/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;クラウドサービスにおけるアクセスのピーク時にポートの枯渇によるエラーの事例とその対策としてのコネクションプールについて。&lt;/p&gt;
&lt;h3 id="publish-your-own-nuget-packages-to-github-nuget-registry-with-github-actions"&gt;Publish your own Nuget packages to Github Nuget Registry with Github actions.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://pasinduprabhashitha.medium.com/publish-your-own-nuget-packages-to-github-nuget-registry-with-github-actions-939b07e8b6f5"&gt;https://pasinduprabhashitha.medium.com/publish-your-own-nuget-packages-to-github-nuget-registry-with-github-actions-939b07e8b6f5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub の Package Registry に NuGet パッケージを発行する方法についての解説。&lt;/p&gt;
&lt;h3 id="net-micro-optimization-and-refactoring-trick-ndepend"&gt;.NET Micro-Optimization and Refactoring Trick - NDepend&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/net-micro-optimization-and-refactoring-trick/"&gt;https://blog.ndepend.com/net-micro-optimization-and-refactoring-trick/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dictionary で文字列をキーにする場合 &lt;code&gt;StringComparer.Ordinal&lt;/code&gt; を使用することで .NET Framework でのみ高速化されることと、それを ReSharper のパターン置き換え機能を使ってリファクタリングする方法を紹介。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;wasmtime に WASI-http 仕様が含まれるようになったことと、.NET で WASI-http を呼び出すサンプル実装。&lt;/p&gt;
&lt;!-- https://twitter.com/brendandburns/status/1664684609924378625?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The latest release of wasmtime now includes support for the WASI-http specification!&lt;br&gt;&lt;br&gt;Find examples for C, &lt;a href="https://twitter.com/golang?ref_src=twsrc%5Etfw"&gt;&amp;#64;golang&lt;/a&gt; and &lt;a href="https://twitter.com/dotnet?ref_src=twsrc%5Etfw"&gt;&amp;#64;dotnet&lt;/a&gt; below&lt;a href="https://t.co/XxawwrPeel"&gt;https://t.co/XxawwrPeel&lt;/a&gt;&lt;a href="https://t.co/vBtlAGwSQq"&gt;https://t.co/vBtlAGwSQq&lt;/a&gt;&lt;a href="https://t.co/qSnUbYut8W"&gt;https://t.co/qSnUbYut8W&lt;/a&gt;&lt;br&gt;&lt;br&gt;cc &lt;a href="https://twitter.com/stevesanderson?ref_src=twsrc%5Etfw"&gt;&amp;#64;stevesanderson&lt;/a&gt; &lt;a href="https://twitter.com/davidfowl?ref_src=twsrc%5Etfw"&gt;&amp;#64;davidfowl&lt;/a&gt;&lt;/p&gt;&amp;mdash; brendandburns (&amp;#64;brendandburns) &lt;a href="https://twitter.com/brendandburns/status/1664684609924378625?ref_src=twsrc%5Etfw"&gt;June 2, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;AWS Lambda の .NET デモアプリでのベンチマークに .NET 8 Native AOT の結果が追加されたという話。&lt;/p&gt;
&lt;!-- https://twitter.com/plantpowerjames/status/1663601337945280512?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Benchmarks live for .NET 8 native AOT on AWS Lambda, for single purpose handers and running ASP NET on Lambda.&lt;br&gt;&lt;br&gt;Performance gains across the board. An important thing to point out, cold starts account for less than 1% of the total invokes.&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/aws?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#aws&lt;/a&gt;&lt;a href="https://t.co/ae4ILrapxo"&gt;https://t.co/ae4ILrapxo&lt;/a&gt;&lt;/p&gt;&amp;mdash; James Eastham (&amp;#64;plantpowerjames) &lt;a href="https://twitter.com/plantpowerjames/status/1663601337945280512?ref_src=twsrc%5Etfw"&gt;May 30, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-05-27: Microsoft Build 2023, How NPOI succeeds, ILSpy 8.0</title>
			<link>/2023/05/27/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/05/27/updates</guid>
			<pubDate>Sat, 27 May 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="microsoft-build-2023"&gt;Microsoft Build 2023&lt;/h3&gt;
&lt;p&gt;Microsoft Build 2023 での .NET 関連のセッションのレコーディング。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLdo4fOcmZ0oV0mbay2wxFS_ZVRg6cxjdM"&gt;.NET at Microsoft Build 2023 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/52f77215-c8fa-49eb-844b-46ad4b006987?source=sessions"&gt;All things client and mobile app development with .NET MAUI - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/7ac85686-2fee-4ce5-82d0-c239a005eb7e?source=sessions"&gt;Blazor + .NET MAUI – the perfect “hybrid” - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/5ee143d2-5336-4e2f-b345-7daf606e7629?source=sessions"&gt;Advanced developer tips and tricks in Visual Studio - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/bac92828-29c3-4043-b886-14b181d1ec11?source=sessions"&gt;Learn Live: Build a web app with Blazor - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/c4fe357e-2bb2-4201-a956-ca35c3497e06?source=sessions"&gt;Kickstart your .NET modernization journey with the RWA pattern - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/2215f254-3fc3-4529-aa2f-3578b3bfdac9?source=sessions"&gt;What's new in .NET Multi-platform App UI (MAUI), Q&amp;amp;A - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/4cfe374e-a9a0-4a82-a9b6-890bd90df931?source=sessions"&gt;ASP.NET Core and Blazor futures, Q&amp;amp;A - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/28588f70-fb54-447a-b778-7ef02c8ffdf8?source=sessions"&gt;Deep dive into .NET performance and native AOT - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/da223f08-abb2-4f38-87de-0856ffa22317?source=sessions"&gt;What's new in .NET 8 for Web, frontends, backends, and futures? - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/7bdbc522-10ed-4114-a0f1-afd45acbf7ee?source=sessions"&gt;What’s new in C# 12 and beyond - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/92aa8923-2720-49a4-81a3-d117f08488fe?source=sessions"&gt;Cloud-native development with .NET 8 - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/01f6a7ae-d371-43d5-9e6c-9ed2cf853d94?source=sessions"&gt;Inject the power of the cloud and AI into your development workflow - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://build.microsoft.com/en-US/sessions/5017d756-1ed1-468c-bd43-1ac98079f71e?source=sessions"&gt;New developer experiences in Windows - Microsoft Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="how-npoi-succeeds"&gt;How NPOI succeeds&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://tonyqus.medium.com/how-npoi-succeeds-67ceb7333eb"&gt;https://tonyqus.medium.com/how-npoi-succeeds-67ceb7333eb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NPOI の開発者による NPOI の開発での目標、成功、学びといったことについて。&lt;/p&gt;
&lt;h3 id="release-ilspy-8.0-icsharpcodeilspy"&gt;Release ILSpy 8.0 · icsharpcode/ILSpy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/icsharpcode/ILSpy/releases/tag/v8.0"&gt;https://github.com/icsharpcode/ILSpy/releases/tag/v8.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ILSpy 8.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;C# 10 や 11 といった新しい言語の機能に対応したほか、様々な改善と修正が含まれている。&lt;/p&gt;
&lt;p&gt;またこのリリースで .NET Framework から .NET 6 に移行し、実行には .NET 6 のランタイムが必要となる。&lt;/p&gt;
&lt;h3 id="bringing-the-power-of-ai-to-windows-11-unlocking-a-new-era-of-productivity-for-customers-and-developers-with-windows-copilot-and-dev-home"&gt;Bringing the power of AI to Windows 11 – unlocking a new era of productivity for customers and developers with Windows Copilot and Dev Home&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blogs.windows.com/windowsdeveloper/2023/05/23/bringing-the-power-of-ai-to-windows-11-unlocking-a-new-era-of-productivity-for-customers-and-developers-with-windows-copilot-and-dev-home/"&gt;https://blogs.windows.com/windowsdeveloper/2023/05/23/bringing-the-power-of-ai-to-windows-11-unlocking-a-new-era-of-productivity-for-customers-and-developers-with-windows-copilot-and-dev-home/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Build 2023 で公開された Windows 11 に導入予定のコンシューマー向け、開発者向けアップデートの発表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows Copilot&lt;/li&gt;
&lt;li&gt;Bing Chat プラグインサポート&lt;/li&gt;
&lt;li&gt;プラットフォーム横断する AI 開発の Hybrid AI ループと新しいシリコンのサポート&lt;/li&gt;
&lt;li&gt;Dev Home
&lt;ul&gt;
&lt;li&gt;ダッシュボード&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dev Drive&lt;/li&gt;
&lt;li&gt;新しい WinGet による構成&lt;/li&gt;
&lt;li&gt;Windows Terminal の GitHub Copilot X 連携&lt;/li&gt;
&lt;li&gt;Windows の改善
&lt;ul&gt;
&lt;li&gt;タスクバーの改善: グループ化解除、日付の非表示、タスクの終了&lt;/li&gt;
&lt;li&gt;エクスプローラーでの tar, 7-Zip, RAR, gz などのサポート&lt;/li&gt;
&lt;li&gt;Windows Terminal のタブの別ウィンドウ化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows on Arm
&lt;ul&gt;
&lt;li&gt;Visual Studio での .NET MAUI、Linux C++ 開発サポート&lt;/li&gt;
&lt;li&gt;LLVM v12, Node.js, WiX でのサポート&lt;/li&gt;
&lt;li&gt;Qt, CMake, Bazel, OpenSSL, OpenBLAS, Python といったミドルウェアのサポート&lt;/li&gt;
&lt;li&gt;Unity Player のサポート&lt;/li&gt;
&lt;li&gt;GCC, Flutter, PyTorch, GIMP のサポートがまもなく&lt;/li&gt;
&lt;li&gt;その他サポートされているアプリケーションの紹介&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Microsoft Store のアップデート
&lt;ul&gt;
&lt;li&gt;Microsoft Store AI Hub&lt;/li&gt;
&lt;li&gt;Microsoft Store AI 生成キーワード&lt;/li&gt;
&lt;li&gt;AI 生成レビューサマリー&lt;/li&gt;
&lt;li&gt;Microsoft Store Ads の地域の拡大&lt;/li&gt;
&lt;li&gt;アプリのバックアップと復元&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="dev-drive-and-copy-on-write-for-developer-performance-engineeringmicrosoft"&gt;Dev Drive and Copy-on-Write for Developer Performance - Engineering&amp;#64;Microsoft&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/engineering-at-microsoft/dev-drive-and-copy-on-write-for-developer-performance/"&gt;https://devblogs.microsoft.com/engineering-at-microsoft/dev-drive-and-copy-on-write-for-developer-performance/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dev Drive と Copy-on-Write による開発パフォーマンスについての解説。&lt;/p&gt;
&lt;p&gt;Dev Drive は開発者向けのファイルの取り扱い、パフォーマンスの向上を目的としたドライブ。Dev Drive はWindows 11 23H2 で導入予定となっており現在 Windows Insider Build ですでに利用可能となっている。&lt;/p&gt;
&lt;p&gt;Dev Drive はファイルシステムとして ReFS を採用することで、Copy-on-Write といった機能の恩恵を受けることができ、記事では内部テストでの効果、CoW の解説、 NuGet パッケージの紹介や、パッケージディレクトリの移動方法といったことを説明している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/CopyOnWrite"&gt;microsoft/CopyOnWrite: .NET library that encapsulates OS and filesystem differences in the ability to create Copy-on-Write file links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="dev-drive-for-performance-improvements-in-visual-studio-and-dev-boxes-visual-studio-blog"&gt;Dev Drive for Performance Improvements in Visual Studio and Dev Boxes! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/devdrive/"&gt;https://devblogs.microsoft.com/visualstudio/devdrive/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows に導入予定の Dev Drive によって Visual Studio と Dev Box でのパフォーマンスの向上についての解説。&lt;/p&gt;
&lt;p&gt;Dev Drive を使用することでパフォーマンスが平均25%程度向上するとのこと。&lt;/p&gt;
&lt;h3 id="rider-2023.2-eap-2-hot-reload-for-maui-reworked-build-tool-window-improvements-for-source-generators-and-more-the.net-tools-blog"&gt;Rider 2023.2 EAP 2: Hot Reload for MAUI, Reworked Build Tool Window, Improvements for Source Generators, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/22/rider-2023-2-eap-2/"&gt;https://blog.jetbrains.com/dotnet/2023/05/22/rider-2023-2-eap-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.2 EAP 2 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C# のアップデート&lt;/li&gt;
&lt;li&gt;ビルドツールウィンドウの刷新&lt;/li&gt;
&lt;li&gt;MAUI の XAML ホットリロード&lt;/li&gt;
&lt;li&gt;New UI でのウィンドウの色付け&lt;/li&gt;
&lt;li&gt;Source Generator の改善&lt;/li&gt;
&lt;li&gt;Rider の Feature Trainer (機能の紹介)&lt;/li&gt;
&lt;li&gt;設定同期プラグイン&lt;/li&gt;
&lt;li&gt;その他改善と不具合の修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-version-17.6.2-visual-studio-2022-release-notes"&gt;Visual Studio 2022 version 17.6.2 - Visual Studio 2022 Release Notes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes#17.6.2"&gt;https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes#17.6.2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="release-v1.4-experimental1-microsoftwindowsappsdk"&gt;Release v1.4-experimental1 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4-exp1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4-exp1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK v1.4-experimental1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンではいくつかの不具合の修正と試験的な API の追加や変更が含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="the-api-verifier-a-new-era-for-resharper-plugins-the.net-tools-blog"&gt;The API Verifier: A New Era for ReSharper Plugins | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/26/the-api-verifier/"&gt;https://blog.jetbrains.com/dotnet/2023/05/26/the-api-verifier/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper に組み込まれた、インストール時にプラグインの API を検証して互換性を確認する仕組みについて。&lt;/p&gt;
&lt;h3 id="cc-asyncawait"&gt;【C#】C# の async/await は実際にどうやって動いているか。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/05/27/152855"&gt;https://blog.neno.dev/entry/2023/05/27/152855&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# での async/await が実際にどのように展開され、実行されているのかを詳しく解説している。&lt;/p&gt;
&lt;h3 id="introducing-auth0-templates-for.net"&gt;Introducing Auth0 Templates for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://auth0.com/blog/introducing-auth0-templates-for-dotnet/"&gt;https://auth0.com/blog/introducing-auth0-templates-for-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 向けの Auth0 を使用したテンプレートがリリースされた。&lt;/p&gt;
&lt;p&gt;ASP.NET Core と Blazor で Auth0 を利用するテンプレートが提供されている。&lt;/p&gt;
&lt;h3 id="turbocharge-your-visual-studio-experience-with-microsoft-dev-box-visual-studio-blog"&gt;Turbocharge your Visual Studio experience with Microsoft Dev Box - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/turbocharge-your-visual-studio-experience-with-microsoft-dev-box/"&gt;https://devblogs.microsoft.com/visualstudio/turbocharge-your-visual-studio-experience-with-microsoft-dev-box/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dev Box での Visual Studio の体験の向上について。&lt;/p&gt;
&lt;p&gt;Dev Box にサインインしたアカウントでの Visual Studio の自動サインインや Git Credentials Manager の改善予定、Azure Marketplace Image の改善など。&lt;/p&gt;
&lt;h3 id="making-authenticated-cross-origin-requests-with-asp.net-core-identity"&gt;Making authenticated cross-origin requests with ASP.NET Core Identity&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/making-authenticated-cross-origin-requests-with-aspnetcore-identity/"&gt;https://andrewlock.net/making-authenticated-cross-origin-requests-with-aspnetcore-identity/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Identity を使用して、クロスオリジンな認証リクエストを可能にする実装について。&lt;/p&gt;
&lt;h3 id="good-blazor-components-are"&gt;Good (Blazor) Components are... ?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jonhilton.net/good-blazor-components/"&gt;https://jonhilton.net/good-blazor-components/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;良い Blazor コンポーネントを作ることについて。&lt;/p&gt;
&lt;p&gt;可能な限り小さくする、再利用できるようにする、ビジネスロジックを別コンポーネントにするといったことを紹介している。&lt;/p&gt;
&lt;h3 id="visual-studio-code-snippet-to-make-urls-relative"&gt;Visual Studio Code snippet to make URLs relative&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ploeh.dk/2023/05/23/visual-studio-code-snippet-to-make-urls-relative/"&gt;https://blog.ploeh.dk/2023/05/23/visual-studio-code-snippet-to-make-urls-relative/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code のスニペットを使用して範囲選択した URL を相対パスに書き換える方法の紹介。&lt;/p&gt;
&lt;h3 id="how-to-improve-memory-allocation-when-creating-httpcontent"&gt;How to improve memory allocation when creating HttpContent&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://hashnode.devindran.com/how-to-improve-memory-allocation-when-creating-httpcontent"&gt;https://hashnode.devindran.com/how-to-improve-memory-allocation-when-creating-httpcontent&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HttpContent を作る際のメモリーアロケーションを削減するための方法を紹介。&lt;/p&gt;
&lt;p&gt;記事では CommunityToolkit.HighPerformance の ArrayPoolBufferWriter と ReadOnlyMemoryContent を使用した方法、RecyclableMemoryStream を使用した方法を紹介している。&lt;/p&gt;
&lt;h3 id="refactor-your.net-http-clients-to-typed-http-clients"&gt;Refactor your .NET HTTP Clients to Typed HTTP Clients&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://timdeschryver.dev/blog/refactor-your-net-http-clients-to-typed-http-clients#refactor-to-ihttpclientfactory"&gt;https://timdeschryver.dev/blog/refactor-your-net-http-clients-to-typed-http-clients#refactor-to-ihttpclientfactory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HttpClient を使用した HTTP クライアントをリファクタリングして型のあるクライアントを作っていくことについて。&lt;/p&gt;
&lt;h3 id="net-3-3"&gt;.NET の 3 日間 ～3 コミュニティ合同イベント～&lt;/h3&gt;
&lt;p&gt;Fukuoka.NET（ふくてん）、.NETラボ、C# Tokyo の3コミュニティーの合同の .NET イベント。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotnet-communities.connpass.com/event/277868/"&gt;.NET の 3 日間 (1 日目) ～3 コミュニティ合同イベント～ (2023/05/31 19:00〜)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnet-communities.connpass.com/event/277869/"&gt;.NET の 3 日間 (2 日目) ～3 コミュニティ合同イベント～ (2023/06/01 19:00〜)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnet-communities.connpass.com/event/277870/"&gt;.NET の 3 日間 (3 日目) ～3 コミュニティ合同イベント～ (2023/06/02 19:00〜)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="the-journey-to-secure-the-software-supply-chain-at-microsoft-engineeringmicrosoft"&gt;The Journey to Secure the Software Supply Chain at Microsoft - Engineering&amp;#64;Microsoft&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/engineering-at-microsoft/the-journey-to-secure-the-software-supply-chain-at-microsoft/"&gt;https://devblogs.microsoft.com/engineering-at-microsoft/the-journey-to-secure-the-software-supply-chain-at-microsoft/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft におけるソフトウェアサプライチェーンのセキュリティの取り組みについての紹介。&lt;/p&gt;
&lt;h3 id="queryable-postgresql-arrays-in-ef-core-8.0"&gt;Queryable PostgreSQL arrays in EF Core 8.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.roji.org/queryable-pg-arrays-in-ef8"&gt;https://www.roji.org/queryable-pg-arrays-in-ef8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 8.0 で導入されるクエリー可能なコレクションプリミティブの PostgreSQL でのサポートについての解説。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;空の System.Linq クラスを含むコードを含めておくことで LINQ 禁止にするというテクニックがあったという話。&lt;/p&gt;
&lt;!-- https://twitter.com/ufcpp/status/1661186143776325632?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;&lt;a href="https://t.co/UnjysNufjW"&gt;https://t.co/UnjysNufjW&lt;/a&gt;&lt;br&gt;「BannedAnalyzerに置き換える」みたいなプルリクで初めて気付いたけど、こんなファイル用意してLinq利用禁止してたんだ。&lt;/p&gt;&amp;mdash; ++C++; // 管理人: 岩永 (&amp;#64;ufcpp) &lt;a href="https://twitter.com/ufcpp/status/1661186143776325632?ref_src=twsrc%5Etfw"&gt;May 24, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;.NET 8 では Microsoft.Extensions に Resilience、Compliance、Telemetry が追加されるという話。&lt;/p&gt;
&lt;!-- https://twitter.com/davidpine7/status/1661084920553283590?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Watching &lt;a href="https://twitter.com/bradygaster?ref_src=twsrc%5Etfw"&gt;&amp;#64;bradygaster&lt;/a&gt; present on the cloud-native story for &lt;a href="https://twitter.com/dotnet?ref_src=twsrc%5Etfw"&gt;&amp;#64;dotnet&lt;/a&gt;! Here&amp;#39;s what&amp;#39;s imminent for .NET 8:&lt;br&gt;&lt;br&gt;- Resilience&lt;br&gt;- Compliance&lt;br&gt;- Telemetry &lt;a href="https://t.co/6SZgTueKjn"&gt;pic.twitter.com/6SZgTueKjn&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Pine (&amp;#64;davidpine&amp;#64;dotnet.social) 🇺🇦 (&amp;#64;davidpine7) &lt;a href="https://twitter.com/davidpine7/status/1661084920553283590?ref_src=twsrc%5Etfw"&gt;May 23, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-05-21: Visual Studio 2022 version 17.6, .NET 8 Preview 4, Rx.NET v6.0</title>
			<link>/2023/05/21/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/05/21/updates</guid>
			<pubDate>Sun, 21 May 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="visual-studio-2022-17.6-now-available-visual-studio-blog"&gt;Visual Studio 2022 - 17.6 Now Available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-6-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-6-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性の向上
&lt;ul&gt;
&lt;li&gt;パフォーマンスの改善
&lt;ul&gt;
&lt;li&gt;ソリューションのオープン、クローズの速度向上&lt;/li&gt;
&lt;li&gt;Performance Profiler の収集の停止時速度向上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;エディターの強化
&lt;ul&gt;
&lt;li&gt;スティッキースクロール&lt;/li&gt;
&lt;li&gt;All-in-One 検索&lt;/li&gt;
&lt;li&gt;ブレースペアの色付け&lt;/li&gt;
&lt;li&gt;スペルチェッカー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;デバッグと診断機能
&lt;ul&gt;
&lt;li&gt;ブレークポイントグループ&lt;/li&gt;
&lt;li&gt;.NET リモートデバッグ&lt;/li&gt;
&lt;li&gt;Visual Studio プロファイラー&lt;/li&gt;
&lt;li&gt;Visual Studio プロファイラーでのインストルメンテーション&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Git コラボレーションツール
&lt;ul&gt;
&lt;li&gt;マージダイアログの改善&lt;/li&gt;
&lt;li&gt;Git 行アンステージング&lt;/li&gt;
&lt;li&gt;GitHub Issues へのリンク&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;モダン .NET とクラウドネイティブアプリの構築
&lt;ul&gt;
&lt;li&gt;Android Manifest Editor&lt;/li&gt;
&lt;li&gt;JavaScript/TypeScript での CodeLens&lt;/li&gt;
&lt;li&gt;JavaScript/TypeScript のシンタックスハイライト&lt;/li&gt;
&lt;li&gt;ASP.NET Core の Web API 開発&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ゲーム開発の効率化
&lt;ul&gt;
&lt;li&gt;Unreal Engine ログビューア&lt;/li&gt;
&lt;li&gt;Tim Jones による HLSL ツール拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ クロスプラットフォームコードベースの持ち込み
&lt;ul&gt;
&lt;li&gt;CMake デバッガー&lt;/li&gt;
&lt;li&gt;Unix 向けリモートファイルエクスプローラー&lt;/li&gt;
&lt;li&gt;STM32CubeIDE プロジェクトのインポート&lt;/li&gt;
&lt;li&gt;Vcpkg&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;エンタープライズ管理
&lt;ul&gt;
&lt;li&gt;組織によるイントラネットウェブサイトでの Visual Studio レイアウトのホストとデプロイ&lt;/li&gt;
&lt;li&gt;リポジトリーの任意の場所で複数の .vsconfig をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-8-preview-4.net-blog"&gt;Announcing .NET 8 Preview 4 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-4/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-4/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MSBuild: New, modern terminal build output&lt;/li&gt;
&lt;li&gt;MSBuild: 新しい、モダンなターミナルビルド出力&lt;/li&gt;
&lt;li&gt;SDK: 出力パスの単純化のアップデート
&lt;ul&gt;
&lt;li&gt;artifacts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;テンプレートエンジン: Nuget.org からのパッケージのセキュアな体験&lt;/li&gt;
&lt;li&gt;NuGet: Linux での署名されたパッケージの検証&lt;/li&gt;
&lt;li&gt;NuGet: セキュリティー脆弱性に関するパッケージ依存関係の監査&lt;/li&gt;
&lt;li&gt;ライブラリー: UTF-8 サポートの改善
&lt;ul&gt;
&lt;li&gt;IUtf8SpanFormattable&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;時刻の抽象化の導入
&lt;ul&gt;
&lt;li&gt;TimeProvider&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;System.Runtime.Intrinsics.Vector512 と AVX-512&lt;/li&gt;
&lt;li&gt;Native AOT の改善&lt;/li&gt;
&lt;li&gt;Linux distro バージョンサポート&lt;/li&gt;
&lt;li&gt;System.Text.Json: 読み取り専用メンバーの収集&lt;/li&gt;
&lt;li&gt;System.Text.Json 改善
&lt;ul&gt;
&lt;li&gt;JsonSerializer.IsReflectionEnabledByDefault&lt;/li&gt;
&lt;li&gt;JsonSerializerOptions.TypeInfoResolverChain&lt;/li&gt;
&lt;li&gt;JsonSerializerOptions.TryGetTypeInfo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;コード生成
&lt;ul&gt;
&lt;li&gt;連続したレジスターの割り当て&lt;/li&gt;
&lt;li&gt;最適化された ThreadStatic フィールドアクセス&lt;/li&gt;
&lt;li&gt;Arm64&lt;/li&gt;
&lt;li&gt;コードのベクトル化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ef-core-8-preview-4-primitive-collections-and-improved-contains.net-blog"&gt;EF Core 8 Preview 4: Primitive collections and improved Contains - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-4/"&gt;https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 8 Preview 4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは LINQ 内での Contains の変換のサポート、OPENJSON のサポート、接続先 SQL Server の互換性レベルの指定、プリミティブコレクションのカラムサポートなどが含まれている。&lt;/p&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-4.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 4 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-4/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 4 での ASP.NET Core のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blazor
&lt;ul&gt;
&lt;li&gt;Blazor コンポーネントのストリーミングレンダリング&lt;/li&gt;
&lt;li&gt;Blazor SSR のフォーム送信のハンドリング&lt;/li&gt;
&lt;li&gt;Blazor での名前付き要素へのルート&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly アプリの Webcli パッケージング&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API オーサリング
&lt;ul&gt;
&lt;li&gt;Minimal APIs でのフォームバインディングの拡張サポート&lt;/li&gt;
&lt;li&gt;.http ファイルを含む API プロジェクトテンプレート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Native AOT
&lt;ul&gt;
&lt;li&gt;コンパイル時生成 Minimal APIs でのロギングと例外ハンドリング&lt;/li&gt;
&lt;li&gt;ASP.NET Core トップレベル API のトリム警告アノテーション&lt;/li&gt;
&lt;li&gt;構成可能な HTTPS サポートでのアプリサイズの削減&lt;/li&gt;
&lt;li&gt;Worker サービステンプレートの更新&lt;/li&gt;
&lt;li&gt;スリムビルダーに構成されたデフォルトのサービスの追加&lt;/li&gt;
&lt;li&gt;API テンプレート JSON 構成の変更&lt;/li&gt;
&lt;li&gt;コンパイラー生成 IAsyncEnumerable の特殊な型の JSON シリアライズサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;認証と認可
&lt;ul&gt;
&lt;li&gt;アイデンティティ API エンドポイント&lt;/li&gt;
&lt;li&gt;IAuthorizationRequirementData でのカスタム認可ポリシーのサポート向上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core メトリクス&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rx.net-v6.0-now-available-endjin"&gt;Rx.NET v6.0 Now Available | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2023/05/rx-dotnet-v6-released"&gt;https://endjin.com/blog/2023/05/rx-dotnet-v6-released&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rx.NET v6.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 6/7 のサポートやトリミングのサポート、snupkg を使用したシンボルの提供、その他の改善が含まれている。&lt;/p&gt;
&lt;p&gt;記事では Async Rx.NET のアルファ版の案内や v6.0 での更新点について、この先についてといったことについて書かれている。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.7-preview-1-is-here-visual-studio-blog"&gt;Visual Studio 2022 17.7 Preview 1 is here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-preview-1-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-preview-1-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.7 Preview 1 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性
&lt;ul&gt;
&lt;li&gt;ファイルの比較&lt;/li&gt;
&lt;li&gt;マルチブランチグラフおよび Git リポジトリの改善&lt;/li&gt;
&lt;li&gt;テキストのコピーとインデントの削除&lt;/li&gt;
&lt;li&gt;All-in-One 検索強化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET とクラウド開発
&lt;ul&gt;
&lt;li&gt;IntelliTest の .NET 6 および .NET Standard でのサポート&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly の Azure Static Web Apps への発行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ とゲーム開発
&lt;ul&gt;
&lt;li&gt;Unreal Engine C++ マクロフォーマット&lt;/li&gt;
&lt;li&gt;Unreal Engine C++ 名前規約チェッカー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="hot-reload-supports-modifying-generics.net-blog"&gt;Hot Reload Supports Modifying Generics! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/hot-reload-generics/"&gt;https://devblogs.microsoft.com/dotnet/hot-reload-generics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ジェネリクスのコードを変更した際のホットリロードが .NET 8 でサポートされることについての解説。&lt;/p&gt;
&lt;p&gt;以下のシナリオでのホットリロードがサポートされるようになる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新しい (静的, インスタンス) メソッドの(非)ジェネリック型への追加&lt;/li&gt;
&lt;li&gt;新しい (静的, インスタンス) ジェネリックメソッドの(非)ジェネリック型への追加&lt;/li&gt;
&lt;li&gt;(非)ジェネリック型の既存の (静的, インスタンス) メソッドの編集&lt;/li&gt;
&lt;li&gt;(非)ジェネリック型の既存の (静的, インスタンス) ジェネリックメソッドの編集&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="client-support-for-calling-wcfcorewcf-with-system.servicemodel-6.0-is-here.net-blog"&gt;Client Support for Calling WCF/CoreWCF with System.ServiceModel 6.0 Is Here! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/wcf-client-60-has-been-released/"&gt;https://devblogs.microsoft.com/dotnet/wcf-client-60-has-been-released/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WCF/CoreWCF を呼び出す WCF クライアントである System.ServiceModel の 6.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;System.ServiceModel は Microsoft によりサポートされる WCF クライアントライブラリー。&lt;/p&gt;
&lt;p&gt;このリリースでは NetNamedPipe サポートの追加、.NET Standard および .NET Framework サポートの削除、System.ServiceModel.Duplex および Security の非推奨化といったアップデートが含まれている。&lt;/p&gt;
&lt;h3 id="resharper-and-rider-2023.1.2-more-bug-fixes-released-the.net-tools-blog"&gt;ReSharper and Rider 2023.1.2 – More Bug-fixes Released | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/17/rsrp-and-rider-2023-1-2-bug-fixes/"&gt;https://blog.jetbrains.com/dotnet/2023/05/17/rsrp-and-rider-2023-1-2-bug-fixes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2023.1.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは様々な不具合の修正が行われている。&lt;/p&gt;
&lt;h3 id="xamarin.forms-and-essentials-now-target-android-13-in-preview-xamarin-blog"&gt;Xamarin.Forms and Essentials now target Android 13 (in Preview) - Xamarin Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/xamarin/xamarin-forms-essentials-target-android13-preview/"&gt;https://devblogs.microsoft.com/xamarin/xamarin-forms-essentials-target-android13-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Xamarin.Forms と Essentials が Android 13 をターゲットにできるようになった(プレビュー)。&lt;/p&gt;
&lt;p&gt;.NET と .NET MAUI では Android 13 がすでにサポートされている。&lt;/p&gt;
&lt;h3 id="get-ready-for-visual-studio-at-build-2023-join-tens-of-thousands-online-visual-studio-blog"&gt;Get Ready for Visual Studio at Build 2023: Join Tens of Thousands Online! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/get-ready-for-visual-studio-at-build-2023-join-tens-of-thousands-online/"&gt;https://devblogs.microsoft.com/visualstudio/get-ready-for-visual-studio-at-build-2023-join-tens-of-thousands-online/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5月23日から25日にかけて行われる Microsoft Build 2023 での Visual Studio に関連するセッションなどの紹介。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="object-detection-in-ml.net-model-builder.net-blog"&gt;Object Detection in ML.NET Model Builder - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/object-detection-ml-dotnet-model-builder/"&gt;https://devblogs.microsoft.com/dotnet/object-detection-ml-dotnet-model-builder/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET Model Builder を使用してオブジェクト検出を行う紹介。&lt;/p&gt;
&lt;h3 id="get-started-with-chatgpt-in.net.net-blog"&gt;Get started with ChatGPT in .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/get-started-chatgpt-azure-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/get-started-chatgpt-azure-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET から OpenAI API を使用するシリーズ。ChatGPT (チャットとプロンプト) についての解説。&lt;/p&gt;
&lt;h3 id="sticky-scroll-stay-in-the-right-context-visual-studio-blog"&gt;Sticky Scroll: Stay in the Right Context - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/sticky-scroll-stay-in-the-right-context/"&gt;https://devblogs.microsoft.com/visualstudio/sticky-scroll-stay-in-the-right-context/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 で追加されたスティッキースクロール機能の紹介。&lt;/p&gt;
&lt;h3 id="calendar-control-from-scratch-on.net-maui"&gt;Calendar Control from scratch on .NET MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/serhii_korol_ab7776c50dba/calendar-control-from-scratch-on-net-maui-5dh6"&gt;https://dev.to/serhii_korol_ab7776c50dba/calendar-control-from-scratch-on-net-maui-5dh6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI でカレンダーコントロールを一から作ってみるという記事。&lt;/p&gt;
&lt;h3 id="using-octokit.graphql-to-interact-with-the-github-discussions-api"&gt;Using Octokit.GraphQL to interact with the GitHub discussions API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/using-octokit-graphql-to-interact-with-the-github-discussions-api/"&gt;https://andrewlock.net/using-octokit-graphql-to-interact-with-the-github-discussions-api/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Octokit.GraphQL NuGet パッケージを使用して GitHub ディスカッションの API を使用する方法について。&lt;/p&gt;
&lt;p&gt;記事ではディスカッションの取得や作成、レートリミットなどについて解説している。&lt;/p&gt;
&lt;h3 id="integration-tests-for-aws-serverless-solution"&gt;Integration tests for AWS serverless solution&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/ohalay/integration-tests-for-aws-serverless-solution-12aj"&gt;https://dev.to/ohalay/integration-tests-for-aws-serverless-solution-12aj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS サーバーレス構成のアプリケーションを統合テストする方法について。&lt;/p&gt;
&lt;p&gt;LocalStack を使用してローカルコンテナーを動かすことでユニットテストを実行する方法を紹介している。&lt;/p&gt;
&lt;h3 id="how-to-control-visual-studio-from-an-external-application-gerald-barre"&gt;How to Control Visual Studio from an external application - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/control-visual-studio-from-an-external-application.htm"&gt;https://www.meziantou.net/control-visual-studio-from-an-external-application.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;COM 経由で Visual Studio のインスタンスを取得し、操作する方法について。&lt;/p&gt;
&lt;h3 id="are-compiled-queries-really-efficient-on-c-ef-core"&gt;Are compiled queries really efficient on C# EF Core?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://goatreview.com/are-compiled-queries-efficient-efcore/"&gt;https://goatreview.com/are-compiled-queries-efficient-efcore/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core のコンパイル済みクエリーは効果的なのかどうかについて。&lt;/p&gt;
&lt;p&gt;コンパイル済みクエリーは特定のパターンで効果的ではあるがそうでないパターンも多いため、利用にはテストすることやクエリーそのものを見直すことなどをすめてている。&lt;/p&gt;
&lt;h3 id="concurrent-hosted-service-start-and-stop-in.net-8-steve-gordon-code-with-steve"&gt;Concurrent Hosted Service Start and Stop in .NET 8 - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/concurrent-hosted-service-start-and-stop-in-dotnet-8"&gt;https://www.stevejgordon.co.uk/concurrent-hosted-service-start-and-stop-in-dotnet-8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Microsoft.Extensions.Hosting ではホストの起動と停止が並列化されることについて。&lt;/p&gt;
&lt;p&gt;記事では開始と停止が並列化されることによる影響や並列化を無効にする方法などを解説している。&lt;/p&gt;
&lt;h3 id="netnugetglobal-using"&gt;.NETのNuGetパッケージからアプリにglobal usingを自動で追加する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2023-05-15-global-usings"&gt;https://zenn.dev/nuits_jp/articles/2023-05-15-global-usings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;インストールすることで global using が自動で追加されるような NuGet パッケージを作る方法について。&lt;/p&gt;
&lt;h3 id="microsoft-build-cloud-skills-challenge"&gt;Microsoft Build | Cloud Skills Challenge&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.microsoft.com/ja-JP/cloudskillschallenge/build/officialrules/2022"&gt;https://www.microsoft.com/ja-JP/cloudskillschallenge/build/officialrules/2022&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Build 2023 に合わせたキャンペーン。チャレンジを完了することで Microsoft 認定資格試験を一つ無料で受ける権利をもらえる。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="drasticactionsllamamaui"&gt;drasticactions/LLaMAMaui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/llamamaui"&gt;https://github.com/drasticactions/llamamaui&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;llama.cpp の .NET MAUI 向けバインディング。&lt;/p&gt;
&lt;!-- https://twitter.com/drasticactions/status/1658867229637898240?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I wrote a small MAUI app to show off llama.cpp .NET Bindings running on more platforms. It works well! Although with multi-gig file sizes for the models, it&amp;#39;s not that great on phones. Still, it does work though! 😉&lt;a href="https://t.co/rZsq6GpvNQ"&gt;https://t.co/rZsq6GpvNQ&lt;/a&gt; &lt;a href="https://t.co/v2cgs2uBWO"&gt;pic.twitter.com/v2cgs2uBWO&lt;/a&gt;&lt;/p&gt;&amp;mdash; Drastic Actions (&amp;#64;drasticactions) &lt;a href="https://twitter.com/drasticactions/status/1658867229637898240?ref_src=twsrc%5Etfw"&gt;May 17, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="introduction-rust-for-c.net-developers"&gt;Introduction - Rust for C#/.NET Developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://microsoft.github.io/rust-for-dotnet-devs/latest/"&gt;https://microsoft.github.io/rust-for-dotnet-devs/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C#/.NET 開発者向けの Rust 解説ドキュメント。&lt;/p&gt;
&lt;p&gt;.NET のものが Rust ではどのように表現されるのかといったことを説明している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/rust-for-dotnet-devs"&gt;microsoft/rust-for-dotnet-devs: Rust for C#/.NET Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;ClaimsPrincipal のデバッガー上での表示がマシになるという話。ASP.NET Core のほかの型も対応するとのこと。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/48205"&gt;ASP.NET Core ❤️ Debugging · Issue #48205 · dotnet/aspnetcore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://twitter.com/jamesnk/status/1659366431920898049?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Debugging ClaimsPrincipal is better in .NET 8 &lt;a href="https://t.co/SKu5wbgQSm"&gt;https://t.co/SKu5wbgQSm&lt;/a&gt; &lt;a href="https://t.co/esWQ1aqShC"&gt;pic.twitter.com/esWQ1aqShC&lt;/a&gt;&lt;/p&gt;&amp;mdash; James Newton-King ♔ (&amp;#64;JamesNK) &lt;a href="https://twitter.com/JamesNK/status/1659366431920898049?ref_src=twsrc%5Etfw"&gt;May 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;AWS FOSS fund が Avalonia UI をスポンサーしたという話。&lt;/p&gt;
&lt;!-- https://twitter.com/dotnetonaws/status/1658578068762394625?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;For the month of May, the .NET on AWS FOSS fund is proud to have selected Avalonia UI as part of its monthly pledge to sponsor .NET &lt;a href="https://twitter.com/hashtag/OSS?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#OSS&lt;/a&gt; projects. 🎉&lt;br&gt;Our selection committee awarded &lt;a href="https://twitter.com/AvaloniaUI?ref_src=twsrc%5Etfw"&gt;&amp;#64;AvaloniaUI&lt;/a&gt; 12 $500 payments totaling $6k in funding. Thanks for empowering the &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; ecosystem! &lt;a href="https://t.co/WunElv1Dql"&gt;pic.twitter.com/WunElv1Dql&lt;/a&gt;&lt;/p&gt;&amp;mdash; .NET on AWS (&amp;#64;dotnetonAWS) &lt;a href="https://twitter.com/dotnetonAWS/status/1658578068762394625?ref_src=twsrc%5Etfw"&gt;May 16, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="api-diff-between.net-8.0-preview-3-and.net-8-preview-4-by-carlossanlop-pull-request-8469-dotnetcore"&gt;API diff between .NET 8.0 Preview 3 and .NET 8 Preview 4 by carlossanlop · Pull Request #8469 · dotnet/core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/pull/8469"&gt;https://github.com/dotnet/core/pull/8469&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 から 4 への API の差分&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-05-14: Windows App SDK v1.3.1, Visual Studio UI Refresh, .NET Framework 4.8.1 on Windows Update and Catalog</title>
			<link>/2023/05/14/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/05/14/updates</guid>
			<pubDate>Sun, 14 May 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-v1.3.1-microsoftwindowsappsdk"&gt;Release v1.3.1 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3.1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK v1.3.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかのクラッシュする問題の修正やテンプレートの更新などが含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-131-13230502000"&gt;Version 1.3.1 (1.3.230502000) - Stable channel release notes for the Windows App SDK - Windows apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-ui-refresh-visual-studio-blog"&gt;Visual Studio UI Refresh - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-ui-refresh/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-ui-refresh/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の UI をリフレッシュする計画についてのアナウンス。&lt;/p&gt;
&lt;p&gt;将来的に Visual Studio の UI を Fluent Design に準じたものへアップデートすることを計画していること、現時点でのデザイン案の共有、フィードバックの受け付けについてなど。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developercommunity.visualstudio.com/t/Feedback-on-the-Visual-Studio-UI-Refresh/10351411"&gt;Feedback on the Visual Studio UI Refresh - Developer Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="upcoming-availability-of.net-framework-4.8.1-on-windows-update-and-catalog.net-blog"&gt;Upcoming availability of .NET Framework 4.8.1 on Windows Update and Catalog - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/upcoming-availability-of-net-framework-4-8-1-on-windows-update-and-catalog/"&gt;https://devblogs.microsoft.com/dotnet/upcoming-availability-of-net-framework-4-8-1-on-windows-update-and-catalog/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework 4.8.1 が Windows Update と Windows Updaet Catalog から利用可能となることについてのアナウンス。&lt;/p&gt;
&lt;p&gt;今後数週間かけて Windows Update および Windows Update Catalog から .NET Framework 4.8.1 が配信される。配信は Windows Insider Preview の Release Preview から展開される。&lt;/p&gt;
&lt;p&gt;記事ではダウンロード方法や言語パック、自動更新のブロック、その他 FAQ について書かれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="azure.ai.openai-openai-azure-openai-service"&gt;Azure.AI.OpenAI パッケージで OpenAI と Azure OpenAI Service に繋ぐときの違い&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/howtouser-azure-ai-openai"&gt;https://zenn.dev/microsoft/articles/howtouser-azure-ai-openai&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure.AI.OpenAI NuGet パッケージでは OpenAI API と Azure OpenAI Service の両方に対応しているが、利用設定時に若干異なる部分があることについて。&lt;/p&gt;
&lt;h3 id="visualizing-data-in-dotnet-with-polyglot-notebooks-and-sanddance"&gt;Visualizing Data in dotnet with Polyglot Notebooks and SandDance&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/integerman/visualizing-data-in-dotnet-with-polyglot-notebooks-and-sanddance-55k9"&gt;https://dev.to/integerman/visualizing-data-in-dotnet-with-polyglot-notebooks-and-sanddance-55k9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polyglot Notebooks でデータビジュアライズのライブラリー SandDance を C# コードから利用する方法について。&lt;/p&gt;
&lt;h3 id="level-up-your-gpt-game-with-prompt-engineering.net-blog"&gt;Level up your GPT game with prompt engineering - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/gpt-prompt-engineering-openai-azure-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/gpt-prompt-engineering-openai-azure-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenAI の ChatGPT を呼び出す際に役立つプロンプトエンジニアリングについて。&lt;/p&gt;
&lt;h3 id="join-us-for-hacktogether-the-microsoft-teams-global-hack.net-blog"&gt;Join us for HackTogether: The Microsoft Teams Global Hack - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/hacktogether-microsoft-teams-global-hack/"&gt;https://devblogs.microsoft.com/dotnet/hacktogether-microsoft-teams-global-hack/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Teams のバーチャルハッカソンイベントについて。&lt;/p&gt;
&lt;p&gt;6月1日にキーノートとともに開始し、15日までの間で開発、提出を行うイベント。いくつかの省が用意され、勝者には賞品が贈られる。&lt;/p&gt;
&lt;h3 id="net"&gt;.NET のオプション パターンで設定が正しい値かどうか検証をしたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/options-pattern-validation"&gt;https://zenn.dev/microsoft/articles/options-pattern-validation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core をはじめとした Microsoft.Extensions.Options をを使用したオプションパターンで設定値を検証する方法について。&lt;/p&gt;
&lt;p&gt;記事では Microsoft.Extensions.Options.DataAnnotations を使用して DataAnnotations で検証する方法を紹介している。&lt;/p&gt;
&lt;h3 id="ef-coreupdate-qiita"&gt;EF Coreで正しくUPDATEする方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jun1s/items/3e2b3702a965bb5e2705"&gt;https://qiita.com/jun1s/items/3e2b3702a965bb5e2705&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で間違えて使用される Update メソッドについてや Detach されているエンティティから更新する方法についてなど。&lt;/p&gt;
&lt;h3 id="surround-selection-experiment-visual-studio-blog"&gt;Surround selection experiment - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/surround-selection-experiment/"&gt;https://devblogs.microsoft.com/visualstudio/surround-selection-experiment/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;選択範囲を囲むような入力を実現する機能について。&lt;/p&gt;
&lt;p&gt;実際に製品に組み込む前の実験的な拡張を提供し、すべての言語に適用できるか検証を行いフィードバックを求めている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=MadsKristensen.Surrounder"&gt;Surrounder - Visual Studio Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="api-versioning-and-swagger-in-asp.net-core-7.0"&gt;API versioning and Swagger in ASP.NET Core 7.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://mohsen.es/api-versioning-and-swagger-in-asp-net-core-7-0-fe45f67d8419"&gt;https://mohsen.es/api-versioning-and-swagger-in-asp-net-core-7-0-fe45f67d8419&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core でバージョニングされた API を提供し、Swagger を Bearer 認証で利用できるようにするまでの手順を説明している。&lt;/p&gt;
&lt;h3 id="top-10-c-conference-talks-20192022"&gt;Top 10 C# conference talks 2019–2022&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://unicorn-dev.medium.com/top-10-c-conference-talks-2019-2022-78c049b2d6e9"&gt;https://unicorn-dev.medium.com/top-10-c-conference-talks-2019-2022-78c049b2d6e9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019年から2022年に行われた C# 関連のカンファレンスのセッション10選。&lt;/p&gt;
&lt;h3 id="how-to-use-visual-studio-like-a-pro-when-presenting-your-code"&gt;How to Use Visual Studio Like a Pro When Presenting Your Code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/this-is-learning/how-to-use-visual-studio-like-a-pro-when-presenting-your-code-5955"&gt;https://dev.to/this-is-learning/how-to-use-visual-studio-like-a-pro-when-presenting-your-code-5955&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プレゼンテーションで Visual Studio を使用するためのモードを用意する方法について。&lt;/p&gt;
&lt;h3 id="modern-minimal-workers-in.net-anthony-simmon"&gt;Modern minimal workers in .NET | Anthony Simmon&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://anthonysimmon.com/dotnet-minimal-workers/"&gt;https://anthonysimmon.com/dotnet-minimal-workers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generic Host と Top-level Statements を使用して Worker 型のをアプリケーションを実装する方法について。&lt;/p&gt;
&lt;h3 id="net-market-history-in-china"&gt;.NET Market History in China&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://tonyqus.medium.com/net-market-history-in-china-d057e1f24d0f"&gt;https://tonyqus.medium.com/net-market-history-in-china-d057e1f24d0f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;中国における .NET の状況の今昔。&lt;/p&gt;
&lt;h3 id="semantic-kernel-v0.13.442.1-preview"&gt;Semantic Kernel v0.13.442.1-preview がリリースされました&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-12"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel v0.13.442.1-preview での更新点について。&lt;/p&gt;
&lt;p&gt;gRPC をスキルとして読み込めるようになったことや Azure Cognitive Search を Semantic Memory として利用できるようになったこと、Completion のストリーミング対応などについて。&lt;/p&gt;
&lt;h3 id="how-to-start-using.net-background-services-the.net-tools-blog"&gt;How to start using .NET Background Services | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/09/dotnet-background-services/"&gt;https://blog.jetbrains.com/dotnet/2023/05/09/dotnet-background-services/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generic Host でバックグラウンドで処理を行う BackgroundService の開発の始め方について。&lt;/p&gt;
&lt;h3 id="net-maui-webviews-how-to-play-videos-in-full-screen"&gt;.NET MAUI WebViews: How to Play Videos in Full Screen&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/vhugogarcia/net-maui-webviews-how-to-play-videos-in-full-screen-1j03"&gt;https://dev.to/vhugogarcia/net-maui-webviews-how-to-play-videos-in-full-screen-1j03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI の Android WebView で全画面動画再生を行う方法について。&lt;/p&gt;
&lt;h3 id="how-to-download-files-from-secure-ftp-server-sftp-using-winscp-in.net"&gt;How to Download Files from Secure FTP Server (SFTP) using WinSCP in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://juldhais.net/how-to-download-files-from-secure-ftp-server-sftp-using-winscp-in-net-895fbb44362c"&gt;https://juldhais.net/how-to-download-files-from-secure-ftp-server-sftp-using-winscp-in-net-895fbb44362c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinSCP の .NET 向けスクリプティングライブラリーを利用して SFTP サーバーからファイルをダウンロードする方法について。&lt;/p&gt;
&lt;h3 id="raiders-of-the-lost-root-looking-for-memory-leaks-in.net"&gt;Raiders of the lost root: looking for memory leaks in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/raiders-of-the-lost-root-looking-for-memory-leaks-in-net-28febafebac1"&gt;https://chnasarre.medium.com/raiders-of-the-lost-root-looking-for-memory-leaks-in-net-28febafebac1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C++ Profiler API を使用してオブジェクトの参照を辿ってメモリーリークを探す方法について。&lt;/p&gt;
&lt;h3 id="go-for-c-developers-defer-is-not-idisposable"&gt;Go for C# developers: defer is not IDisposable&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.cellfish.se/2023/05/go-for-c-developers-defer-is-not.html"&gt;https://blog.cellfish.se/2023/05/go-for-c-developers-defer-is-not.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go の defer と C# の IDisposable (using) の違いについて。一見似ていて勘違いしそうであるが defer は関数スコープとなる。&lt;/p&gt;
&lt;h3 id="reading-windows-application-manifest-of-an-exe-in.net-gerald-barre"&gt;Reading Windows Application Manifest of an exe in .NET - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/reading-windows-application-manifest-of-an-exe-in-dotnet.htm"&gt;https://www.meziantou.net/reading-windows-application-manifest-of-an-exe-in-dotnet.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;実行ファイル (.exe) ファイルのマニフェストファイルを Win32 API を使用して読み出す方法について。&lt;/p&gt;
&lt;h3 id="c"&gt;C# で始める並列化：目次&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/k_taro56/articles/vetcorized-csharp-introduction"&gt;https://zenn.dev/k_taro56/articles/vetcorized-csharp-introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SIMD を使用した並列化についてのシリーズ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/k_taro56/articles/vetcorized-csharp-array-summation"&gt;C# で始める並列化：配列の総和&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="net-20235-connpass"&gt;.NETラボ 勉強会 2023年5月 - connpass&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnetlab.connpass.com/event/281932/"&gt;https://dotnetlab.connpass.com/event/281932/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5月27日(土)に開催されるオンライン勉強会。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tanzu Application Platform と Azure Spring Apps によるマイクロサービスアプリケーション開発のアジリティ向上&lt;/li&gt;
&lt;li&gt;C# の async/await は実際にどうやって動いているか&lt;/li&gt;
&lt;li&gt;C#とUnityによる初めてのゲーム開発&lt;/li&gt;
&lt;li&gt;Semantic Kernel(C#)でAzure OpenAI ServiceのGTP-4を使ってみる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="chatgpt-apitmcgpt-debuggerv2.0-beta"&gt;ChatGPT APIクライアントアプリ『TmCGPT Debugger』v2.0-beta&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jun_murakami/articles/a5ca626eb8204b"&gt;https://zenn.dev/jun_murakami/articles/a5ca626eb8204b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia UI で実装された ChatGPT の API クライアント。&lt;/p&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;.NET 8 のマネージドヒープの種類。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1657007196171902976?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Types of managed heaps in .NET 8.0: (&lt;a href="https://t.co/BoJeF91nZN"&gt;https://t.co/BoJeF91nZN&lt;/a&gt; and &lt;a href="https://t.co/mhJlwsuMDx"&gt;https://t.co/mhJlwsuMDx&lt;/a&gt;) &lt;a href="https://t.co/OwZeOypp3r"&gt;pic.twitter.com/OwZeOypp3r&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1657007196171902976?ref_src=twsrc%5Etfw"&gt;May 12, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio でサポートされた .http ファイルのドキュメントが追加された。&lt;/p&gt;
&lt;!-- https://twitter.com/sayedihashimi/status/1656751184697339905?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We have added formal docs for the HTTP file support in &lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;VisualStudio&lt;/a&gt; at &lt;a href="https://t.co/MgJmde3wGn"&gt;https://t.co/MgJmde3wGn&lt;/a&gt;. We made sure to give credit to the VS Code REST Client extension as the inspiration for that support!&lt;/p&gt;&amp;mdash; Sayed I. Hashimi 🇺🇦 (&amp;#64;sayedihashimi) &lt;a href="https://twitter.com/sayedihashimi/status/1656751184697339905?ref_src=twsrc%5Etfw"&gt;May 11, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="delete-windows-arm32-support-by-jkotas-pull-request-86065-dotnetruntime"&gt;Delete Windows arm32 support by jkotas · Pull Request #86065 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/86065"&gt;https://github.com/dotnet/runtime/pull/86065&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 以前でサポートが終わっていた Windows の ARM32 サポートの削除 PR。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1656456755835027457?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We&amp;#39;ve purged the last pieces of win-arm32 support from .NET today :-) &lt;a href="https://t.co/1m90wvUNcA"&gt;https://t.co/1m90wvUNcA&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1656456755835027457?ref_src=twsrc%5Etfw"&gt;May 11, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2023-05-06: Temporal .NET, Bob’s Used Books, .NET mobile Debugging in VS Code</title>
			<link>/2023/05/06/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2023/05/06/updates</guid>
			<pubDate>Sat, 06 May 2023 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="introducing-temporal.net-deterministic-workflow-authoring-in.net"&gt;Introducing Temporal .NET – Deterministic Workflow Authoring in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://temporal.io/blog/introducing-temporal-dotnet"&gt;https://temporal.io/blog/introducing-temporal-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Temporal ワークフローエンジンで .NET のサポート追加のアナウンス。&lt;/p&gt;
&lt;p&gt;記事では C# でのワークフローの実装と呼び出し例のコードや仕組みについてなどを紹介している。&lt;/p&gt;
&lt;p&gt;現在 .NET SDK はアルファーリリースであり、API は変更の可能性があるが機能はすべて実装され、ベータと GA が近く公開予定とのこと。&lt;/p&gt;
&lt;h3 id="introducing-bobs-used-booksa-new-real-world.net-sample-application-amazon-web-services"&gt;Introducing Bob’s Used Books—a New, Real-World, .NET Sample Application | Amazon Web Services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/jp/blogs/aws/introducing-bobs-used-books-a-new-real-world-net-sample-application/"&gt;https://aws.amazon.com/jp/blogs/aws/introducing-bobs-used-books-a-new-real-world-net-sample-application/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS が .NET 6 で構築した Bob’s Used Books と呼ばれる架空の中古書店のコマースサイトのサンプルアプリケーションを公開した。&lt;/p&gt;
&lt;p&gt;このアプリケーションはコマースサイトの一連の機能を実装し、Amazon Web Service の各種サービスを利用するサンプルとして作られている。&lt;/p&gt;
&lt;p&gt;今後 App Runner や Amazon EKS などにデプロイするコンテンツなどを用意する予定であるとしている。&lt;/p&gt;
&lt;h3 id="announcing.net-mobile-debugging-in-vs-code.mobile-development-in-vs-code-with-uno-platform-or.net-maui"&gt;Announcing .NET mobile Debugging in VS Code. Mobile development in VS Code with Uno Platform or .NET MAUI.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/announcing-net-mobile-debugging-in-vs-code-mobile-development-in-vs-code-with-uno-platform-or-net-maui/"&gt;https://platform.uno/blog/announcing-net-mobile-debugging-in-vs-code-mobile-development-in-vs-code-with-uno-platform-or-net-maui/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform の Visual Studio Code 向けの拡張機能でモバイル開発がサポートされた。&lt;/p&gt;
&lt;p&gt;このサポートにより Windows, macOS, Linux での Visual Studio Code を利用した Uno Platform および .NET MAUI のビルドとデバッグが行えるようになる。&lt;/p&gt;
&lt;h3 id="release-2.2.6-mysql-netmysqlconnector"&gt;Release 2.2.6 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.2.6"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.2.6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Async MySQL Connector 2.2.6 がリリースされた。&lt;/p&gt;
&lt;p&gt;TransactionScope 内でロールバック時に発生したデッドロックの例外によってメモリーリークする問題などいくつかの修正が含まれている。&lt;/p&gt;
&lt;h3 id="release-2.6.111-stackexchangestackexchange.redis"&gt;Release 2.6.111 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.111"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.111&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.6.111 がリリースされた。&lt;/p&gt;
&lt;p&gt;Envoy プロキシーを使用した際のマルチスロットコマンドの対応やいくつかの不具合と改善が含まれている。&lt;/p&gt;
&lt;h3 id="release-release-v2.53.0-grpcgrpc-dotnet"&gt;Release Release v2.53.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.53.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.53.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gRPC (grpc-dotnet) v2.53.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;エラーメッセージの改善や .NET 6 でのトリミング有効時の例外の修正などいくつかの修正が含まれている。&lt;/p&gt;
&lt;h3 id="c-support-in-fleet-solution-view-unit-testing-and-more-the.net-tools-blog"&gt;C# Support in Fleet: Solution View, Unit Testing, and More! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/04/csharp-support-in-fleet-solution-view-unit-testing-and-more/"&gt;https://blog.jetbrains.com/dotnet/2023/05/04/csharp-support-in-fleet-solution-view-unit-testing-and-more/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Fleet の C# サポートにソリューションビューやユニットテストが追加された。&lt;/p&gt;
&lt;p&gt;記事ではソリューションビューとユニットテスト関連の機能についてのほか、マルチターゲットフレームワークプロジェクトのサポートの向上やソリューションプロパティー、ショートカットキーマップの追加、実行構成の変更対応の必要について触れている。&lt;/p&gt;
&lt;h3 id="rider-2023.2-roadmap-the.net-tools-blog"&gt;Rider 2023.2 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/03/rider-2023-2-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2023/05/03/rider-2023-2-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider 2023.2 のロードマップについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;言語サポートと改善&lt;/li&gt;
&lt;li&gt;ビルドツールウィンドウの再構築&lt;/li&gt;
&lt;li&gt;新しい UI&lt;/li&gt;
&lt;li&gt;新しいソリューションウィザード&lt;/li&gt;
&lt;li&gt;ゲーム開発
&lt;ul&gt;
&lt;li&gt;Unity
&lt;ul&gt;
&lt;li&gt;DOTS サポートの継続&lt;/li&gt;
&lt;li&gt;UI Toolkit&lt;/li&gt;
&lt;li&gt;シェーダー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unreal Engine
&lt;ul&gt;
&lt;li&gt;パフォーマンスの改善&lt;/li&gt;
&lt;li&gt;デバッグ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;設定の同期&lt;/li&gt;
&lt;li&gt;その他改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="resharper-2023.2-roadmap-the.net-tools-blog"&gt;ReSharper 2023.2 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/03/resharper-2023-2-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2023/05/03/resharper-2023-2-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains ReSharper 2023.2 のロードマップについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;言語サポートと改善&lt;/li&gt;
&lt;li&gt;パフォーマンス&lt;/li&gt;
&lt;li&gt;プレディクティブ デバッガー&lt;/li&gt;
&lt;li&gt;コードスタイル&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing-a-new-version-of-the.net-upgrade-assistant-with-support-for.net-maui-and-azure-functions.net-blog"&gt;Announcing a new version of the .NET Upgrade Assistant with support for .NET MAUI and Azure Functions! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/upgrade-assistant-general-availability/"&gt;https://devblogs.microsoft.com/dotnet/upgrade-assistant-general-availability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Upgrade Assistant の新しいバージョンがリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンでは .NET MAUI や Azure Functions のアップグレードに対応している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NET 8 のサポート&lt;/li&gt;
&lt;li&gt;Xamarin.Forms から .NET MAUI へのアップグレード&lt;/li&gt;
&lt;li&gt;Azure Functions のアップグレード&lt;/li&gt;
&lt;li&gt;UWP から WinUI へのアップグレード&lt;/li&gt;
&lt;li&gt;ARM64 のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;記事では機能の強化についてのほか、.NET MAUI と Azure Functions のアップグレードについて解説している。&lt;/p&gt;
&lt;h3 id="announcing-copilot-chat-semantic-kernel"&gt;Announcing Copilot Chat | Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/semantic-kernel/announcing-copilot-chat/"&gt;https://devblogs.microsoft.com/semantic-kernel/announcing-copilot-chat/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel に Copilot Chat という仕組みが追加された。&lt;/p&gt;
&lt;p&gt;Copilot Chat を使用することで LLM ベースのカスタムのチャットボットをアプリケーションに組み込むことができるようになる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="real-time-charts-with-blazor-signalr-and-apexcharts"&gt;Real-time charts with Blazor, SignalR and ApexCharts&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.genezini.com/p/real-time-charts-with-blazor-signalr-and-apexcharts/"&gt;https://blog.genezini.com/p/real-time-charts-with-blazor-signalr-and-apexcharts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor WebAssembly と SignalR、ApexCharts を使用したリアルタイムなチャートのアプリケーションの実装について。&lt;/p&gt;
&lt;h3 id="unlock-the-power-of-nuget-essential-packages-for.net-rest-api-or-microservices"&gt;Unlock the Power of NuGet: Essential Packages for .NET REST API or Microservices&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://levelup.gitconnected.com/unlock-the-power-of-nuget-essential-packages-for-net-rest-api-or-microservices-b1c25cfbdefa"&gt;https://levelup.gitconnected.com/unlock-the-power-of-nuget-essential-packages-for-net-rest-api-or-microservices-b1c25cfbdefa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET サーバーアプリケーションで定番の NuGet パッケージの紹介まとめ。&lt;/p&gt;
&lt;h3 id="running-vite-with-asp.net-core-web-applications"&gt;Running Vite with ASP.NET Core Web Applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/running-vite-with-aspnet-core-web-applications"&gt;https://khalidabuhakmeh.com/running-vite-with-aspnet-core-web-applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Web アプリケーションでフロントエンドに Vite (TypeScript など) を使用して開発するための手順について。&lt;/p&gt;
&lt;h3 id="uploading-large-files-in-asp.net-core-code-maze"&gt;Uploading Large Files in ASP.NET Core - Code Maze&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code-maze.com/aspnetcore-upload-large-files/"&gt;https://code-maze.com/aspnetcore-upload-large-files/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core での巨大なファイルのアップロードの取り扱いについて。&lt;/p&gt;
&lt;h3 id="moving.net-apps-to-the-cloud"&gt;Moving .NET Apps to the Cloud&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/presentations/net-apps-cloud/"&gt;https://www.infoq.com/presentations/net-apps-cloud/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET アプリケーションをクラウドに移行することについてのセッションの書き起こし。&lt;/p&gt;
&lt;p&gt;リフトアンドシフトやコンテナープラットフォーム、クラウドネイティブで注意すべき点、サーバーレスについてやポータビリティなど。&lt;/p&gt;
&lt;h3 id="jetbrains.net-day-online-2023-call-for-speakers-the.net-tools-blog"&gt;JetBrains .NET Day Online 2023 – Call for Speakers | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/04/jetbrains-net-day-online-2023-call-for-speakers/"&gt;https://blog.jetbrains.com/dotnet/2023/05/04/jetbrains-net-day-online-2023-call-for-speakers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9月26日に開催される JetBrains .NET Day Online 2023 のスピーカー募集について。(英語)&lt;/p&gt;
&lt;h3 id="semantic-kernelgtp-4"&gt;Semantic KernelでGTP-4でのチャットアプリを実装する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/4fcc3f865036ad"&gt;https://zenn.dev/tomokusaba/articles/4fcc3f865036ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Server と Semantic Kernel で Azure OpenAI Services の GPT-4 を使用してチャットアプリを実装する方法について。&lt;/p&gt;
&lt;h3 id="c-winui-3"&gt;カスタムコントロールで自由に描画する（C# / WinUI 3）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/custom-control-draw"&gt;https://zenn.dev/shinta0806/articles/custom-control-draw&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 で自由な描画を行うカスタムコントロールを実装する方法について。&lt;/p&gt;
&lt;h3 id="signalrpostman"&gt;SignalRをPostmanでデバッグする&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/satoppepper/articles/8bdcff559d6c86"&gt;https://zenn.dev/satoppepper/articles/8bdcff559d6c86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Postman を使用して SignalR で通信するアプリケーションとメッセージをやり取りしてデバッグする手順について。&lt;/p&gt;
&lt;h3 id="web-api-development-in-visual-studio-2022-visual-studio-blog"&gt;Web API development in Visual Studio 2022 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/web-api-development-in-visual-studio-2022/"&gt;https://devblogs.microsoft.com/visualstudio/web-api-development-in-visual-studio-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6 のプレビューで強化された Web API 開発についての紹介&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;クライアントが統合された HTTP エディター&lt;/li&gt;
&lt;li&gt;API エンドポイントエクスプローラー&lt;/li&gt;
&lt;li&gt;スキャフォールディング&lt;/li&gt;
&lt;li&gt;Visual Studio での Entity Framework ツール&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="okazuki-semantic-kernel"&gt;日本マイクロソフトの大田さん (&amp;#64;okazuki) による Semantic Kernel の記事&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-10"&gt;Semantic Kernel でトークンの限界を超えるような長い文章を分割してスキルに渡して結果を結合したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-7"&gt;Semantic Kernel のテンプレートをプログラムでレンダリングする方法とテンプレートの文法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-8"&gt;Semantic Kernel で Open AI の Embeddings を使う (あいまい検索出来てすげーやつ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-6"&gt;Semantic Kernel でプランナーを使って自発的に解決策を考えて実行する AI を作ってみよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-9"&gt;Semantic Kernel で自作スキルをクラスライブラリ形式で共有したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-3"&gt;Semantic Kernel のネイティブ スキルを試してみよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-5"&gt;Semantic Kernel でトークンを数える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-4"&gt;Semantic Kernel のスキルを好きにカスタマイズしよう (余談です)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="jwt-authentication-with-c.net"&gt;JWT Authentication with C# .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/rmaurodev/jwt-authentication-with-c-net-1h4c"&gt;https://dev.to/rmaurodev/jwt-authentication-with-c-net-1h4c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で JWT を使用した Bearer 認証を実装する手順の紹介。&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-may-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | May 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/02/net-annotated-monthly-may-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/05/02/net-annotated-monthly-may-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による3月の .NET 関連情報まとめ。&lt;/p&gt;
&lt;h3 id="how-to-lock-orientation-at-runtime-on-ios-16-with.net-maui-and-xamarin.forms"&gt;How to lock orientation at runtime on iOS 16 with .NET MAUI and Xamarin.Forms&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msicc.net/how-to-lock-orientation-at-runtime-on-ios-16-with-net-maui-and-xamarin-forms/"&gt;https://msicc.net/how-to-lock-orientation-at-runtime-on-ios-16-with-net-maui-and-xamarin-forms/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iOS 16 上での .NET MAUI および Xamarin.Forms アプリケーションで実行時に回転ロックを行う方法について。&lt;/p&gt;
&lt;h3 id="verificationexception-in.net-framework-when-using-structs"&gt;VerificationException in .NET Framework when using structs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minidump.net/verificationexception-in-net-framework-when-using-structs-6269eb3df448"&gt;https://minidump.net/verificationexception-in-net-framework-when-using-structs-6269eb3df448&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework では値型を readonly フィールドにした上で部分信頼状態で実行すると VerificationException をスローするという問題の原因とその回避方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/issues/27382"&gt;VerificationException due to read-only struct use · Issue #27382 · dotnet/roslyn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="calling-internal-ctors-in-your-unit-tests"&gt;Calling internal ctors in your unit tests&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://haacked.com/archive/2023/05/01/calling-internal-ctors/"&gt;https://haacked.com/archive/2023/05/01/calling-internal-ctors/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ユニットテストで主に外部のライブラリーなどの型を使う場合に非公開なコンストラクターを呼び出すという手段について。&lt;/p&gt;
&lt;h3 id="netstandard.net-framework.netapi"&gt;.netstandardなアセンブリの中で.NET Frameworkや.NETのAPIをフルに使用する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/benutomo/articles/3365c3dc61a9d3"&gt;https://zenn.dev/benutomo/articles/3365c3dc61a9d3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Standard 向けにビルドされたアセンブリーから .NET Framework や .NET (Core) の API を使用する方法について。&lt;/p&gt;
&lt;p&gt;入り口となる .NET Standard 向けのビルドを用意して、それぞれのランタイム向けのアセンブリーを読み込み呼び出すという手法。&lt;/p&gt;
&lt;h3 id="uno-platform-for-figma-preview-5-enhanced-features-for-designers-and-developers"&gt;Uno Platform for Figma Preview 5: Enhanced Features for Designers and Developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/news/2023/04/uno-platform-figma-plugin-5/"&gt;https://www.infoq.com/news/2023/04/uno-platform-figma-plugin-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform の Figma 向けプラグインの Preview 5 での機能強化された点についての紹介。&lt;/p&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="constant-folding-for-simd-comparisons-by-egorbo-pull-request-85584-dotnetruntime"&gt;Constant folding for SIMD comparisons by EgorBo · Pull Request #85584 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/85584"&gt;https://github.com/dotnet/runtime/pull/85584&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SIMD 比較での定数畳み込みの PR。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1653014086534266881?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In .NET 8.0 JIT is able to perform constant folding for SIMD operations, example: (&lt;a href="https://t.co/CHwfC8CZ79"&gt;https://t.co/CHwfC8CZ79&lt;/a&gt;) &lt;a href="https://t.co/ZcWkp29jJf"&gt;pic.twitter.com/ZcWkp29jJf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1653014086534266881?ref_src=twsrc%5Etfw"&gt;May 1, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="allocate-array.empty-on-a-frozen-segment-nongc-heap-by-egorbo-pull-request-85559-dotnetruntime"&gt;Allocate Array.Empty on a frozen segment (NonGC heap) by EgorBo · Pull Request #85559 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/85559"&gt;https://github.com/dotnet/runtime/pull/85559&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Array.Empty&amp;lt;T&amp;gt;&lt;/code&gt; のオブジェクトは GC 対象とは別のセグメントに確保されるようになる、という話。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1653716548517806080?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Merged today a PR to make Array&amp;lt;T&amp;gt;.Empty cheaper than it used to be (basically a direct address to a frozen heap object) 🙂&lt;a href="https://t.co/mgA5kzZA4S"&gt;https://t.co/mgA5kzZA4S&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1653716548517806080?ref_src=twsrc%5Etfw"&gt;May 3, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="introducing-time-abstraction-whats-new-in.net-8-preview-4-wip-issue-8234-dotnetcore"&gt;Introducing Time abstraction - What's new in .NET 8 Preview 4 [WIP] · Issue #8234 · dotnet/core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/issues/8234#issuecomment-1530525108"&gt;https://github.com/dotnet/core/issues/8234#issuecomment-1530525108&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;時間に関する抽象化 API である TimeProvider が .NET 8 Preview 4 に。&lt;/p&gt;
&lt;!-- https://twitter.com/ufcpp/status/1653208094888046593?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="vi" dir="ltr"&gt;&lt;a href="https://t.co/mAHs5VkwZm"&gt;https://t.co/mAHs5VkwZm&lt;/a&gt;&lt;br&gt;TimeProviderもPreview 4で。&lt;/p&gt;&amp;mdash; ++C++; // 管理人: 岩永 (&amp;#64;ufcpp) &lt;a href="https://twitter.com/ufcpp/status/1653208094888046593?ref_src=twsrc%5Etfw"&gt;May 2, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>