<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>WeekRef.NET</title>
		<link>/</link>
		<description>.NET 関連の情報をほぼ週刊配信</description>
		<copyright>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</copyright>
		<managingEditor>Mayuki Sawatari</managingEditor>
		<pubDate>Fri, 05 Jul 2024 09:15:08 GMT</pubDate>
		<lastBuildDate>Fri, 05 Jul 2024 09:15:08 GMT</lastBuildDate>
		<item>
			<title>2024-07-05: Windows App SDK 1.6.0-experimental2, Rider and ReSharper 2024.2 EAP 5, Polly 8.4.1</title>
			<link>/2024/07/05/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/07/05/updates</guid>
			<pubDate>Fri, 05 Jul 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="experimental2-windows-sdk-windows-apps-microsoft-learn"&gt;バージョン 1.6 試験的 (1.6.0-experimental2) - Windows アプリ SDK の最新の試験段階チャネル リリース ノート - Windows apps | Microsoft Learn&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-16-experimental-160-experimental2"&gt;https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-16-experimental-160-experimental2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.6.0-experimental2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは NativeAOT のサポートの強化、Edge WebView2 SDK の統合の変更、パッケージ展開 API の追加とバグ修正など。&lt;/p&gt;
&lt;p&gt;またこのリリース以降、microsoft-ui-xaml GitHub リポジトリーの main ブランチが WinUI 3 のソースコードとなるとのこと。&lt;/p&gt;
&lt;h3 id="resharper-2024.2-eap-5-an-important-milestone-and-other-updates-the.net-tools-blog"&gt;ReSharper 2024.2 EAP 5: An Important Milestone and Other Updates | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/01/resharper-2024-2-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2024/07/01/resharper-2024-2-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.2 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Out-of-Process 化の一環として非同期タイピングが有効となった。これにより応答性が向上するとのこと。&lt;/p&gt;
&lt;p&gt;その他リファクタリングの強化や、Dynamic Program Analysis での AI 利用などが含まれている。&lt;/p&gt;
&lt;h3 id="rider-2024.2-eap-5-reader-mode-monitoring-for-game-dev-and-more-the.net-tools-blog"&gt;Rider 2024.2 EAP 5: Reader Mode, Monitoring for Game Dev, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/01/rider-2024-2-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2024/07/01/rider-2024-2-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではライブラリーなどのコード表示時にドキュメントコメントを展開する Reader mode の追加、Monitoring ウィンドウの強化、GDScript のデバッグサポートなどが追加された。&lt;/p&gt;
&lt;h3 id="release-8.4.1-app-vnextpolly"&gt;Release 8.4.1 · App-vNext/Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.4.1"&gt;https://github.com/App-vNext/Polly/releases/tag/8.4.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polly 8.4.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="netclipowershell-qiita"&gt;自作の.NET製CLIツールにタブ補完機能を付ける(PowerShell編) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/pierusan2010/items/0885a78d5616601d013a"&gt;https://qiita.com/pierusan2010/items/0885a78d5616601d013a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CLI ツールで PowerShell のタブ補完を対応させる実装方法について。&lt;/p&gt;
&lt;h3 id="animated-splash-screen-in.net-maui-android"&gt;Animated Splash Screen in .NET MAUI Android&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/icebeam7/animated-splash-screen-in-net-maui-android-2ipg"&gt;https://dev.to/icebeam7/animated-splash-screen-in-net-maui-android-2ipg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI で Android 12 から対応する Splash Screen API を使用する方法について。&lt;/p&gt;
&lt;h3 id="dive-into-native-windows-development-with-new-winui-workload-and-template-improvements-visual-studio-blog"&gt;Dive into native Windows development with new WinUI workload and template improvements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/dive-into-native-windows-development-with-new-winui-workload-and-template-improvements/"&gt;https://devblogs.microsoft.com/visualstudio/dive-into-native-windows-development-with-new-winui-workload-and-template-improvements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 17.10 で新しくなった WinUI アプリケーションのテンプレートの紹介。&lt;/p&gt;
&lt;h3 id="all-the-lists-in.net-maui"&gt;All the Lists in .NET MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/davidortinau/all-the-lists-in-net-maui-33bd"&gt;https://dev.to/davidortinau/all-the-lists-in-net-maui-33bd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI での様々なリストコントロールについての比較やレイアウト例の解説。&lt;/p&gt;
&lt;h3 id="how-to-use-the-tasks-view-in-jetbrains-rider-the.net-tools-blog"&gt;How to use the Tasks View in JetBrains Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/02/how-to-use-the-tasks-view-in-jetbrains-rider/"&gt;https://blog.jetbrains.com/dotnet/2024/07/02/how-to-use-the-tasks-view-in-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider で実行中/待機中の Task (非同期) を確認できる Tasks View の紹介。&lt;/p&gt;
&lt;h3 id="exploring-the-generated-code-the-spread-element-behind-the-scenes-of-collection-expressions-part-4"&gt;Exploring the generated code: the spread element: Behind the scenes of collection expressions - Part 4&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-4-the-spread-element/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-4-the-spread-element/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のコレクション式のスプレッド演算子によってどのようなコードが生成されるのかについての解説。&lt;/p&gt;
&lt;h3 id="unsafeaccessor-qiita"&gt;UnsafeAccessor でジェネリックが使えるようになった話 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/e7df363efa80e94ccf06"&gt;https://qiita.com/abetakahiro123/items/e7df363efa80e94ccf06&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 4 の UnsafeAccessor でジェネリックに対しての操作が行えるようになったことについて。&lt;/p&gt;
&lt;h3 id="let-github-copilot-draft-of-your-pull-request-description-visual-studio-blog"&gt;Let GitHub Copilot draft of your pull request description - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/let-github-copilot-draft-of-your-pull-request-description/"&gt;https://devblogs.microsoft.com/visualstudio/let-github-copilot-draft-of-your-pull-request-description/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio version 17.10 で実装された Pull request のコメントの下書きを GitHub Copilot に書かせる機能の紹介。&lt;/p&gt;
&lt;h3 id="memorycache-in-c-a-practical-guide"&gt;MemoryCache in C#: A Practical Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.postsharp.net/memorycache"&gt;https://blog.postsharp.net/memorycache&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;インメモリーキャッシュの System.Runtime.Caching.MemoryCache とは何か、どのように使うのかといったガイド。&lt;/p&gt;
&lt;h3 id="navigating-corporate-giants-corecursive-podcast"&gt;Navigating Corporate Giants - CoRecursive Podcast&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://corecursive.com/building-powershell-with-jeffrey-snover/"&gt;https://corecursive.com/building-powershell-with-jeffrey-snover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Podcast にて Jeffery Snover をゲストに呼び PowerShell の誕生についての話をした回の書き起こし。&lt;/p&gt;
&lt;h3 id="readonlysett-in.net-9"&gt;ReadOnlySet&amp;lt;T&amp;gt; in .NET 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/f368c7d3-488e-4bea-92b4-abf176353fa3"&gt;https://steven-giesel.com/blogPost/f368c7d3-488e-4bea-92b4-abf176353fa3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で導入される &lt;code&gt;ReadOnlySet&amp;lt;T&amp;gt;&lt;/code&gt; について。&lt;code&gt;IReadOnlySet&lt;/code&gt; との関連、ImmutableSet/FrozenSet との違いなどについても触れている。&lt;/p&gt;
&lt;h3 id="cwaithandle-qiita"&gt;C#でのWaitHandle待機スレッド調査 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/qiitatosh/items/c1c08d0e3caa928b5d63"&gt;https://qiita.com/qiitatosh/items/c1c08d0e3caa928b5d63&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WaitHandle を使用したスレッドの待機について。&lt;/p&gt;
&lt;h3 id="refactoring-a.net-maui-app-to-a-declarative-ui-using-c-markup"&gt;Refactoring a .NET MAUI app to a Declarative UI using C# Markup&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://appmilla.com/latest/refactoring_a_functional_and_reactive_dotnet_maui_app_to_a_declarative_ui_using_csharp_markup/"&gt;https://appmilla.com/latest/refactoring_a_functional_and_reactive_dotnet_maui_app_to_a_declarative_ui_using_csharp_markup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Community Toolkit の C# Markup でアプリケーションをリファクタリングの紹介。&lt;/p&gt;
&lt;p&gt;記事ではホットリロード時の挙動のコントロールについても触れている。&lt;/p&gt;
&lt;h3 id="wrapping-external-dlls-with-c-for-seamless-integration-in-electron-applications-with-node.js"&gt;Wrapping External DLLs with C# for Seamless Integration in Electron Applications with Node.js&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;avihup/wrapping-external-dlls-with-c-for-seamless-integration-in-electron-applications-with-node-js-9483bba343bb"&gt;https://medium.com/&amp;#64;avihup/wrapping-external-dlls-with-c-for-seamless-integration-in-electron-applications-with-node-js-9483bba343bb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;electron-edge-js を使用して外部ネイティブ DLL を Electron アプリケーションに公開する方法について。&lt;/p&gt;
&lt;h3 id="how-do-i-produce-a-windows-runtime-asynchronous-activity-from-c-the-old-new-thing"&gt;How do I produce a Windows Runtime asynchronous activity from C#? - The Old New Thing&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/oldnewthing/20240704-00/?p=109955"&gt;https://devblogs.microsoft.com/oldnewthing/20240704-00/?p=109955&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows Runtime の非同期アクティビティ (&lt;code&gt;IAsyncAction&lt;/code&gt;, &lt;code&gt;IAsyncOperation&lt;/code&gt;) を C# の async から生成する方法について。&lt;/p&gt;
&lt;h3 id="azure-functions.net-in-process.net-8"&gt;Azure Functions の .NET In-Process 向け .NET 8 サポートがリリースされました - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20240703/1719992771"&gt;https://blog.shibayan.jp/entry/20240703/1719992771&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Functions の .NET In-Process モデルでの .NET 8 サポートについての解説と移行について。&lt;/p&gt;
&lt;h3 id="readonly-immutable-and-frozen-collections-in.net-ndepend-blog"&gt;Readonly, Immutable, and Frozen Collections in .NET - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/readonly-immutable-and-frozen-collections-in-net/"&gt;https://blog.ndepend.com/readonly-immutable-and-frozen-collections-in-net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReadOnly, Immutable, Frozen といった各種コレクションの違いとその性能特性についての解説。&lt;/p&gt;
&lt;h2 id="youtube"&gt;イベント、YouTube 配信など&lt;/h2&gt;
&lt;h3 id="net-aspire-20240711-1200"&gt;昼休みに .NET Aspire をさわってみよう配信 (2024/07/11 12:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msdevjp.connpass.com/event/324193/"&gt;https://msdevjp.connpass.com/event/324193/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;WinMerge が F# のシンタックスハイライトをサポート。&lt;/p&gt;
&lt;!-- https://x.com/Thoriumi/status/1805201201186632184 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Good news! Initial &lt;a href="https://twitter.com/hashtag/fsharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#fsharp&lt;/a&gt; support for WinMerge has been released, now you can merge F# files with syntax highlighting: &lt;a href="https://t.co/yXgLMKBG6a"&gt;https://t.co/yXgLMKBG6a&lt;/a&gt; &lt;a href="https://t.co/iFPvJToU2U"&gt;pic.twitter.com/iFPvJToU2U&lt;/a&gt;&lt;/p&gt;&amp;mdash; Tuomas Hietanen (&amp;#64;Thoriumi) &lt;a href="https://twitter.com/Thoriumi/status/1805201201186632184?ref_src=twsrc%5Etfw"&gt;June 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;— Tuomas Hietanen (&amp;#64;Thoriumi)&lt;/p&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="poly-fill-index-and-range-types-by-tarekgh-pull-request-104170-dotnetruntime"&gt;Poly fill Index and Range types by tarekgh · Pull Request #104170 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/104170"&gt;https://github.com/dotnet/runtime/pull/104170&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Bcl.Memory に Index と Range の Polyfill が追加。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-06-28: StackExchange.Redis 2.8.0, ReSharper and Rider 2024.1.4</title>
			<link>/2024/06/28/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/06/28/updates</guid>
			<pubDate>Fri, 28 Jun 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-2.8.0-stackexchangestackexchange.redis"&gt;Release 2.8.0 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.0"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.8.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは X509 証明書のチェーンの追加のチェック、コマンドの整合性チェックモード、ストリームの最後のメッセージの読み取りサポートといったものが含まれている。&lt;/p&gt;
&lt;h3 id="bug-fixes-for-resharper-2024.1.4-and-rider-2024.1.4-are-now-available-the.net-tools-blog"&gt;Bug Fixes for ReSharper 2024.1.4 and Rider 2024.1.4 Are Now Available! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/24/resharper-rider-2024-1-4/"&gt;https://blog.jetbrains.com/dotnet/2024/06/24/resharper-rider-2024-1-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2024.1.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではエラーやデッドロックといったいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="join-us-for.net-aspire-developers-day-elevate-your-cloud-native-skills.net-blog"&gt;Join Us for .NET Aspire Developers Day – Elevate Your Cloud Native Skills! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/join-us-for-dotnet-aspire-developers-day/"&gt;https://devblogs.microsoft.com/dotnet/join-us-for-dotnet-aspire-developers-day/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024年7月23日に .NET Aspire Developers Day というライブストリーミングイベントを行うことについてのアナウンス。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="behind-the-scenes-of-owin-open-web-interface-for.net"&gt;Behind the Scenes of OWIN (Open Web Interface for .NET)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/rasulhsn/behind-the-scenes-of-owin-open-web-interface-for-net-523d"&gt;https://dev.to/rasulhsn/behind-the-scenes-of-owin-open-web-interface-for-net-523d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core の元のアイデアとなった OWIN の歴史とどのようなものであったかについて。&lt;/p&gt;
&lt;h3 id="code-assessment-with.net-upgrade-assistant-visual-studio-blog"&gt;Code Assessment with .NET Upgrade Assistant - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/code-assessment-with-net-upgrade-assistant/"&gt;https://devblogs.microsoft.com/visualstudio/code-assessment-with-net-upgrade-assistant/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET アップグレード アシスタントを使用したアップグレードに関する評価を行う方法について。&lt;/p&gt;
&lt;p&gt;記事では Visual Studio からの分析と CLI ツールからの分析、レポートの出力と共有について触れている。&lt;/p&gt;
&lt;h3 id="exploring-the-generated-code-t-spant-and-immutable-collections-behind-the-scenes-of-collection-expressions-part-3"&gt;Exploring the generated code: T[], SpanT, and Immutable collections: Behind the scenes of collection expressions - Part 3&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-3-arrays-span-of-t-and-immutable-collections/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-3-arrays-span-of-t-and-immutable-collections/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コレクション式がコンパイラーによってどのような処理に展開されるかについての解説。記事では配列、Span&lt;T&gt;、IEnumerable に Immutable コレクションでの挙動について解説している。&lt;/p&gt;
&lt;h3 id="xunitmemberdataint-qiita"&gt;Xunitでmemberdataで小数点からIntなどへの変換が発生している場合の挙動調べ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hatobeam75/items/163f398d8f87b4309d96"&gt;https://qiita.com/hatobeam75/items/163f398d8f87b4309d96&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MemberData によるテストデータのパラメータへの引き渡し時、型変換が必要となるケースでの挙動について。&lt;/p&gt;
&lt;h3 id="instrumenting.net-chiseled-docker-images-with-datadog"&gt;Instrumenting .NET chiseled Docker images with Datadog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;vandonr/instrumenting-net-chiseled-docker-images-with-datadog-00b1db18f4b9"&gt;https://medium.com/&amp;#64;vandonr/instrumenting-net-chiseled-docker-images-with-datadog-00b1db18f4b9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chiseled Ubuntu をベースとした .NET の Docker イメージで Datadog のトレーシングを行うためのセットアップ方法について。&lt;/p&gt;
&lt;h3 id="html5-validation-for-asp.net-core-models-and-razor-views"&gt;HTML5 Validation for ASP.NET Core Models and Razor Views&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/html5-validation-for-aspnet-core-models-and-razor-views"&gt;https://khalidabuhakmeh.com/html5-validation-for-aspnet-core-models-and-razor-views&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;デフォルトのクライアント入力検証の代わりにブラウザー組み込みのフォーム検証を利用する方法について。&lt;/p&gt;
&lt;p&gt;記事では FinBuckle.HTML5Validation パッケージを使用する方法を紹介している。&lt;/p&gt;
&lt;h3 id="how-to-use-c-to-properly-follow-oauth-authentication-flows"&gt;How to Use C# to Properly Follow OAuth Authentication Flows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotneteers.net/how-to-use-c-to-properly-follow-oauth-authentication-flows/"&gt;https://dotneteers.net/how-to-use-c-to-properly-follow-oauth-authentication-flows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OAuth 認証フローを実装する方法について。&lt;/p&gt;
&lt;h3 id="real-graceful-shutdown-in-kubernetes-and-asp.net-core"&gt;Real Graceful Shutdown in Kubernetes and ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/arminshoeibi/real-graceful-shutdown-in-kubernetes-and-aspnet-core-2290"&gt;https://dev.to/arminshoeibi/real-graceful-shutdown-in-kubernetes-and-aspnet-core-2290&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kubernetes 上の ASP.NET Core や Generic Host のアプリケーションをグレースフルにシャットダウンする方法について。&lt;/p&gt;
&lt;p&gt;記事では Ingress Controller とのギャップでさらに遅延が必要な場合の対処方法についても紹介している。&lt;/p&gt;
&lt;h3 id="is.net-aspire-nuget-for-cloud-service-dependencies"&gt;Is .NET Aspire NuGet for Cloud Service Dependencies?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://haacked.com/archive/2024/06/27/dotnet-aspire/"&gt;https://haacked.com/archive/2024/06/27/dotnet-aspire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire はクラウドサービスの NuGet パッケージ依存関係のようではないかという話。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="blazor.net-20240704-1330"&gt;Blazor+ローコードで実現する.NET資産のモダナイズ (2024/07/04 13:30〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codeer.connpass.com/event/319762/"&gt;https://codeer.connpass.com/event/319762/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="rucchodisposify-subscribe-c-events-with-idisposables"&gt;ruccho/Disposify: Subscribe C# events with IDisposables!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ruccho/Disposify"&gt;https://github.com/ruccho/Disposify&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;イベント購読を IDisposable で管理できるようにする Source Generator。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/ruccho/articles/dc6f82771cf650"&gt;【C#】event を IDisposable で購読する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/filipnavara/status/1806291214884303064?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET Runtime Async (&lt;a href="https://t.co/3pIXXN7ENu"&gt;https://t.co/3pIXXN7ENu&lt;/a&gt;) is starting to get some attention again (&lt;a href="https://t.co/vjMLBFurl7"&gt;https://t.co/vjMLBFurl7&lt;/a&gt;).&lt;/p&gt;&amp;mdash; Filip Navara 🇺🇦 (parody of myself) (&amp;#64;filipnavara) &lt;a href="https://twitter.com/filipnavara/status/1806291214884303064?ref_src=twsrc%5Etfw"&gt;June 27, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/jcouv/status/1805629757436084669?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We merged a preview C# 13 feature into VS 17.11 (preview 3): partial properties.&lt;br&gt;&lt;br&gt;```&lt;br&gt;partial class C&lt;br&gt;{&lt;br&gt;    // Definition&lt;br&gt;    public partial string Prop { get; set; }&lt;br&gt;&lt;br&gt;    // Implementation&lt;br&gt;    public partial string Prop { get =&amp;gt; ...; set =&amp;gt; ...; }&lt;br&gt;}&lt;br&gt;```&lt;a href="https://t.co/ZmA7g05f3W"&gt;https://t.co/ZmA7g05f3W&lt;/a&gt;&lt;/p&gt;&amp;mdash; Julien Couvreur (&amp;#64;jcouv) &lt;a href="https://twitter.com/jcouv/status/1805629757436084669?ref_src=twsrc%5Etfw"&gt;June 25, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-06-23: Install Visual Studio updates through Microsoft Update, C# Inline Action for Azure Logic Apps</title>
			<link>/2024/06/23/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/06/23/updates</guid>
			<pubDate>Sun, 23 Jun 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="keep-visual-studio-automatically-updated-and-secure-through-microsoft-update-visual-studio-blog"&gt;Keep Visual Studio automatically updated and secure through Microsoft Update - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/automatically-install-visual-studio-security-updates-through-microsoft-update/"&gt;https://devblogs.microsoft.com/visualstudio/automatically-install-visual-studio-security-updates-through-microsoft-update/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio のアップデートを Microsoft Update (Windows Update に加えて Microsoft 製品のアップデートを配信する仕組み) からセキュリティー更新を受け取れるようになることについて。&lt;/p&gt;
&lt;p&gt;記事では Microsoft Update で更新を有効にする方法や、オプトアウト方法、8月からのロールアウトに向けてプレビューする方法について、今後の改善について触れている。&lt;/p&gt;
&lt;h3 id="announcement-introducing.net-c-inline-action-for-azure-logic-apps-standard-preview"&gt;Announcement: Introducing .NET C# Inline Action for Azure Logic Apps (Standard) - Preview&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/azure-integration-services-blog/announcement-introducing-net-c-inline-action-for-azure-logic/ba-p/4160541"&gt;https://techcommunity.microsoft.com/t5/azure-integration-services-blog/announcement-introducing-net-c-inline-action-for-azure-logic/ba-p/4160541&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Logic Apps での C# インラインアクションのサポートがプレビューリリースされた。&lt;/p&gt;
&lt;p&gt;記事ではワークフローへの C# スクリプトの追加方法、利用できる機能や API、制限事項といった点について解説している。&lt;/p&gt;
&lt;h3 id="announcing-third-party-api-and-package-map-support-for.net-upgrade-assistant.net-blog"&gt;Announcing Third Party API and Package Map Support for .NET Upgrade Assistant - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-api-map-support-for-ua/"&gt;https://devblogs.microsoft.com/dotnet/announcing-api-map-support-for-ua/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Upgrade Assistant で 3rd パーティーの API とパッケージのカスタムマッピングパッケージの実装をサポートした。&lt;/p&gt;
&lt;h3 id="upcoming-changes-to-supported-versions-of-visual-studio-for-remote-debugging-with-azure-app-service"&gt;Upcoming Changes to Supported Versions of Visual Studio for Remote Debugging with Azure App Service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/apps-on-azure-blog/upcoming-changes-to-supported-versions-of-visual-studio-for/ba-p/4164389"&gt;https://techcommunity.microsoft.com/t5/apps-on-azure-blog/upcoming-changes-to-supported-versions-of-visual-studio-for/ba-p/4164389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure App Service 上の .NET プロセスに対する Visual Studio からのリモートデバッグのサポートバージョンの変更について。&lt;/p&gt;
&lt;p&gt;2022 以前のバージョンに関しては2024年6月から、2022 17.9 とそれ以前は2025年1月末からサポートされなくなる。&lt;/p&gt;
&lt;h3 id="release-11.0.11-avaloniauiavalonia"&gt;Release 11.0.11 · AvaloniaUI/Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.11"&gt;https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia 11.0.11 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正が行われている。&lt;/p&gt;
&lt;h3 id="release-v2.5.168-messagepack-csharpmessagepack-csharp"&gt;Release v2.5.168 · MessagePack-CSharp/MessagePack-CSharp&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MessagePack-CSharp/MessagePack-CSharp/releases/tag/v2.5.168"&gt;https://github.com/MessagePack-CSharp/MessagePack-CSharp/releases/tag/v2.5.168&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MessagePack-CSharp v2.5.168 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正や NonSerialized のサポート、依存関係の整理などが行われている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-6.net-8-2"&gt;ビルドは通るが動かない！実際に引っ掛かった「.NET 6 - .NET 8」移行時の破壊的変更 2 選&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/xin9le/articles/b2b0d500df95c7"&gt;https://zenn.dev/xin9le/articles/b2b0d500df95c7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 から 8 へ移行した際に挙動変更されたことに由来した問題について。記事では FromBody 属性と JsonRequired 属性に関連する問題について紹介している。&lt;/p&gt;
&lt;h3 id="dotcover-command-line-tools-for-automation-testing-code-coverage-the.net-tools-blog"&gt;dotCover Command Line Tools for Automation Testing Code Coverage | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/20/dotcover-command-line-tools-for-automation-testing-code-coverage/"&gt;https://blog.jetbrains.com/dotnet/2024/06/20/dotcover-command-line-tools-for-automation-testing-code-coverage/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コードカバレッジを取得する dotCover のコマンドラインツールの紹介。記事ではインストール方法、使用方法、その他ヒントについて触れている。&lt;/p&gt;
&lt;h3 id="how-to-properly-measure-code-speed-in.net"&gt;How to properly measure code speed in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/byteminds_agency/how-to-properly-measure-code-speed-in-net-158o"&gt;https://dev.to/byteminds_agency/how-to-properly-measure-code-speed-in-net-158o&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BenchmarkDotNet を使用したパフォーマンス計測についての基本の簡単な紹介。&lt;/p&gt;
&lt;h3 id="using-phi-3-c-with-onnx-for-text-and-vision-samples.net-blog"&gt;Using Phi-3 &amp;amp; C# with ONNX for text and vision samples - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/using-phi3-csharp-with-onnx-for-text-and-vision-samples-md/"&gt;https://devblogs.microsoft.com/dotnet/using-phi3-csharp-with-onnx-for-text-and-vision-samples-md/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Phi-3 ONNX モデルを C# から呼び出してテキスト生成や画像認識を行うサンプルコードの紹介。&lt;/p&gt;
&lt;h3 id="maui-android-java0000-type-is-defined-multiple-times"&gt;MAUI Android で &lt;code&gt;JAVA0000: Type ~ is defined multiple times&lt;/code&gt; と怒られた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/proudust/articles/2024-06-19-maui-android-java0000"&gt;https://zenn.dev/proudust/articles/2024-06-19-maui-android-java0000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI の Android 向けビルドを作成時にビルドエラーになることがある問題と対処方法について。&lt;/p&gt;
&lt;h3 id="omnisharp-vim-fzf-qiita"&gt;OmniSharp-Vim と fzf を連携させる メンバーのリスト表示編 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/lx-sasabo/items/b9a1c84a66a306ade81d"&gt;https://qiita.com/lx-sasabo/items/b9a1c84a66a306ade81d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vim で OmniSharp-Vim と fzf を連携してメンバーのリストを表示するほうほうについて。&lt;/p&gt;
&lt;h3 id="privacy-and-security-improvements-in.net-modernization-tooling.net-blog"&gt;Privacy and security improvements in .NET modernization tooling - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-modernization-privacy-security-improvements/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-modernization-privacy-security-improvements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET モダナイゼーションツール (.NET アップグレードアシスタントと Azure Migration アプリケーションとコード評価) でのセキュリティーとプライバシーに関する改善について。&lt;/p&gt;
&lt;p&gt;ユーザーごとにインストールされ、更新に管理者権限が必要なくなったこと、レポートに含まれる情報のコントロールが可能となったことなどを紹介している。&lt;/p&gt;
&lt;h3 id="easily-navigate-code-delegates-while-debugging-visual-studio-blog"&gt;Easily navigate code delegates while debugging - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/easily-navigate-code-delegates-while-debugging/"&gt;https://devblogs.microsoft.com/visualstudio/easily-navigate-code-delegates-while-debugging/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 17.10 でのデバッグ中のデリゲートのコードナビゲーションの改善について。&lt;/p&gt;
&lt;p&gt;デバッグ中にデリゲートからソースコードにジャンプするといったことが可能となっている。&lt;/p&gt;
&lt;h3 id="code-style-for-better-productivity-tips-and-tools-from-the-metalama-team-the.net-tools-blog"&gt;Code Style for Better Productivity - Tips and Tools from the Metalama Team | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/18/code-style-for-better-productivity-tips-and-tools-from-the-metalama-team/"&gt;https://blog.jetbrains.com/dotnet/2024/06/18/code-style-for-better-productivity-tips-and-tools-from-the-metalama-team/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コードスタイルに関して &lt;a href="https://www.postsharp.net/metalama"&gt;Metalama&lt;/a&gt; チームで行っているプラクティスやツールの紹介。&lt;/p&gt;
&lt;p&gt;記事ではコンセンサスについて、IDE での設定方法、警告の報告、定期的にクリーンアップする計画といった点を紹介している。&lt;/p&gt;
&lt;h3 id="refactor-your-code-with-default-lambda-parameters.net-blog"&gt;Refactor your code with default lambda parameters - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/refactor-your-code-with-default-lambda-parameters/"&gt;https://devblogs.microsoft.com/dotnet/refactor-your-code-with-default-lambda-parameters/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で導入されたラムダ式のデフォルトパラメーターについて。&lt;/p&gt;
&lt;p&gt;記事ではどのように使用できるのか、ASP.NET Core Minimal APIs での使用方法などを紹介している。&lt;/p&gt;
&lt;h3 id="exploring-the-generated-code-listt-and-fallback-cases-behind-the-scenes-of-collection-expressions-part-2"&gt;Exploring the generated code: List&amp;lt;T&amp;gt; and fallback cases: Behind the scenes of collection expressions - Part 2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-2-exploring-the-generated-code-list-and-fallback-cases/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-2-exploring-the-generated-code-list-and-fallback-cases/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コレクション式がコンパイラーによってどのように展開されるのかについての解説。&lt;/p&gt;
&lt;p&gt;HashSet やカスタム型での結果、List&amp;lt;T&amp;gt; での最適化と .NET 8 以前のバージョンでのフォールバックといった挙動を開設している。&lt;/p&gt;
&lt;h3 id="design-and-deployment-and-scaling-consideration-in-signalr"&gt;Design and Deployment and Scaling Consideration in SignalR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ilovedotnet.org/blogs/design-and-deployment-and-scaling-in-signalr/"&gt;https://ilovedotnet.org/blogs/design-and-deployment-and-scaling-in-signalr/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SignalR のデプロイとスケーリングについて検討事項について。&lt;/p&gt;
&lt;h3 id="how-to-encrypt-asp.net-core-route-parameters"&gt;How To Encrypt ASP.NET Core Route Parameters&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/how-to-encrypt-aspnet-core-route-parameters"&gt;https://khalidabuhakmeh.com/how-to-encrypt-aspnet-core-route-parameters&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のルートパラメーターを暗号化する方法について。記事ではルート制約とパラメータのバインダーによって暗号/復号を行う方法を解説している。&lt;/p&gt;
&lt;h3 id="hands-on-http3-with.net"&gt;Hands-On HTTP/3 with .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;Alikhalili/hands-on-http-3-with-net-fcd38cf7ad05"&gt;https://medium.com/&amp;#64;Alikhalili/hands-on-http-3-with-net-fcd38cf7ad05&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HTTP/3 についての説明と HTTP/3 の仕様に基づいたツールを実装する手がかりの解説。&lt;/p&gt;
&lt;h3 id="net-aspire"&gt;.NET Aspire の起動時にタイムアウトのエラーが発生する場合の対処方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet-aspire-launch-error"&gt;https://zenn.dev/microsoft/articles/dotnet-aspire-launch-error&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire プロジェクトがポート競合により起動できないときの対処方法について。&lt;/p&gt;
&lt;h3 id="rider-2024.2-eap-3-is-out-the.net-tools-blog"&gt;Rider 2024.2 EAP 3 Is Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/14/rider-2024-2-eap-3/"&gt;https://blog.jetbrains.com/dotnet/2024/06/14/rider-2024-2-eap-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 EAP がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは dotnet watch のプラグインがバンドルされるようになった。&lt;/p&gt;
&lt;h3 id="a.net-developer-guide-to-xunit-test-instrumentation-with-opentelemetry-and-aspire-dashboard"&gt;A .NET Developer Guide to XUnit Test Instrumentation with OpenTelemetry and Aspire Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/nikiforovall/a-net-developer-guide-to-xunit-test-instrumentation-with-opentelemetry-and-aspire-dashboard-5h14"&gt;https://dev.to/nikiforovall/a-net-developer-guide-to-xunit-test-instrumentation-with-opentelemetry-and-aspire-dashboard-5h14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;xUnit のテストでの計測を Aspire Dashboard と OpenTelemetry を組み合わせる方法について。&lt;/p&gt;
&lt;h3 id="c.net-web-grpc-graphql-blazor-sansan-tech-blog"&gt;【イベントレポート】イマドキのC# .NET Web開発 〜gRPC, GraphQL, Blazorもあるよ〜 を開催しました - Sansan Tech Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://buildersbox.corp-sansan.com/entry/2024/05/23/143000"&gt;https://buildersbox.corp-sansan.com/entry/2024/05/23/143000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sansan.connpass.com/event/316664/"&gt;イマドキのC# .NET Web開発 〜gRPC, GraphQL, Blazorもあるよ〜&lt;/a&gt; での発表のフォローアップ記事。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="annulusgamescsv-csharp-fast-csv-serializer-for.net-and-unity"&gt;AnnulusGames/Csv-CSharp: Fast CSV Serializer for .NET and Unity&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AnnulusGames/Csv-CSharp"&gt;https://github.com/AnnulusGames/Csv-CSharp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Generator ベースの高速、ゼロ/低アロケーションの CSV パーサー。Unity での動作もサポートされている。&lt;/p&gt;
&lt;!-- https://x.com/annulusgames/status/1803322411221500067?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;.NET向けのCSVパーサ「Csv-CSharp」のv0.1を公開しました！Source Generatorを活用した設計により、CSVを簡単かつ高速にクラスの配列にパースできます。&lt;br&gt;&lt;br&gt;また、NugetForUnityを使えばUnityでも利用できます！&lt;a href="https://t.co/i2IDSSoEJX"&gt;https://t.co/i2IDSSoEJX&lt;/a&gt; &lt;a href="https://t.co/EMWp6jVUVb"&gt;pic.twitter.com/EMWp6jVUVb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Annulus Games (&amp;#64;AnnulusGames) &lt;a href="https://twitter.com/AnnulusGames/status/1803322411221500067?ref_src=twsrc%5Etfw"&gt;June 19, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/dave_dotnet/status/1804182294539776385?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Why are C# 12 primary constructor params not readonly?&lt;br&gt;&lt;br&gt;I love primary constructors personally but from what I can see online the fact the params aren&amp;#39;t readonly gets a lot of devs quite exercised. &lt;br&gt;&lt;br&gt;Feedback below is from &lt;a href="https://twitter.com/MadsTorgersen?ref_src=twsrc%5Etfw"&gt;&amp;#64;MadsTorgersen&lt;/a&gt; a few months ago and suggests consistency… &lt;a href="https://t.co/VlnzwBzVq4"&gt;pic.twitter.com/VlnzwBzVq4&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1804182294539776385?ref_src=twsrc%5Etfw"&gt;June 21, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/dave_dotnet/status/1802294617666187730?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Generic OrderedDictionary coming in .NET 9  🔥&lt;br&gt;&lt;br&gt;This is awesome and should allow many of us to remove custom code and get the best performance from the built in implementation.&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/jQUAt3FsQb"&gt;pic.twitter.com/jQUAt3FsQb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1802294617666187730?ref_src=twsrc%5Etfw"&gt;June 16, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="windows-add-titlebar-control-by-foda-pull-request-23019-dotnetmaui"&gt;[Windows] Add TitleBar Control by Foda · Pull Request #23019 · dotnet/maui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/maui/pull/23019"&gt;https://github.com/dotnet/maui/pull/23019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI のタイトルバーに関する API の追加 PR。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-06-14: .NET MAUI Extension for VS Code, Windows App SDK 1.5.4, .NET 9 Preview 5</title>
			<link>/2024/06/14/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/06/14/updates</guid>
			<pubDate>Fri, 14 Jun 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="the.net-maui-extension-for-visual-studio-code-is-now-generally-available.net-blog"&gt;The .NET MAUI Extension for Visual Studio Code is now Generally Available - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-dotnet-maui-extension-for-visual-studio-code-is-now-generally-available/"&gt;https://devblogs.microsoft.com/dotnet/the-dotnet-maui-extension-for-visual-studio-code-is-now-generally-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code 向けの .NET MAUI の拡張機能が一般公開された。&lt;/p&gt;
&lt;p&gt;このリリースでは XAML の編集体験の向上やホットリロードといったものが可能となった。この機能拡張は C# Dev Kit と C# 拡張機能の上に構築されているため、ライセンスはそれらと同様のライセンスが必要となる。&lt;/p&gt;
&lt;h3 id="windows-app-sdk-windows-apps"&gt;バージョン 1.5.4 (1.5.240607001) - Windows App SDK の安定チャネルのリリース ノート - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/stable-channel#version-154-15240607001"&gt;https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/stable-channel#version-154-15240607001&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.5.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは WebView2 に関する問題をはじめとしていくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="net-9-preview-5-dotnetcore-discussion-9350"&gt;.NET 9 Preview 5 · dotnet/core · Discussion #9350&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/discussions/9350"&gt;https://github.com/dotnet/core/discussions/9350&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 5 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AI 向けの &lt;code&gt;TensorPrimitives&lt;/code&gt; と &lt;code&gt;Tensor&amp;lt;T&amp;gt;&lt;/code&gt; の強化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Span&lt;/code&gt; オーバーロードでの &lt;code&gt;params&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SearchValues&lt;/code&gt; を使用した文字列の検索&lt;/li&gt;
&lt;li&gt;完了したタスクから &lt;code&gt;foreach&lt;/code&gt; できる &lt;code&gt;Task.WhenEach&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;優先順位付けされた Unbounded Channel (無制限のチャンネル)&lt;/li&gt;
&lt;li&gt;より柔軟な OpenTelemetry アクティビティリンク&lt;/li&gt;
&lt;li&gt;TypeDescriptor のトリミングサポート&lt;/li&gt;
&lt;li&gt;型名パース&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rider-2024.1.3-and-resharper-2024.1.3-updates-are-out-the.net-tools-blog"&gt;Rider 2024.1.3 and ReSharper 2024.1.3 Updates Are Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/10/rd-rsrp-2024-1-3/"&gt;https://blog.jetbrains.com/dotnet/2024/06/10/rd-rsrp-2024-1-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider と ReSharper 2024.1.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Rider と ReSharper ともに Razor での PartialAsync の不要な呼び出しの検出対応が追加され、Rider はセキュリティ修正や最新の SDK の Roslyn への対応、その他 UI の改善などが含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="statically-sized-dynamically-sized-and-other"&gt;Statically Sized, dynamically sized, and other.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_1_3.html"&gt;https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_1_3.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust を MSIL にコンパイルするバックエンドを開発している中で起こしたバグについて。&lt;/p&gt;
&lt;h3 id="using-postgresql-with.net-and-entra-id.net-blog"&gt;Using PostgreSQL with .NET and Entra ID - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/using-postgre-sql-with-dotnet-and-entra-id/"&gt;https://devblogs.microsoft.com/dotnet/using-postgre-sql-with-dotnet-and-entra-id/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire から PostgreSQL を使用する方法と、Entra ID を使用して PostgreSQL をマネージド ID で保護する方法について。&lt;/p&gt;
&lt;h3 id="add-performance-monitor-to-your-nunit-tests"&gt;Add Performance Monitor to Your NUnit Tests&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;nw_enterprise/add-performance-monitor-to-your-nunit-tests-a716de6d74ac"&gt;https://medium.com/&amp;#64;nw_enterprise/add-performance-monitor-to-your-nunit-tests-a716de6d74ac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NUnit でユニットテストを実行時にパフォーマンスカウンターから CPU 使用率やメモリー使用率を取得してモニターする方法について。&lt;/p&gt;
&lt;h3 id="net-aspire"&gt;マイクロサービスを作らない人による .NET Aspire の概要説明（普通に便利）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet-aspire"&gt;https://zenn.dev/microsoft/articles/dotnet-aspire&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire の概要と各種提供している機能について。&lt;/p&gt;
&lt;h3 id="neue-cc-consoleappframework-v5-native-aotccli"&gt;neue cc - ConsoleAppFramework v5 - ゼロオーバーヘッド・Native AOT対応のC#用CLIフレームワーク&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/06/13_ConsoleAppFramework_v5.html"&gt;https://neue.cc/2024/06/13_ConsoleAppFramework_v5.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新たに書き直された Source Generator ベースの CLI フレームワーク ConsoleAppFramework の技術的な解説。&lt;/p&gt;
&lt;h3 id="c-array-and-list-fastest-loop-in-2024-ndepend-blog"&gt;C# Array and List Fastest Loop in 2024 - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/c-array-and-list-fastest-loop/"&gt;https://blog.ndepend.com/c-array-and-list-fastest-loop/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024年の C# における配列と List のループパフォーマンスについての調査。&lt;/p&gt;
&lt;h3 id="catch-up-on-the-latest-git-tooling-features-in-17.10-ga-visual-studio-blog"&gt;Catch up on the latest Git tooling features in 17.10 GA - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/catch-up-on-the-latest-git-tooling-features-in-17-10-ga/"&gt;https://devblogs.microsoft.com/visualstudio/catch-up-on-the-latest-git-tooling-features-in-17-10-ga/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 での Git ツール機能の新機能についての紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コミットメッセージの生成&lt;/li&gt;
&lt;li&gt;Pull request の説明の生成&lt;/li&gt;
&lt;li&gt;コミット履歴の Explain&lt;/li&gt;
&lt;li&gt;ワークアイテムをリンクした Visual Studio からの Pull request の作成 (Azure DevOps)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-17.10-performance-enhancements-visual-studio-blog"&gt;Visual Studio 2022 - 17.10 Performance Enhancements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-performance-enhancements/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-performance-enhancements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 でのパフォーマンス向上についての解説。&lt;/p&gt;
&lt;p&gt;17.10 では Windows Forms デザイナーの読み込み速度の向上、Razor での C# コードの色付け速度の向上、.NET ソリューションの読み込みの高速化、リファクタリングとチューニングによる読み込まれる DLL の削減といった改善が行われている。&lt;/p&gt;
&lt;h3 id="building-generative-ai-apps-with.net-8.net-blog"&gt;Building Generative AI apps with .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/build-gen-ai-with-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/build-gen-ai-with-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で生成 AI のアプリケーションを作ることについて。始め方、監視、エコシステムなどについて簡単に紹介。&lt;/p&gt;
&lt;h3 id="introducing-collection-expressions-in-c12-behind-the-scenes-of-collection-expressions-part-1"&gt;Introducing collection expressions in C#12: Behind the scenes of collection expressions - Part 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-1-introducing-collection-expressions-in-csharp12/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-1-introducing-collection-expressions-in-csharp12/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で導入されたコレクション式についての解説。&lt;/p&gt;
&lt;p&gt;記事ではコレクション初期化子の紹介や、型推論、ReadOnlySpan や空コレクション、スプレッドといった機能を紹介している。&lt;/p&gt;
&lt;h3 id="the-resharper-2024.2-early-access-program-begins-the.net-tools-blog"&gt;The ReSharper 2024.2 Early Access Program begins! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/10/resharper-2024-2-eap-begins/"&gt;https://blog.jetbrains.com/dotnet/2024/06/10/resharper-2024-2-eap-begins/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.2 EAP が開始された。&lt;/p&gt;
&lt;p&gt;この EAP の初期リリースでは Resharper C++ や dotMemory, dotTrace, dotPeek の改善が含まれている。&lt;/p&gt;
&lt;h3 id="rider-starts-its-early-access-program-for-version-2024.2-the.net-tools-blog"&gt;Rider Starts Its Early Access Program for Version 2024.2 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/10/rider-eap-2024-2-2/"&gt;https://blog.jetbrains.com/dotnet/2024/06/10/rider-eap-2024-2-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 EAP が開始された。&lt;/p&gt;
&lt;p&gt;この EAP の初期リリースでは新しい UI のデフォルト化、各種 UI の改善、バージョンコントロールの改善、Web 開発の改善、Unreal Engine アプリケーションのデバッグの改善、パフォーマンスとメモリーのプロファイリングの改善、デコンパイラーの改善、その他ランタイムの更新などが含まれている。&lt;/p&gt;
&lt;h3 id="automated-tests-instrumentation-via-opentelemetry-and-aspire-dashboard"&gt;Automated Tests instrumentation via OpenTelemetry and Aspire Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/nikiforovall/automated-tests-instrumentation-via-opentelemetry-and-aspire-dashboard-13dj"&gt;https://dev.to/nikiforovall/automated-tests-instrumentation-via-opentelemetry-and-aspire-dashboard-13dj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry と Aspire Dashboard を使用して自動テストの計測を行う方法について。&lt;/p&gt;
&lt;h3 id="build-a-generative-ai-rag-app-in-c-with-phi-3-onnx-and-sharpvector-build5nines"&gt;Build A Generative AI + RAG App In C# With Phi-3, ONNX, And SharpVector | Build5Nines&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://build5nines.com/build-a-generative-ai-rag-app-in-c-with-phi-3-onnx-and-sharpvector/"&gt;https://build5nines.com/build-a-generative-ai-rag-app-in-c-with-phi-3-onnx-and-sharpvector/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# と Phi-3、ONNX に著者の実装したインメモリーベクトルデータベースを組み合わせて RAG アプリケーションを実装する方法について。&lt;/p&gt;
&lt;h3 id="getting-started-with-ui-testing.net-maui-apps-using-appium.net-blog"&gt;Getting started with UI testing .NET MAUI apps using Appium - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-maui-ui-testing-appium/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-maui-ui-testing-appium/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Appium を使用して .NET MAUI アプリケーションの UI テストを行う方法について。&lt;/p&gt;
&lt;p&gt;記事では導入方法から記述方法、様々な環境での実行などについても触れている。&lt;/p&gt;
&lt;h3 id="polymorphic-serialization-via-system.text.json-in-asp.net-core-minimal-api"&gt;Polymorphic serialization via System.Text.Json in ASP.NET Core Minimal API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nikiforovall.github.io/dotnet/aspnetcore/2024/04/06/openapi-polymorphism.html"&gt;https://nikiforovall.github.io/dotnet/aspnetcore/2024/04/06/openapi-polymorphism.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Minimal API と System.Text.Json でポリモーフィックな JSON のシリアライズを行う方法について。&lt;/p&gt;
&lt;h3 id="encoding.getstring"&gt;Encoding.GetString()は救われない&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/3d19bf4bb22e6e"&gt;https://zenn.dev/sayurin/articles/3d19bf4bb22e6e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Encoding.GetString&lt;/code&gt; で文字列を作成する際に一時配列を作ってしまうことがあるケースについて。&lt;/p&gt;
&lt;h3 id="net-aspire-1"&gt;マイクロサービス作らなくても .NET Aspire って便利&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet-aspire-minimal"&gt;https://zenn.dev/microsoft/articles/dotnet-aspire-minimal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire をローカル開発サーバー環境(DB、Cacheなど)のセットアップとして活用する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-tmdstmds.ssh.net-ssh-client-library"&gt;GitHub - tmds/Tmds.Ssh: .NET SSH client library&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/tmds/Tmds.Ssh"&gt;https://github.com/tmds/Tmds.Ssh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;モダンな .NET をベースに実装された SSH クライアントの実装。&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;ASP.NET Core MVC, Razor Pages を必要としない ASP.NET Core 向け Razor ベーステンプレートエンジンの Razor Slices がトリミングに対応。&lt;/p&gt;
&lt;!-- https://x.com/damianedwards/status/1799122783802401092?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Razor plus native AOT? Now you can! I finally released my updates to RazorSlices which now supports trimming &amp;amp; native AOT! Use in conjunction with Minimal APIs to get small, fast apps that start instantly.&lt;a href="https://t.co/f7YIgJ1GyD"&gt;https://t.co/f7YIgJ1GyD&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/aspnetcore?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#aspnetcore&lt;/a&gt;&lt;/p&gt;&amp;mdash; Damian Edwards (&amp;#64;DamianEdwards) &lt;a href="https://twitter.com/DamianEdwards/status/1799122783802401092?ref_src=twsrc%5Etfw"&gt;June 7, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="obsolete-servicepointmanager-by-mihazupan-pull-request-103456-dotnetruntime"&gt;Obsolete ServicePointManager 🎉 by MihaZupan · Pull Request #103456 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/103456"&gt;https://github.com/dotnet/runtime/pull/103456&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ServicePointManager&lt;/code&gt; を Obsolete にするという PR。&lt;/p&gt;
&lt;h3 id="use-new-system.net.serversentevents-package-in-signalr-by-brennanconroy-pull-request-56206-dotnetaspnetcore"&gt;Use new System.Net.ServerSentEvents package in SignalR by BrennanConroy · Pull Request #56206 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/pull/56206"&gt;https://github.com/dotnet/aspnetcore/pull/56206&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Server-Sents Events の実装が SignalR の内部のものから新たに追加された System.Net.ServerSentsEvents に移行する PR。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/runtime/pull/102238"&gt;Add System.Net.ServerSentEvents by stephentoub · Pull Request #102238 · dotnet/runtime · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-06-07: MSTest 3.4, OpenAI for .NET 2.0.0-beta.1, Serilog 4.0.0, Windows App SDK 1.6.0-experimental1</title>
			<link>/2024/06/07/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/06/07/updates</guid>
			<pubDate>Fri, 07 Jun 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="mstest-3.4-is-here-with-winui-support-and-new-analyzers.net-blog"&gt;MSTest 3.4 is here with WinUI support and new analyzers! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-mstest-34/"&gt;https://devblogs.microsoft.com/dotnet/introducing-mstest-34/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSTest 3.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは MSTest.Analyzer の様々な改善とバグ修正、STA スレッドのサポート、フィクスチャーメソッドのタイムアウトサポート、MSTest.Sdk での Playwright や Aspire のサポート、MSTest.Runner の WinUI のサポートといった改善が行われている。&lt;/p&gt;
&lt;h3 id="announcing-the-official-openai-library-for.net.net-blog"&gt;Announcing the official OpenAI library for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/openai-dotnet-library/"&gt;https://devblogs.microsoft.com/dotnet/openai-dotnet-library/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenAI の公式クライアントの最初のベータ版である 2.0.0-beta.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このライブラリーでは OpenAI の API のほとんどをカバーし、GPT-4o や IAsyncEnumerable といったものへの対応などが含まれ、今後も最新の機能に合わせて改善が続けられる。&lt;/p&gt;
&lt;p&gt;記事ではこれまでの OpenAI v1.x NuGet パッケージやその他パッケージのコミュニティーについても触れている。&lt;/p&gt;
&lt;h3 id="release-v4.0.0-serilogserilog"&gt;Release v4.0.0 · serilog/serilog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/serilog/serilog/releases/tag/v4.0.0"&gt;https://github.com/serilog/serilog/releases/tag/v4.0.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Serilog 4.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではバッチ処理を簡単に実装できる仕組みがサポートされたほか、実験的なドット付き名前キャプチャーのサポートなどが追加されている。&lt;/p&gt;
&lt;p&gt;またこのリリースから 2.0.0.0 に固定されていたアセンブリバージョンがパッケージのバージョンと一致するようになったため .NET Framework で使用する場合にアセンブリリダイレクトが必要になる場合があるとのこと。&lt;/p&gt;
&lt;h3 id="experimental1-windows-sdk-windows-apps-microsoft-learn"&gt;バージョン 1.6 試験的 (1.6.0-experimental1) - Windows アプリ SDK の最新の試験段階チャネル リリース ノート - Windows apps | Microsoft Learn&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-16-experimental-160-experimental1"&gt;https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-16-experimental-160-experimental1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.6.0-experimental1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは NativeAOT のサポートの追加、TabView の改善、新しい TitleBar コントロール、その他いくつかの改善と新しい API の追加が行われている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6-exp1"&gt;Release Windows App SDK 1.6-experimental1 · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-the-revamped-visual-studio-resource-explorer-visual-studio-blog"&gt;Introducing the Revamped Visual Studio Resource Explorer - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-visual-studio-resource-explorer/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-visual-studio-resource-explorer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 Preview 2 で導入された新しくなったリソースエクスプローラーの紹介。&lt;/p&gt;
&lt;p&gt;新しくなったリソースエクスプローラーではソリューション全体でのビューやダークモード、検索とフィルターといった操作をサポートし、リソースの取り扱いが容易になっている。&lt;/p&gt;
&lt;p&gt;現時点では CSV でのインポート、エクスポートには未対応とのこと。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="thoughts-about-primary-constructors-3-pros-and-5-cons"&gt;Thoughts about primary constructors: 3 pros and 5 cons&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/thoughts-about-primary-constructors-3-pros-and-5-cons/"&gt;https://andrewlock.net/thoughts-about-primary-constructors-3-pros-and-5-cons/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のプライマリーコンストラクターの良いところ3つと落とし穴や微妙なところ5つを紹介している。&lt;/p&gt;
&lt;h3 id="asp.net-mvc-coreactionfilterattributedi3httpclient-qiita"&gt;ASP.NET MVC CoreのActionFilterAttributeにDIする3つの方法（＋アクションフィルタ内でHttpClientを使う） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jun1s/items/c000763f31e6a42bdd3b"&gt;https://qiita.com/jun1s/items/c000763f31e6a42bdd3b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core MVC のアクションフィルターで DI コンテナーからサービスを取り出して使用するための方法について。&lt;code&gt;ServiceFilter&lt;/code&gt;, &lt;code&gt;TypeFilter&lt;/code&gt;, &lt;code&gt;IFilterFactory&lt;/code&gt; を紹介している。&lt;/p&gt;
&lt;h3 id="giving-our-azure-marketplace-images-a-makeover-visual-studio-blog"&gt;Giving our Azure marketplace images a makeover - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/giving-our-visual-studio-azure-marketplace-images-a-makeover/"&gt;https://devblogs.microsoft.com/visualstudio/giving-our-visual-studio-azure-marketplace-images-a-makeover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Marketplace での Visual Studio のインストールされた新しいイメージの追加と非推奨となったオファーについて。&lt;/p&gt;
&lt;h3 id="how-to-readwrite-from-credential-manager-in.net-8"&gt;How to Read/Write from Credential Manager in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/issamboutissante/how-to-readwrite-from-credential-manager-in-net-8-1ag"&gt;https://dev.to/issamboutissante/how-to-readwrite-from-credential-manager-in-net-8-1ag&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows の資格マネージャーを読み書きする方法について。記事では &lt;code&gt;Meziantou.Framework.Win32&lt;/code&gt; パッケージを使用して読み書きを行う方法を紹介している。&lt;/p&gt;
&lt;h3 id="rider-2024.2-roadmap-the.net-tools-blog"&gt;Rider 2024.2 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/05/rider-2024-2-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2024/06/05/rider-2024-2-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 のロードマップ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;パフォーマンス&lt;/li&gt;
&lt;li&gt;ユーザーエクスペリエンス
&lt;ul&gt;
&lt;li&gt;ナビゲーションバーの刷新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;デバッガー
&lt;ul&gt;
&lt;li&gt;タスクビューとタスクの依存関係グラフ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ゲーム開発
&lt;ul&gt;
&lt;li&gt;Unity の IL2CPP バックエンド使用時のデバッグの改善やコレクションビジュアライザーの改善、シェーダーバリアント&lt;/li&gt;
&lt;li&gt;Unreal Engine のデバッグ改善&lt;/li&gt;
&lt;li&gt;Godot のデバッグを含む GDScript のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;フレームワークとテクノロジー&lt;/li&gt;
&lt;li&gt;フルラインコード補完&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="a-beginners-guide-to-mapping-arrays-in-ef-core-8.net-blog"&gt;A beginner's guide to mapping arrays in EF Core 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/array-mapping-in-ef-core-8/"&gt;https://devblogs.microsoft.com/dotnet/array-mapping-in-ef-core-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entiy Framework Core 8 での配列マッピングについての解説。&lt;/p&gt;
&lt;p&gt;記事では PostgreSQL の配列型やそれ以外のデータベースでの JSON を使用した配列、型付き配列、それらがどのように展開されるのかといったことを開設している。&lt;/p&gt;
&lt;h3 id="get-hands-on-with-visual-studio-and-azure-live-at-microsoft-hq-this-august-visual-studio-blog"&gt;Get Hands-On with Visual Studio and Azure: Live at Microsoft HQ this August! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/get-hands-on-with-visual-studio-and-azure-live-at-microsoft-hq-this-august/"&gt;https://devblogs.microsoft.com/visualstudio/get-hands-on-with-visual-studio-and-azure-live-at-microsoft-hq-this-august/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8月5日から9日にかけて Microsoft 本社にて行われる Visual Studio LIVE! イベントの告知。&lt;/p&gt;
&lt;p&gt;記事では Visual Studio LIVE! イベントの概要や早期特別割引の案内を紹介している。&lt;/p&gt;
&lt;h3 id="creating-shell-extensions-in.net-8-with-sharpshell"&gt;Creating Shell Extensions in .NET 8 with SharpShell&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/issamboutissante/creating-shell-extensions-in-net-8-with-sharpshell-2ioe"&gt;https://dev.to/issamboutissante/creating-shell-extensions-in-net-8-with-sharpshell-2ioe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 と &lt;code&gt;SharpShell&lt;/code&gt; を使用してコンテキストメニューのシェル拡張を実装する方法について。&lt;/p&gt;
&lt;h3 id="net-8-blazor-errorboundary"&gt;.NET 8 での Blazor で ErrorBoundary を使ったエラーハンドリングの注意点&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-errorboundary"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-errorboundary&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor における ErrorBoundary を使用してエラーをハンドリングする方法と注意すべき点について。&lt;/p&gt;
&lt;h3 id="state-machines-light-switches-and-space-travel-with-stateless-and.net-8"&gt;State Machines, Light Switches, and Space Travel with Stateless and .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/state-machines-light-switches-and-space-travel-with-stateless-and-dotnet-8"&gt;https://khalidabuhakmeh.com/state-machines-light-switches-and-space-travel-with-stateless-and-dotnet-8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Stateless&lt;/code&gt; を使用したステートマシンの実装方法の紹介。記事では UmlDotGraph を使用したグラフの出力などについても触れている。&lt;/p&gt;
&lt;h3 id="understanding-the-exception.hresult-property-in-c"&gt;Understanding the Exception.HResult property in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/understanding-the-exception-hresult-property-in-c/"&gt;https://blog.elmah.io/understanding-the-exception-hresult-property-in-c/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exception の HResult プロパティーについての解説。&lt;/p&gt;
&lt;p&gt;記事では HResult はどのような役割でどのようなルールで値が設定されるのか、その読み方と調べ方について振れている。&lt;/p&gt;
&lt;h3 id="microsoft-photos-migrating-from-uwp-to-windows-app-sdk"&gt;Microsoft Photos: Migrating from UWP to Windows App SDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blogs.windows.com/windowsdeveloper/2024/06/03/microsoft-photos-migrating-from-uwp-to-windows-app-sdk/"&gt;https://blogs.windows.com/windowsdeveloper/2024/06/03/microsoft-photos-migrating-from-uwp-to-windows-app-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows のフォトアプリを UWP から Windows App SDK へ移行した事例についての説明。&lt;/p&gt;
&lt;p&gt;記事ではプロセスモデルが変わったこと、WebView2 を使用できるようになったこと、メンテナンス性の向上、ASTA から STA にかわったことや AutoPlay といった技術的なチャレンジといった点を解説している。&lt;/p&gt;
&lt;h3 id="c-onnx-runtime-generative-ai-directml-phi-3"&gt;C# と ONNX Runtime Generative AI (DirectML) を使って Phi-3 をローカルで動かす - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20240604/1717465930"&gt;https://blog.shibayan.jp/entry/20240604/1717465930&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ONNX Runtime Generative AI (DirectML) を使用して Phi-3 モデルをローカル環境で動かしてみる解説。&lt;/p&gt;
&lt;h3 id="why-you-should-batch-message-processing-and-how-to-do-it-with.net-asyncenumerable-event-driven.io"&gt;Why you should batch message processing and how to do it with .NET AsyncEnumerable - Event-Driven.io&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://event-driven.io/en/batching_async_enumerable/"&gt;https://event-driven.io/en/batching_async_enumerable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AsyncEnumerable を使用しつつメッセージをバッチ処理する方法について。&lt;/p&gt;
&lt;p&gt;記事では Open.ChannelExtensions ライブラリーを使用して Channel を元に AsyncEnumerable を作成する方法を紹介している。&lt;/p&gt;
&lt;h3 id="primitive-vs-strongly-typed-dictionary-keys-feat.frozen-collections-and-benchmarkdotnet"&gt;Primitive vs strongly typed dictionary keys (feat. frozen collections and BenchmarkDotNet)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.codingmilitia.com/2024/04/13/primitive-vs-strongly-typed-dictionary-keys-feat-frozen-collections-and-benchmarkdotnet/"&gt;https://blog.codingmilitia.com/2024/04/13/primitive-vs-strongly-typed-dictionary-keys-feat-frozen-collections-and-benchmarkdotnet/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="weakly-and-strongly-typed-values-in.net"&gt;Weakly and strongly typed values in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://yoh.dev/weakly-and-strongly-typed-values-in-dotnet"&gt;https://yoh.dev/weakly-and-strongly-typed-values-in-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プリミティブ(弱い型)とそれをラップした強い型を使用した FrozenDictionary の参照パフォーマンスについて。&lt;/p&gt;
&lt;h3 id="com-cexcel-qiita"&gt;COM の解放について (C#、Excel) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nnkanegon/items/1715b0da782e3dd713c9"&gt;https://qiita.com/nnkanegon/items/1715b0da782e3dd713c9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;COM オブジェクトの解放に関する問題と、解放漏れによるリークを調査する方法について。&lt;/p&gt;
&lt;h3 id="microsoft-ime-qiita"&gt;Microsoft IME の変換候補だけ欲しい - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Fom/items/d9e421bae516be85d675"&gt;https://qiita.com/Fom/items/d9e421bae516be85d675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IME による変換候補を取得するライブラリーとその利用方法についての簡単な紹介。&lt;/p&gt;
&lt;h3 id="refactor-your-code-using-alias-any-type.net-blog"&gt;Refactor your code using alias any type - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/refactor-your-code-using-alias-any-type/"&gt;https://devblogs.microsoft.com/dotnet/refactor-your-code-using-alias-any-type/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 の任意の型のエイリアスを使用してリファクタリングしよう、という記事。&lt;/p&gt;
&lt;h3 id="using-keycloak-in.net-aspire-projects"&gt;Using Keycloak in .NET Aspire projects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nikiforovall.github.io/dotnet/keycloak/2024/06/02/aspire-support-for-keycloak.html"&gt;https://nikiforovall.github.io/dotnet/keycloak/2024/06/02/aspire-support-for-keycloak.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="netplaywright"&gt;.NETでPlaywrightのテスト環境を構築しよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/vscode_playwright"&gt;https://zenn.dev/zead/articles/vscode_playwright&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Playwright を使用したブラウザーテストの環境構築について。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-05-31: Build 2024, grpc-dotnet v2.63.0</title>
			<link>/2024/05/31/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/05/31/updates</guid>
			<pubDate>Fri, 31 May 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="catch-up-on-microsoft-build-2024-essential-sessions-for.net-developers.net-blog"&gt;Catch Up on Microsoft Build 2024: Essential Sessions for .NET Developers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/catching-up-on-microsoft-build-2024-essential-sessions-for-dotnet-developers/"&gt;https://devblogs.microsoft.com/dotnet/catching-up-on-microsoft-build-2024-essential-sessions-for-dotnet-developers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Build 2024 での .NET 開発者向けの動画の紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLdo4fOcmZ0oUZz7p8H1HsQjgv5tRRIvAS"&gt;.NET at Microsoft Build 2024 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-release-v2.63.0-grpcgrpc-dotnet"&gt;Release Release v2.63.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.63.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.63.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.63.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではメモリーリークやレースコンディションといったいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="introducing-libvlcsharp-for-maui"&gt;Introducing LibVLCSharp for MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/mfkl/introducing-libvlcsharp-for-maui-naj"&gt;https://dev.to/mfkl/introducing-libvlcsharp-for-maui-naj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LibVLCSharp の .NET MAUI 対応版のリリース。&lt;/p&gt;
&lt;p&gt;この初期リリースでは Android と iOS をサポートし、WinUI への対応はフィードバックなどを経て検討とのこと。&lt;/p&gt;
&lt;h3 id="introducing-links-to-source-code-for.net-api-docs.net-blog"&gt;Introducing links to source code for .NET API Docs - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-docs-link-to-source-code/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-docs-link-to-source-code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;learn.microsoft.com の .NET API ドキュメントからソースコードへのリンクが実装されたことと、その実装の裏側の解説。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="testcontainers-for.netpodman"&gt;Testcontainers for .NETをpodmanで動かす&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/k_maru/articles/testcontainersdotnet_podman"&gt;https://zenn.dev/k_maru/articles/testcontainersdotnet_podman&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Testcontainers for .NET によるコンテナーの実行を Docker の代わりに Podman を使用する方法について。&lt;/p&gt;
&lt;h3 id="a-modern-extension-manager-has-arrived-with-visual-studio-17.10-visual-studio-blog"&gt;A modern Extension Manager has arrived with Visual Studio 17.10 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-extension-manager-17-10/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-extension-manager-17-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 で導入された新しくなった拡張マネージャーについての紹介。&lt;/p&gt;
&lt;h3 id="things-you-didnt-know-about-jetbrains-riders-nuget-support-the.net-tools-blog"&gt;9 Things You Didn't Know About JetBrains Rider's NuGet Support | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/29/9-things-you-didn-t-know-about-jetbrains-rider-s-nuget-support/"&gt;https://blog.jetbrains.com/dotnet/2024/05/29/9-things-you-didn-t-know-about-jetbrains-rider-s-nuget-support/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider の NuGet サポートに関する9つのポイントの紹介。&lt;/p&gt;
&lt;p&gt;ツールウィンドウ、パッケージソース管理、キャッシュ管理、Assembly Explorer でパッケージを開く、プレリリース版チェックボックス、Checkmarx を使用したセキュリティー、依存してるコードの検索、一か所でのパッケージアップデート、設定、など。&lt;/p&gt;
&lt;h3 id="wpfgo"&gt;脱初心者！WPFで次のステップへGO！&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/luxiar/articles/f25596cd1876a2"&gt;https://zenn.dev/luxiar/articles/f25596cd1876a2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF のアプリケーションを作るとっかかりとなる構成とテクニックの紹介。&lt;/p&gt;
&lt;h3 id="choosing-the-best-immutable-dictionary-for-your-c-projects"&gt;Choosing the Best Immutable Dictionary for Your C# Projects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://goatreview.com/choosing-best-immutable-dictionary-csharp-projects/"&gt;https://goatreview.com/choosing-best-immutable-dictionary-csharp-projects/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;イミュータブルな Dictionary について ReadOnlyDictionary, ImmutableDictionary, FrozenDictionary のパフォーマンスと特性を比較、説明している。&lt;/p&gt;
&lt;h3 id="visualstudio.extensibility-17.10-debug-your-extensions-with-the-diagnostics-explorer-visual-studio-blog"&gt;VisualStudio.Extensibility 17.10: Debug your extensions with the Diagnostics Explorer - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-10/"&gt;https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新しい Visual Studio の拡張モデル、VisualStudio.Extensibility の 17.10 での新機能について。&lt;/p&gt;
&lt;p&gt;Diagnostics Explorer によるデバッグ、XAML リソース、ファイルの選択、プロジェクトに対してクエリーした結果のトラッキングなど。&lt;/p&gt;
&lt;h3 id="xunit-ilogger-qiita"&gt;xUnit の単体テストで ILogger への出力を実現する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/higege-amdeker/items/4e2adfcc1b57628d2c71"&gt;https://qiita.com/higege-amdeker/items/4e2adfcc1b57628d2c71&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;xUnit を使用したユニットテストで ILogger への出力をテストアウトプットへ出力する方法について。&lt;/p&gt;
&lt;h3 id="blocking-primary-constructor-member-capture-using-a-roslyn-analyzer"&gt;Blocking primary constructor member capture using a Roslyn Analyzer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/blocking-primary-constructor-member-capture-using-an-analyzer/"&gt;https://andrewlock.net/blocking-primary-constructor-member-capture-using-an-analyzer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プライマリーコンストラクターのキャプチャーをブロックする Analyzer を Roslyn.Diagnostics.Analyzers から使用、または独自の Analyzer で実装する方法について。&lt;/p&gt;
&lt;h3 id="publish-and-view-mstest-test-results-in-github-actions"&gt;Publish and view MSTest test results in Github Actions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ma11hewthomas/publish-and-view-mstest-test-results-in-github-actions-35f11d97a259"&gt;https://medium.com/&amp;#64;ma11hewthomas/publish-and-view-mstest-test-results-in-github-actions-35f11d97a259&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSTest の結果を .NET 向け CTRF レポーターと github-actions-ctrf によって GitHub Actions のレポートに出力する方法。&lt;/p&gt;
&lt;h3 id="how-to-update-a-nuget-library-once-the-author-isnt-available-the-reformed-programmer"&gt;How to update a NuGet library once the author isn’t available – The Reformed Programmer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.thereformedprogrammer.net/how-to-update-a-nuget-library-once-the-author-isnt-available/"&gt;https://www.thereformedprogrammer.net/how-to-update-a-nuget-library-once-the-author-isnt-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;認知症となった著者がライブラリーを更新できなくなった時にも他の人が更新できるようにするために行ったことについて。&lt;/p&gt;
&lt;h3 id="net-aspire-aspirebuild-2024"&gt;.NET Aspire が正式リリース！Aspireを紹介したBuild 2024のセッションを紹介します&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/adf174ff96d3cb"&gt;https://zenn.dev/jtechjapan_pub/articles/adf174ff96d3cb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Build 2024 で .NET Aspire について触れているセッションの紹介。&lt;/p&gt;
&lt;h3 id="casyncawait-annulus-games"&gt;【C#】非同期処理とasync/await - Annulus Games&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://annulusgames.com/blog/async-await/"&gt;https://annulusgames.com/blog/async-await/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 非同期についてC# の async/await をはじめ、キャンセルや IAsyncEnumerable などについて仕組みを含めた解説。&lt;/p&gt;
&lt;h3 id="avalonia-ui-enhance-your-app-with-fluentavalonia-theme-customization"&gt;Avalonia UI: Enhance Your App with FluentAvalonia Theme Customization&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;faruk.akyapak/avalonia-ui-enhance-your-app-with-fluentavalonia-theme-customization-0e8b9bdb4b16"&gt;https://medium.com/&amp;#64;faruk.akyapak/avalonia-ui-enhance-your-app-with-fluentavalonia-theme-customization-0e8b9bdb4b16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia の FluentAvalonia テーマをカスタマイズする方法について。&lt;/p&gt;
&lt;h3 id="c.netbyteskb-mb-gb"&gt;C# (.NET)でバイト(Bytes)をKB, MB, GBに変換したい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/hirosukekayaba/articles/77d3ae2d90956a"&gt;https://zenn.dev/hirosukekayaba/articles/77d3ae2d90956a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ファイルサイズをKB, MB, GB といった単位で文字列フォーマットするテクニックについて。&lt;/p&gt;
&lt;h3 id="trigger-your-gcs-with-dotnet-fullgc"&gt;Trigger your GCs with dotnet-fullgc!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/trigger-your-gcs-with-dotnet-fullgc-c51bc3e364dc"&gt;https://chnasarre.medium.com/trigger-your-gcs-with-dotnet-fullgc-c51bc3e364dc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コマンドラインから実行中の .NET プロセスで GC を実行するツールとその実装方法について。&lt;/p&gt;
&lt;h3 id="net-8-blazor-wasm-grpc"&gt;.NET 8 の Blazor で WASM + gRPC のプロジェクトを作る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasm-with-grpc"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasm-with-grpc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor WebAssembly プロジェクトで gRPC (Web) を使用した通信を行う方法について。&lt;/p&gt;
&lt;h3 id="re-observability"&gt;Re:ゼロから始める Observability - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2024/05/25/164314"&gt;https://blog.neno.dev/entry/2024/05/25/164314&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Observability とは何かや OpenTelemetry の用語について、C#/.NET での取り扱いや Collector の活用について。&lt;/p&gt;
&lt;h3 id="colorpalettepublic-constructor"&gt;ColorPaletteクラスにpublic constructorが登場！&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/2700249955ee48"&gt;https://zenn.dev/sayurin/articles/2700249955ee48&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で System.Drawing.Imaging.ColorPalette クラスのコンストラクターが公開されることについて。&lt;/p&gt;
&lt;p&gt;これにより従来カラーパレット捜査上取り扱いづらい問題があった点が緩和される。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="microsoft-build-japan-20240627-1000"&gt;Microsoft Build Japan (2024/06/27 10:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msdevjp.connpass.com/event/320534/"&gt;https://msdevjp.connpass.com/event/320534/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor.net-20240704-1330"&gt;Blazor+ローコードで実現する.NET資産のモダナイズ (2024/07/04 13:30〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codeer.connpass.com/event/319762/"&gt;https://codeer.connpass.com/event/319762/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="f"&gt;関数型ドメインモデリング ドメイン駆動設計とF#でソフトウェアの複雑さに立ち向かおう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.kadokawa.co.jp/product/302405003608/"&gt;https://www.kadokawa.co.jp/product/302405003608/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ドメイン駆動開発に関数型プログラミング F# を用いてモデリング、構築する方法を紹介する本。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-05-24: .NET Aspire GA, Visual Studio 2022 17.10, .NET 9 Preview 4</title>
			<link>/2024/05/24/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/05/24/updates</guid>
			<pubDate>Fri, 24 May 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-announcements-updates-from-microsoft-build-2024.net-blog"&gt;.NET Announcements &amp;amp; Updates from Microsoft Build 2024 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-build-2024-announcements/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-build-2024-announcements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Build 2024 での .NET に関するアナウンスとアップデート。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AI 関連
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Tensor&amp;lt;T&amp;gt;&lt;/code&gt; 型の導入&lt;/li&gt;
&lt;li&gt;Smart Component の紹介&lt;/li&gt;
&lt;li&gt;AI エコシステムの拡張&lt;/li&gt;
&lt;li&gt;LLM アプリケーションのモニタリング
&lt;ul&gt;
&lt;li&gt;Semantic Kernel のテレメトリー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET を使用したクラウドネイティブな開発
&lt;ul&gt;
&lt;li&gt;.NET Aspire の GA&lt;/li&gt;
&lt;li&gt;Linux ネイティブな .NET
&lt;ul&gt;
&lt;li&gt;Ubuntu や RedHat など公式フィードからのインストール&lt;/li&gt;
&lt;li&gt;Ubuntu Chiseled コンテナー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;メモリー使用量の削減
&lt;ul&gt;
&lt;li&gt;.NET 9 でのサーバーの GC の変更による使用量の削減&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C# 13
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; の拡張&lt;/li&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; の &lt;code&gt;Span&amp;lt;T&amp;gt;&lt;/code&gt; 対応&lt;/li&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; とインターフェース&lt;/li&gt;
&lt;li&gt;Extension types&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web 開発
&lt;ul&gt;
&lt;li&gt;ビルトイン OpenAPI ドキュメント生成&lt;/li&gt;
&lt;li&gt;HybridCache API による分散キャッシュ&lt;/li&gt;
&lt;li&gt;Blazor によるフルスタック Web UI
&lt;ul&gt;
&lt;li&gt;コンポーネントのコンストラクターインジェクション&lt;/li&gt;
&lt;li&gt;WebSocket の圧縮&lt;/li&gt;
&lt;li&gt;グローバルにインタラクティブなアプリにおける静的ページ生成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;マルチプラットフォーム開発&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="general-availability-of.net-aspire-simplifying.net-cloud-native-development.net-blog"&gt;General Availability of .NET Aspire: Simplifying .NET Cloud-Native Development - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-aspire-general-availability/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-aspire-general-availability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire が GA (一般提供) となった。&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.10 や最新の .NET CLI, Visual Studio Code を通して使用可能となっている。&lt;/p&gt;
&lt;p&gt;記事では .NET Aspire を選択する理由や App Host プロジェクトを通してローカルでの開発体験について、ダッシュボードで OpenTelemetry のデータを表示できること、サードパーティーコンポーネント、クラウドへのプロビジョニング/デプロイについてなどが解説されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/developing-cloud-native-apps-with-aspire/"&gt;Developing cloud native apps with Aspire - Visual Studio Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-17.10-and-github-copilot-your-coding-partner-for-faster-and-smarter-development-visual-studio-blog"&gt;Visual Studio 2022 17.10 and GitHub Copilot: Your Coding Partner for Faster and Smarter Development - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.10 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは以前まで拡張機能として提供されていた GitHub Copilot と Copilot Chat の Visual Studio への統合が行われており、記事では GitHub Copilot を使ったコーディング体験やデバッグの効率化、テストのスキャフォールディングなどが紹介されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/ja-jp/visualstudio/releases/2022/release-notes#17.10.0"&gt;Visual Studio 2022 バージョン 17.10.0 | Visual Studio 2022 リリース ノート | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing-nuget-6.10-the-nuget-blog"&gt;Announcing NuGet 6.10 - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/"&gt;https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet 6.10 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは &lt;code&gt;dotnet nuget config&lt;/code&gt; コマンドの追加、&lt;code&gt;packages.config&lt;/code&gt; の脆弱性監査、キャッシュされた資格情報の利用、といった改善が含まれている。&lt;/p&gt;
&lt;h3 id="net-9-preview-4-issue-309-dotnetannouncements"&gt;.NET 9 Preview 4 · Issue #309 · dotnet/announcements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/announcements/issues/309"&gt;https://github.com/dotnet/announcements/issues/309&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 4 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;UnsafeAccessorAttribute&lt;/code&gt; のジェネリックパラメーターサポート&lt;/li&gt;
&lt;li&gt;トリミングサポートのためのフィーチャースイッチ&lt;/li&gt;
&lt;li&gt;トークナイザーライブラリーの強化&lt;/li&gt;
&lt;li&gt;OpenTelemetry: より柔軟なアクティビティーのリンク&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System.Reflection.Emit.PersistedAssemblyBuilder&lt;/code&gt; の PDB サポート&lt;/li&gt;
&lt;li&gt;.NET Data と EF Core
&lt;ul&gt;
&lt;li&gt;Azure Cosmos DB for NoSQL プロバイダーの強化&lt;/li&gt;
&lt;li&gt;複合型の GroupBy&lt;/li&gt;
&lt;li&gt;読み取り専用プリミティブコレクション&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET MAUI
&lt;ul&gt;
&lt;li&gt;新しい入力キーボード&lt;/li&gt;
&lt;li&gt;Android 15 Beta 1 サポート&lt;/li&gt;
&lt;li&gt;iOS と Mac Catalyst の NativeAOT 改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core
&lt;ul&gt;
&lt;li&gt;OpenAPI ドキュメント生成のビルトインサポート&lt;/li&gt;
&lt;li&gt;HybridCache の導入&lt;/li&gt;
&lt;li&gt;開発者向け例外ページの改善&lt;/li&gt;
&lt;li&gt;QuickGrid の OverscanCount パラメーターの追加&lt;/li&gt;
&lt;li&gt;グローバルにインタラクティブな Blazor Web アプリの静的 SSR ページ&lt;/li&gt;
&lt;li&gt;IIS でのアプリリサイクル中の 503 の回避&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WPF
&lt;ul&gt;
&lt;li&gt;テーマの改善: Windows 11 テーマのサポート&lt;/li&gt;
&lt;li&gt;ハイフンベースの合字サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="first-preview-of-visual-studio-2022-v17.11-visual-studio-blog"&gt;First preview of Visual Studio 2022 v17.11 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-11/"&gt;https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-11/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.11 Preview 1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは主に開発者とワークロードの QoL の向上にフォーカスした改善が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/ja-jp/visualstudio/releases/2022/release-notes-preview#version-1711-preview-1"&gt;バージョン 17.11 Preview 1 | Visual Studio 2022 Preview リリース ノート | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="maximizing-joy-and-minimizing-toil-with-great-developer-experiences-visual-studio-blog"&gt;Maximizing joy and minimizing toil with great developer experiences - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/maximizing-joy-and-minimizing-toil-with-great-developer-experiences/"&gt;https://devblogs.microsoft.com/visualstudio/maximizing-joy-and-minimizing-toil-with-great-developer-experiences/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Build 2024 で発表のあった新製品や新機能を中心とした開発者向けの紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studio 2022 17.10 の一般提供&lt;/li&gt;
&lt;li&gt;GitHub Copilot for Azure プレビュー&lt;/li&gt;
&lt;li&gt;.NET Aspire の一般提供&lt;/li&gt;
&lt;li&gt;AI Toolkit for Visual Studio Code の発表&lt;/li&gt;
&lt;li&gt;Azure API Management での生成 AI ゲートウェイ&lt;/li&gt;
&lt;li&gt;Azure API Center の一般提供&lt;/li&gt;
&lt;li&gt;Azure Container Apps のサンドボックス実行 (Dynamic Sessions)&lt;/li&gt;
&lt;li&gt;Microsoft Dev Box と Azure Deployment Environments の新機能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="winui3microsoft.ui.xaml.dll"&gt;WinUI3のプロジェクトでMicrosoft.UI.Xaml.dllが見つからないエラー&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nin_neko/articles/1085f4cc2ca6d6"&gt;https://zenn.dev/nin_neko/articles/1085f4cc2ca6d6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最新の Visual Studio に含まれる WinUI 3 のプロジェクトテンプレートで非パッケージのデバッグ実行でエラーが出る問題と解消方法について。&lt;/p&gt;
&lt;h3 id="ccmsorchard-core"&gt;C#ベースのオープンソースCMS「Orchard Core」の環境構築&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/orchardcore-setup"&gt;https://zenn.dev/zead/articles/orchardcore-setup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Orchard Core をテンプレートから作成して立ち上げる手順について。&lt;/p&gt;
&lt;h3 id="introduction-to-shortcircuit-and-mapshortcircuit-in.net-8"&gt;Introduction to ShortCircuit and MapShortCircuit in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/moh_moh701/introduction-to-shortcircuit-and-mapshortcircuit-in-net-8-12ml"&gt;https://dev.to/moh_moh701/introduction-to-shortcircuit-and-mapshortcircuit-in-net-8-12ml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core で導入された &lt;code&gt;ShortCircuit&lt;/code&gt; と &lt;code&gt;MapShortCircuit&lt;/code&gt; について。&lt;/p&gt;
&lt;h3 id="on"&gt;イベントハンドラ名のプレフィックス「on」の解釈&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/lilytechlab/articles/ba599338ce469b"&gt;https://zenn.dev/lilytechlab/articles/ba599338ce469b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;イベントハンドラー名に慣習的に使われる &lt;code&gt;On&lt;/code&gt; プレフィックスについての考察。&lt;/p&gt;
&lt;h3 id="observe-file-system-changes-with-reactive-extensions-for.net-endjin"&gt;Observe File System Changes with Reactive Extensions for .NET | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2024/05/observe-file-system-changes-with-rx-dotnet"&gt;https://endjin.com/blog/2024/05/observe-file-system-changes-with-rx-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rx を使用してファイルシステム上の変更を監視するコードを記述することについて。&lt;/p&gt;
&lt;h3 id="net-9-linq-performance-edition"&gt;.NET 9 LINQ Performance Edition&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/783a404a-e39e-480f-bc99-a514a75d752d"&gt;https://steven-giesel.com/blogPost/783a404a-e39e-480f-bc99-a514a75d752d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で改善される LINQ のオペレーターを .NET 8 と比較して紹介。&lt;/p&gt;
&lt;h3 id="project-idx.net-6-azure-functions-qiita"&gt;ベータ版の Project IDX で .NET 6 と Azure Functions の開発環境を作ってみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mnrst/items/3f15c85167efe846ee2c"&gt;https://qiita.com/mnrst/items/3f15c85167efe846ee2c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google のブラウザーベースの IDE Project IDX で .NET 6 と Azure Functions の開発環境を構築する手順について。&lt;/p&gt;
&lt;h3 id="netroslyn-light11"&gt;【.NET】Roslynを使った構文解析とセマンティック解析のやり方まとめ - LIGHT11&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://light11.hatenadiary.com/entry/2024/05/20/190949"&gt;https://light11.hatenadiary.com/entry/2024/05/20/190949&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Roslyn でのコードの解析についての解説。記事では構文解析とセマンティック解析について触れている。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ref struct&lt;/code&gt; のインターフェースの話。(Roslyn 側ではすでにマージされている)&lt;/p&gt;
&lt;!-- https://x.com/jaredpar/status/1792689177206882745?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;ref struct can now implement interfaces and participate in generics. Excited to see all of the ways the community finds to use this &lt;a href="https://t.co/VKXeNdisBq"&gt;https://t.co/VKXeNdisBq&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jared Parsons (&amp;#64;jaredpar) &lt;a href="https://twitter.com/jaredpar/status/1792689177206882745?ref_src=twsrc%5Etfw"&gt;May 20, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-05-18: Npgsql security fix, .NET 6.0.30/7.0.19/8.0.5, Windows App SDK 1.4.6</title>
			<link>/2024/05/18/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/05/18/updates</guid>
			<pubDate>Sat, 18 May 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-v8.0.3-npgsqlnpgsql"&gt;Release v8.0.3 · npgsql/npgsql&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v8.0.3"&gt;https://github.com/npgsql/npgsql/releases/tag/v8.0.3&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v7.0.7"&gt;Release v7.0.7 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v6.0.11"&gt;Release v6.0.11 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v5.0.18"&gt;Release v5.0.18 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v4.1.13"&gt;Release v4.1.13 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v4.0.14"&gt;Release v4.0.14 · npgsql/npgsql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-and.net-framework-may-2024-servicing-updates.net-blog"&gt;.NET and .NET Framework May 2024 Servicing Updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-may-2024-servicing-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-may-2024-servicing-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-windows-app-sdk-1.4.6-1.4.240512000-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.4.6 (1.4.240512000) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.6"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mongodb-provider-for-entity-framework-core-now-generally-available-mongodb-blog"&gt;MongoDB Provider for Entity Framework Core Now Generally Available | MongoDB Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.mongodb.com/blog/post/mongodb-provider-entity-framework-core-now-generally-available"&gt;https://www.mongodb.com/blog/post/mongodb-provider-entity-framework-core-now-generally-available&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2024.1.2-is-available-for-download-the.net-tools-blog"&gt;ReSharper 2024.1.2 Is Available For Download | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/07/resharper-2024-1-2/"&gt;https://blog.jetbrains.com/dotnet/2024/05/07/resharper-2024-1-2/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2024.1.2-is-now-available-the.net-tools-blog"&gt;Rider 2024.1.2 Is Now Available! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/07/rider-2024-1-2/"&gt;https://blog.jetbrains.com/dotnet/2024/05/07/rider-2024-1-2/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-nuget-commands-in-c-dev-kit-the-nuget-blog"&gt;Announcing NuGet Commands in C# Dev Kit - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/"&gt;https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="package-management-improved.net-aspire-support-come-to-c-dev-kit.net-blog"&gt;Package Management &amp;amp; improved .NET Aspire support come to C# Dev Kit - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/may-release-of-csharp-dev-kit/"&gt;https://devblogs.microsoft.com/dotnet/may-release-of-csharp-dev-kit/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-8.4.0-app-vnextpolly"&gt;Release 8.4.0 · App-vNext/Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.4.0"&gt;https://github.com/App-vNext/Polly/releases/tag/8.4.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v6.6.1-domaindrivendevswashbuckle.aspnetcore"&gt;Release v6.6.1 · domaindrivendev/Swashbuckle.AspNetCore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v6.6.1"&gt;https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v6.6.1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="get-ready-for-visual-studio-at-build-2024-join-thousands-online-visual-studio-blog"&gt;Get Ready for Visual Studio at Build 2024: Join Thousands Online! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-at-build-2024/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-at-build-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="what-is-new-in-entity-framework-6.5-classic"&gt;What is new in Entity Framework 6.5 Classic&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://erikej.github.io/ef6/dotnet/2024/05/16/ef6-whatsnew.html"&gt;https://erikej.github.io/ef6/dotnet/2024/05/16/ef6-whatsnew.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-in-orleans-8-for-scalable-distributed-applications.net-blog"&gt;What's new in Orleans 8 for Scalable Distributed Applications - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/whats-new-in-orleans-8/"&gt;https://devblogs.microsoft.com/dotnet/whats-new-in-orleans-8/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-preview-7.net-aspire"&gt;.NET Aspire preview 7 - .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-7"&gt;https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-7&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="v1.11.0-meadow-v1.releases-wilderness-labs-developer-portal"&gt;v1.11.0 | Meadow v1.* Releases | Wilderness Labs Developer Portal&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://developer.wildernesslabs.co/Meadow/Release_Notes/v1/#v1110"&gt;https://developer.wildernesslabs.co/Meadow/Release_Notes/v1/#v1110&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクルなど&lt;/h2&gt;
&lt;h3 id="null-ef-core-code-first-qiita"&gt;null 許容参照型と EF Core Code First - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SurferOnWww/items/67d8e8d86234ac138445"&gt;https://qiita.com/SurferOnWww/items/67d8e8d86234ac138445&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the.net-generic-math-library-ndepend-blog"&gt;The .NET Generic Math Library - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/dotnet-generic-math/"&gt;https://blog.ndepend.com/dotnet-generic-math/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="a-complete.net-developers-guide-to-span-with-stephen-toub-youtube"&gt;A Complete .NET Developer's Guide to Span with Stephen Toub - YouTube&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=5KdICNWOfEQ&amp;amp;list=PLdo4fOcmZ0oX8eqDkSw4hH9cSehrGgdr1&amp;amp;index=5"&gt;https://www.youtube.com/watch?v=5KdICNWOfEQ&amp;amp;list=PLdo4fOcmZ0oX8eqDkSw4hH9cSehrGgdr1&amp;amp;index=5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8-blazor-wasm-api"&gt;.NET 8 の Blazor で WASM + API のプロジェクトを作る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasm-with-apis"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasm-with-apis&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improve-your-code-quality-with-github-copilot-in-visual-studio-visual-studio-blog"&gt;Improve your code quality with GitHub Copilot in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/improve-your-code-quality-with-github-copilot-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/improve-your-code-quality-with-github-copilot-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ccmsorchard-core"&gt;C#ベースのオープンソースCMS「Orchard Core」について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/f604f9ad31f941"&gt;https://zenn.dev/zead/articles/f604f9ad31f941&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mastering-slash-commands-with-github-copilot-in-visual-studio-visual-studio-blog"&gt;Mastering Slash Commands with GitHub Copilot in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/mastering-slash-commands-with-github-copilot-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/mastering-slash-commands-with-github-copilot-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-switchif-qiita"&gt;【C#】 拡張メソッドで型によるswitchやif判定をできるだけ消す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/toRisouP/items/12afeb98a0971095d409"&gt;https://qiita.com/toRisouP/items/12afeb98a0971095d409&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azure-toolkit-for-rider-v4.0-preview-request-for-feedback-the.net-tools-blog"&gt;Azure Toolkit for Rider v4.0 Preview - Request For Feedback | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/14/azure-toolkit-for-rider-v4-0-preview-request-for-feedback/"&gt;https://blog.jetbrains.com/dotnet/2024/05/14/azure-toolkit-for-rider-v4-0-preview-request-for-feedback/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-introduction-to-primary-constructors-in-c12"&gt;An introduction to primary constructors in C#12&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/an-introduction-to-primary-constructors-in-csharp-12/"&gt;https://andrewlock.net/an-introduction-to-primary-constructors-in-csharp-12/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cplaywright-qiita"&gt;C#で自動テスト(Playwright) 環境構築～テスト実行手順 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/noritama08/items/ed3f79e7feb061e36774"&gt;https://qiita.com/noritama08/items/ed3f79e7feb061e36774&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="configureawait-qiita"&gt;ConfigureAwait によるデッドロックの回避 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SurferOnWww/items/2dd628101923419cc44a"&gt;https://qiita.com/SurferOnWww/items/2dd628101923419cc44a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="await-task.result-qiita"&gt;await と Task.Result によるデッドロック - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SurferOnWww/items/bd4e483cce7acaee4f30"&gt;https://qiita.com/SurferOnWww/items/bd4e483cce7acaee4f30&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qiita"&gt;非同期プログラミング - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SurferOnWww/items/06dc1e3df702596272ba"&gt;https://qiita.com/SurferOnWww/items/06dc1e3df702596272ba&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-ssr-web-components-and-enhance-wasm"&gt;ASP.NET Core, SSR Web Components, and Enhance Wasm&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/aspnet-core-ssr-web-components-and-enhance-wasm"&gt;https://khalidabuhakmeh.com/aspnet-core-ssr-web-components-and-enhance-wasm&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="localizing-a.net-console-or-desktop-application"&gt;Localizing a .NET console or desktop application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.axantum.com/2024/05/localizing-net-console-or-desktop.html?m=1"&gt;https://blog.axantum.com/2024/05/localizing-net-console-or-desktop.html?m=1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="nuxt3.net-core"&gt;Nuxt3を静的ファイルとしてビルドし、.NET Coreに表示する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/yorimichi/articles/initial_csharp_nuxt3"&gt;https://zenn.dev/yorimichi/articles/initial_csharp_nuxt3&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="does-readonly-make-your-code-faster"&gt;Does readonly make your code faster?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/50b84029-4f1e-4e6d-8fd1-0311b0605562"&gt;https://steven-giesel.com/blogPost/50b84029-4f1e-4e6d-8fd1-0311b0605562&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazorjavascript.net-qiita"&gt;BlazorでJavaScriptから.NETの動的(インスタンス)メソッドを呼び出す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/44b207477d1cb1c81bfb"&gt;https://qiita.com/yaju/items/44b207477d1cb1c81bfb&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azure-openai-service-vb-c"&gt;Azure OpenAI Service を使って VB から C# にコードを変換する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/convert-vb-to-cs"&gt;https://zenn.dev/microsoft/articles/convert-vb-to-cs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ahead-of-the-game-exploring-helm-features-with.net-aspire-aspir8-preview-7"&gt;Ahead of the Game: Exploring Helm Features with .NET Aspire &amp;amp; Aspir8 Preview 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;josephsims1/ahead-of-the-game-exploring-helm-features-with-net-aspire-aspir8-preview-7-d327ade09b91"&gt;https://medium.com/&amp;#64;josephsims1/ahead-of-the-game-exploring-helm-features-with-net-aspire-aspir8-preview-7-d327ade09b91&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-discriminated-union-whats-driving-the-c-communitys-inquiries-ndepend-blog"&gt;C# Discriminated Union: What's Driving the C# Community's Inquiries? - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/csharp-discriminated-union/"&gt;https://blog.ndepend.com/csharp-discriminated-union/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="join-the.net-team-at-microsoft-build-2024.net-blog"&gt;Join the .NET Team at Microsoft Build 2024! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/join-the-dotnet-team-microsoft-build-2024/"&gt;https://devblogs.microsoft.com/dotnet/join-the-dotnet-team-microsoft-build-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="nxuicavaloniaui"&gt;【NXUI】C#でワンライナー・クロスプラットホームデスクトップアプリ【AvaloniaUI】&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/inuinu/articles/528550aab764e8"&gt;https://zenn.dev/inuinu/articles/528550aab764e8&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="refactor-your-code-with-c-collection-expressions.net-blog"&gt;Refactor your code with C# collection expressions - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/refactor-your-code-with-collection-expressions/"&gt;https://devblogs.microsoft.com/dotnet/refactor-your-code-with-collection-expressions/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="diagnose-memory-leaks-in.net-applications-with-windbg-a-hands-on-approach"&gt;Diagnose Memory Leaks in .NET Applications with WinDbg: A Hands-on Approach&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://levelup.gitconnected.com/diagnose-memory-leaks-in-net-applications-with-windbg-a-hands-on-approach-f41986f69967"&gt;https://levelup.gitconnected.com/diagnose-memory-leaks-in-net-applications-with-windbg-a-hands-on-approach-f41986f69967&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-quickgrid-qiita"&gt;Blazor QuickGrid でリッチなテーブルをサクッと作成する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/higege-amdeker/items/8150dcefe5d891a20c53"&gt;https://qiita.com/higege-amdeker/items/8150dcefe5d891a20c53&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="using-github-copilot-as-your-coding-gps-visual-studio-blog"&gt;Using GitHub Copilot as your Coding GPS - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/using-github-copilot-as-your-coding-gps/"&gt;https://devblogs.microsoft.com/visualstudio/using-github-copilot-as-your-coding-gps/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dotinsights-may-2024-the.net-tools-blog"&gt;dotInsights | May 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/06/dotinsights-may-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/05/06/dotinsights-may-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dapper"&gt;Dapper マルチマッピングで多対多の関係先を生成する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tetr4lab/articles/35cd18af364499"&gt;https://zenn.dev/tetr4lab/articles/35cd18af364499&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c1ms-qiita"&gt;C#で使える1msタイマーを探す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/qiitatosh/items/cc88e398be26e00fafe0"&gt;https://qiita.com/qiitatosh/items/cc88e398be26e00fafe0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="adventures-serializing-absolutely-everything-in-c-isadora"&gt;Adventures serializing absolutely everything in C# – isadora&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://isadorasophia.com/articles/serialization/"&gt;https://isadorasophia.com/articles/serialization/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mvvm-toolkit"&gt;MVVM ToolKit の使い方&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/maedan/articles/c691e858e3fa44"&gt;https://zenn.dev/maedan/articles/c691e858e3fa44&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-connect-phi-3-mini-onnx-model-in-semantic-kernel"&gt;How To connect Phi-3 Mini ONNX model in Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://towardsdev.com/how-to-connect-phi-3-mini-onnx-model-in-semantic-kernel-fc96b758129f"&gt;https://towardsdev.com/how-to-connect-phi-3-mini-onnx-model-in-semantic-kernel-fc96b758129f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="aarch64arm64linuxseleniumc-qiita"&gt;AArch64(arm64)のLinuxでSeleniumを使う方法（C#版） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/noobow/items/52ed93726b757e2a3dbc"&gt;https://qiita.com/noobow/items/52ed93726b757e2a3dbc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="oci.net-sdkoci-streaming-qiita"&gt;【OCI】.NET SDKを使ってOCI Streamingにデータを送信してみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/atwits/items/f23283cc58ee2a24a79e"&gt;https://qiita.com/atwits/items/f23283cc58ee2a24a79e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="maui-blazorrazor-classlib"&gt;Maui BlazorでRazor ClassLibを使ってコンポーネントをプロジェクト分離する - ねこさんのぶろぐ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.neko3cs.net/entry/separate-component-to-project-maui-blazor"&gt;https://www.neko3cs.net/entry/separate-component-to-project-maui-blazor&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;スライド&lt;/h2&gt;
&lt;h3 id="blazor-wasm-code-first-grpc-c"&gt;Blazor WASM × Code-first gRPC で始める C# ⼤統⼀理論&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/sansantech/sansan-20240515-2"&gt;https://speakerdeck.com/sansantech/sansan-20240515-2&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="ee7a89ebea5943e0b2100b47fdc1a670" data-ratio="1.7772511848341233" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="net-graphql-client"&gt;.NET GraphQL Client のリアル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/sansantech/sansan-20240515-1"&gt;https://speakerdeck.com/sansantech/sansan-20240515-1&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="d86f71fcc0934390bebab2edb88f497d" data-ratio="1.7772511848341233" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-nikiforovallkeycloak-authorization-services-dotnet-authentication-and-authorization-with-keycloak-and-asp.net-core"&gt;GitHub - NikiforovAll/keycloak-authorization-services-dotnet: Authentication and Authorization with Keycloak and ASP.NET Core 🔐&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/NikiforovAll/keycloak-authorization-services-dotnet"&gt;https://github.com/NikiforovAll/keycloak-authorization-services-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nikiforovall.github.io/dotnet/keycloak/2024/05/05/keycloak-v2-0-0.html"&gt;Announcement - Keycloak.AuthServices v2.0.0 is out 🎉!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-05-03: Windows App SDK 1.5.3, .NET MAUI Community Tookit v8</title>
			<link>/2024/05/03/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/05/03/updates</guid>
			<pubDate>Fri, 03 May 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;p&gt;.NET 7 が今月14日にサポート終了(End of Support)となります。.NET 7 をご利用中の方は .NET 8 へのアップグレードをご検討ください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/ja-jp/platform/support/policy/dotnet-core"&gt;.NET および .NET Core オフィシャル サポート ポリシー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-7-end-of-support/"&gt;.NET 7 will reach End of Support on May 14, 2024 - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="version-1.5.3-1.5.240428000-stable-channel-release-notes-for-the-windows-app-sdk-windows-apps"&gt;Version 1.5.3 (1.5.240428000) - Stable channel release notes for the Windows App SDK - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-153-15240428000"&gt;https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-153-15240428000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.5.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではクラッシュやビルド時などのいくつかの不具合が修正されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.3"&gt;Release Windows App SDK 1.5.3 (1.5.240428000) · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing.net-maui-community-tookit-v8-touchbehavior-support-is-here.net-blog"&gt;Introducing .NET MAUI Community Tookit v8: TouchBehavior support is here! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-maui-community-toolkit-touchbehavior/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-maui-community-toolkit-touchbehavior/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Community Tookit v8 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Xamarin.Forms における Xamarin Community Toolkit の TouchEffect に代わる TouchBehavior の追加、Windows での Snackbar の破壊的変更、Android におけるナビゲーションバーの色設定、その他多くの不具合の修正といったものが含まれている。&lt;/p&gt;
&lt;h3 id="whats-new-for.net-in-ubuntu-24.04.net-blog"&gt;What's new for .NET in Ubuntu 24.04 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/whats-new-for-dotnet-in-ubuntu-2404/"&gt;https://devblogs.microsoft.com/dotnet/whats-new-for-dotnet-in-ubuntu-2404/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu 24.04 における .NET の扱いについて。&lt;/p&gt;
&lt;p&gt;Ubuntu 24.04 のリリースに合わせて .NET が公式の Ubuntu フィードから提供されることや 24.04 をベースとした .NET コンテナーイメージの提供についての解説。&lt;/p&gt;
&lt;h3 id="introducing-typespec-a-new-language-for-api-centric-development-typespec"&gt;Introducing TypeSpec: A New Language for API-Centric Development | TypeSpec&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://typespec.io/blog/2024-04-25-introducing"&gt;https://typespec.io/blog/2024-04-25-introducing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;API 定義言語の TypeSpec が公開された。&lt;/p&gt;
&lt;p&gt;TypeSpec は TypeScript と C# に影響を受けた API 定義用の言語で、現在 OpenAPI、JSON Schema または Protobuf へのコンパイルが可能。Microsoft 社内では Azure サービスや Microsoft Graph などでドッグフーディングしているとのこと。&lt;/p&gt;
&lt;p&gt;Visual Studio と Visual Studio Code 向けのエディター拡張が提供されており、プロジェクトは MIT License で GitHub 上で公開されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://typespec.io/"&gt;TypeSpec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/typespec"&gt;microsoft/typespec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://x.com/davidfowl/status/1785047593963454896?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We blogged about Type Spec:&lt;br&gt;&lt;br&gt;&amp;quot;Introducing TypeSpec: A New Language for API-Centric Development&amp;quot;&lt;a href="https://t.co/8IcGzcL8ta"&gt;https://t.co/8IcGzcL8ta&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1785047593963454896?ref_src=twsrc%5Etfw"&gt;April 29, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="release-release-v1.63.0-grpcgrpc"&gt;Release Release v1.63.0 · grpc/grpc&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc/releases/tag/v1.63.0"&gt;https://github.com/grpc/grpc/releases/tag/v1.63.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gRPC 1.63.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Grpc.Tools の protoc の出力に関連する修正が含まれている。&lt;/p&gt;
&lt;h3 id="odata.net-8-preview-release-odata"&gt;OData .NET 8 Preview Release - OData&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/odata/odata-net-8-preview-release/"&gt;https://devblogs.microsoft.com/odata/odata-net-8-preview-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OData .NET 8 Preview がリリースされた。&lt;/p&gt;
&lt;p&gt;8年ぶりとなるメジャーアップデートで .NET Framework のサポートを終了、技術スタックの最新化といった多くの破壊的変更が含まれる。今後サポートポリシーの導入やライフサイクルサポートの文章化、移行ガイドなども公開するとのこと。&lt;/p&gt;
&lt;h3 id="cascadia-code-2404.23"&gt;Cascadia Code 2404.23&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/commandline/cascadia-code-2404-23/"&gt;https://devblogs.microsoft.com/commandline/cascadia-code-2404-23/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cascadia Code 2404.23 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Quadrants(四分儀) や Sextants (六分儀)、Octants(八分儀)、Large Type Pieces をはじめとして多くのレガシーコンピューティングシンボルが追加された。その他 Nerd Font を組み込んだ &lt;code&gt;Cascadia Code NF&lt;/code&gt;, &lt;code&gt;Cascadia Mono NF&lt;/code&gt; といったファミリーも追加された。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル&lt;/h2&gt;
&lt;h3 id="nativeintnativeptrtvoidptr"&gt;nativeintとnativeptr&amp;lt;'T&amp;gt;とvoidptr&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/3dfaa375223b0e"&gt;https://zenn.dev/sayurin/articles/3dfaa375223b0e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# でポインターを扱う際に使用する3つの型について。&lt;/p&gt;
&lt;h3 id="help-us-by-sharing-your-experience-with.net-dev-tooling-the.net-tools-blog"&gt;Help us by sharing your experience with .NET dev tooling | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/05/01/share-your-experience-with-dotnet-dev-tooling/"&gt;https://blog.jetbrains.com/dotnet/2024/05/01/share-your-experience-with-dotnet-dev-tooling/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 開発ツールのアンケート。&lt;/p&gt;
&lt;p&gt;回答者の中から抽選で Amazon Gift Card $50 分または 1年分の All Products Pack が当たる。&lt;/p&gt;
&lt;h3 id="c-azure-openai-service-20245"&gt;C# で Azure OpenAI Service のトークン数を数えよう 2024年5月版&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/count-token-with-csharp"&gt;https://zenn.dev/microsoft/articles/count-token-with-csharp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Microsoft.ML.Tokenizers&lt;/code&gt; を使用してトークンを数える方法について。&lt;/p&gt;
&lt;h3 id="idesktopwallpaper-qiita"&gt;IDesktopWallpaperの使い方 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nnkanegon/items/3309afd8433d38659147"&gt;https://qiita.com/nnkanegon/items/3309afd8433d38659147&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# から &lt;code&gt;IDesktopWallpaper&lt;/code&gt; COM インターフェースを使用して Windows のデスクトップの壁紙を変更する実装方法について。&lt;/p&gt;
&lt;h3 id="embrace-ai-driven-productivity-in.net-with-jetbrains-ai-assistant-in-resharper-the.net-tools-blog"&gt;Embrace AI-Driven Productivity in .NET with JetBrains AI Assistant in ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/04/30/jet-brains-ai-assistant-in-resharper/"&gt;https://blog.jetbrains.com/dotnet/2024/04/30/jet-brains-ai-assistant-in-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper の AI アシスタント機能についての紹介。&lt;/p&gt;
&lt;p&gt;コンテキストを読むチャットや複数行のコード補完、問題検出、リファクタリング、単体テストの生成やコードの説明とドキュメント化といった機能について。&lt;/p&gt;
&lt;h3 id="secure-your-container-build-and-publish-with.net-8.net-blog"&gt;Secure your container build and publish with .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/secure-your-container-build-and-publish-with-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/secure-your-container-build-and-publish-with-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 でセキュアなコンテナーのビルドと公開を行う方法について。&lt;/p&gt;
&lt;p&gt;記事ではどのような脅威があるかや root を使用しないコンテナーイメージの作成などについて。&lt;/p&gt;
&lt;h3 id="creating-a.net-asciimath-parser-and-using-it-in-a-markdig-extension"&gt;Creating a .NET AsciiMath parser and using it in a Markdig extension&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/creating-a-dotnet-asciimath-parser-and-using-it-in-a-markdig-extension/"&gt;https://andrewlock.net/creating-a-dotnet-asciimath-parser-and-using-it-in-a-markdig-extension/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AsciiDoctor/AsciiMath の Ruby 実装を .NET に移植し、Markdig から使用できるようにしたことについて。&lt;/p&gt;
&lt;h3 id="asp.net-core-hosting-module-with-shadow-copy-not-starting-separate-your-shadow-copy-folders"&gt;ASP.NET Core Hosting Module with Shadow Copy Not Starting: Separate your Shadow Copy Folders!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2024/Apr/28/ASPNET-Core-Module-with-Shadow-Copy-Not-Starting-Separate-your-Shadow-Copy-Folders"&gt;https://weblog.west-wind.com/posts/2024/Apr/28/ASPNET-Core-Module-with-Shadow-Copy-Not-Starting-Separate-your-Shadow-Copy-Folders&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IIS 向けの ASP.NET Core Module を 8.0.4 に更新したのちに発生したシャドウコピーに関連する問題とその対処方法について。&lt;/p&gt;
&lt;h3 id="marten-postgresql-and.net-aspire-walk-into-a-bar"&gt;Marten, PostgreSQL, and .NET Aspire walk into a bar…&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jeremydmiller.com/2024/05/01/marten-postgresql-and-net-aspire-walk-into-a-bar/"&gt;https://jeremydmiller.com/2024/05/01/marten-postgresql-and-net-aspire-walk-into-a-bar/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL を使用したイベントメッセージングフレームワーク Marten を .NET Aspire で構成する方法について。&lt;/p&gt;
&lt;h3 id="asp.net-core-blazor-typescript"&gt;ASP.NET Core Blazor 向けに TypeScript で開発する方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/how-to-develop-ts-for-blazor"&gt;https://zenn.dev/microsoft/articles/how-to-develop-ts-for-blazor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Blazor アプリケーションで JavaScript を使用する代わりに TypeScript を使用するように構成する方法について。&lt;/p&gt;
&lt;p&gt;記事では Razor コンポーネントに付随する JavaScript と Razor クラスライブラリーの JavaScript イニシャライザーを TypeScript で開発する方法について触れている。&lt;/p&gt;
&lt;h3 id="blazor-javascript"&gt;Blazor で起動時に自動的に読み込まれる JavaScript ファイルを作りたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/how-to-load-js-onstartup"&gt;https://zenn.dev/microsoft/articles/how-to-load-js-onstartup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor アプリケーションで起動時に自動的に読み込まれる JavaScript を Razor クラスライブラリープロジェクトに含める方法について。&lt;/p&gt;
&lt;h3 id="the-journey-to-accessible-apps-keyboard-accessibility-and.net-maui.net-blog"&gt;The Journey to Accessible Apps: Keyboard Accessibility and .NET MAUI - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-journey-to-accessible-apps-keyboard-accessible/"&gt;https://devblogs.microsoft.com/dotnet/the-journey-to-accessible-apps-keyboard-accessible/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI アプリケーションにおけるキーボードアクセシビリティについて。&lt;/p&gt;
&lt;p&gt;記事ではモーダルページのキーボードナビゲーション、Android でのフォーカス操作、キーボードアクセラレーターといった機能を紹介している。&lt;/p&gt;
&lt;h3 id="redisgarnet-qiita"&gt;Redis互換サービスのGarnetにおけるメモリ消費とチェックポイント作成の注意点 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/3498ddbbc27d3ce6e9f0"&gt;https://qiita.com/skitoy4321/items/3498ddbbc27d3ce6e9f0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Garnet のメモリー消費の見積もりやレコードの保全の挙動と設定、圧縮やチェックポイントの作成時の挙動などについての調査のまとめ。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント、スライドなど&lt;/h2&gt;
&lt;h3 id="cs-youtube"&gt;#CSパフォーマンス勉強会 ライブ - YouTube&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=wg3CibR0mWI"&gt;https://www.youtube.com/watch?v=wg3CibR0mWI&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cs-reading.connpass.com/event/309714/"&gt;C#パフォーマンス勉強会 (2024/04/27 13:30〜)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="gitlab-cicd-cwpf"&gt;GitLab CI/CD で C#/WPFアプリケーションのテストとインストーラーのビルド・デプロイを自動化する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/hacarus/wpfapurikesiyonnotesutotoinsutoranobirudodepuroiwozi-dong-hua-suru"&gt;https://speakerdeck.com/hacarus/wpfapurikesiyonnotesutotoinsutoranobirudodepuroiwozi-dong-hua-suru&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="b98d2f84fe844e8f8cf326e9636a669e" data-ratio="1.7772511848341233" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="unsafe"&gt;ベクトルプログラミングとunsafe | ドクセル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docswell.com/s/binnmti/Z4Q8V8-2024-04-27-234152"&gt;https://www.docswell.com/s/binnmti/Z4Q8V8-2024-04-27-234152&lt;/a&gt;&lt;/p&gt;
&lt;script async class="docswell-embed" src="https://bcdn.docswell.com/assets/libs/docswell-embed/docswell-embed.min.js" data-src="https://www.docswell.com/slide/Z4Q8V8/embed" data-aspect="0.5625"&gt;&lt;/script&gt;&lt;div class="docswell-link"&gt;&lt;a href="https://www.docswell.com/s/binnmti/Z4Q8V8-2024-04-27-234152"&gt;ベクトルプログラミングとunsafe by &amp;#64;binnmti&lt;/a&gt;&lt;/div&gt;
&lt;h3 id="r3linq"&gt;R3のコードから見る実践LINQ実装最適化・コンカレントプログラミング実例&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/neuecc/r3nokodokarajian-rushi-jian-linqshi-zhuang-zui-shi-hua-konkarentopuroguramingushi-li"&gt;https://speakerdeck.com/neuecc/r3nokodokarajian-rushi-jian-linqshi-zhuang-zui-shi-hua-konkarentopuroguramingushi-li&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="205627770b434599925567dbfeca229c" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neue.cc/2024/05/01_R3_Presentation.html"&gt;neue cc - R3のコードから見るC#パフォーマンス最適化技法実例とTimeProviderについて&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-tips-2024-edition"&gt;今日からできる！簡単 .NET 高速化 Tips -2024 edition-&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/xin9le/jin-ri-karadekiru-jian-dan-net-gao-su-hua-tips-2024-edition"&gt;https://speakerdeck.com/xin9le/jin-ri-karadekiru-jian-dan-net-gao-su-hua-tips-2024-edition&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="b4e671fb76c94b038e86b0aa84a280f8" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="net-profiling-tools"&gt;今どきの.NET Profiling Tools&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/kkamegawa/dot-net-profiler-in-2024"&gt;https://speakerdeck.com/kkamegawa/dot-net-profiler-in-2024&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="d0286dff060f41798909daa6da084dac" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kkamegawa.hatenablog.jp/entry/2024/04/27/163003"&gt;Azure TravelerとC#パフォーマンス勉強会の資料公開 - kkamegawa's weblog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="dotnetbenchmarks.com.net-benchmark-directory"&gt;DotnetBenchmarks.com - .NET benchmark directory&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnetbenchmarks.com/"&gt;https://dotnetbenchmarks.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主に BenchmarkDotNet でのベンチマーク結果を共有できるサイト。&lt;/p&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/opensilverteam/status/1785264961926598758?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Today, we&amp;#39;ve achieved the unthinkable 😄: Microsoft LightSwitch support is here!&lt;br&gt;&lt;br&gt;For the first time ever, Visual Studio LightSwitch apps can run seamlessly on modern browsers—no rewrites, just a bit of magic 🧙‍♂️&lt;br&gt;&lt;br&gt;Discover the wonders of OpenSilver 2.2 &amp;amp; help us tell the world… &lt;a href="https://t.co/OVamaodkUP"&gt;pic.twitter.com/OVamaodkUP&lt;/a&gt;&lt;/p&gt;&amp;mdash; OpenSilver (Silverlight replacement) (&amp;#64;OpenSilverTeam) &lt;a href="https://twitter.com/OpenSilverTeam/status/1785264961926598758?ref_src=twsrc%5Etfw"&gt;April 30, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/terrajobst/status/1784256998340739323?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Looks like while nobody was looking, .NET Core use on &lt;a href="https://t.co/UWFXzzBQuY"&gt;https://t.co/UWFXzzBQuY&lt;/a&gt; has surpassed .NET Framework.&lt;br&gt;&lt;br&gt;Also more than a quarter of managed packages compile with nullable reference types now. Nice work everyone! &lt;a href="https://t.co/kOGkeR6DFo"&gt;pic.twitter.com/kOGkeR6DFo&lt;/a&gt;&lt;/p&gt;&amp;mdash; Immo Landwerth (&amp;#64;terrajobst) &lt;a href="https://twitter.com/terrajobst/status/1784256998340739323?ref_src=twsrc%5Etfw"&gt;April 27, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-04-26: Uno Platform 5.2, MySqlConnector 2.3.7, .NET Aspire preview 6</title>
			<link>/2024/04/26/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="/img/logo.png" length="0" type="image" />
			<guid isPermaLink="false">/2024/04/26/updates</guid>
			<pubDate>Fri, 26 Apr 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing-the-first-ever-true.net-single-project-for-mobile-web-desktop-and-embedded-apps"&gt;Announcing the first-ever true .NET Single Project for Mobile, Web, Desktop, and Embedded apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/the-first-and-only-true-single-project-for-mobile-web-desktop-and-embedded-in-net/"&gt;https://platform.uno/blog/the-first-and-only-true-single-project-for-mobile-web-desktop-and-embedded-in-net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 5.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Skia レンダラーの強化によるパフォーマンスの向上やマルチウィンドウのサポート、Uno SDK の改善、.NET 9 Preview のサポートなどが含まれている。&lt;/p&gt;
&lt;p&gt;またプロジェクトテンプレートの更新により、単一のプロジェクトですべてのプラットフォームをサポートできるようになったとのこと。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unoplatform/uno/releases/tag/5.2.80"&gt;Release 5.2.80 · unoplatform/uno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-2.3.7-mysql-netmysqlconnector"&gt;Release 2.3.7 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.7"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MySqlConnector 2.3.7 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="net-aspire-preview-6.net-aspire"&gt;.NET Aspire preview 6 - .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-6"&gt;https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/preview-6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire の Preview 6 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Obsolete な API の削除や変更、Aspire ダッシュボードのトークンによる認証、Qdrant ベクターデータベースのサポート、その他細かい変更が含まれている。&lt;/p&gt;
&lt;h3 id="introducing-elastics-opentelemetry-sdk-for.net"&gt;Introducing Elastic's OpenTelemetry SDK for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.elastic.co/jp/blog/elastic-opentelemetry-distribution-dotnet-applications"&gt;https://www.elastic.co/jp/blog/elastic-opentelemetry-distribution-dotnet-applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elastic .NET OpenTelemetry SDK のアルファーバージョンが公開された。&lt;/p&gt;
&lt;p&gt;Elastic OpenTelemetry ディストリビューションは Elastic による OpenTelemetry のデフォルト構成や OpenTelemtry SDK を使用した拡張。現時点でのアルファリリースではバニラバージョンとの差異はほとんどないが今後機能追加を行う予定とのこと。&lt;/p&gt;
&lt;h3 id="building-a-scalable-gateway-with.net-for-microsoft-ai.net-blog"&gt;Building a scalable gateway with .NET for Microsoft AI - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/building-a-scalable-gateway-for-microsoft-ai/"&gt;https://devblogs.microsoft.com/dotnet/building-a-scalable-gateway-for-microsoft-ai/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft の Bing や Copilot といった AI サービスのフロントエンドゲートウェイを .NET と YARP で構築した事例について。&lt;/p&gt;
&lt;p&gt;記事ではミラーリングやレートリミット、動的構成変更など YARP の柔軟な構成を活用した例を紹介している。&lt;/p&gt;
&lt;h3 id="release-v8.1.0-dotnetorleans"&gt;Release v8.1.0 · dotnet/orleans&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/orleans/releases/tag/v8.1.0"&gt;https://github.com/dotnet/orleans/releases/tag/v8.1.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Orleans v8.1.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Aspire との統合がサポートされたほか、様々な修正と改善が含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="detecting-blocking-calls-using-async-in-c-james-crosswell-code-blog"&gt;Detecting blocking calls using async in C# | James Crosswell | Code Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.jamescrosswell.dev/posts/async-detecting-blocking-calls"&gt;https://www.jamescrosswell.dev/posts/async-detecting-blocking-calls&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;非同期メソッドにおいてブロッキングコールを調査する方法について。&lt;/p&gt;
&lt;p&gt;記事では Ben.BlockingDetector を使用した検出とそれを Sentry に組み込んだことについて、Sentry 上で確認できるようにしたことについて書かれている。&lt;/p&gt;
&lt;h3 id="net"&gt;.NETの正規表現 - キャプチャ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/76f6739d7ac75f"&gt;https://zenn.dev/sayurin/articles/76f6739d7ac75f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET の正規表現におけるキャプチャーについて。&lt;/p&gt;
&lt;p&gt;名前付きキャプチャーが複数ある場合についてや F# での名前付きキャプチャーを自然に取り扱えるようにする方法など。&lt;/p&gt;
&lt;h3 id="refactor-your-c-code-with-primary-constructors.net-blog"&gt;Refactor your C# code with primary constructors - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/csharp-primary-constructors-refactoring/"&gt;https://devblogs.microsoft.com/dotnet/csharp-primary-constructors-refactoring/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プライマリーコンストラクターを使用したリファクタリングについて。&lt;/p&gt;
&lt;p&gt;記事では ILogger のようなものをコンストラクターで渡すパターンをプライマリーコンストラクターで置き換える例について紹介している。&lt;/p&gt;
&lt;h3 id="hacking-together-an-asciimath-parser-for.net"&gt;Hacking together an AsciiMath parser for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/hacking-together-an-asciimath-parser-for-dotnet/"&gt;https://andrewlock.net/hacking-together-an-asciimath-parser-for-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AsciiMath パーサーを .NET から扱う方法について。&lt;/p&gt;
&lt;p&gt;記事ではいくつかの言語の AsciiMath パーサーを紹介して、最終的に JavaScript 実装を Jint を使用して .NET から実行できるようにするという方法を解説している。&lt;/p&gt;
&lt;h3 id="asp.net-core-minimal-api-qiita"&gt;ASP.NET Core Minimal API を本番でも大規模でも使えるように構成する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/654c6e0d0bb7c92854a8"&gt;https://qiita.com/takashiuesaka/items/654c6e0d0bb7c92854a8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Minimal APIs で API を定義、実装する際のコードを整理する手法の紹介 (翻訳)。拡張メソッドによる集約や MapGroup でのグルーピングなど。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tessferrandez.com/blog/2023/10/31/organizing-minimal-apis.html"&gt;Organizing ASP.NET Core Minimal APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="how-to-create-a-link-between-two-spans-in-opentelemetry"&gt;How to create a link between two spans in OpenTelemetry&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/koma_koma_d/how-to-create-a-link-between-two-spans-in-opentelemetry-424i"&gt;https://dev.to/koma_koma_d/how-to-create-a-link-between-two-spans-in-opentelemetry-424i&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry の Span 間の関連付けをする span-link を作る方法について。&lt;/p&gt;
&lt;h3 id="jwt-unable-to-decode-the-payload"&gt;【JWT】デコード時に発生したエラー Unable to decode the payload の解決方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/o0rororo0o/articles/028202490cc99d"&gt;https://zenn.dev/o0rororo0o/articles/028202490cc99d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.AspNetCore.Authentication.JwtBearer 7.0.14 以降で JWT の iat フィールドが数値以外となっているとエラーになることについて。&lt;/p&gt;
&lt;h3 id="optimizing-string-searches-in-c-with-searchvalues"&gt;Optimizing String Searches in C# with SearchValues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/admirmujkic/optimizing-string-searches-in-c-with-searchvalues-1105"&gt;https://dev.to/admirmujkic/optimizing-string-searches-in-c-with-searchvalues-1105&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で追加された特定の値が含まれていることを検索することに特化した定義が可能な &lt;code&gt;SearchValues&lt;/code&gt; クラスの使い方とパフォーマンスについて。&lt;/p&gt;
&lt;h3 id="the-first-set-of-bug-fixes-for-resharper-and-rider-2024.1-are-here-the.net-tools-blog"&gt;The First Set of Bug Fixes for ReSharper and Rider 2024.1 Are Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/04/17/the-first-set-of-bug-fixes-for-resharper-and-rider-2024-1-are-here/"&gt;https://blog.jetbrains.com/dotnet/2024/04/17/the-first-set-of-bug-fixes-for-resharper-and-rider-2024-1-are-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2024.1.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースは ReSharper と Rider 2024.1 の最初のバグフィックスで、いくつかの細かい不具合が修正されている。&lt;/p&gt;
&lt;h3 id="itsmattkcdotnet9x-backport-of.net-2.0-3.5-to-windows-9x"&gt;itsmattkc/dotnet9x: Backport of .NET 2.0 - 3.5 to Windows 9x&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/itsmattkc/dotnet9x"&gt;https://github.com/itsmattkc/dotnet9x&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework 2.0-3.5 を Windows 9x にバックポート(移植)を試みるプロジェクト。&lt;/p&gt;
&lt;p&gt;-&lt;a href="https://pc.watch.impress.co.jp/docs/news/yajiuma/1584811.html"&gt;【やじうまPC Watch】 .NET FrameworkをWindows 95にバックポートした強者現る&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="will-visual-studio-be-migrated-to.net-core-and-become-multi-platform-ndepend-blog"&gt;Will Visual Studio Be Migrated to .NET Core and Become Multi-Platform? - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/visual-studio-multi-platform/"&gt;https://blog.ndepend.com/visual-studio-multi-platform/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio は .NET CoreCLR 化するのかということを考えるべく、現状の Visual Studio のアセンブリの構成を調査し推察している。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="c-20240427-1330"&gt;C#パフォーマンス勉強会 (2024/04/27 13:30〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cs-reading.connpass.com/event/309714/"&gt;https://cs-reading.connpass.com/event/309714/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c.net-web-grpc-graphql-blazor-20240515-1900"&gt;イマドキのC# .NET Web開発 〜gRPC, GraphQL, Blazorもあるよ〜 (2024/05/15 19:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sansan.connpass.com/event/316664/"&gt;https://sansan.connpass.com/event/316664/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharpkcptransport-kcptransport-is-a-pure-c-implementation-of-rudp-for-high-performance-real-time-network-communication"&gt;Cysharp/KcpTransport: KcpTransport is a Pure C# implementation of RUDP for high-performance real-time network communication&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/KcpTransport"&gt;https://github.com/Cysharp/KcpTransport&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/skywind3000/kcp/blob/master/README.en.md"&gt;KCP&lt;/a&gt;(UDP ベースの RUDP 的なプロトコル) の .NET 移植実装。&lt;/p&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;ローカル関数がコンパイルされて IL になった際、&lt;code&gt;g_&lt;/code&gt; で始まる名前のメソッドになるが、その &lt;code&gt;g_&lt;/code&gt; について。&lt;/p&gt;
&lt;!-- https://x.com/khyperia/status/1782787967703998667?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;fun fact: if you&amp;#39;ve ever decompiled a local function in C#, you might have noticed a &amp;quot;g&amp;quot; in the mangled name. I chose that letter!&lt;br&gt;&lt;br&gt;My logic was that in math, functions are typically called &amp;quot;f&amp;quot; first, then &amp;quot;g&amp;quot; second - local functions are kinda the second function, so g it is! &lt;a href="https://t.co/0sSq9u8Vg3"&gt;pic.twitter.com/0sSq9u8Vg3&lt;/a&gt;&lt;/p&gt;&amp;mdash; Ashley (&amp;#64;khyperia) &lt;a href="https://twitter.com/khyperia/status/1782787967703998667?ref_src=twsrc%5Etfw"&gt;April 23, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;code&gt;IList&amp;lt;T&amp;gt;&lt;/code&gt; が &lt;code&gt;IReadOnlyList&amp;lt;T&amp;gt;&lt;/code&gt; になるかもしれないという話。&lt;/p&gt;
&lt;!-- https://x.com/terrajobst/status/1782922704997498982?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;For .NET 9 P4, we&amp;#39;re trying to make the long desired change that all the mutable collection interfaces extend the IReadOnly interfaces, so this code becomes valid: &lt;a href="https://t.co/tPf10vLf2m"&gt;pic.twitter.com/tPf10vLf2m&lt;/a&gt;&lt;/p&gt;&amp;mdash; Immo Landwerth (&amp;#64;terrajobst) &lt;a href="https://twitter.com/terrajobst/status/1782922704997498982?ref_src=twsrc%5Etfw"&gt;April 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="list-add-is-way-slower-almost-3-times-in-net9.0-preview-3-than-with-net8.0-issue-101437-dotnetruntime"&gt;List Add is way slower (almost 3 times) in &lt;code&gt;net9.0 preview 3&lt;/code&gt; than with &lt;code&gt;net8.0&lt;/code&gt; · Issue #101437 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/101437"&gt;https://github.com/dotnet/runtime/issues/101437&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JIT の変更により .NET 9 の List が遅くなることがある問題について。現状 Apple Silicon (Arm64) でのみ発生している。&lt;/p&gt;
&lt;!-- https://x.com/davidfowl/status/1782961890580414894?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;This is an example of a great investigation an engineering discussion &lt;a href="https://t.co/crFlo1Xnwc"&gt;https://t.co/crFlo1Xnwc&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1782961890580414894?ref_src=twsrc%5Etfw"&gt;April 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>