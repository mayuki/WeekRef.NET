<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>WeekRef.NET</title>
		<link>https://weekref.net/</link>
		<description>.NET 関連の情報をほぼ週刊配信</description>
		<copyright>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</copyright>
		<managingEditor>Mayuki Sawatari</managingEditor>
		<pubDate>Fri, 16 Aug 2024 09:35:20 GMT</pubDate>
		<lastBuildDate>Fri, 16 Aug 2024 09:35:20 GMT</lastBuildDate>
		<item>
			<title>2024-08-16: .NET 6.0.33, 8.0.8 and 9 Preview 7, Visual Studio 2022 v17.11, Rider and ReSharper 2024.2</title>
			<link>https://weekref.net/2024/08/16/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/08/16/updates</guid>
			<pubDate>Fri, 16 Aug 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-and.net-framework-august-2024-updates.net-blog"&gt;.NET and .NET Framework August 2024 updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-august-2024-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-august-2024-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6, 8と .NET Framework の2024年8月の更新がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは不具合の修正などに加えて、いくつかのセキュリティー修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/320"&gt;CVE-2024-38168&lt;/a&gt;: ASP.NET の HTTP.sys に関するサービス拒否の脆弱性 (.NET 8)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/319"&gt;CVE-2024-38167&lt;/a&gt;: TlsStream による情報漏洩の脆弱性 (.NET 8)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-v17.11-your-feedback-in-action-visual-studio-blog"&gt;Visual Studio 2022 v17.11 – Your feedback in action - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-11-your-feedback-in-action/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-11-your-feedback-in-action/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.11 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースの新機能や機能強化、改修といったものの多くはフィードバックをもとに行われ、記事ではそれらが反映されたものについて紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性の強化
&lt;ul&gt;
&lt;li&gt;コード検索&lt;/li&gt;
&lt;li&gt;コードレビュー&lt;/li&gt;
&lt;li&gt;Pull request の作成のアップデート&lt;/li&gt;
&lt;li&gt;親しみあるキーボードショートカット&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GitHub Copilot
&lt;ul&gt;
&lt;li&gt;AI 生成ブレークポイント式&lt;/li&gt;
&lt;li&gt;シンボルの理解&lt;/li&gt;
&lt;li&gt;提案の刷新&lt;/li&gt;
&lt;li&gt;よりセキュアな GitHub Copilot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;デバッグと診断
&lt;ul&gt;
&lt;li&gt;より簡単な非同期での例外の修正&lt;/li&gt;
&lt;li&gt;外部コードのプロファイリングを簡単に&lt;/li&gt;
&lt;li&gt;Arm64 でのデバッグの改善&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly のデバッグ&lt;/li&gt;
&lt;li&gt;表現力豊かな IEnumerable ビジュアライザー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IDE とワークフローの強化
&lt;ul&gt;
&lt;li&gt;コンポーネントのインストール忘れを防止&lt;/li&gt;
&lt;li&gt;常に最新とセキュアな状態&lt;/li&gt;
&lt;li&gt;新しい Teams Toolkit のテンプレート&lt;/li&gt;
&lt;li&gt;ユーザー認証の改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web とゲーム開発
&lt;ul&gt;
&lt;li&gt;ソリューションエクスプローラーの npm パッケージ&lt;/li&gt;
&lt;li&gt;動的な Web API ルートの検出&lt;/li&gt;
&lt;li&gt;Unreal Engine のクラステンプレートの追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET と C++ 開発
&lt;ul&gt;
&lt;li&gt;リソースエクスプローラーの刷新&lt;/li&gt;
&lt;li&gt;Linux での CMake プロジェクトのデバッグ&lt;/li&gt;
&lt;li&gt;Build Insights の QoL アップデート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-9-preview-7-is-now-available.net-blog"&gt;.NET 9 Preview 7 is now available! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-9-preview-7/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-9-preview-7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 7 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ライブラリー&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BinaryFormatter の削除の完了&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ReadOnlySpan&amp;lt;Char&amp;gt;.Split()&lt;/code&gt; によるセグメントの列挙&lt;/li&gt;
&lt;li&gt;Debug.Assert でのアサート条件の報告のデフォルト化&lt;/li&gt;
&lt;li&gt;Compression API での zlib-ng の利用&lt;/li&gt;
&lt;li&gt;Guid.CreateVersion7 による自然ソート順対応の GUID 生成&lt;/li&gt;
&lt;li&gt;Interlocked.CompareExchange のより多くの型への対応&lt;/li&gt;
&lt;li&gt;iOS/tvOS/Mac Catalyst での AES-GCM と ChaChaPoly1305 アルゴリズムの有効化&lt;/li&gt;
&lt;li&gt;X.509 証明書の読み込みの変更&lt;/li&gt;
&lt;li&gt;XPS バーチャルプリンターからの XPS ドキュメントのサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tensor&amp;lt;T&amp;gt;&lt;/code&gt; を実験的としてマーク&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ランタイム&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARM64 SVE サポート&lt;/li&gt;
&lt;li&gt;ARM64 での後置インデックスアドレッシング&lt;/li&gt;
&lt;li&gt;ループの強度低減&lt;/li&gt;
&lt;li&gt;Box のオブジェクトスタックアロケーション&lt;/li&gt;
&lt;li&gt;GC Dynamic Adaptation To Application Sizes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C#&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OverloadResolutionPriority&lt;/code&gt; 属性によるオーバーロードの優先付け&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SDK&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安全ではないレジストリーへのコンテナー発行の改善&lt;/li&gt;
&lt;li&gt;コンテナー発行の環境変数の一貫性の向上&lt;/li&gt;
&lt;li&gt;ワークロードをより細かく制御するためのワークロードセットの導入&lt;/li&gt;
&lt;li&gt;'torn SDK' と呼ばれるアナライザーのミスマッチ問題の軽減&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ASP.NET Core&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SignalR でのトリミングと Native AOT のサポート&lt;/li&gt;
&lt;li&gt;Microsoft.AspNetCore.OpenApi でのトリミングと Native AOT のサポート&lt;/li&gt;
&lt;li&gt;Microsoft.AspNetCore.OpenApi の transforer 登録 API の強化&lt;/li&gt;
&lt;li&gt;ルートグループでの ProducesProblem および ProducesValidationProblem の生成&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IEnumerable&amp;lt;KeyValuePair&amp;lt;string, object?&amp;gt;&amp;gt;&lt;/code&gt; から Problem と ValidationProblem 結果型の生成&lt;/li&gt;
&lt;li&gt;OpenIdConnectHandler での Pushed Authorization Requests (PAR) サポート&lt;/li&gt;
&lt;li&gt;データ保護でのキーの削除のサポート&lt;/li&gt;
&lt;li&gt;Kestrel の名前付きパイプエンドポイントのカスタマイズ&lt;/li&gt;
&lt;li&gt;特定のエンドポイントとリクエストでの HTTP メトリクスのオプトアウト&lt;/li&gt;
&lt;li&gt;ExceptionHandlerMiddleware の例外によるステータスコード選択&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;.NET MAUI&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HybridWebView の導入&lt;/li&gt;
&lt;li&gt;Windows 向けの新しい TitleBar コントロールと Window.TitleBar&lt;/li&gt;
&lt;li&gt;CollectionView と CarouselView を改善した iOS と Mac Catalyst 向け新しいオプトインハンドラー&lt;/li&gt;
&lt;li&gt;ActivateWindow による Windows のフォアグラウンド化&lt;/li&gt;
&lt;li&gt;BackButtonBehavior.OneWay バインディングモード&lt;/li&gt;
&lt;li&gt;BlazorWebView のホストアドレス後方互換性&lt;/li&gt;
&lt;li&gt;ネイティブ埋め込みの改善&lt;/li&gt;
&lt;li&gt;MainPage の非推奨化&lt;/li&gt;
&lt;li&gt;新しいハンドラー切断ポリシー&lt;/li&gt;
&lt;li&gt;WebView コントロールの ProcessTerminated イベント&lt;/li&gt;
&lt;li&gt;iOS と Mac Catalyst 上のリモート通知のためのライフサイクルメソッド&lt;/li&gt;
&lt;li&gt;CLI と Visual Studio Code のための Xcode 同期&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/dotnet/core/pull/9450"&gt;API diff between .NET 9 Preview 6 and .NET 9 Preview 7 by carlossanlop · Pull Request #9450 · dotnet/core&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/dotnet/core/discussions/9448"&gt;.NET 9 Preview 7 · dotnet/core · Discussion #9448&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-conf-2024-celebrating-the-release-of.net-9-save-the-date.net-blog"&gt;.NET Conf 2024 – Celebrating the Release of .NET 9! – Save the Date! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-conf-2024-celebrating-the-release-of-dotnet-9-save-the-date/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-conf-2024-celebrating-the-release-of-dotnet-9-save-the-date/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2024 の開催に関するアナウンス。&lt;/p&gt;
&lt;p&gt;11月12日から14日までの3日間バーチャルで開催され、イベント中に .NET 9 がリリースされる。
現在イベント向けのコンテンツの募集も行っているとのこと。&lt;/p&gt;
&lt;h3 id="rider-2024.2-full-line-code-completion-reader-mode-major-enhancements-to-debugging-and-more.the.net-tools-blog"&gt;Rider 2024.2: Full Line Code Completion, Reader Mode, Major Enhancements to Debugging, and More. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/15/rider-2024-2/"&gt;https://blog.jetbrains.com/dotnet/2024/08/15/rider-2024-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは フルラインコード補完、リーダーモード、タスクとタスク依存グラフ、クラスメンバーのナビゲーションの強化、.NET Aspire プラグインのバンドルをはじめ、.NET 9 Preview SDK のサポートや新しい UI のデフォルト化、ドキュメントのインラインレンダリング、C# 12 と 13 への対応など様々な新機能と改善が含まれている。&lt;/p&gt;
&lt;h3 id="resharper-2024.2-deepened-c12-and-initial-c13-support-new-ai-capabilities-localization-and-more-the.net-tools-blog"&gt;ReSharper 2024.2: Deepened C#12 and Initial C#13 Support, New AI Capabilities, Localization, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/15/resharper-2024-2/"&gt;https://blog.jetbrains.com/dotnet/2024/08/15/resharper-2024-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 9 Preview SDK のサポート、C# 12 と 13 の初期サポート、C++ のサポートの改善、日本語および韓国語、中国語のローカライズ、非同期タイピングによる応答性の向上、AI アシスタントの強化、逆コンパイラーの強化といった新機能や改善が含まれている。&lt;/p&gt;
&lt;h3 id="dotcover-dotmemory-dotpeek-and-dottrace-2024.2-have-been-released-the.net-tools-blog"&gt;dotCover, dotMemory, dotPeek, and dotTrace 2024.2 Have Been Released! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/15/dotnet-tools-242-release/"&gt;https://blog.jetbrains.com/dotnet/2024/08/15/dotnet-tools-242-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dotCover, dotMemory, dotPeek, dotTrace 2024.2 がリリースされた。&lt;/p&gt;
&lt;h3 id="release-windows-app-sdk-1.4.7-1.5.6-1.6.0-preview1"&gt;Release Windows App SDK 1.4.7, 1.5.6, 1.6.0-preview1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/"&gt;https://github.com/microsoft/WindowsAppSDK/releases/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.4.7, 1.5.6, 1.6.0-preview1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは 1.4.7 および 1.5.6 では安定性に関する修正が含まれ、1.6.0-preview1 では Native AOT のサポートや WebView2 SDK の統合、新しいパッケージ展開 API、TabView のタブティアアウトの改善といった新機能が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.7"&gt;Release Windows App SDK 1.4.7 (1.4.240802001) · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.6"&gt;Release Windows App SDK 1.5.6 (1.5.240802000) · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.0-preview1"&gt;Release v1.6.0-preview1 · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing-uno-platform-solution-template-wizard-for-jetbrains-rider"&gt;Announcing Uno Platform Solution Template Wizard for JetBrains Rider&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/announcing-uno-platform-solution-template-wizard-for-jetbrains-rider/"&gt;https://platform.uno/blog/announcing-uno-platform-solution-template-wizard-for-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider 向けの Uno Platform ソリューションテンプレートウィザードがリリースされた。&lt;/p&gt;
&lt;p&gt;このプラグインにより Rider で Uno Platform を使用したソリューションの開発が簡単に開始できるようになる。&lt;/p&gt;
&lt;h3 id="introducing-the-azure-ai-inference-sdk-access-more-ai-models-with-the-azure-ai-model-catalog.net-blog"&gt;Introducing the Azure AI Inference SDK: Access More AI Models with the Azure AI Model Catalog - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/azure-ai-model-catalog-dotnet-inference-sdk/"&gt;https://devblogs.microsoft.com/dotnet/azure-ai-model-catalog-dotnet-inference-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure AI Inference SDK for .NET が公開された。&lt;/p&gt;
&lt;p&gt;Azure AI Inference SDK for .NET は Azure AI モデルカタログにデプロイしたモデルを簡単に扱えるようにするクライアント SDK。記事では簡単な使用方法についても触れている。&lt;/p&gt;
&lt;h3 id="first-preview-of-visual-studio-2022-v17.12-with.net-9-visual-studio-blog"&gt;First preview of Visual Studio 2022 v17.12 with .NET 9 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-12-with-net-9/"&gt;https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-12-with-net-9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.12 のプレビューがリリースされた。&lt;/p&gt;
&lt;p&gt;このアップデートでは .NET 9 プロジェクトの開発体験と AI 生産性機能にフォーカスするとしている。&lt;/p&gt;
&lt;h3 id="announcing-odata.net-8-official-release-odata"&gt;Announcing OData .NET 8 Official Release - OData&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/odata/announcing-odata-net-8-official-release/"&gt;https://devblogs.microsoft.com/odata/announcing-odata-net-8-official-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OData .NET 8 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET Framework のサポートの削除をはじめ、破壊的な変更を含む様々な改善が行われている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="copilot-content-exclusion-now-available-in-visual-studio-2022-17.11-visual-studio-blog"&gt;Copilot Content Exclusion Now Available in Visual Studio 2022 17.11 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/copilot-content-exclusion-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/copilot-content-exclusion-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 v17.11 で導入された GitHub Copilot へ渡すコンテンツを制限する機能についての紹介。&lt;/p&gt;
&lt;p&gt;特定のリポジトリーやファイルを GitHub Copilot に渡すコンテンツから除外することで機密情報の保護できる。&lt;/p&gt;
&lt;h3 id="aws-lambda-cold-start-time-from-infinity-to-zero"&gt;AWS Lambda Cold Start Time From Infinity to Zero&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;feiflow/aws-lambda-cold-start-time-from-infinity-to-zero-d011635608ac"&gt;https://medium.com/&amp;#64;feiflow/aws-lambda-cold-start-time-from-infinity-to-zero-d011635608ac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS Lambda で Java アプリケーションのコールドスタートを高速化できる SnapStart を .NET アプリケーションでも実現する PoC 的な試み。&lt;/p&gt;
&lt;h3 id="journey-through-the.net-world-behind-old-and-new-names"&gt;Journey through the .NET World: Behind Old and New Names&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/dogaaydinn/journey-through-the-net-world-behind-old-and-new-names-393h"&gt;https://dev.to/dogaaydinn/journey-through-the-net-world-behind-old-and-new-names-393h&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET の歴史とその中に出てくる様々なワードについての解説。&lt;/p&gt;
&lt;h3 id="how-to-implement-customized-role-permissions-in-asp.net-core"&gt;How to implement customized role permissions in ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/how-to-implement-customized-role-permissions-in-asp-net-core/"&gt;https://blog.elmah.io/how-to-implement-customized-role-permissions-in-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core と Entity Framework Core でロールパーミッションの仕組みを実装する方法について。&lt;/p&gt;
&lt;h3 id="how-to-pick-the-right-constructor-when-using-activatorutilities-in.net"&gt;How To Pick The Right Constructor When Using ActivatorUtilities In .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/how-to-pick-the-right-constructor-when-using-activatorutilities-in-dotnet"&gt;https://khalidabuhakmeh.com/how-to-pick-the-right-constructor-when-using-activatorutilities-in-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ActivatorUtilities.CreateInstance でインスタンスを作る際に、曖昧となるコンストラクターオーバーロードがある場合に特定のコンストラクターを使用するように指定する方法について。&lt;/p&gt;
&lt;h3 id="add-a-property-to-the-top-level-statements-program-class"&gt;Add a Property to the Top-level Statements Program class&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/add-a-property-to-the-top-level-statements-program-class"&gt;https://khalidabuhakmeh.com/add-a-property-to-the-top-level-statements-program-class&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Top-level Statements の隠された Program クラスにプロパティーを追加する方法について。&lt;/p&gt;
&lt;h3 id="tips-and-tricks-from-validating-a-pull-request-in.net-clr"&gt;Tips and tricks from validating a Pull Request in .NET CLR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/tips-and-tricks-from-validating-a-pull-request-in-net-clr-0a2c8ed3e5b9"&gt;https://chnasarre.medium.com/tips-and-tricks-from-validating-a-pull-request-in-net-clr-0a2c8ed3e5b9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET ランタイムのランダムアロケーションサンプリングを実装する Pull request を投げる際に作成したテストやその実行方法といったものを紹介している。&lt;/p&gt;
&lt;h3 id="add-a-swagger-ui-using-a.net-9-json-openapi-file"&gt;Add a Swagger UI using a .NET 9 Json OpenAPI file&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2024/08/12/add-a-swagger-ui-using-a-net-9-json-openapi-file/"&gt;https://damienbod.com/2024/08/12/add-a-swagger-ui-using-a-net-9-json-openapi-file/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で生成された OpenAPI の JSON ファイルを使用する Swagger UI を実装する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="sql-formatter-visual-studio-marketplace"&gt;Sql Formatter - Visual Studio Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=MadsKristensen.SqlFormatter"&gt;https://marketplace.visualstudio.com/items?itemName=MadsKristensen.SqlFormatter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;T-SQL をフォーマットする Visual Studio 拡張。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://visualstudiomagazine.com/Articles/2024/08/13/VSLive-Dev-Conference-Tip-Leads-to-New-IDE-Extension-Sql-Formatter.aspx"&gt;VSLive! Dev Conference Tip Leads to New IDE Extension: Sql Formatter -- Visual Studio Magazine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/opensilverteam/status/1823686157927870686?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Just pushed support for {DynamicResource ...} to the &amp;quot;develop&amp;quot; branch! &lt;a href="https://twitter.com/hashtag/OpenSilver?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#OpenSilver&lt;/a&gt; continues to grow from a Silverlight clone (WPF subset) into &amp;quot;WPF for the Web&amp;quot;, leveraging HTML5 &amp;amp; WebAssembly. We&amp;#39;re steadily working towards full WPF support—stay tuned for migrated app examples. &lt;a href="https://t.co/9uYjhQAKY7"&gt;pic.twitter.com/9uYjhQAKY7&lt;/a&gt;&lt;/p&gt;&amp;mdash; OpenSilver (Silverlight replacement) (&amp;#64;OpenSilverTeam) &lt;a href="https://twitter.com/OpenSilverTeam/status/1823686157927870686?ref_src=twsrc%5Etfw"&gt;August 14, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/davidfowl/status/1823873547061879199?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;One of the biggest changes to the .NET GC since inception: &amp;quot;GC Dynamic Adaptation To Application Sizes&amp;quot;. This addresses the most common complaint with server GC which is that it uses too much memory by default.&lt;a href="https://t.co/isG7ICNFr1"&gt;https://t.co/isG7ICNFr1&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1823873547061879199?ref_src=twsrc%5Etfw"&gt;August 15, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/opensilverteam/status/1822940904140788161?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;🚀Introducing &lt;a href="https://twitter.com/hashtag/XAML3D?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#XAML3D&lt;/a&gt;: a work-in-progress 3D design system for .NET, offering more than Material &amp;amp; Fluent. It will work across Web, desktop, mobile, &amp;amp; mixed reality. Preview it now at &lt;a href="https://t.co/KzBtOkKFvG"&gt;https://t.co/KzBtOkKFvG&lt;/a&gt; &amp;amp; stay tuned for the full release in a few months (Built on &lt;a href="https://twitter.com/hashtag/OpenSilver?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#OpenSilver&lt;/a&gt;) &lt;a href="https://t.co/bpFfTNDX6u"&gt;pic.twitter.com/bpFfTNDX6u&lt;/a&gt;&lt;/p&gt;&amp;mdash; OpenSilver (Silverlight replacement) (&amp;#64;OpenSilverTeam) &lt;a href="https://twitter.com/OpenSilverTeam/status/1822940904140788161?ref_src=twsrc%5Etfw"&gt;August 12, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="unify-whether-throw-helpers-are-stacktracehidden-or-not-issue-90539-dotnetruntime"&gt;Unify whether throw helpers are [StackTraceHidden] or not · Issue #90539 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/90539"&gt;https://github.com/dotnet/runtime/issues/90539&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ArgumentException.ThrowIfNullOrEmpty のような例外ヘルパーをスタックトレースから非表示に統一するかどうかという Issue。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-08-11: ReSharper and Rider 2024.2 Release Candidates</title>
			<link>https://weekref.net/2024/08/11/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/08/11/updates</guid>
			<pubDate>Sun, 11 Aug 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="the-resharper-and-the.net-tools-2024.2-release-candidates-are-now-available-the.net-tools-blog"&gt;The ReSharper and the .NET tools 2024.2 Release Candidates Are Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/07/resharper-2024-2-release-candidate/"&gt;https://blog.jetbrains.com/dotnet/2024/08/07/resharper-2024-2-release-candidate/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.2 Release Candidate がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは C# 12 機能サポートの拡張、ref struct や \e エスケープシーケンス、params 修飾子といった C# 13 の初期サポート、非同期タイピングによる文字入力のパフォーマンス向上といった改善が含まれている。&lt;/p&gt;
&lt;p&gt;その他 ReSharper C++、dotMemory、dotTrace、dotCover、dotPeek のアップデートについても触れている。&lt;/p&gt;
&lt;h3 id="the-rider-2024.2-release-candidate-is-now-available-the.net-tools-blog"&gt;The Rider 2024.2 Release Candidate Is Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/07/rider-2024-2-rc/"&gt;https://blog.jetbrains.com/dotnet/2024/08/07/rider-2024-2-rc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 Release Candidate がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 9 Preview SDK と C# 13 機能の初期サポート、フルラインコード補完、リーダーモード、ドキュメンテーションコメントのインラインレンダリング、セマンティックハイライト、Tasks タブと依存グラフなど様々な改善が含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c-12.net-8-c"&gt;[C# 12, .NET 8] C# の非同期処理における効果的なキャンセルトークンの使用方法について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nossa/articles/df258b3ddc351f"&gt;https://zenn.dev/nossa/articles/df258b3ddc351f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;非同期処理での CancellationToken の使い方についての解説。&lt;/p&gt;
&lt;p&gt;記事ではユースケースごとにどのように使用するとよいかといった点を開設している。&lt;/p&gt;
&lt;h3 id="cstandardresiliencehandler-http"&gt;【C#】StandardResilienceHandler で HTTP リクエストの回復力を高める。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2024/08/08/171524"&gt;https://blog.neno.dev/entry/2024/08/08/171524&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.Http.Resilience を使用した HTTP リクエストの失敗などからの回復力を高める方法についての解説。&lt;/p&gt;
&lt;p&gt;記事では StandardResilienceHandler や裏側で使用される Polly についてなど、どのように構成するかといった点について触れている。&lt;/p&gt;
&lt;h3 id="adding.net-aspire-to-your-existing.net-apps.net-blog"&gt;Adding .NET Aspire to your existing .NET apps - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/adding-dotnet-aspire-to-your-existing-dotnet-apps/"&gt;https://devblogs.microsoft.com/dotnet/adding-dotnet-aspire-to-your-existing-dotnet-apps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;既存の .NET アプリケーションに .NET Aspire を追加して統合を有効化するための手順の解説。&lt;/p&gt;
&lt;p&gt;ステップバイステップで有効化からメトリクスやログの表示までを行っている。&lt;/p&gt;
&lt;h3 id="escape-character-extract-common-code-params-modifier-out-vars-c-language-support-in-2024.2-the.net-tools-blog"&gt;Escape Character, Extract Common Code, Params Modifier, Out Vars – C# Language Support in 2024.2 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/07/escape-character-extract-common-code-params-modifier-out-vars-csharp-language-support-in-2024-2/"&gt;https://blog.jetbrains.com/dotnet/2024/08/07/escape-character-extract-common-code-params-modifier-out-vars-csharp-language-support-in-2024-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider と ReSharper 2024.2 の C# 言語サポートの新機能についての紹介。&lt;/p&gt;
&lt;p&gt;記事ではエスケープ文字、共通コードの抽出、params 修飾子、out 変数コード補完といった機能を紹介している。&lt;/p&gt;
&lt;h3 id="hotchocolate-graphql-limit-alias-overloading"&gt;HotChocolate GraphQl — Limit Alias Overloading&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;sankeththesmasher/hotchocolate-graphql-limit-alias-overloading-3867aa28af3a"&gt;https://medium.com/&amp;#64;sankeththesmasher/hotchocolate-graphql-limit-alias-overloading-3867aa28af3a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HotChocolate でクエリーに含まれるエイリアスの最大数を制限する方法について。&lt;/p&gt;
&lt;h3 id="simplifying-theory-test-data-with-xunit.combinatorial"&gt;Simplifying [Theory] test data with Xunit.Combinatorial&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/simplifying-theory-test-data-with-xunit-combinatorial/"&gt;https://andrewlock.net/simplifying-theory-test-data-with-xunit-combinatorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ユニットテストのパラメータを組み合わせで実行する方法について。&lt;/p&gt;
&lt;p&gt;記事では Xunit.Combinatorial を使用したパラメータの指定する方法を紹介している。&lt;/p&gt;
&lt;h3 id="introducing-the-revamped-attach-to-process-experience-visual-studio-blog"&gt;Introducing the revamped Attach to Process experience - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-attach-to-process-experience/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-attach-to-process-experience/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.10 で導入された新しいデバッガーのプロセスアタッチウィンドウの紹介。&lt;/p&gt;
&lt;p&gt;新しい UI ではテーマのサポートやプロセスツリー表示などより使いやすい形に刷新されている。&lt;/p&gt;
&lt;h3 id="nuking-local-nuget-package-sources-to-show-newly-published-packages"&gt;Nuking Local Nuget Package Sources to show newly Published Packages&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2024/Aug/04/Nuking-Local-Nuget-Package-Sources-to-show-newly-published-Packages"&gt;https://weblog.west-wind.com/posts/2024/Aug/04/Nuking-Local-Nuget-Package-Sources-to-show-newly-published-Packages&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-9-msbuild-message"&gt;.NET 9 の MSBuild で Message タスクの出力がコンソールに表示されなくなっていた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/j_sakamoto/articles/d2b7f7024f8d7b"&gt;https://zenn.dev/j_sakamoto/articles/d2b7f7024f8d7b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 でデフォルト有効となるモダンなターミナルロガーで MSBuild の Message タスクによるメッセージ出力が表示されないことについて。&lt;/p&gt;
&lt;h3 id="simplifying-remote-docker-container-connections-in.net-aspire-with-ssh.net"&gt;Simplifying Remote Docker Container Connections in .NET Aspire with SSH.Net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/syamaner/simplifying-remote-docker-container-connections-in-net-aspire-with-sshnet-207"&gt;https://dev.to/syamaner/simplifying-remote-docker-container-connections-in-net-aspire-with-sshnet-207&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire とリモートの Docker ホストを組み合わせて開発するために SSH.NET を使用してポートフォワーディングすることで構成をシンプルにする方法の紹介。&lt;/p&gt;
&lt;h3 id="async-isnt-always-async"&gt;Async isn't always async&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.joelving.dk/2024/06/async-isnt-always-async/?_bhlid=aad52fd84ab1c142b00ff5150265b37fb91f84ed"&gt;https://blog.joelving.dk/2024/06/async-isnt-always-async/?_bhlid=aad52fd84ab1c142b00ff5150265b37fb91f84ed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Async となっているメソッドが常に非同期とは限らないことについて。記事ではテストで Fake として同期的な Task を返した結果、無限ループしたことを例に挙げている。&lt;/p&gt;
&lt;h3 id="sharepoint-microsoft-graph-api-api-qiita"&gt;SharePoint のファイルを Microsoft Graph API を使用してダウンロードする ～API理解編～ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Takuma_Kondo/items/af11257b3e2dcb9d8869"&gt;https://qiita.com/Takuma_Kondo/items/af11257b3e2dcb9d8869&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SharePoint 上のファイルを Microsoft Graph API でダウンロードする方法について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/Takuma_Kondo/items/a9cefb6128e092ff27a9"&gt;SharePoint のファイルを Microsoft Graph API を使用してダウンロードする(C#) ～実装編～ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="binaryformatter-migration-guide.net"&gt;BinaryFormatter migration guide - .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-migration-guide/"&gt;https://learn.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-migration-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 から廃止される BinaryFormatter の移行ガイド。&lt;/p&gt;
&lt;h3 id="effective.net-memory-management-programming-ebook"&gt;Effective .NET Memory Management | Programming | eBook&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/en-us/product/effective-net-memory-management-9781835461044"&gt;https://www.packtpub.com/en-us/product/effective-net-memory-management-9781835461044&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET メモリー管理に関するトピックを中心とした書籍。&lt;/p&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Visual Studio version 17.11 からバックグラウンドプロセスの大多数は .NET 8 で稼働するようになるという話。&lt;/p&gt;
&lt;!-- https://x.com/davkean/status/1821839852561953212?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;devenv.exe is .NET Framework. Starting 17.11 almost every core background process bar a few moved to .NET 8. &lt;a href="https://t.co/tuBH5mMFFo"&gt;https://t.co/tuBH5mMFFo&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Kean (&amp;#64;davkean) &lt;a href="https://twitter.com/davkean/status/1821839852561953212?ref_src=twsrc%5Etfw"&gt;August 9, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;非同期 I/O は同期 I/O よりも遅く、スレッドを明け渡す必要がない場合は同期 I/O のほうがパフォーマンスがよくなる。&lt;/p&gt;
&lt;!-- https://x.com/davkean/status/1821875521954963742?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Tips for .NET Windows I/O:&lt;br&gt;&lt;br&gt;Async/overlapped I/O is never as fast as sync reads. Async is about being a good citizen amongst a sea of other work by freeing up thread pool for other (hopefully CPU) work while blocked. If you have no other work other than the I/O don&amp;#39;t use async.&lt;/p&gt;&amp;mdash; David Kean (&amp;#64;davkean) &lt;a href="https://twitter.com/davkean/status/1821875521954963742?ref_src=twsrc%5Etfw"&gt;August 9, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;.NET 9 で Span ベースの Split によってアロケーションなしで処理できるようになるという話。&lt;/p&gt;
&lt;!-- https://x.com/davidfowl/status/1821007036269916530?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Non-allocating split finally coming in .NET 9&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/R0D8aF5k91"&gt;pic.twitter.com/R0D8aF5k91&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1821007036269916530?ref_src=twsrc%5Etfw"&gt;August 7, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;macOS で LINQPad が動作している話。 Avalonia XPF で実現しているとのこと。&lt;/p&gt;
&lt;!-- https://x.com/linqpad/status/1820379112651026587?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;LINQPad is coming to macOS!&lt;br&gt;&lt;br&gt;using &lt;a href="https://twitter.com/AvaloniaUI?ref_src=twsrc%5Etfw"&gt;&amp;#64;AvaloniaUI&lt;/a&gt; XPF &lt;a href="https://t.co/R8VE0lG4m5"&gt;pic.twitter.com/R8VE0lG4m5&lt;/a&gt;&lt;/p&gt;&amp;mdash; LINQPad·Joe Albahari (&amp;#64;linqpad) &lt;a href="https://twitter.com/linqpad/status/1820379112651026587?ref_src=twsrc%5Etfw"&gt;August 5, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-08-03: Security Patch for IdentityServer, grpc-dotnet v2.65.0</title>
			<link>https://weekref.net/2024/08/03/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/08/03/updates</guid>
			<pubDate>Sat, 03 Aug 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="security-patch-for-identityserver-cve-2024-39694-duende-software-blog"&gt;Security Patch for IdentityServer (CVE-2024-39694) - Duende Software Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.duendesoftware.com/posts/20240731_security_patch"&gt;https://blog.duendesoftware.com/posts/20240731_security_patch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Duende.IdentityServer のセキュリティー修正がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではオープンリダイレクトの脆弱性が修正されている。記事では脆弱性の内容の他、今回の対応での学びについても触れている。&lt;/p&gt;
&lt;h3 id="release-release-v2.65.0-grpcgrpc-dotnet"&gt;Release Release v2.65.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.65.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.65.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.65.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Windows Server でのバージョンチェックやスレッドプール枯渇を軽減するような改善が含まれている。&lt;/p&gt;
&lt;h3 id="easily-deploy.net-apps-to-azure-container-apps-with-default-configuration-for-data-protection"&gt;Easily deploy .NET apps to Azure Container Apps with default configuration for data protection&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/apps-on-azure-blog/easily-deploy-net-apps-to-azure-container-apps-with-default/ba-p/4204285"&gt;https://techcommunity.microsoft.com/t5/apps-on-azure-blog/easily-deploy-net-apps-to-azure-container-apps-with-default/ba-p/4204285&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Container Apps での ASP.NET データ保護がサポートがプレビューリリース。&lt;/p&gt;
&lt;p&gt;複数のレプリカで実行される場合に必要となるデータ保護の構成が設定一つで行えるようになる。対応状況は .NET のバージョンによって異なる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="detecting-anomalies-with.net-and-ml.net-a-practical-guide"&gt;Detecting Anomalies with .NET and ML.NET: A Practical Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/alisson_podgurski/detecting-anomalies-with-net-and-mlnet-a-practical-guide-ng5"&gt;https://dev.to/alisson_podgurski/detecting-anomalies-with-net-and-mlnet-a-practical-guide-ng5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET を使用して異常検知を実装する方法について。&lt;/p&gt;
&lt;h3 id="c-semantic-kernel-ollama-phi-3"&gt;C# Semantic Kernel と Ollama を使って Phi-3 を自端末で動かす&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantickernel-dotnet-phi3-01"&gt;https://zenn.dev/microsoft/articles/semantickernel-dotnet-phi3-01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ローカル環境で Phi-3 モデルを Semantic Kernel (.NET) と Ollama を組み合わせて実行する方法について。&lt;/p&gt;
&lt;h3 id="dotinsights-august-2024-the.net-tools-blog"&gt;dotInsights | August 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/01/dotinsights-august-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/08/01/dotinsights-august-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 関連情報まとめ2024年8月分。&lt;/p&gt;
&lt;h3 id="searchvalues-in.net-8-and.net-9"&gt;SearchValues in .NET 8 and .NET 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/codenx/searchvalues-in-net-8-and-net-9-42b88444eefa"&gt;https://medium.com/codenx/searchvalues-in-net-8-and-net-9-42b88444eefa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で導入された SearchValues クラスについての説明と使い方について。記事では .NET 9 での改善についても触れている。&lt;/p&gt;
&lt;h3 id="tracing-allocations-with-eventpipe-part-2-reading-call-stacks-without-tracelog"&gt;Tracing allocations with EventPipe part 2 — Reading call stacks without TraceLog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-2-reading-call-stacks-without-tracelog-4b0bfe4592aa"&gt;https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-2-reading-call-stacks-without-tracelog-4b0bfe4592aa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EventPipe でトレースしてコールスタックを読み出す試みについて。&lt;/p&gt;
&lt;h3 id="tool-call-with-local-model-using-ollama-and-autogen.net"&gt;Tool call with local model using Ollama and AutoGen.Net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/littlelittlecloud/tool-call-with-local-model-using-ollama-and-autogennet-3o64"&gt;https://dev.to/littlelittlecloud/tool-call-with-local-model-using-ollama-and-autogennet-3o64&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ollama と AutoGen.Net を使用してローカルモデルからツールの呼び出しを行う方法について。&lt;/p&gt;
&lt;h3 id="enhancing-help-in-f-interactive.net-blog"&gt;Enhancing #help in F# Interactive - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/enhancing-help-in-fsi/"&gt;https://devblogs.microsoft.com/dotnet/enhancing-help-in-fsi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 の F# インタラクティブで追加される #help   ディレクティブについての紹介。&lt;/p&gt;
&lt;h3 id="net-8-web-api-with-elasticsearch-and-kibana"&gt;.NET 8 Web API with Elasticsearch and Kibana&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;faulycoelho/net-web-eb-api-with-elasticsearch-and-kibana-e26c6eba27b3"&gt;https://medium.com/&amp;#64;faulycoelho/net-web-eb-api-with-elasticsearch-and-kibana-e26c6eba27b3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core と Elasticsearch、Kibana を使用したログの可視化の簡単な実装例。&lt;/p&gt;
&lt;h3 id="microsoft.extensions.configuration-microsoft.extensions.options-qiita"&gt;Microsoft.Extensions.Configuration と Microsoft.Extensions.Options の使い方入門 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/sakatuba&amp;#64;github/items/3908409d48004b19c98f"&gt;https://qiita.com/sakatuba&amp;#64;github/items/3908409d48004b19c98f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.Configuration と Microsoft.Extensions.Options の使い方とそれぞれの役割についての簡単な解説。&lt;/p&gt;
&lt;h3 id="creating-bindings-for.net-maui-with-native-library-interop.net-blog"&gt;Creating Bindings for .NET MAUI with Native Library Interop - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/native-library-interop-dotnet-maui/"&gt;https://devblogs.microsoft.com/dotnet/native-library-interop-dotnet-maui/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Native Library Interop for .NET MAUI を使用したネイティブバインディングを簡単に実装する方法についての解説。記事ではチャートライブラリーを使用した iOS/Android 対応のライブラリーを実装している。&lt;/p&gt;
&lt;h3 id="advanced-routing-techniques-in-asp.net-core-mvc-for-large-scale-applications"&gt;Advanced Routing Techniques in ASP.NET Core MVC for Large-Scale Applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;bhavinmoradiya99/advanced-routing-techniques-in-asp-net-core-mvc-for-large-scale-applications-71547485a43f"&gt;https://medium.com/&amp;#64;bhavinmoradiya99/advanced-routing-techniques-in-asp-net-core-mvc-for-large-scale-applications-71547485a43f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のルーティングコントロールのいくつかの実装パターンを簡単に紹介している。&lt;/p&gt;
&lt;h3 id="office-vstomsi"&gt;[Office] VSTOアドインをmsiで配布する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimarisu_121/articles/09af3ff2930c99"&gt;https://zenn.dev/shimarisu_121/articles/09af3ff2930c99&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VSTO アドインを msi 形式でパッケージングして配布できるようにする手順について。&lt;/p&gt;
&lt;h3 id="sign-vsix-packages-with-sign-cli-visual-studio-blog"&gt;Sign VSIX packages with Sign CLI - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/sign-vsix-packages-with-sign-cli/"&gt;https://devblogs.microsoft.com/visualstudio/sign-vsix-packages-with-sign-cli/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sign コマンドラインツールを使用して VSIX パッケージを署名する方法について。&lt;/p&gt;
&lt;h3 id="create-a.net-plantuml-markdown-render-extension"&gt;Create a .NET PlantUML Markdown Render Extension&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2024/Jul/29/Create-a-PlantUML-Markdown-RenderExtension"&gt;https://weblog.west-wind.com/posts/2024/Jul/29/Create-a-PlantUML-Markdown-RenderExtension&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Markdown のプレビューで PlantUML をレンダリングする拡張の実装について。記事では PlantUML サーバーで画像をレンダリングするための URL を生成する方法を紹介している。&lt;/p&gt;
&lt;h3 id="the-worst.net-bug-ive-ever-fixed"&gt;The Worst .NET Bug I've Ever Fixed&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://petabridge.com/blog/worst-dotnet-bug/"&gt;https://petabridge.com/blog/worst-dotnet-bug/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Akka.NET での分散システム/シャーディングに関する難しい不具合について発生した問題とその対応。&lt;/p&gt;
&lt;h3 id="the-singleton-pattern-in-c-today-is-not-your-dads-one"&gt;The Singleton Pattern in C# Today Is Not Your Dad's One!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.postsharp.net/singleton"&gt;https://blog.postsharp.net/singleton&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DI を含むシングルトンの実装パターンとシングルトンを期待するクラスに対するコンストラクター呼び出し場所の検証を行う方法について。&lt;/p&gt;
&lt;h3 id="a-custom-reverse-geocoding-resource-container-startup-dependencies-in.net-aspire"&gt;A Custom Reverse Geocoding Resource &amp;amp; Container Startup Dependencies in .Net Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/syamaner/building-a-custom-reverse-geocoding-resource-for-net-aspire-2n9o"&gt;https://dev.to/syamaner/building-a-custom-reverse-geocoding-resource-for-net-aspire-2n9o&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ジオコーティング、リバースジオコーディングを行うためにローカルでホストする Nominatim を .NET Aspire から使用する手順について。&lt;/p&gt;
&lt;h3 id="health-checks-for-asp.net-core-and-entity-framework-core"&gt;Health Checks for ASP.NET Core and Entity Framework Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/health-checks-for-aspnet-core-and-entity-framework-core"&gt;https://khalidabuhakmeh.com/health-checks-for-aspnet-core-and-entity-framework-core&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のヘルスチェックについてと Entyty Framework Core を組み合わせたヘルスチェックを実装する方法について。&lt;/p&gt;
&lt;h3 id="avalonia-ui-enhance-your-app-with-datagrid-and-converters"&gt;Avalonia UI: Enhance Your App with DataGrid and Converters&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;faruk.akyapak/avalonia-ui-enhance-your-app-with-datagrid-and-converters-faf8f2dc7562"&gt;https://medium.com/&amp;#64;faruk.akyapak/avalonia-ui-enhance-your-app-with-datagrid-and-converters-faf8f2dc7562&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia の DataGrid を使用する方法について。&lt;/p&gt;
&lt;h3 id="creating-source-only-nuget-packages"&gt;Creating source-only NuGet packages&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/creating-source-only-nuget-packages/"&gt;https://andrewlock.net/creating-source-only-nuget-packages/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アセンブリーを含まずソースコードのみを含む NuGet パッケージの利用ケースとその作り方について。&lt;/p&gt;
&lt;h3 id="support-for-azure.ai.openai-and-openai-v2-is-coming-semantic-kernel"&gt;Support for Azure.AI.OpenAI and OpenAI v2 is coming | Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/semantic-kernel/support-for-azure-ai-openai-and-openai-v2-is-coming/"&gt;https://devblogs.microsoft.com/semantic-kernel/support-for-azure-ai-openai-and-openai-v2-is-coming/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel での Azure.AI.OpenAI と OpenAI v2 のサポートが近づいていることについて。&lt;/p&gt;
&lt;p&gt;記事では変更後のアップグレードで起こりうることとその対応について説明している。&lt;/p&gt;
&lt;h3 id="there-is-no-mystery-over-who-wrote-the-blue-screen-of-death-despite-what-some-may-want-you-to-believe-the-old-new-thing"&gt;There is no mystery over who wrote the Blue Screen of Death, despite what some may want you to believe - The Old New Thing&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/oldnewthing/20240730-00/?p=110062"&gt;https://devblogs.microsoft.com/oldnewthing/20240730-00/?p=110062&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;.NET 9 の SignalR に分散トレーシングが導入される話。&lt;/p&gt;
&lt;!-- https://x.com/jamesnk/status/1818928330810200330?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;SignalR distributed tracing is coming in .NET 9.&lt;br&gt;&lt;br&gt;Before: A mess of operations under one long running connection 🥀&lt;br&gt;After: Organized hub invocations, traced from the client to the server 🔥&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnetaspire?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnetaspire&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/signalr?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#signalr&lt;/a&gt; &lt;a href="https://t.co/lNTgY6qVxP"&gt;pic.twitter.com/lNTgY6qVxP&lt;/a&gt;&lt;/p&gt;&amp;mdash; James Newton-King ♔ (&amp;#64;JamesNK) &lt;a href="https://twitter.com/JamesNK/status/1818928330810200330?ref_src=twsrc%5Etfw"&gt;August 1, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;std-uritemplate (.NET 版) が .NET Foundation 入り。&lt;/p&gt;
&lt;!-- https://x.com/dotnetfdn/status/1819368806000599405?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;🎉 std-uritemplate joins the .NET Foundation! 🚀 Powerful URI template processing for .NET devs. Stay tuned for updates! &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/opensource?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#opensource&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/github?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#github&lt;/a&gt;&lt;a href="https://t.co/fETzuZ7M6z"&gt;https://t.co/fETzuZ7M6z&lt;/a&gt;&lt;/p&gt;&amp;mdash; .NET Foundation (&amp;#64;dotnetfdn) &lt;a href="https://twitter.com/dotnetfdn/status/1819368806000599405?ref_src=twsrc%5Etfw"&gt;August 2, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio の次期プレビューで HTTP リクエストファイルでのリクエスト変数がサポートされる話。&lt;/p&gt;
&lt;!-- https://x.com/sayedihashimi/status/1819514959073603617?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In the next preview of &lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;VisualStudio&lt;/a&gt; we will add support for Request Variables in HTTP files. You can send a request, and then use a value from the response (or request) in a future request. For ex, you can login and then pass the token on future requests. See ex in image. &lt;a href="https://t.co/tFhvBw1Uci"&gt;pic.twitter.com/tFhvBw1Uci&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sayed I. Hashimi (&amp;#64;sayedihashimi) &lt;a href="https://twitter.com/sayedihashimi/status/1819514959073603617?ref_src=twsrc%5Etfw"&gt;August 2, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio の app.config を Full CLR (.NET Framework) が処理するため(最初のアセンブリを読む前)に時間がある程度かかっている話。&lt;/p&gt;
&lt;!-- https://x.com/davkean/status/1818207766642860259?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;It takes the full CLR about 30ms to parse Visual Studio&amp;#39;s app.config, so our first managed binary load costs at least that much.&lt;/p&gt;&amp;mdash; David Kean (&amp;#64;davkean) &lt;a href="https://twitter.com/davkean/status/1818207766642860259?ref_src=twsrc%5Etfw"&gt;July 30, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-07-27: .NET Conf, .NET Aspire 8.1, Uno Platform 5.3, Avalonia 11.1</title>
			<link>https://weekref.net/2024/07/27/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/07/27/updates</guid>
			<pubDate>Sat, 27 Jul 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-conf-focus-on-ai-august-20th-2024.net-blog"&gt;Announcing .NET Conf: Focus on AI - August 20th 2024 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnetconf-focus-on-ai/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnetconf-focus-on-ai/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-in.net-aspire-8.1-for-cloud-native-developers.net-blog"&gt;What's new in .NET Aspire 8.1 for cloud native developers! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/whats-new-in-aspire-8-1/"&gt;https://devblogs.microsoft.com/dotnet/whats-new-in-aspire-8-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-full-rider-support-and-350-enhancements"&gt;5.3 Release: Full Rider Support and 350+ Enhancements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/5-3/"&gt;https://platform.uno/blog/5-3/&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://x.com/unoplatform/status/1815795033712574753?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Hello &lt;a href="https://twitter.com/JetBrainsRider?ref_src=twsrc%5Etfw"&gt;&amp;#64;JetBrainsRider&lt;/a&gt; fans!!&lt;br&gt;&lt;br&gt;Uno Platform 5.3 brings FULL support for JetBrains Rider. Starting today, you can &lt;br&gt;&lt;br&gt;✔️Start your cross-platform projects easily using Uno Platform Live Wizard &lt;br&gt;✔️Iterate quickly using Hot Reload for XAML and C# Markup&lt;br&gt;✔️Enjoy Rider-provided Code… &lt;a href="https://t.co/xHbDJIfeRZ"&gt;pic.twitter.com/xHbDJIfeRZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Uno Platform (&amp;#64;UnoPlatform) &lt;a href="https://twitter.com/UnoPlatform/status/1815795033712574753?ref_src=twsrc%5Etfw"&gt;July 23, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="avalonia-11.1-a-quantum-leap-in-cross-platform-ui-development"&gt;Avalonia 11.1: A Quantum Leap in Cross-Platform UI Development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/blog/avalonia-11-1-a-quantum-leap-in-cross-platform-ui-development"&gt;https://avaloniaui.net/blog/avalonia-11-1-a-quantum-leap-in-cross-platform-ui-development&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v12.4.0-jbogardmediatr"&gt;Release v12.4.0 · jbogard/MediatR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jbogard/MediatR/releases/tag/v12.4.0"&gt;https://github.com/jbogard/MediatR/releases/tag/v12.4.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-20-years-the.net-tools-blog"&gt;ReSharper 20 years! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/23/resharper-20-years/"&gt;https://blog.jetbrains.com/dotnet/2024/07/23/resharper-20-years/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ilspy-for-macos-first-public-beta-release"&gt;ILSpy for macOS: First Public Beta Release&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/blog/ilspy-for-macos-first-public-beta-release"&gt;https://avaloniaui.net/blog/ilspy-for-macos-first-public-beta-release&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://x.com/avaloniaui/status/1815971299010765277?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;It&amp;#39;s here! 🎉 &lt;br&gt;&lt;br&gt;ILSpy for Linux is now available for download, powered by Avalonia XPF. &lt;br&gt;&lt;br&gt;Give it a try, and let us know what you think! &lt;a href="https://t.co/M6Cr33eokR"&gt;https://t.co/M6Cr33eokR&lt;/a&gt; &lt;a href="https://t.co/C6iIkRf2kE"&gt;pic.twitter.com/C6iIkRf2kE&lt;/a&gt;&lt;/p&gt;&amp;mdash; Avalonia UI (&amp;#64;AvaloniaUI) &lt;a href="https://twitter.com/AvaloniaUI/status/1815971299010765277?ref_src=twsrc%5Etfw"&gt;July 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="developers-want-more-more-more-the-2024-results-from-stack-overflows-annual-developer-survey-stack-overflow"&gt;Developers want more, more, more: the 2024 results from Stack Overflow’s Annual Developer Survey - Stack Overflow&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.blog/2024/07/24/developers-want-more-more-more-the-2024-results-from-stack-overflow-s-annual-developer-survey/"&gt;https://stackoverflow.blog/2024/07/24/developers-want-more-more-more-the-2024-results-from-stack-overflow-s-annual-developer-survey/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="streamline.net-8-unit-tests-simplify-logging-with-fakelogger"&gt;Streamline .NET 8 Unit Tests: Simplify Logging with FakeLogger&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/codenx/streamline-net-8-unit-tests-simplify-logging-with-fakelogger-f7d0f5baf980"&gt;https://medium.com/codenx/streamline-net-8-unit-tests-simplify-logging-with-fakelogger-f7d0f5baf980&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="stack-overflow-dev-survey-vs-code-visual-studio-and.net-shine-visual-studio-magazine"&gt;Stack Overflow Dev Survey: VS Code, Visual Studio and .NET Shine -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/Articles/2024/07/26/so-dev-survey.aspx"&gt;https://visualstudiomagazine.com/Articles/2024/07/26/so-dev-survey.aspx&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-c-13-qiita"&gt;C# で生産性を向上させよう～C# 13 アップデート完全ガイド～ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hez2010/items/9750c3686fabc5f19a8d"&gt;https://qiita.com/hez2010/items/9750c3686fabc5f19a8d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="playwright-qiita"&gt;Playwright で作成したテストのパフォーマンスを改善する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/FumikaKoyama/items/cb173d321778c68c9627"&gt;https://qiita.com/FumikaKoyama/items/cb173d321778c68c9627&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="getting-started-with-htmx-a-beginners-guide"&gt;Getting Started with HTMX: A Beginner's Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/raulnq/getting-started-with-htmx-a-beginners-guide-559p"&gt;https://dev.to/raulnq/getting-started-with-htmx-a-beginners-guide-559p&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c"&gt;C# 文字列リテラルのシンタックスハイライト&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/masakura/articles/2bcb6c7ee2104e"&gt;https://zenn.dev/masakura/articles/2bcb6c7ee2104e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-use-a-blazor-quickgrid-with-graphql.net-blog"&gt;How use a Blazor QuickGrid with GraphQL - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/how-use-a-blazor-quickgrid-with-graphql/"&gt;https://devblogs.microsoft.com/dotnet/how-use-a-blazor-quickgrid-with-graphql/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="tracing-allocations-with-eventpipe-part-1-dotnet-trace-and-tracelog"&gt;Tracing allocations with EventPipe part 1: dotnet-trace and TraceLog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-1-dotnet-trace-and-tracelog-8ebda7e90773"&gt;https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-1-dotnet-trace-and-tracelog-8ebda7e90773&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-tip-using-ctrl-l-to-delete-a-line-with-and-without-clipboard-backup-visual-studio-blog"&gt;Visual Studio tip: Using Ctrl-L to delete a line with and without Clipboard backup - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-tip-deleting-a-line/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-tip-deleting-a-line/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-implement-structured-logging-and-distributed-tracing-for-microservices-with-seq"&gt;How to Implement Structured Logging and Distributed Tracing for Microservices with Seq&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/antonmartyniuk/how-to-implement-structured-logging-and-distributed-tracing-for-microservices-with-seq-401a"&gt;https://dev.to/antonmartyniuk/how-to-implement-structured-logging-and-distributed-tracing-for-microservices-with-seq-401a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="semantic-kernel-python-c"&gt;Semantic Kernel でバックエンドは Python &amp;amp; フロントエンドは C# を動かしてみる&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantickernel-dotnet-python-01"&gt;https://zenn.dev/microsoft/articles/semantickernel-dotnet-python-01&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-the-cost-of-returning-an-empty-collection"&gt;.NET: the cost of returning an empty collection&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/medialesson/net-the-cost-of-returning-an-empty-collection-7fee40c9919d"&gt;https://medium.com/medialesson/net-the-cost-of-returning-an-empty-collection-7fee40c9919d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-uses-rubicon-to-improve-ai-conversations-visual-studio-magazine"&gt;Visual Studio Uses RUBICON to Improve AI Conversations -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/Articles/2024/07/22/rubicon-visual-studio.aspx"&gt;https://visualstudiomagazine.com/Articles/2024/07/22/rubicon-visual-studio.aspx&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="add-ai-to-your.net-apps-easily-with-prompty.net-blog"&gt;Add AI to Your .NET Apps Easily with Prompty - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/add-ai-to-your-dotnet-apps-easily-with-prompty/"&gt;https://devblogs.microsoft.com/dotnet/add-ai-to-your-dotnet-apps-easily-with-prompty/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="combining.net-aspire-python-docker-remote-and-machine-learning-models-for-summarising-photos"&gt;Combining .NET Aspire, Python, Docker (Remote), and Machine Learning Models for Summarising Photos&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/syamaner/combining-net-aspire-docker-remote-and-machine-learning-models-for-summarising-photos-3iec"&gt;https://dev.to/syamaner/combining-net-aspire-docker-remote-and-machine-learning-models-for-summarising-photos-3iec&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="debug-your.net-8-code-more-efficiently"&gt;Debug your .NET 8 code more efficiently&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bartwullems.blogspot.com/2024/07/debug-your-net-8-code-more-efficiently.html?m=1"&gt;https://bartwullems.blogspot.com/2024/07/debug-your-net-8-code-more-efficiently.html?m=1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-not-to-benchmark"&gt;How not to benchmark!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/98458f74-5205-4b2b-9f5b-535e34ec2fea"&gt;https://steven-giesel.com/blogPost/98458f74-5205-4b2b-9f5b-535e34ec2fea&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ccmsorchard-core"&gt;C#ベースのオープンソースCMS「Orchard Core」の日本語化&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/orchardcore-localization"&gt;https://zenn.dev/zead/articles/orchardcore-localization&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="semantic-kernel20247-qiita"&gt;これから始める Semantic Kernel【2024年7月版】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/299c64bb3c5873a470b9"&gt;https://qiita.com/takashiuesaka/items/299c64bb3c5873a470b9&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azure-functions.net-6.net-8-qiita"&gt;Azure Functions のインプロセスモデルを .NET 6 から .NET 8 に移行する検証をしてみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mnrst/items/d9ded8ed93c74da8a403"&gt;https://qiita.com/mnrst/items/d9ded8ed93c74da8a403&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cloned-dictionary-vs.immutable-dictionary-vs.frozen-dictionary-in-high-traffic-systems"&gt;Cloned Dictionary vs. Immutable Dictionary vs. Frozen Dictionary in high traffic systems&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/201314-B/cloned-dictionary-vs-immutable-dictionary-vs-frozen-dictionary-in-high-traffic-systems?Key=5b127528-fc8b-4749-9442-eedcd34afb9b"&gt;https://ayende.com/blog/201314-B/cloned-dictionary-vs-immutable-dictionary-vs-frozen-dictionary-in-high-traffic-systems?Key=5b127528-fc8b-4749-9442-eedcd34afb9b&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cisymbol.todisplaysymboldisplayformat.fullyqualifiedsymbol"&gt;【C#】ISymbol.ToDisplay(SymbolDisplayFormat.FullyQualified)を用いてSymbolの完全修飾名を取得する(プロパティなどのメンバーシンボルでは取得できないので注意) - はなちるのマイノート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.hanachiru-blog.com/entry/2024/07/18/120000"&gt;https://www.hanachiru-blog.com/entry/2024/07/18/120000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-source-generator"&gt;C# Source Generator 開発チュートリアル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://developer.aiming-inc.com/csharp/source-generator-tutorial/"&gt;https://developer.aiming-inc.com/csharp/source-generator-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/ufcpp/status/1816032682968752267?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;&lt;a href="https://t.co/f1PAUYW9mK"&gt;https://t.co/f1PAUYW9mK&lt;/a&gt;&lt;br&gt;ちゃんとした利用例ちらほらもらったので、ちゃんと C# 13 時点でref struct インターフェイス実装のプレビュー外す(正式リリースする)って。&lt;/p&gt;&amp;mdash; ++C++; // 管理人: 岩永 (&amp;#64;ufcpp) &lt;a href="https://twitter.com/ufcpp/status/1816032682968752267?ref_src=twsrc%5Etfw"&gt;July 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="csharplangproposalstypeunions.md-at-18a527bcc1f0bdaf542d8b9a189c50068615b439-dotnetcsharplang"&gt;csharplang/proposals/TypeUnions.md at 18a527bcc1f0bdaf542d8b9a189c50068615b439 · dotnet/csharplang&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/csharplang/blob/18a527bcc1f0bdaf542d8b9a189c50068615b439/proposals/TypeUnions.md"&gt;https://github.com/dotnet/csharplang/blob/18a527bcc1f0bdaf542d8b9a189c50068615b439/proposals/TypeUnions.md&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-07-19: OpenSilver 3.0, .NET 6 EoS on November 12, CoreWCF and WCF Client Azure Queue Storage bindings</title>
			<link>https://weekref.net/2024/07/19/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/07/19/updates</guid>
			<pubDate>Fri, 19 Jul 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="introducing-opensilver-3.0-opensilver"&gt;Introducing OpenSilver 3.0 - OpenSilver&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://opensilver.net/announcements/3-0/"&gt;https://opensilver.net/announcements/3-0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenSilver 3.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは UI デザイナーへの AI 機能の統合(プレビュー)、Visual Studio Code のサポート拡張、オンライン XAML デザイナーの &lt;a href="https://xaml.io/"&gt;XAML.io&lt;/a&gt; の導入といった新機能が含まれている。&lt;/p&gt;
&lt;p&gt;記事では今後 .NET MAUI ハイブリッドのサポートや Blazor コンポーネント、XAML 3D といったものを取り組んでいくとのこと。&lt;/p&gt;
&lt;h3 id="net-6-will-reach-end-of-support-on-november-12-2024.net-blog"&gt;.NET 6 will reach End of Support on November 12, 2024 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-6-end-of-support/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-6-end-of-support/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 が2024年11月12日にサポート終了を迎えることについて。&lt;/p&gt;
&lt;p&gt;記事では .NET 6 がサポート終了後にどのような挙動となるのか、Visual Studio との互換性について、エンタープライズ Linux におけるサポートといった点を解説している。&lt;/p&gt;
&lt;h3 id="introducing-corewcf-and-wcf-client-azure-queue-storage-bindings-for.net.net-blog"&gt;Introducing CoreWCF and WCF Client Azure Queue Storage bindings for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-core-wcf-and-wcf-client-azure-queue-storage-bindings-for-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/introducing-core-wcf-and-wcf-client-azure-queue-storage-bindings-for-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CoreWCF および WCF と Azure Queue Storage を統合するサービス/クライアントライブラリがリリースされた。&lt;/p&gt;
&lt;p&gt;これにより MSMQ の代わりに Azure Queue Storage を使用して CoreWCF サービスを実装できるようになる。&lt;/p&gt;
&lt;p&gt;記事ではライブラリーの使用方法についても触れている。&lt;/p&gt;
&lt;h3 id="nugetaudit-2.0-elevating-security-and-trust-in-package-management-the-nuget-blog"&gt;NuGetAudit 2.0: Elevating Security and Trust in Package Management - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/"&gt;https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet Audit 2.0 と呼ばれる NuGet 6.12, Visual Studio 17.12, .NET SDK 9.0.100 で利用可能となる NuGet のセキュリティー監査機能の紹介。&lt;/p&gt;
&lt;p&gt;記事では新たに追加される設定項目やどのように表示されるか、警告のあるパッケージのアップグレード方法や特定のアドバイザリーを抑制する方法、推移的なパッケージの確認方法、アセットファイルの確認方法、今後の改善点について触れている。&lt;/p&gt;
&lt;h3 id="building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats-the-nuget-blog"&gt;Building a Safer Future - How NuGet is Tackling Software Supply Chain Threats - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/"&gt;https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet がサプライチェーンの脅威に対して取り組んでいることの紹介。&lt;/p&gt;
&lt;p&gt;記事では OSS の状況と問題、NuGet チームでの取り組みとその結果を紹介しているほか、利用者の日々のアップデートの必要性、オープンソースに向ける注意点なども紹介している。&lt;/p&gt;
&lt;h3 id="odp.net-23.5-now-available"&gt;ODP.NET 23.5 Now Available&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/oracledevs/odp-net-23-5-now-available-82560aca5abb"&gt;https://medium.com/oracledevs/odp-net-23-5-now-available-82560aca5abb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ODP.NET 23.5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Ref Cursor 型のサポート、OpenTelemetry アクティビティータグに影響を受ける行数の属性追加、製品情報とアプリケーションのメタデータ、無効なキャスト例外の抑制、バルクコピーの通知、OCI Object Storage に格納された接続情報の変更検知、Easy Connect Plus アドレスリスト、Microsoft ID プラットフォームトークン v2.0 の機能強化が含まれる。&lt;/p&gt;
&lt;h3 id="release-v8.2.0-dotnetorleans"&gt;Release v8.2.0 · dotnet/orleans&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/orleans/releases/tag/v8.2.0"&gt;https://github.com/dotnet/orleans/releases/tag/v8.2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Orleans v8.2.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではアクティベーションの再パーティショニング、Grain タイマーの強化、MessagePack シリアライズのサポート、Cassandra クラスタリングプロバイダー、ADO.NET Streaming プロバイダー (アルファ)といった新機能や様々なバグ修正が行われている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c-onnx-runtime-generative-ai-directml-phi-3-vision"&gt;C# と ONNX Runtime Generative AI (DirectML) を利用して Phi-3 Vision をローカルで動かす - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20240714/1720945305"&gt;https://blog.shibayan.jp/entry/20240714/1720945305&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ONNX Runtime Generative AI を使用して Phi-3 Vision モデルをローカルで動かす方法について。&lt;/p&gt;
&lt;h3 id="c-13-ref-struct-interfaces-and-the-allows-ref-struct-generic-anti-constraint-ndepend-blog"&gt;C# 13 ref struct interfaces and the 'allows ref struct' generic anti-constraint - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/c-13-ref-struct-interfaces-and-the-allows-ref-struct-generic-anti-constraint/"&gt;https://blog.ndepend.com/c-13-ref-struct-interfaces-and-the-allows-ref-struct-generic-anti-constraint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 13 の ref struct をジェネリックの型パラメータで許可する &lt;code&gt;allows ref struct&lt;/code&gt; について。&lt;/p&gt;
&lt;h3 id="implementing-a-native-function-detour-in-c"&gt;Implementing a native function detour in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://lowleveldesign.wordpress.com/2024/07/11/implementing-a-native-function-detour-in-csharp/"&gt;https://lowleveldesign.wordpress.com/2024/07/11/implementing-a-native-function-detour-in-csharp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# と NativeAOT を使用して、Detours を使用した Win32 ネイティブ関数のフック/差し替えを行う方法について。&lt;/p&gt;
&lt;h3 id="three-new-premium-visual-studio-subscriber-benefits-announced-visual-studio-blog"&gt;Three New Premium Visual Studio Subscriber Benefits Announced - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/new-visual-studio-benefits-2024/"&gt;https://devblogs.microsoft.com/visualstudio/new-visual-studio-benefits-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio サブスクリプションの新しい特典についての紹介。&lt;/p&gt;
&lt;p&gt;既存の特典に加え、Dometrain Pro の50%割引、DevPass Business Edition の50%割引、Visual Studio LIVE! の割引といった特典が追加された。&lt;/p&gt;
&lt;h3 id="disambiguating-types-with-the-same-name-with-extern-alias"&gt;Disambiguating types with the same name with extern alias&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/disambiguating-types-with-the-same-name-with-extern-alias/"&gt;https://andrewlock.net/disambiguating-types-with-the-same-name-with-extern-alias/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;複数のライブラリーで完全に同名な型がありあいまいとなる場合に別名 (extern alias) を指定して取り扱う方法について。&lt;/p&gt;
&lt;h3 id="making-visual-studio-a-bit-more-visual-visual-studio-blog"&gt;Making Visual Studio a bit more visual - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/making-visual-studio-a-bit-more-visual/"&gt;https://devblogs.microsoft.com/visualstudio/making-visual-studio-a-bit-more-visual/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 以降で実装されたコードエディター上での画像のプレビューの紹介。&lt;/p&gt;
&lt;p&gt;記事ではどのような形式や参照書式があるかといったアンケートの結果にも触れている。&lt;/p&gt;
&lt;h3 id="get-hands-on-with-visual-studio-and-azure-live-at-microsoft-hq-this-august-visual-studio-blog"&gt;Get Hands-On with Visual Studio and Azure: Live at Microsoft HQ this August! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-live-2024-microsoft-hq/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-live-2024-microsoft-hq/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8月に Microsoft 本社にて行われる Visual Studio LIVE! 2024 イベントの基調講演セッションやハンズオンなどの紹介。&lt;/p&gt;
&lt;h3 id="fastest-c-enum-to-string-ndepend-blog"&gt;Fastest C# Enum to String - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/fastest-c-enum-to-string/"&gt;https://blog.ndepend.com/fastest-c-enum-to-string/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enum を高速に扱うためのライブラリーをいくつか比較している記事。&lt;/p&gt;
&lt;p&gt;記事では System.Enum、FastEnum、Enums.NET、NetEscapades.EnumGenerators、Meziantou.Framework.FastEnumToStringGenerator をパースや列挙など利用方法ごとに速度を比較している。&lt;/p&gt;
&lt;p&gt;また .NET 7 から .NET 8 で System.Enum のパフォーマンスが改善されたことについても触れている。&lt;/p&gt;
&lt;h3 id="modernizing-your-wpf-application-with-the-fluent-theme-bruno-sonnino"&gt;Modernizing your WPF application with the Fluent theme - Bruno Sonnino&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.revolution.com.br/2024/07/06/modernizing-your-wpf-application-with-the-fluent-theme/"&gt;https://blog.revolution.com.br/2024/07/06/modernizing-your-wpf-application-with-the-fluent-theme/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で導入される WPF の Fluent テーマについて。記事ではサンプルの電卓アプリケーションをアップグレードし、テーマを適用するための修正を行う例を解説している。&lt;/p&gt;
&lt;h3 id="opencvsharp-qiita"&gt;OpenCvSharpでカメラキャリブレーション - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/amutou/items/d5a5cf9a77308f85dde6"&gt;https://qiita.com/amutou/items/d5a5cf9a77308f85dde6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenCvSharp でカメラのキャリブレーション/歪み補正を行う方法について。&lt;/p&gt;
&lt;h3 id="equals-qiita"&gt;Equals() をオーバーライドした読み取り専用メモリ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/31500620e3e95bced3db"&gt;https://qiita.com/abetakahiro123/items/31500620e3e95bced3db&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReadOnlyMemory を内容で等価比較する型を実装する方法について。&lt;/p&gt;
&lt;h3 id="how-i-improved-json-parser-performance-twofold"&gt;How I Improved JSON Parser Performance Twofold&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;deniszykov/how-i-improved-json-and-message-pack-parser-performance-twofold-80a29c4618d4"&gt;https://medium.com/&amp;#64;deniszykov/how-i-improved-json-and-message-pack-parser-performance-twofold-80a29c4618d4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ゲームデータ管理ツールの JSON パーサーのパフォーマンスを改善するために行った最適化テクニックの紹介。&lt;/p&gt;
&lt;h3 id="custom-config-sections-using-static-virtual-members-in-interfaces"&gt;Custom config sections using static virtual members in interfaces&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://haacked.com/archive/2024/07/18/better-config-sections/"&gt;https://haacked.com/archive/2024/07/18/better-config-sections/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extension.{Configurations,Options} で構成セクションをバインドする際の名前をインターフェイスの静的仮想メンバーによって提供することでコードを整理できるというテクニック。&lt;/p&gt;
&lt;h3 id="shutting-down-several-of.net-sites"&gt;Shutting down several *of.net sites&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://immo.landwerth.net/2024/07/15/microsites/"&gt;https://immo.landwerth.net/2024/07/15/microsites/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Immo Landwerth 氏が維持していた *of.net というドメインのサイトがいくつかシャットダウンされることについて。&lt;/p&gt;
&lt;p&gt;記事ではシャットダウンや移管することになった背景とそれぞれのドメインの利用状況などについて触れている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apireview.net (Microsoft へ移管)&lt;/li&gt;
&lt;li&gt;apisof.net (Microsoft へ移管)&lt;/li&gt;
&lt;li&gt;designsof.net (シャットダウン)&lt;/li&gt;
&lt;li&gt;issuesof.net (シャットダウン)&lt;/li&gt;
&lt;li&gt;sitesof.net (シャットダウン)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://x.com/terrajobst/status/1812964266250805390?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Friends, I have decided to shut down several of my web sites:&lt;br&gt;&lt;br&gt;* &lt;a href="https://t.co/jwTFm821wE"&gt;https://t.co/jwTFm821wE&lt;/a&gt;&lt;br&gt;* &lt;a href="https://t.co/4GY7cUFjD5"&gt;https://t.co/4GY7cUFjD5&lt;/a&gt;&lt;br&gt;* &lt;a href="https://t.co/TPZ6lpp3XB"&gt;https://t.co/TPZ6lpp3XB&lt;/a&gt;&lt;br&gt;&lt;br&gt;Some my sites will be transferred to Microsoft:&lt;br&gt;&lt;br&gt;* &lt;a href="https://t.co/KHOErtyHmt"&gt;https://t.co/KHOErtyHmt&lt;/a&gt;&lt;br&gt;* &lt;a href="https://t.co/mSrZAlrvol"&gt;https://t.co/mSrZAlrvol&lt;/a&gt;&lt;br&gt;&lt;br&gt;Read more:&lt;a href="https://t.co/VOpVjNYzM1"&gt;https://t.co/VOpVjNYzM1&lt;/a&gt;&lt;/p&gt;&amp;mdash; Immo Landwerth (&amp;#64;terrajobst) &lt;a href="https://twitter.com/terrajobst/status/1812964266250805390?ref_src=twsrc%5Etfw"&gt;July 15, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="c.net-8-configurehttpclientdefaults"&gt;【C#】.NET 8 世代で追加された ConfigureHttpClientDefaults について。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2024/07/12/175331"&gt;https://blog.neno.dev/entry/2024/07/12/175331&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 世代の Microsoft.Extensions.Http の ConfigureHttpClientDefaults についての解説。&lt;/p&gt;
&lt;p&gt;記事では構成の名前が null である場合の挙動についても解説している。&lt;/p&gt;
&lt;h3 id="net-aspire-vs-docker.youve-been-haacked"&gt;.NET Aspire vs Docker. | You've Been Haacked&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://haacked.com/archive/2024/07/01/dotnet-aspire-vs-docker/"&gt;https://haacked.com/archive/2024/07/01/dotnet-aspire-vs-docker/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET プロジェクトと PostgreSQL を使用する構成を .NET Aspire と　Docker でどのような手順となるのか比較している。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメント、書籍など&lt;/h2&gt;
&lt;h3 id="c"&gt;［改訂新版］実戦で役立つ C#プログラミングのイディオム/定石＆パターン&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gihyo.jp/book/2024/978-4-297-14307-7"&gt;https://gihyo.jp/book/2024/978-4-297-14307-7&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/gushwell/articles/practical-csharp-book"&gt;『改訂新版 実戦で役立つC#プログラミングのイディオム/定石&amp;amp;パターン』を出版します&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/vcsjones/status/1811957823854526910?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET 9 is getting a new class to load certificates: X509CertificateLoader. The X509Certificate2 constructors will be obsolete. &lt;a href="https://t.co/OB3WB3T4tw"&gt;https://t.co/OB3WB3T4tw&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kevin Jones 🏳️‍🌈🇺🇦 (&amp;#64;vcsjones) &lt;a href="https://twitter.com/vcsjones/status/1811957823854526910?ref_src=twsrc%5Etfw"&gt;July 13, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-07-12: .NET and .NET Framework July 2024 updates, .NET 9 Preview 6, Dark Mode on NuGet.org</title>
			<link>https://weekref.net/2024/07/12/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/07/12/updates</guid>
			<pubDate>Fri, 12 Jul 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-and.net-framework-july-2024-servicing-releases-updates.net-blog"&gt;.NET and .NET Framework July 2024 servicing releases updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-july-2024-servicing-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-july-2024-servicing-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 と .NET 8、.NET Framework の2024年7月のアップデートがリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかのセキュリティー問題の修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30105"&gt;CVE-2024-30105: System.Text.Json の JsonSerializer.DeserializeAsyncEnumerable でのサービス拒否の脆弱性&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;.NET 8 に影響&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/315"&gt;Microsoft Security Advisory CVE-2024-30105 | .NET Denial of Service Vulnerability · Issue #315 · dotnet/announcements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35264"&gt;CVE-2024-35264: Kestrel HTTP/3 のデータ破損によるリモートコード実行の脆弱性&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;.NET 8 に影響&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/314"&gt;Microsoft Security Advisory CVE-2024-35264 | .NET Remote Code Execution Vulnerability · Issue #314 · dotnet/announcements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38081"&gt;CVE-2024-38081: Visual Studio インストーラーでの権限昇格の脆弱性&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;.NET 6.0, .NET Framework 2.0, 3.0, 3.5, 4.6.2, 4.7, 4.7.1, 4.8, 4.8.1 に影響&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/313"&gt;Microsoft Security Advisory CVE-2024-38081 | .NET Denial of Service Vulnerability · Issue #313 · dotnet/announcements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38095"&gt;CVE-2024-38095: System.Formats.Asn1 で X.509 証明書の解析時にサービス拒否が発生する脆弱性&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;.NET 6 および .NET 8 に影響&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/312"&gt;Microsoft Security Advisory CVE-2024-38095 | .NET Denial of Service Vulnerability · Issue #312 · dotnet/announcements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-9-preview-6-dotnetcore-discussion-9392"&gt;.NET 9 Preview 6 · dotnet/core · Discussion #9392&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/discussions/9392"&gt;https://github.com/dotnet/core/discussions/9392&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 6 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ライブラリー&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System.Numerics の改善&lt;/li&gt;
&lt;li&gt;Logging の Source Generator でのプライマリーコンストラクターのサポート&lt;/li&gt;
&lt;li&gt;System.Text.Json の改善&lt;/li&gt;
&lt;li&gt;プロパティーに対する &lt;code&gt;[GeneratedRegex]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Regex.EnumerateSplits&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OrderedDictionary&amp;lt;TKey, TValue&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ReadOnlySet&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ライブラリーの多くの場所で &lt;code&gt;allows ref struct&lt;/code&gt; の適用&lt;/li&gt;
&lt;li&gt;Span を使用したコレクションルックアップ&lt;/li&gt;
&lt;li&gt;より多くの Span ベースの API&lt;/li&gt;
&lt;li&gt;Base64Url&lt;/li&gt;
&lt;li&gt;HttpClientFactory での SocketsHttpHandler のデフォルト化&lt;/li&gt;
&lt;li&gt;Linux でのクライアント証明書を使用した際の TLS レジューム&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System.Net.ServerSentEvents&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;メトリクス ゲージ 計測の導入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ランタイム&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARM64 コード生成&lt;/li&gt;
&lt;li&gt;コードレイアウト&lt;/li&gt;
&lt;li&gt;ループ最適化&lt;/li&gt;
&lt;li&gt;アドレス公開の軽減&lt;/li&gt;
&lt;li&gt;AVX10v1 サポート&lt;/li&gt;
&lt;li&gt;ハードウェア固有コード生成&lt;/li&gt;
&lt;li&gt;不動少数点と SIMD オペレーションの定数畳み込み&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SDK&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NuGetAudit による推移的依存関係の脆弱性の警告&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dotnet nuget why&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MSBuild BuildChecks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C#&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;パーシャルプロパティー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ASP.NET Core&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静的 Web アセットのフィンガープリント&lt;/li&gt;
&lt;li&gt;SignalR の分散トレーシングの改善&lt;/li&gt;
&lt;li&gt;Microsoft.AspNetCore.OpenAPI の改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[AllowAnonymous]&lt;/code&gt; によって &lt;code&gt;[Authorize]&lt;/code&gt; のオーバーライドされている場合の Analyzer 警告&lt;/li&gt;
&lt;li&gt;フレームを跨いだ巨大な HTTP/2 ヘッダーの分割&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/dotnet/announcements/issues/316"&gt;.NET 9 Preview 6 · Issue #316 · dotnet/announcements&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes-preview#version-1711-preview-3"&gt;Version 17.11 Preview 3 | Visual Studio 2022 Preview Release Notes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="c-13-explore-the-latest-preview-features.net-blog"&gt;C# 13: Explore the latest preview features - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/csharp-13-explore-preview-features/"&gt;https://devblogs.microsoft.com/dotnet/csharp-13-explore-preview-features/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 13 で導入される予定の言語機能の解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;params コレクションの柔軟性の拡張&lt;/li&gt;
&lt;li&gt;lock オブジェクト&lt;/li&gt;
&lt;li&gt;インデックスオペレーターの改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\e&lt;/code&gt; エスケープシーケンス&lt;/li&gt;
&lt;li&gt;パーシャルプロパティー&lt;/li&gt;
&lt;li&gt;メソッドグループの自然型に関する改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;async&lt;/code&gt; メソッドとイテレーターでの &lt;code&gt;ref&lt;/code&gt; と &lt;code&gt;unsafe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Extension Types についてのアップデート
&lt;ul&gt;
&lt;li&gt;Extension Types は C# 14 へと延期された&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="dark-mode-now-available-on-nuget.org-the-nuget-blog"&gt;Dark Mode Now Available on NuGet.org - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/"&gt;https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet.org がダークテーマに対応。&lt;/p&gt;
&lt;p&gt;システムのテーマを尊重し、設定されているテーマによって Web サイトのテーマが変更される。ユーザー設定から明示的に設定することも可能。また、Light テーマも Fluent Design のようなテーマに更新されている。&lt;/p&gt;
&lt;h3 id="release-nats.net-v2.3.0-nats-ionats.net.v2"&gt;Release NATS .NET v2.3.0 · nats-io/nats.net.v2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/nats-io/nats.net.v2/releases/tag/v2.3.0"&gt;https://github.com/nats-io/nats.net.v2/releases/tag/v2.3.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NATS.NET v2.3.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET Standard がサポートされ、.NET Framework や Unity から利用可能となった。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="section-2"&gt;自動テストの実行時間を大幅短縮！分析と最適化の実践法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/thinkingsinc/articles/b52c47acd52913"&gt;https://zenn.dev/thinkingsinc/articles/b52c47acd52913&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ユニットテストの実行時間を短縮するために行ったことを紹介。&lt;/p&gt;
&lt;h3 id="scan-html-faster-with-simd-instructions.netc-edition-daniel-lemires-blog"&gt;Scan HTML faster with SIMD instructions: .NET/C# Edition – Daniel Lemire's blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://lemire.me/blog/2024/07/05/scan-html-faster-with-simd-instructions-net-c-edition/"&gt;https://lemire.me/blog/2024/07/05/scan-html-faster-with-simd-instructions-net-c-edition/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WebKit や Chromium が行っているような文字列スキャンに SIMD を使用する手法を C#/.NET で行う方法について。&lt;/p&gt;
&lt;p&gt;記事ではナイーブな実装との比較や SearchValues クラスについて触れている。&lt;/p&gt;
&lt;h3 id="why-and-how-to-execute-graphql-queries-in.net.net-blog"&gt;Why and How to Execute GraphQL Queries in .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/why-and-how-to-execute-graph-ql-queries-in-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/why-and-how-to-execute-graph-ql-queries-in-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GraphQL のクエリーを Strawberry Shake を使用してリクエストする方法について。&lt;/p&gt;
&lt;h3 id="snapshot-testing-in.net-with-verify-the.net-tools-blog"&gt;Snapshot Testing in .NET with Verify | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/11/snapshot-testing-in-net-with-verify/"&gt;https://blog.jetbrains.com/dotnet/2024/07/11/snapshot-testing-in-net-with-verify/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Verify を使用したスナップショットテスト (出力値を保存して検証する) について。&lt;/p&gt;
&lt;h3 id="try-full-line-code-completion-in-jetbrains-rider-2024.1.4-the.net-tools-blog"&gt;Try Full Line Code Completion in JetBrains Rider 2024.1.4 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/10/full-line-code-completion-in-jetbrains-rider/"&gt;https://blog.jetbrains.com/dotnet/2024/07/10/full-line-code-completion-in-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.1 のフルラインコード補完 (Full Line Code Completion; FLCC) の紹介。&lt;/p&gt;
&lt;p&gt;フルラインコード補完はローカルなモデルを使用してコード補完を行う機能。追加のサブスクリプションなどは不要となっている。&lt;/p&gt;
&lt;h3 id="adding-support-for-collection-expressions-to-your-own-types-behind-the-scenes-of-collection-expressions-part-5"&gt;Adding support for collection expressions to your own types: Behind the scenes of collection expressions - Part 5&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-5-adding-support-for-collection-expressions-to-your-own-types/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-5-adding-support-for-collection-expressions-to-your-own-types/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;システムで用意されている型以外に自分自身の型をコレクション式に対応させるための手順についての解説。&lt;/p&gt;
&lt;h3 id="wpfreactivepropertyr3observablecollections-qiita"&gt;[WPF]ReactivePropertyからR3,ObservableCollectionsへの移行 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/monarc/items/1fecef8dda4622e835cb"&gt;https://qiita.com/monarc/items/1fecef8dda4622e835cb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReactiveProperty から R3、ObservableCollections への移行について。&lt;/p&gt;
&lt;h3 id="demystify-history-with-github-copilot-commit-explanations-visual-studio-blog"&gt;Demystify history with GitHub Copilot commit explanations - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/demystify-history-with-github-copilot-commit-explanations/"&gt;https://devblogs.microsoft.com/visualstudio/demystify-history-with-github-copilot-commit-explanations/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 上でコミット履歴の解説を GitHub Copilot で生成する機能の紹介。&lt;/p&gt;
&lt;h3 id="c-13-semi-auto-properties-ndepend-blog"&gt;C# 13 Semi-Auto Properties - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/c-13-semi-auto-properties/"&gt;https://blog.ndepend.com/c-13-semi-auto-properties/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 13 (またはそれ以降) で導入が検討されている半自動実装プロパティー (semi-auto properties) についての解説。&lt;/p&gt;
&lt;h3 id="html-datalist-for-asp.net-core-inputs"&gt;HTML Datalist for ASP.NET Core Inputs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/html-datalist-for-aspnet-core-inputs"&gt;https://khalidabuhakmeh.com/html-datalist-for-aspnet-core-inputs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HTML の datalist 要素に対する Tag Helper の実装。&lt;/p&gt;
&lt;h3 id="service-discovery-in-microservices-with.net-and-consul"&gt;Service Discovery in Microservices With .NET and Consul&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/milanjovanovictech/service-discovery-in-microservices-with-net-and-consul-4k81"&gt;https://dev.to/milanjovanovictech/service-discovery-in-microservices-with-net-and-consul-4k81&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Consul を使用したサービスディスカバリーの実装について。&lt;/p&gt;
&lt;h3 id="creating-hashes-in.net"&gt;Creating hashes in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2024/07/01/creating-hashes-in-net/"&gt;https://damienbod.com/2024/07/01/creating-hashes-in-net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET でハッシュを計算する方法について。SHA512、Rfc2898DeriveBytes.Pbkdf2、ASP.NET Core Identity を紹介している。&lt;/p&gt;
&lt;h3 id="netcli2-qiita"&gt;自作の.NET製CLIツールにタブ補完機能を付ける（その２）～入力候補を動的に取得する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/pierusan2010/items/e820ab9faf57aba0f2bd"&gt;https://qiita.com/pierusan2010/items/e820ab9faf57aba0f2bd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コマンドラインツールのタブ補完機能で入力候補を動的に取得、表示できるようにする方法について。&lt;/p&gt;
&lt;h3 id="windows"&gt;Windows の名前付きパイプでホスト間通信をしたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shusann01116/articles/71f9bfea17c050"&gt;https://zenn.dev/shusann01116/articles/71f9bfea17c050&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows の名前付きパイプを使用してリモートホストとの通信を行う方法について。記事では ASP.NET Core と gRPC を使用した例を紹介している。&lt;/p&gt;
&lt;h3 id="vsto-qiita"&gt;VSTOアドインでキーボード操作を見たい - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/ikuzak/items/3706dee143e90d6c4131"&gt;https://qiita.com/ikuzak/items/3706dee143e90d6c4131&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VSTO アドイン内でキーボードのキー入力を監視する方法について。記事ではキーボードフックによる監視方法を紹介している。&lt;/p&gt;
&lt;h3 id="dotinsights-july-2024-the.net-tools-blog"&gt;dotInsights | July 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/05/dotinsights-july-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/07/05/dotinsights-july-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 関連情報の2024年7月分のまとめ&lt;/p&gt;
&lt;h3 id="setting-up-renovate-as-azure-devops-pipeline-for-automatic.net-nuget-package-updates"&gt;Setting Up Renovate as Azure DevOps Pipeline for Automatic .NET NuGet Package Updates&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nietras.com/2024/07/09/renovate-azure-devops/"&gt;https://nietras.com/2024/07/09/renovate-azure-devops/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Pipelines で Renovate を使用して NuGet パッケージを自動更新する方法について。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-07-05: Windows App SDK 1.6.0-experimental2, Rider and ReSharper 2024.2 EAP 5, Polly 8.4.1</title>
			<link>https://weekref.net/2024/07/05/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/07/05/updates</guid>
			<pubDate>Fri, 05 Jul 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="experimental2-windows-sdk-windows-apps-microsoft-learn"&gt;バージョン 1.6 試験的 (1.6.0-experimental2) - Windows アプリ SDK の最新の試験段階チャネル リリース ノート - Windows apps | Microsoft Learn&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-16-experimental-160-experimental2"&gt;https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/experimental-channel#version-16-experimental-160-experimental2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.6.0-experimental2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは NativeAOT のサポートの強化、Edge WebView2 SDK の統合の変更、パッケージ展開 API の追加とバグ修正など。&lt;/p&gt;
&lt;p&gt;またこのリリース以降、microsoft-ui-xaml GitHub リポジトリーの main ブランチが WinUI 3 のソースコードとなるとのこと。&lt;/p&gt;
&lt;h3 id="resharper-2024.2-eap-5-an-important-milestone-and-other-updates-the.net-tools-blog"&gt;ReSharper 2024.2 EAP 5: An Important Milestone and Other Updates | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/01/resharper-2024-2-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2024/07/01/resharper-2024-2-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.2 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Out-of-Process 化の一環として非同期タイピングが有効となった。これにより応答性が向上するとのこと。&lt;/p&gt;
&lt;p&gt;その他リファクタリングの強化や、Dynamic Program Analysis での AI 利用などが含まれている。&lt;/p&gt;
&lt;h3 id="rider-2024.2-eap-5-reader-mode-monitoring-for-game-dev-and-more-the.net-tools-blog"&gt;Rider 2024.2 EAP 5: Reader Mode, Monitoring for Game Dev, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/01/rider-2024-2-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2024/07/01/rider-2024-2-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではライブラリーなどのコード表示時にドキュメントコメントを展開する Reader mode の追加、Monitoring ウィンドウの強化、GDScript のデバッグサポートなどが追加された。&lt;/p&gt;
&lt;h3 id="release-8.4.1-app-vnextpolly"&gt;Release 8.4.1 · App-vNext/Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.4.1"&gt;https://github.com/App-vNext/Polly/releases/tag/8.4.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polly 8.4.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="netclipowershell-qiita"&gt;自作の.NET製CLIツールにタブ補完機能を付ける(PowerShell編) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/pierusan2010/items/0885a78d5616601d013a"&gt;https://qiita.com/pierusan2010/items/0885a78d5616601d013a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CLI ツールで PowerShell のタブ補完を対応させる実装方法について。&lt;/p&gt;
&lt;h3 id="animated-splash-screen-in.net-maui-android"&gt;Animated Splash Screen in .NET MAUI Android&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/icebeam7/animated-splash-screen-in-net-maui-android-2ipg"&gt;https://dev.to/icebeam7/animated-splash-screen-in-net-maui-android-2ipg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI で Android 12 から対応する Splash Screen API を使用する方法について。&lt;/p&gt;
&lt;h3 id="dive-into-native-windows-development-with-new-winui-workload-and-template-improvements-visual-studio-blog"&gt;Dive into native Windows development with new WinUI workload and template improvements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/dive-into-native-windows-development-with-new-winui-workload-and-template-improvements/"&gt;https://devblogs.microsoft.com/visualstudio/dive-into-native-windows-development-with-new-winui-workload-and-template-improvements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 17.10 で新しくなった WinUI アプリケーションのテンプレートの紹介。&lt;/p&gt;
&lt;h3 id="all-the-lists-in.net-maui"&gt;All the Lists in .NET MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/davidortinau/all-the-lists-in-net-maui-33bd"&gt;https://dev.to/davidortinau/all-the-lists-in-net-maui-33bd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI での様々なリストコントロールについての比較やレイアウト例の解説。&lt;/p&gt;
&lt;h3 id="how-to-use-the-tasks-view-in-jetbrains-rider-the.net-tools-blog"&gt;How to use the Tasks View in JetBrains Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/02/how-to-use-the-tasks-view-in-jetbrains-rider/"&gt;https://blog.jetbrains.com/dotnet/2024/07/02/how-to-use-the-tasks-view-in-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider で実行中/待機中の Task (非同期) を確認できる Tasks View の紹介。&lt;/p&gt;
&lt;h3 id="exploring-the-generated-code-the-spread-element-behind-the-scenes-of-collection-expressions-part-4"&gt;Exploring the generated code: the spread element: Behind the scenes of collection expressions - Part 4&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-4-the-spread-element/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-4-the-spread-element/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のコレクション式のスプレッド演算子によってどのようなコードが生成されるのかについての解説。&lt;/p&gt;
&lt;h3 id="unsafeaccessor-qiita"&gt;UnsafeAccessor でジェネリックが使えるようになった話 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/e7df363efa80e94ccf06"&gt;https://qiita.com/abetakahiro123/items/e7df363efa80e94ccf06&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 4 の UnsafeAccessor でジェネリックに対しての操作が行えるようになったことについて。&lt;/p&gt;
&lt;h3 id="let-github-copilot-draft-of-your-pull-request-description-visual-studio-blog"&gt;Let GitHub Copilot draft of your pull request description - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/let-github-copilot-draft-of-your-pull-request-description/"&gt;https://devblogs.microsoft.com/visualstudio/let-github-copilot-draft-of-your-pull-request-description/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio version 17.10 で実装された Pull request のコメントの下書きを GitHub Copilot に書かせる機能の紹介。&lt;/p&gt;
&lt;h3 id="memorycache-in-c-a-practical-guide"&gt;MemoryCache in C#: A Practical Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.postsharp.net/memorycache"&gt;https://blog.postsharp.net/memorycache&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;インメモリーキャッシュの System.Runtime.Caching.MemoryCache とは何か、どのように使うのかといったガイド。&lt;/p&gt;
&lt;h3 id="navigating-corporate-giants-corecursive-podcast"&gt;Navigating Corporate Giants - CoRecursive Podcast&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://corecursive.com/building-powershell-with-jeffrey-snover/"&gt;https://corecursive.com/building-powershell-with-jeffrey-snover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Podcast にて Jeffery Snover をゲストに呼び PowerShell の誕生についての話をした回の書き起こし。&lt;/p&gt;
&lt;h3 id="readonlysett-in.net-9"&gt;ReadOnlySet&amp;lt;T&amp;gt; in .NET 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/f368c7d3-488e-4bea-92b4-abf176353fa3"&gt;https://steven-giesel.com/blogPost/f368c7d3-488e-4bea-92b4-abf176353fa3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で導入される &lt;code&gt;ReadOnlySet&amp;lt;T&amp;gt;&lt;/code&gt; について。&lt;code&gt;IReadOnlySet&lt;/code&gt; との関連、ImmutableSet/FrozenSet との違いなどについても触れている。&lt;/p&gt;
&lt;h3 id="cwaithandle-qiita"&gt;C#でのWaitHandle待機スレッド調査 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/qiitatosh/items/c1c08d0e3caa928b5d63"&gt;https://qiita.com/qiitatosh/items/c1c08d0e3caa928b5d63&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WaitHandle を使用したスレッドの待機について。&lt;/p&gt;
&lt;h3 id="refactoring-a.net-maui-app-to-a-declarative-ui-using-c-markup"&gt;Refactoring a .NET MAUI app to a Declarative UI using C# Markup&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://appmilla.com/latest/refactoring_a_functional_and_reactive_dotnet_maui_app_to_a_declarative_ui_using_csharp_markup/"&gt;https://appmilla.com/latest/refactoring_a_functional_and_reactive_dotnet_maui_app_to_a_declarative_ui_using_csharp_markup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Community Toolkit の C# Markup でアプリケーションをリファクタリングの紹介。&lt;/p&gt;
&lt;p&gt;記事ではホットリロード時の挙動のコントロールについても触れている。&lt;/p&gt;
&lt;h3 id="wrapping-external-dlls-with-c-for-seamless-integration-in-electron-applications-with-node.js"&gt;Wrapping External DLLs with C# for Seamless Integration in Electron Applications with Node.js&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;avihup/wrapping-external-dlls-with-c-for-seamless-integration-in-electron-applications-with-node-js-9483bba343bb"&gt;https://medium.com/&amp;#64;avihup/wrapping-external-dlls-with-c-for-seamless-integration-in-electron-applications-with-node-js-9483bba343bb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;electron-edge-js を使用して外部ネイティブ DLL を Electron アプリケーションに公開する方法について。&lt;/p&gt;
&lt;h3 id="how-do-i-produce-a-windows-runtime-asynchronous-activity-from-c-the-old-new-thing"&gt;How do I produce a Windows Runtime asynchronous activity from C#? - The Old New Thing&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/oldnewthing/20240704-00/?p=109955"&gt;https://devblogs.microsoft.com/oldnewthing/20240704-00/?p=109955&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows Runtime の非同期アクティビティ (&lt;code&gt;IAsyncAction&lt;/code&gt;, &lt;code&gt;IAsyncOperation&lt;/code&gt;) を C# の async から生成する方法について。&lt;/p&gt;
&lt;h3 id="azure-functions.net-in-process.net-8"&gt;Azure Functions の .NET In-Process 向け .NET 8 サポートがリリースされました - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20240703/1719992771"&gt;https://blog.shibayan.jp/entry/20240703/1719992771&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Functions の .NET In-Process モデルでの .NET 8 サポートについての解説と移行について。&lt;/p&gt;
&lt;h3 id="readonly-immutable-and-frozen-collections-in.net-ndepend-blog"&gt;Readonly, Immutable, and Frozen Collections in .NET - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/readonly-immutable-and-frozen-collections-in-net/"&gt;https://blog.ndepend.com/readonly-immutable-and-frozen-collections-in-net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReadOnly, Immutable, Frozen といった各種コレクションの違いとその性能特性についての解説。&lt;/p&gt;
&lt;h2 id="youtube"&gt;イベント、YouTube 配信など&lt;/h2&gt;
&lt;h3 id="net-aspire-20240711-1200"&gt;昼休みに .NET Aspire をさわってみよう配信 (2024/07/11 12:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msdevjp.connpass.com/event/324193/"&gt;https://msdevjp.connpass.com/event/324193/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;WinMerge が F# のシンタックスハイライトをサポート。&lt;/p&gt;
&lt;!-- https://x.com/Thoriumi/status/1805201201186632184 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Good news! Initial &lt;a href="https://twitter.com/hashtag/fsharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#fsharp&lt;/a&gt; support for WinMerge has been released, now you can merge F# files with syntax highlighting: &lt;a href="https://t.co/yXgLMKBG6a"&gt;https://t.co/yXgLMKBG6a&lt;/a&gt; &lt;a href="https://t.co/iFPvJToU2U"&gt;pic.twitter.com/iFPvJToU2U&lt;/a&gt;&lt;/p&gt;&amp;mdash; Tuomas Hietanen (&amp;#64;Thoriumi) &lt;a href="https://twitter.com/Thoriumi/status/1805201201186632184?ref_src=twsrc%5Etfw"&gt;June 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;— Tuomas Hietanen (&amp;#64;Thoriumi)&lt;/p&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="poly-fill-index-and-range-types-by-tarekgh-pull-request-104170-dotnetruntime"&gt;Poly fill Index and Range types by tarekgh · Pull Request #104170 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/104170"&gt;https://github.com/dotnet/runtime/pull/104170&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Bcl.Memory に Index と Range の Polyfill が追加。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-06-28: StackExchange.Redis 2.8.0, ReSharper and Rider 2024.1.4</title>
			<link>https://weekref.net/2024/06/28/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/06/28/updates</guid>
			<pubDate>Fri, 28 Jun 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-2.8.0-stackexchangestackexchange.redis"&gt;Release 2.8.0 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.0"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.8.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは X509 証明書のチェーンの追加のチェック、コマンドの整合性チェックモード、ストリームの最後のメッセージの読み取りサポートといったものが含まれている。&lt;/p&gt;
&lt;h3 id="bug-fixes-for-resharper-2024.1.4-and-rider-2024.1.4-are-now-available-the.net-tools-blog"&gt;Bug Fixes for ReSharper 2024.1.4 and Rider 2024.1.4 Are Now Available! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/24/resharper-rider-2024-1-4/"&gt;https://blog.jetbrains.com/dotnet/2024/06/24/resharper-rider-2024-1-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2024.1.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではエラーやデッドロックといったいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="join-us-for.net-aspire-developers-day-elevate-your-cloud-native-skills.net-blog"&gt;Join Us for .NET Aspire Developers Day – Elevate Your Cloud Native Skills! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/join-us-for-dotnet-aspire-developers-day/"&gt;https://devblogs.microsoft.com/dotnet/join-us-for-dotnet-aspire-developers-day/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024年7月23日に .NET Aspire Developers Day というライブストリーミングイベントを行うことについてのアナウンス。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="behind-the-scenes-of-owin-open-web-interface-for.net"&gt;Behind the Scenes of OWIN (Open Web Interface for .NET)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/rasulhsn/behind-the-scenes-of-owin-open-web-interface-for-net-523d"&gt;https://dev.to/rasulhsn/behind-the-scenes-of-owin-open-web-interface-for-net-523d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core の元のアイデアとなった OWIN の歴史とどのようなものであったかについて。&lt;/p&gt;
&lt;h3 id="code-assessment-with.net-upgrade-assistant-visual-studio-blog"&gt;Code Assessment with .NET Upgrade Assistant - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/code-assessment-with-net-upgrade-assistant/"&gt;https://devblogs.microsoft.com/visualstudio/code-assessment-with-net-upgrade-assistant/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET アップグレード アシスタントを使用したアップグレードに関する評価を行う方法について。&lt;/p&gt;
&lt;p&gt;記事では Visual Studio からの分析と CLI ツールからの分析、レポートの出力と共有について触れている。&lt;/p&gt;
&lt;h3 id="exploring-the-generated-code-t-spant-and-immutable-collections-behind-the-scenes-of-collection-expressions-part-3"&gt;Exploring the generated code: T[], SpanT, and Immutable collections: Behind the scenes of collection expressions - Part 3&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-3-arrays-span-of-t-and-immutable-collections/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-3-arrays-span-of-t-and-immutable-collections/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コレクション式がコンパイラーによってどのような処理に展開されるかについての解説。記事では配列、Span&lt;T&gt;、IEnumerable に Immutable コレクションでの挙動について解説している。&lt;/p&gt;
&lt;h3 id="xunitmemberdataint-qiita"&gt;Xunitでmemberdataで小数点からIntなどへの変換が発生している場合の挙動調べ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hatobeam75/items/163f398d8f87b4309d96"&gt;https://qiita.com/hatobeam75/items/163f398d8f87b4309d96&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MemberData によるテストデータのパラメータへの引き渡し時、型変換が必要となるケースでの挙動について。&lt;/p&gt;
&lt;h3 id="instrumenting.net-chiseled-docker-images-with-datadog"&gt;Instrumenting .NET chiseled Docker images with Datadog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;vandonr/instrumenting-net-chiseled-docker-images-with-datadog-00b1db18f4b9"&gt;https://medium.com/&amp;#64;vandonr/instrumenting-net-chiseled-docker-images-with-datadog-00b1db18f4b9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chiseled Ubuntu をベースとした .NET の Docker イメージで Datadog のトレーシングを行うためのセットアップ方法について。&lt;/p&gt;
&lt;h3 id="html5-validation-for-asp.net-core-models-and-razor-views"&gt;HTML5 Validation for ASP.NET Core Models and Razor Views&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/html5-validation-for-aspnet-core-models-and-razor-views"&gt;https://khalidabuhakmeh.com/html5-validation-for-aspnet-core-models-and-razor-views&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;デフォルトのクライアント入力検証の代わりにブラウザー組み込みのフォーム検証を利用する方法について。&lt;/p&gt;
&lt;p&gt;記事では FinBuckle.HTML5Validation パッケージを使用する方法を紹介している。&lt;/p&gt;
&lt;h3 id="how-to-use-c-to-properly-follow-oauth-authentication-flows"&gt;How to Use C# to Properly Follow OAuth Authentication Flows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotneteers.net/how-to-use-c-to-properly-follow-oauth-authentication-flows/"&gt;https://dotneteers.net/how-to-use-c-to-properly-follow-oauth-authentication-flows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OAuth 認証フローを実装する方法について。&lt;/p&gt;
&lt;h3 id="real-graceful-shutdown-in-kubernetes-and-asp.net-core"&gt;Real Graceful Shutdown in Kubernetes and ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/arminshoeibi/real-graceful-shutdown-in-kubernetes-and-aspnet-core-2290"&gt;https://dev.to/arminshoeibi/real-graceful-shutdown-in-kubernetes-and-aspnet-core-2290&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kubernetes 上の ASP.NET Core や Generic Host のアプリケーションをグレースフルにシャットダウンする方法について。&lt;/p&gt;
&lt;p&gt;記事では Ingress Controller とのギャップでさらに遅延が必要な場合の対処方法についても紹介している。&lt;/p&gt;
&lt;h3 id="is.net-aspire-nuget-for-cloud-service-dependencies"&gt;Is .NET Aspire NuGet for Cloud Service Dependencies?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://haacked.com/archive/2024/06/27/dotnet-aspire/"&gt;https://haacked.com/archive/2024/06/27/dotnet-aspire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire はクラウドサービスの NuGet パッケージ依存関係のようではないかという話。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="blazor.net-20240704-1330"&gt;Blazor+ローコードで実現する.NET資産のモダナイズ (2024/07/04 13:30〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codeer.connpass.com/event/319762/"&gt;https://codeer.connpass.com/event/319762/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="rucchodisposify-subscribe-c-events-with-idisposables"&gt;ruccho/Disposify: Subscribe C# events with IDisposables!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ruccho/Disposify"&gt;https://github.com/ruccho/Disposify&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;イベント購読を IDisposable で管理できるようにする Source Generator。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/ruccho/articles/dc6f82771cf650"&gt;【C#】event を IDisposable で購読する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/filipnavara/status/1806291214884303064?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET Runtime Async (&lt;a href="https://t.co/3pIXXN7ENu"&gt;https://t.co/3pIXXN7ENu&lt;/a&gt;) is starting to get some attention again (&lt;a href="https://t.co/vjMLBFurl7"&gt;https://t.co/vjMLBFurl7&lt;/a&gt;).&lt;/p&gt;&amp;mdash; Filip Navara 🇺🇦 (parody of myself) (&amp;#64;filipnavara) &lt;a href="https://twitter.com/filipnavara/status/1806291214884303064?ref_src=twsrc%5Etfw"&gt;June 27, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/jcouv/status/1805629757436084669?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We merged a preview C# 13 feature into VS 17.11 (preview 3): partial properties.&lt;br&gt;&lt;br&gt;```&lt;br&gt;partial class C&lt;br&gt;{&lt;br&gt;    // Definition&lt;br&gt;    public partial string Prop { get; set; }&lt;br&gt;&lt;br&gt;    // Implementation&lt;br&gt;    public partial string Prop { get =&amp;gt; ...; set =&amp;gt; ...; }&lt;br&gt;}&lt;br&gt;```&lt;a href="https://t.co/ZmA7g05f3W"&gt;https://t.co/ZmA7g05f3W&lt;/a&gt;&lt;/p&gt;&amp;mdash; Julien Couvreur (&amp;#64;jcouv) &lt;a href="https://twitter.com/jcouv/status/1805629757436084669?ref_src=twsrc%5Etfw"&gt;June 25, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-06-23: Install Visual Studio updates through Microsoft Update, C# Inline Action for Azure Logic Apps</title>
			<link>https://weekref.net/2024/06/23/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/06/23/updates</guid>
			<pubDate>Sun, 23 Jun 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="keep-visual-studio-automatically-updated-and-secure-through-microsoft-update-visual-studio-blog"&gt;Keep Visual Studio automatically updated and secure through Microsoft Update - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/automatically-install-visual-studio-security-updates-through-microsoft-update/"&gt;https://devblogs.microsoft.com/visualstudio/automatically-install-visual-studio-security-updates-through-microsoft-update/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio のアップデートを Microsoft Update (Windows Update に加えて Microsoft 製品のアップデートを配信する仕組み) からセキュリティー更新を受け取れるようになることについて。&lt;/p&gt;
&lt;p&gt;記事では Microsoft Update で更新を有効にする方法や、オプトアウト方法、8月からのロールアウトに向けてプレビューする方法について、今後の改善について触れている。&lt;/p&gt;
&lt;h3 id="announcement-introducing.net-c-inline-action-for-azure-logic-apps-standard-preview"&gt;Announcement: Introducing .NET C# Inline Action for Azure Logic Apps (Standard) - Preview&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/azure-integration-services-blog/announcement-introducing-net-c-inline-action-for-azure-logic/ba-p/4160541"&gt;https://techcommunity.microsoft.com/t5/azure-integration-services-blog/announcement-introducing-net-c-inline-action-for-azure-logic/ba-p/4160541&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Logic Apps での C# インラインアクションのサポートがプレビューリリースされた。&lt;/p&gt;
&lt;p&gt;記事ではワークフローへの C# スクリプトの追加方法、利用できる機能や API、制限事項といった点について解説している。&lt;/p&gt;
&lt;h3 id="announcing-third-party-api-and-package-map-support-for.net-upgrade-assistant.net-blog"&gt;Announcing Third Party API and Package Map Support for .NET Upgrade Assistant - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-api-map-support-for-ua/"&gt;https://devblogs.microsoft.com/dotnet/announcing-api-map-support-for-ua/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Upgrade Assistant で 3rd パーティーの API とパッケージのカスタムマッピングパッケージの実装をサポートした。&lt;/p&gt;
&lt;h3 id="upcoming-changes-to-supported-versions-of-visual-studio-for-remote-debugging-with-azure-app-service"&gt;Upcoming Changes to Supported Versions of Visual Studio for Remote Debugging with Azure App Service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/apps-on-azure-blog/upcoming-changes-to-supported-versions-of-visual-studio-for/ba-p/4164389"&gt;https://techcommunity.microsoft.com/t5/apps-on-azure-blog/upcoming-changes-to-supported-versions-of-visual-studio-for/ba-p/4164389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure App Service 上の .NET プロセスに対する Visual Studio からのリモートデバッグのサポートバージョンの変更について。&lt;/p&gt;
&lt;p&gt;2022 以前のバージョンに関しては2024年6月から、2022 17.9 とそれ以前は2025年1月末からサポートされなくなる。&lt;/p&gt;
&lt;h3 id="release-11.0.11-avaloniauiavalonia"&gt;Release 11.0.11 · AvaloniaUI/Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.11"&gt;https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia 11.0.11 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正が行われている。&lt;/p&gt;
&lt;h3 id="release-v2.5.168-messagepack-csharpmessagepack-csharp"&gt;Release v2.5.168 · MessagePack-CSharp/MessagePack-CSharp&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MessagePack-CSharp/MessagePack-CSharp/releases/tag/v2.5.168"&gt;https://github.com/MessagePack-CSharp/MessagePack-CSharp/releases/tag/v2.5.168&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MessagePack-CSharp v2.5.168 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正や NonSerialized のサポート、依存関係の整理などが行われている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-6.net-8-2"&gt;ビルドは通るが動かない！実際に引っ掛かった「.NET 6 - .NET 8」移行時の破壊的変更 2 選&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/xin9le/articles/b2b0d500df95c7"&gt;https://zenn.dev/xin9le/articles/b2b0d500df95c7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 から 8 へ移行した際に挙動変更されたことに由来した問題について。記事では FromBody 属性と JsonRequired 属性に関連する問題について紹介している。&lt;/p&gt;
&lt;h3 id="dotcover-command-line-tools-for-automation-testing-code-coverage-the.net-tools-blog"&gt;dotCover Command Line Tools for Automation Testing Code Coverage | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/20/dotcover-command-line-tools-for-automation-testing-code-coverage/"&gt;https://blog.jetbrains.com/dotnet/2024/06/20/dotcover-command-line-tools-for-automation-testing-code-coverage/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コードカバレッジを取得する dotCover のコマンドラインツールの紹介。記事ではインストール方法、使用方法、その他ヒントについて触れている。&lt;/p&gt;
&lt;h3 id="how-to-properly-measure-code-speed-in.net"&gt;How to properly measure code speed in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/byteminds_agency/how-to-properly-measure-code-speed-in-net-158o"&gt;https://dev.to/byteminds_agency/how-to-properly-measure-code-speed-in-net-158o&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BenchmarkDotNet を使用したパフォーマンス計測についての基本の簡単な紹介。&lt;/p&gt;
&lt;h3 id="using-phi-3-c-with-onnx-for-text-and-vision-samples.net-blog"&gt;Using Phi-3 &amp;amp; C# with ONNX for text and vision samples - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/using-phi3-csharp-with-onnx-for-text-and-vision-samples-md/"&gt;https://devblogs.microsoft.com/dotnet/using-phi3-csharp-with-onnx-for-text-and-vision-samples-md/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Phi-3 ONNX モデルを C# から呼び出してテキスト生成や画像認識を行うサンプルコードの紹介。&lt;/p&gt;
&lt;h3 id="maui-android-java0000-type-is-defined-multiple-times"&gt;MAUI Android で &lt;code&gt;JAVA0000: Type ~ is defined multiple times&lt;/code&gt; と怒られた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/proudust/articles/2024-06-19-maui-android-java0000"&gt;https://zenn.dev/proudust/articles/2024-06-19-maui-android-java0000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI の Android 向けビルドを作成時にビルドエラーになることがある問題と対処方法について。&lt;/p&gt;
&lt;h3 id="omnisharp-vim-fzf-qiita"&gt;OmniSharp-Vim と fzf を連携させる メンバーのリスト表示編 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/lx-sasabo/items/b9a1c84a66a306ade81d"&gt;https://qiita.com/lx-sasabo/items/b9a1c84a66a306ade81d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vim で OmniSharp-Vim と fzf を連携してメンバーのリストを表示するほうほうについて。&lt;/p&gt;
&lt;h3 id="privacy-and-security-improvements-in.net-modernization-tooling.net-blog"&gt;Privacy and security improvements in .NET modernization tooling - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-modernization-privacy-security-improvements/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-modernization-privacy-security-improvements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET モダナイゼーションツール (.NET アップグレードアシスタントと Azure Migration アプリケーションとコード評価) でのセキュリティーとプライバシーに関する改善について。&lt;/p&gt;
&lt;p&gt;ユーザーごとにインストールされ、更新に管理者権限が必要なくなったこと、レポートに含まれる情報のコントロールが可能となったことなどを紹介している。&lt;/p&gt;
&lt;h3 id="easily-navigate-code-delegates-while-debugging-visual-studio-blog"&gt;Easily navigate code delegates while debugging - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/easily-navigate-code-delegates-while-debugging/"&gt;https://devblogs.microsoft.com/visualstudio/easily-navigate-code-delegates-while-debugging/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 17.10 でのデバッグ中のデリゲートのコードナビゲーションの改善について。&lt;/p&gt;
&lt;p&gt;デバッグ中にデリゲートからソースコードにジャンプするといったことが可能となっている。&lt;/p&gt;
&lt;h3 id="code-style-for-better-productivity-tips-and-tools-from-the-metalama-team-the.net-tools-blog"&gt;Code Style for Better Productivity - Tips and Tools from the Metalama Team | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/18/code-style-for-better-productivity-tips-and-tools-from-the-metalama-team/"&gt;https://blog.jetbrains.com/dotnet/2024/06/18/code-style-for-better-productivity-tips-and-tools-from-the-metalama-team/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コードスタイルに関して &lt;a href="https://www.postsharp.net/metalama"&gt;Metalama&lt;/a&gt; チームで行っているプラクティスやツールの紹介。&lt;/p&gt;
&lt;p&gt;記事ではコンセンサスについて、IDE での設定方法、警告の報告、定期的にクリーンアップする計画といった点を紹介している。&lt;/p&gt;
&lt;h3 id="refactor-your-code-with-default-lambda-parameters.net-blog"&gt;Refactor your code with default lambda parameters - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/refactor-your-code-with-default-lambda-parameters/"&gt;https://devblogs.microsoft.com/dotnet/refactor-your-code-with-default-lambda-parameters/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で導入されたラムダ式のデフォルトパラメーターについて。&lt;/p&gt;
&lt;p&gt;記事ではどのように使用できるのか、ASP.NET Core Minimal APIs での使用方法などを紹介している。&lt;/p&gt;
&lt;h3 id="exploring-the-generated-code-listt-and-fallback-cases-behind-the-scenes-of-collection-expressions-part-2"&gt;Exploring the generated code: List&amp;lt;T&amp;gt; and fallback cases: Behind the scenes of collection expressions - Part 2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-2-exploring-the-generated-code-list-and-fallback-cases/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-2-exploring-the-generated-code-list-and-fallback-cases/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コレクション式がコンパイラーによってどのように展開されるのかについての解説。&lt;/p&gt;
&lt;p&gt;HashSet やカスタム型での結果、List&amp;lt;T&amp;gt; での最適化と .NET 8 以前のバージョンでのフォールバックといった挙動を開設している。&lt;/p&gt;
&lt;h3 id="design-and-deployment-and-scaling-consideration-in-signalr"&gt;Design and Deployment and Scaling Consideration in SignalR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ilovedotnet.org/blogs/design-and-deployment-and-scaling-in-signalr/"&gt;https://ilovedotnet.org/blogs/design-and-deployment-and-scaling-in-signalr/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SignalR のデプロイとスケーリングについて検討事項について。&lt;/p&gt;
&lt;h3 id="how-to-encrypt-asp.net-core-route-parameters"&gt;How To Encrypt ASP.NET Core Route Parameters&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/how-to-encrypt-aspnet-core-route-parameters"&gt;https://khalidabuhakmeh.com/how-to-encrypt-aspnet-core-route-parameters&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のルートパラメーターを暗号化する方法について。記事ではルート制約とパラメータのバインダーによって暗号/復号を行う方法を解説している。&lt;/p&gt;
&lt;h3 id="hands-on-http3-with.net"&gt;Hands-On HTTP/3 with .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;Alikhalili/hands-on-http-3-with-net-fcd38cf7ad05"&gt;https://medium.com/&amp;#64;Alikhalili/hands-on-http-3-with-net-fcd38cf7ad05&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HTTP/3 についての説明と HTTP/3 の仕様に基づいたツールを実装する手がかりの解説。&lt;/p&gt;
&lt;h3 id="net-aspire"&gt;.NET Aspire の起動時にタイムアウトのエラーが発生する場合の対処方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet-aspire-launch-error"&gt;https://zenn.dev/microsoft/articles/dotnet-aspire-launch-error&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire プロジェクトがポート競合により起動できないときの対処方法について。&lt;/p&gt;
&lt;h3 id="rider-2024.2-eap-3-is-out-the.net-tools-blog"&gt;Rider 2024.2 EAP 3 Is Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/14/rider-2024-2-eap-3/"&gt;https://blog.jetbrains.com/dotnet/2024/06/14/rider-2024-2-eap-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 EAP がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは dotnet watch のプラグインがバンドルされるようになった。&lt;/p&gt;
&lt;h3 id="a.net-developer-guide-to-xunit-test-instrumentation-with-opentelemetry-and-aspire-dashboard"&gt;A .NET Developer Guide to XUnit Test Instrumentation with OpenTelemetry and Aspire Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/nikiforovall/a-net-developer-guide-to-xunit-test-instrumentation-with-opentelemetry-and-aspire-dashboard-5h14"&gt;https://dev.to/nikiforovall/a-net-developer-guide-to-xunit-test-instrumentation-with-opentelemetry-and-aspire-dashboard-5h14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;xUnit のテストでの計測を Aspire Dashboard と OpenTelemetry を組み合わせる方法について。&lt;/p&gt;
&lt;h3 id="c.net-web-grpc-graphql-blazor-sansan-tech-blog"&gt;【イベントレポート】イマドキのC# .NET Web開発 〜gRPC, GraphQL, Blazorもあるよ〜 を開催しました - Sansan Tech Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://buildersbox.corp-sansan.com/entry/2024/05/23/143000"&gt;https://buildersbox.corp-sansan.com/entry/2024/05/23/143000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sansan.connpass.com/event/316664/"&gt;イマドキのC# .NET Web開発 〜gRPC, GraphQL, Blazorもあるよ〜&lt;/a&gt; での発表のフォローアップ記事。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="annulusgamescsv-csharp-fast-csv-serializer-for.net-and-unity"&gt;AnnulusGames/Csv-CSharp: Fast CSV Serializer for .NET and Unity&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AnnulusGames/Csv-CSharp"&gt;https://github.com/AnnulusGames/Csv-CSharp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Generator ベースの高速、ゼロ/低アロケーションの CSV パーサー。Unity での動作もサポートされている。&lt;/p&gt;
&lt;!-- https://x.com/annulusgames/status/1803322411221500067?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;.NET向けのCSVパーサ「Csv-CSharp」のv0.1を公開しました！Source Generatorを活用した設計により、CSVを簡単かつ高速にクラスの配列にパースできます。&lt;br&gt;&lt;br&gt;また、NugetForUnityを使えばUnityでも利用できます！&lt;a href="https://t.co/i2IDSSoEJX"&gt;https://t.co/i2IDSSoEJX&lt;/a&gt; &lt;a href="https://t.co/EMWp6jVUVb"&gt;pic.twitter.com/EMWp6jVUVb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Annulus Games (&amp;#64;AnnulusGames) &lt;a href="https://twitter.com/AnnulusGames/status/1803322411221500067?ref_src=twsrc%5Etfw"&gt;June 19, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/dave_dotnet/status/1804182294539776385?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Why are C# 12 primary constructor params not readonly?&lt;br&gt;&lt;br&gt;I love primary constructors personally but from what I can see online the fact the params aren&amp;#39;t readonly gets a lot of devs quite exercised. &lt;br&gt;&lt;br&gt;Feedback below is from &lt;a href="https://twitter.com/MadsTorgersen?ref_src=twsrc%5Etfw"&gt;&amp;#64;MadsTorgersen&lt;/a&gt; a few months ago and suggests consistency… &lt;a href="https://t.co/VlnzwBzVq4"&gt;pic.twitter.com/VlnzwBzVq4&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1804182294539776385?ref_src=twsrc%5Etfw"&gt;June 21, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/dave_dotnet/status/1802294617666187730?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Generic OrderedDictionary coming in .NET 9  🔥&lt;br&gt;&lt;br&gt;This is awesome and should allow many of us to remove custom code and get the best performance from the built in implementation.&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/jQUAt3FsQb"&gt;pic.twitter.com/jQUAt3FsQb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1802294617666187730?ref_src=twsrc%5Etfw"&gt;June 16, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="windows-add-titlebar-control-by-foda-pull-request-23019-dotnetmaui"&gt;[Windows] Add TitleBar Control by Foda · Pull Request #23019 · dotnet/maui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/maui/pull/23019"&gt;https://github.com/dotnet/maui/pull/23019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI のタイトルバーに関する API の追加 PR。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-06-14: .NET MAUI Extension for VS Code, Windows App SDK 1.5.4, .NET 9 Preview 5</title>
			<link>https://weekref.net/2024/06/14/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/06/14/updates</guid>
			<pubDate>Fri, 14 Jun 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="the.net-maui-extension-for-visual-studio-code-is-now-generally-available.net-blog"&gt;The .NET MAUI Extension for Visual Studio Code is now Generally Available - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-dotnet-maui-extension-for-visual-studio-code-is-now-generally-available/"&gt;https://devblogs.microsoft.com/dotnet/the-dotnet-maui-extension-for-visual-studio-code-is-now-generally-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code 向けの .NET MAUI の拡張機能が一般公開された。&lt;/p&gt;
&lt;p&gt;このリリースでは XAML の編集体験の向上やホットリロードといったものが可能となった。この機能拡張は C# Dev Kit と C# 拡張機能の上に構築されているため、ライセンスはそれらと同様のライセンスが必要となる。&lt;/p&gt;
&lt;h3 id="windows-app-sdk-windows-apps"&gt;バージョン 1.5.4 (1.5.240607001) - Windows App SDK の安定チャネルのリリース ノート - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/stable-channel#version-154-15240607001"&gt;https://learn.microsoft.com/ja-jp/windows/apps/windows-app-sdk/stable-channel#version-154-15240607001&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.5.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは WebView2 に関する問題をはじめとしていくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="net-9-preview-5-dotnetcore-discussion-9350"&gt;.NET 9 Preview 5 · dotnet/core · Discussion #9350&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/discussions/9350"&gt;https://github.com/dotnet/core/discussions/9350&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 5 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AI 向けの &lt;code&gt;TensorPrimitives&lt;/code&gt; と &lt;code&gt;Tensor&amp;lt;T&amp;gt;&lt;/code&gt; の強化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Span&lt;/code&gt; オーバーロードでの &lt;code&gt;params&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SearchValues&lt;/code&gt; を使用した文字列の検索&lt;/li&gt;
&lt;li&gt;完了したタスクから &lt;code&gt;foreach&lt;/code&gt; できる &lt;code&gt;Task.WhenEach&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;優先順位付けされた Unbounded Channel (無制限のチャンネル)&lt;/li&gt;
&lt;li&gt;より柔軟な OpenTelemetry アクティビティリンク&lt;/li&gt;
&lt;li&gt;TypeDescriptor のトリミングサポート&lt;/li&gt;
&lt;li&gt;型名パース&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rider-2024.1.3-and-resharper-2024.1.3-updates-are-out-the.net-tools-blog"&gt;Rider 2024.1.3 and ReSharper 2024.1.3 Updates Are Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/10/rd-rsrp-2024-1-3/"&gt;https://blog.jetbrains.com/dotnet/2024/06/10/rd-rsrp-2024-1-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider と ReSharper 2024.1.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Rider と ReSharper ともに Razor での PartialAsync の不要な呼び出しの検出対応が追加され、Rider はセキュリティ修正や最新の SDK の Roslyn への対応、その他 UI の改善などが含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="statically-sized-dynamically-sized-and-other"&gt;Statically Sized, dynamically sized, and other.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_1_3.html"&gt;https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_1_3.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust を MSIL にコンパイルするバックエンドを開発している中で起こしたバグについて。&lt;/p&gt;
&lt;h3 id="using-postgresql-with.net-and-entra-id.net-blog"&gt;Using PostgreSQL with .NET and Entra ID - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/using-postgre-sql-with-dotnet-and-entra-id/"&gt;https://devblogs.microsoft.com/dotnet/using-postgre-sql-with-dotnet-and-entra-id/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire から PostgreSQL を使用する方法と、Entra ID を使用して PostgreSQL をマネージド ID で保護する方法について。&lt;/p&gt;
&lt;h3 id="add-performance-monitor-to-your-nunit-tests"&gt;Add Performance Monitor to Your NUnit Tests&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;nw_enterprise/add-performance-monitor-to-your-nunit-tests-a716de6d74ac"&gt;https://medium.com/&amp;#64;nw_enterprise/add-performance-monitor-to-your-nunit-tests-a716de6d74ac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NUnit でユニットテストを実行時にパフォーマンスカウンターから CPU 使用率やメモリー使用率を取得してモニターする方法について。&lt;/p&gt;
&lt;h3 id="net-aspire"&gt;マイクロサービスを作らない人による .NET Aspire の概要説明（普通に便利）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet-aspire"&gt;https://zenn.dev/microsoft/articles/dotnet-aspire&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire の概要と各種提供している機能について。&lt;/p&gt;
&lt;h3 id="neue-cc-consoleappframework-v5-native-aotccli"&gt;neue cc - ConsoleAppFramework v5 - ゼロオーバーヘッド・Native AOT対応のC#用CLIフレームワーク&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/06/13_ConsoleAppFramework_v5.html"&gt;https://neue.cc/2024/06/13_ConsoleAppFramework_v5.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新たに書き直された Source Generator ベースの CLI フレームワーク ConsoleAppFramework の技術的な解説。&lt;/p&gt;
&lt;h3 id="c-array-and-list-fastest-loop-in-2024-ndepend-blog"&gt;C# Array and List Fastest Loop in 2024 - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/c-array-and-list-fastest-loop/"&gt;https://blog.ndepend.com/c-array-and-list-fastest-loop/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024年の C# における配列と List のループパフォーマンスについての調査。&lt;/p&gt;
&lt;h3 id="catch-up-on-the-latest-git-tooling-features-in-17.10-ga-visual-studio-blog"&gt;Catch up on the latest Git tooling features in 17.10 GA - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/catch-up-on-the-latest-git-tooling-features-in-17-10-ga/"&gt;https://devblogs.microsoft.com/visualstudio/catch-up-on-the-latest-git-tooling-features-in-17-10-ga/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 での Git ツール機能の新機能についての紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コミットメッセージの生成&lt;/li&gt;
&lt;li&gt;Pull request の説明の生成&lt;/li&gt;
&lt;li&gt;コミット履歴の Explain&lt;/li&gt;
&lt;li&gt;ワークアイテムをリンクした Visual Studio からの Pull request の作成 (Azure DevOps)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-17.10-performance-enhancements-visual-studio-blog"&gt;Visual Studio 2022 - 17.10 Performance Enhancements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-performance-enhancements/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-10-performance-enhancements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.10 でのパフォーマンス向上についての解説。&lt;/p&gt;
&lt;p&gt;17.10 では Windows Forms デザイナーの読み込み速度の向上、Razor での C# コードの色付け速度の向上、.NET ソリューションの読み込みの高速化、リファクタリングとチューニングによる読み込まれる DLL の削減といった改善が行われている。&lt;/p&gt;
&lt;h3 id="building-generative-ai-apps-with.net-8.net-blog"&gt;Building Generative AI apps with .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/build-gen-ai-with-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/build-gen-ai-with-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で生成 AI のアプリケーションを作ることについて。始め方、監視、エコシステムなどについて簡単に紹介。&lt;/p&gt;
&lt;h3 id="introducing-collection-expressions-in-c12-behind-the-scenes-of-collection-expressions-part-1"&gt;Introducing collection expressions in C#12: Behind the scenes of collection expressions - Part 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-1-introducing-collection-expressions-in-csharp12/"&gt;https://andrewlock.net/behind-the-scenes-of-collection-expressions-part-1-introducing-collection-expressions-in-csharp12/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で導入されたコレクション式についての解説。&lt;/p&gt;
&lt;p&gt;記事ではコレクション初期化子の紹介や、型推論、ReadOnlySpan や空コレクション、スプレッドといった機能を紹介している。&lt;/p&gt;
&lt;h3 id="the-resharper-2024.2-early-access-program-begins-the.net-tools-blog"&gt;The ReSharper 2024.2 Early Access Program begins! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/10/resharper-2024-2-eap-begins/"&gt;https://blog.jetbrains.com/dotnet/2024/06/10/resharper-2024-2-eap-begins/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.2 EAP が開始された。&lt;/p&gt;
&lt;p&gt;この EAP の初期リリースでは Resharper C++ や dotMemory, dotTrace, dotPeek の改善が含まれている。&lt;/p&gt;
&lt;h3 id="rider-starts-its-early-access-program-for-version-2024.2-the.net-tools-blog"&gt;Rider Starts Its Early Access Program for Version 2024.2 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/06/10/rider-eap-2024-2-2/"&gt;https://blog.jetbrains.com/dotnet/2024/06/10/rider-eap-2024-2-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 EAP が開始された。&lt;/p&gt;
&lt;p&gt;この EAP の初期リリースでは新しい UI のデフォルト化、各種 UI の改善、バージョンコントロールの改善、Web 開発の改善、Unreal Engine アプリケーションのデバッグの改善、パフォーマンスとメモリーのプロファイリングの改善、デコンパイラーの改善、その他ランタイムの更新などが含まれている。&lt;/p&gt;
&lt;h3 id="automated-tests-instrumentation-via-opentelemetry-and-aspire-dashboard"&gt;Automated Tests instrumentation via OpenTelemetry and Aspire Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/nikiforovall/automated-tests-instrumentation-via-opentelemetry-and-aspire-dashboard-13dj"&gt;https://dev.to/nikiforovall/automated-tests-instrumentation-via-opentelemetry-and-aspire-dashboard-13dj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry と Aspire Dashboard を使用して自動テストの計測を行う方法について。&lt;/p&gt;
&lt;h3 id="build-a-generative-ai-rag-app-in-c-with-phi-3-onnx-and-sharpvector-build5nines"&gt;Build A Generative AI + RAG App In C# With Phi-3, ONNX, And SharpVector | Build5Nines&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://build5nines.com/build-a-generative-ai-rag-app-in-c-with-phi-3-onnx-and-sharpvector/"&gt;https://build5nines.com/build-a-generative-ai-rag-app-in-c-with-phi-3-onnx-and-sharpvector/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# と Phi-3、ONNX に著者の実装したインメモリーベクトルデータベースを組み合わせて RAG アプリケーションを実装する方法について。&lt;/p&gt;
&lt;h3 id="getting-started-with-ui-testing.net-maui-apps-using-appium.net-blog"&gt;Getting started with UI testing .NET MAUI apps using Appium - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-maui-ui-testing-appium/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-maui-ui-testing-appium/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Appium を使用して .NET MAUI アプリケーションの UI テストを行う方法について。&lt;/p&gt;
&lt;p&gt;記事では導入方法から記述方法、様々な環境での実行などについても触れている。&lt;/p&gt;
&lt;h3 id="polymorphic-serialization-via-system.text.json-in-asp.net-core-minimal-api"&gt;Polymorphic serialization via System.Text.Json in ASP.NET Core Minimal API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nikiforovall.github.io/dotnet/aspnetcore/2024/04/06/openapi-polymorphism.html"&gt;https://nikiforovall.github.io/dotnet/aspnetcore/2024/04/06/openapi-polymorphism.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Minimal API と System.Text.Json でポリモーフィックな JSON のシリアライズを行う方法について。&lt;/p&gt;
&lt;h3 id="encoding.getstring"&gt;Encoding.GetString()は救われない&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sayurin/articles/3d19bf4bb22e6e"&gt;https://zenn.dev/sayurin/articles/3d19bf4bb22e6e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Encoding.GetString&lt;/code&gt; で文字列を作成する際に一時配列を作ってしまうことがあるケースについて。&lt;/p&gt;
&lt;h3 id="net-aspire-1"&gt;マイクロサービス作らなくても .NET Aspire って便利&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet-aspire-minimal"&gt;https://zenn.dev/microsoft/articles/dotnet-aspire-minimal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire をローカル開発サーバー環境(DB、Cacheなど)のセットアップとして活用する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-tmdstmds.ssh.net-ssh-client-library"&gt;GitHub - tmds/Tmds.Ssh: .NET SSH client library&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/tmds/Tmds.Ssh"&gt;https://github.com/tmds/Tmds.Ssh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;モダンな .NET をベースに実装された SSH クライアントの実装。&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;ASP.NET Core MVC, Razor Pages を必要としない ASP.NET Core 向け Razor ベーステンプレートエンジンの Razor Slices がトリミングに対応。&lt;/p&gt;
&lt;!-- https://x.com/damianedwards/status/1799122783802401092?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Razor plus native AOT? Now you can! I finally released my updates to RazorSlices which now supports trimming &amp;amp; native AOT! Use in conjunction with Minimal APIs to get small, fast apps that start instantly.&lt;a href="https://t.co/f7YIgJ1GyD"&gt;https://t.co/f7YIgJ1GyD&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/aspnetcore?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#aspnetcore&lt;/a&gt;&lt;/p&gt;&amp;mdash; Damian Edwards (&amp;#64;DamianEdwards) &lt;a href="https://twitter.com/DamianEdwards/status/1799122783802401092?ref_src=twsrc%5Etfw"&gt;June 7, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="obsolete-servicepointmanager-by-mihazupan-pull-request-103456-dotnetruntime"&gt;Obsolete ServicePointManager 🎉 by MihaZupan · Pull Request #103456 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/103456"&gt;https://github.com/dotnet/runtime/pull/103456&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ServicePointManager&lt;/code&gt; を Obsolete にするという PR。&lt;/p&gt;
&lt;h3 id="use-new-system.net.serversentevents-package-in-signalr-by-brennanconroy-pull-request-56206-dotnetaspnetcore"&gt;Use new System.Net.ServerSentEvents package in SignalR by BrennanConroy · Pull Request #56206 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/pull/56206"&gt;https://github.com/dotnet/aspnetcore/pull/56206&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Server-Sents Events の実装が SignalR の内部のものから新たに追加された System.Net.ServerSentsEvents に移行する PR。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/runtime/pull/102238"&gt;Add System.Net.ServerSentEvents by stephentoub · Pull Request #102238 · dotnet/runtime · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>