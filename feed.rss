<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>WeekRef.NET</title>
		<link>https://weekref.net/</link>
		<description>.NET 関連の情報をほぼ週刊配信</description>
		<copyright>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</copyright>
		<managingEditor>Mayuki Sawatari</managingEditor>
		<pubDate>Tue, 26 Nov 2024 07:07:42 GMT</pubDate>
		<lastBuildDate>Tue, 26 Nov 2024 07:07:42 GMT</lastBuildDate>
		<item>
			<title>2024-11-26: dotnet scaffold, Windows App SDK 1.6.3 &amp; 1.7.0 Experimental 1</title>
			<link>https://weekref.net/2024/11/26/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/11/26/updates</guid>
			<pubDate>Tue, 26 Nov 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="dotnet-scaffold-next-generation-project-creation-for.net.net-blog"&gt;dotnet scaffold - Next Generation Project Creation for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-dotnet-scaffold/"&gt;https://devblogs.microsoft.com/dotnet/introducing-dotnet-scaffold/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;スキャフォールディングを行うコマンドラインツール dotnet scaffold がリリースされた。&lt;/p&gt;
&lt;p&gt;このツールは従来 Visual Studio で行っていたような ASP.NET Core のアプリケーションのスキャフォールディング(例えばモデルに対するページとデータ操作一式のコードなどの生成)を CLI 上でインタラクティブに行える。&lt;/p&gt;
&lt;p&gt;現在 Web アプリケーション、Web API、.NET Aspire、Blazor に対するスキャフォールディングに対応している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/karuakun/items/101b257e3ef9bab818e7"&gt;新しい.NETのスキャフォールディングを試してみる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="aws-lambda-now-supports-snapstart-for-python-and.net-functions-aws"&gt;AWS Lambda now supports SnapStart for Python and .NET functions - AWS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/jp/about-aws/whats-new/2024/11/aws-lambda-snapstart-python-net-functions/"&gt;https://aws.amazon.com/jp/about-aws/whats-new/2024/11/aws-lambda-snapstart-python-net-functions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS Lambda SnapStart が .NET をサポートした。&lt;/p&gt;
&lt;p&gt;Lambda SnapStart は事前にスナップショットを取っておくことで起動パフォーマンスを向上させるというもの。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/jp/blogs/aws/aws-lambda-snapstart-for-python-and-net-functions-is-now-generally-available/"&gt;AWS Lambda SnapStart for Python and .NET functions is now generally available | Amazon Web Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-windows-app-sdk-1.6.3-1.6.241114003-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.6.3 (1.6.241114003) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.3"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.6.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正とウィジェットに関する新しい API の追加が行われている。&lt;/p&gt;
&lt;h3 id="release-v1.7-exp1-microsoftwindowsappsdk"&gt;Release v1.7-exp1 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.7-exp1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.7-exp1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.7.0 Experimental 1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは新しい CameraCaptureUI API や新しい認証 API、新しいバックグラウンドタスクのサポートといったものが含まれている。&lt;/p&gt;
&lt;h3 id="openapi-document-generation-in.net-9.net-blog"&gt;OpenAPI document generation in .NET 9 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet9-openapi/"&gt;https://devblogs.microsoft.com/dotnet/dotnet9-openapi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 での OpenAPI ドキュメントサポートについて。&lt;/p&gt;
&lt;p&gt;記事では新機能の紹介やサポートの有効化の方法、カスタマイズといった点に触れている。&lt;/p&gt;
&lt;h3 id="release-release-v2.67.0-grpcgrpc-dotnet"&gt;Release Release v2.67.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.67.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.67.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.67.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかのコードクリーンアップやサーバーにおけるメソッドのキャンセル時のロギングのログレベルの調整などが含まれている。&lt;/p&gt;
&lt;h3 id="release-v9.0.1-npgsqlnpgsql"&gt;Release v9.0.1 · npgsql/npgsql&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v9.0.1"&gt;https://github.com/npgsql/npgsql/releases/tag/v9.0.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Npgsql v9.0.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは System.Text.Json の 9.0.0 への依存することによるいくつかの問題への対応のため、System.Text.Json のバージョンの差し戻しが行われている。&lt;/p&gt;
&lt;h3 id="introducing-azure-api-management-policy-toolkit-microsoft-community-hub"&gt;Introducing Azure API Management Policy Toolkit | Microsoft Community Hub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/blog/IntegrationsonAzureBlog/introducing-azure-api-management-policy-toolkit/4303483"&gt;https://techcommunity.microsoft.com/blog/IntegrationsonAzureBlog/introducing-azure-api-management-policy-toolkit/4303483&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure API Management Policy Toolkit がアーリーリリースとなった。&lt;/p&gt;
&lt;p&gt;Azure API Management Policy Toolkit は Azure API Management のポリシーを Razor 構文ではなく C# で定義できるようにする。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="blazoruiradzen"&gt;BlazorのUIコンポーネントにRadzenを選んだ理由&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nexta_/articles/6988cbc29e85b9"&gt;https://zenn.dev/nexta_/articles/6988cbc29e85b9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor の UI コンポーネントライブラリーとして Radzen を選択したことについて。&lt;/p&gt;
&lt;h3 id="copying-error-messages-just-got-easier-visual-studio-blog"&gt;Copying error messages just got easier - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/copying-error-messages-just-got-easier/"&gt;https://devblogs.microsoft.com/visualstudio/copying-error-messages-just-got-easier/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 16.12 でエラーメッセージのコピーが簡単になったことについて。&lt;/p&gt;
&lt;h3 id="deep-dive-into.net-hosted-services"&gt;Deep Dive into .NET Hosted Services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://itnext.io/deep-dive-into-net-hosted-services-01b1388ad78b"&gt;https://itnext.io/deep-dive-into-net-hosted-services-01b1388ad78b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BackgroundService (IHostedService) についての解説。&lt;/p&gt;
&lt;p&gt;それぞれのメソッドがどのような機能となるか、ライフタイムの管理など。&lt;/p&gt;
&lt;h3 id="top-5-github-copilot-features-in-visual-studio-from-microsoft-ignite-2024-visual-studio-blog"&gt;Top 5 GitHub Copilot Features in Visual Studio from Microsoft Ignite 2024 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/top-5-github-copilot-features-in-visual-studio-from-microsoft-ignite-2024/"&gt;https://devblogs.microsoft.com/visualstudio/top-5-github-copilot-features-in-visual-studio-from-microsoft-ignite-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ignite 202 4で発表された Visual Studio での GitHub Copilot の機能5選を紹介。&lt;/p&gt;
&lt;h3 id="c-calls-c-a-tale-of-friendship-across-runtimes"&gt;C++ Calls C#: A Tale of Friendship Across Runtimes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;maximiliysiss/c-calls-c-a-tale-of-friendship-across-runtimes-0168d679f66d"&gt;https://medium.com/&amp;#64;maximiliysiss/c-calls-c-a-tale-of-friendship-across-runtimes-0168d679f66d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C++ から C#/.NET を呼び出す手法についてのまとめ。&lt;/p&gt;
&lt;p&gt;ランタイムをホストする、C++/CLI を使用する、Native AOT でビルドする、COM を使用するといった手法を紹介している。&lt;/p&gt;
&lt;h3 id="cjavascript"&gt;C#プログラマーのためのJavaScriptチートシート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/js-cheat-sheet-for-cs"&gt;https://zenn.dev/zead/articles/js-cheat-sheet-for-cs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# プログラマーのための JavaScript の構文などのチートシート。&lt;/p&gt;
&lt;h3 id="making-you-more-productive-with-visual-studio-v17.12-visual-studio-blog"&gt;Making you more productive with Visual Studio v17.12 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/making-you-more-productive-with-visual-studio-v17-12/"&gt;https://devblogs.microsoft.com/visualstudio/making-you-more-productive-with-visual-studio-v17-12/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.12 の生産性向上に関する新機能の紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;エラーリストからのコピー&lt;/li&gt;
&lt;li&gt;コード検索からの行への移動&lt;/li&gt;
&lt;li&gt;コード検索ウィンドウのドッキング&lt;/li&gt;
&lt;li&gt;検索結果のリフレッシュ&lt;/li&gt;
&lt;li&gt;インスタンスを跨いだファイルのコピー&lt;/li&gt;
&lt;li&gt;複数プロジェクトの起動設定&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="winui-3-native-aot"&gt;WinUI 3 で Native AOT が簡単になっていた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/winui3-native-aot"&gt;https://zenn.dev/shinta0806/articles/winui3-native-aot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 アプリケーションを Native AOT でビルドするための手順について。&lt;/p&gt;
&lt;h3 id="an-attempt-to-return-meaningful-problem-details-responses-for-model-binding-errors-in-an-asp.net-core-minimal-api"&gt;An Attempt to return meaningful Problem Details responses for model binding errors in an ASP.NET Core Minimal API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/nausaf/aborted-attempt-to-return-meaningful-problem-details-response-from-model-binding-errors-in-an-353g"&gt;https://dev.to/nausaf/aborted-attempt-to-return-meaningful-problem-details-response-from-model-binding-errors-in-an-353g&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Minimal API でのモデルバインディングエラーを問題の詳細レスポンスとして返す方法について。&lt;/p&gt;
&lt;h3 id="how.net-9.0-boosted-json-schema-performance-by-32-endjin"&gt;How .NET 9.0 boosted JSON Schema performance by 32% | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2024/11/how-dotnet-9-boosted-json-schema-performance-by-32-percent"&gt;https://endjin.com/blog/2024/11/how-dotnet-9-boosted-json-schema-performance-by-32-percent&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JSON スキーマのライブラリー Corvus.JsonSchema を .NET 9 で実行した際にコード変更なしにパフォーマンスが30%以上向上したことについて。&lt;/p&gt;
&lt;h3 id="copy-files-across-instances-of-visual-studio-visual-studio-blog"&gt;Copy files across instances of Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/copy-files-across-instances-of-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/copy-files-across-instances-of-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio のインスタンス間でファイルとフォルダーを移動、コピーできるようになったことについて。&lt;/p&gt;
&lt;h3 id="microsoft.extensions.ai"&gt;Microsoft.Extensions.AI を触ってみよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/unified-ai-building-block-001"&gt;https://zenn.dev/microsoft/articles/unified-ai-building-block-001&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;チャットAI (LLM) を抽象化する Microsoft.Extensions.AI についての紹介。&lt;/p&gt;
&lt;p&gt;記事では簡単な使い方から Function calling、ミドルウェアや Prompty との統合について解説している。&lt;/p&gt;
&lt;h3 id="microsoft.extensions.vectordata"&gt;Microsoft.Extensions.VectorData を触ってみよう&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/unified-ai-building-block-002"&gt;https://zenn.dev/microsoft/articles/unified-ai-building-block-002&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ベクトルストアを扱う抽象ライブラリーの Microsoft.Extensions.VectorData について。&lt;/p&gt;
&lt;p&gt;記事では Ollama と Qdrant を .NET Aspire からホストして組み合わせたものとともに使用する例を紹介している。&lt;/p&gt;
&lt;h3 id="install-and-use-microsoft-dot-net-9-with-the-raspberry-pi"&gt;Install and use Microsoft Dot NET 9 with the Raspberry Pi&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.petecodes.co.uk/install-and-use-microsoft-dot-net-9-with-the-raspberry-pi/?WT.mc_id=link-twitter-isaacl"&gt;https://www.petecodes.co.uk/install-and-use-microsoft-dot-net-9-with-the-raspberry-pi/?WT.mc_id=link-twitter-isaacl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Raspberry Pi に .NET 9 をインストールして実行する方法と GPIO の制御について。&lt;/p&gt;
&lt;h3 id="visualstudio.extensibility-17.12-codelens-support-is-here-visual-studio-blog"&gt;VisualStudio.Extensibility 17.12: CodeLens support is here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-12-codelens-support-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-12-codelens-support-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VisualStudio.Extensibility 17.12 で対応した CodeLens など新しい API などについての紹介。&lt;/p&gt;
&lt;p&gt;記事では CodeLens (実験的) サポートのほか、出力ウィンドウの API の更新、デバッグ用の診断エクスプローラーの更新について解説している。&lt;/p&gt;
&lt;h3 id="neue-cc-cysharposs-top10-ulid-vs.net-9-uuid-v7-magiconion"&gt;neue cc - CysharpのOSS Top10まとめ / Ulid vs .NET 9 UUID v7 / MagicOnion&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/11/19_cysharp_oss.html"&gt;https://neue.cc/2024/11/19_cysharp_oss.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;「CysharpのOSS群から見るModern C#の現在地」セッションについて。記事では .NET での ULID と UUID v7 との比較と現状についても触れている。&lt;/p&gt;
&lt;h3 id="magiconion.net"&gt;MagicOnionサーバーのパフォーマンス調査と.NET更新によるパフォーマンス改善 | ドクセル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docswell.com/s/toutou/Z7RJLD-2024-11-17-155150"&gt;https://www.docswell.com/s/toutou/Z7RJLD-2024-11-17-155150&lt;/a&gt;&lt;/p&gt;
&lt;script async class="docswell-embed" src="https://www.docswell.com/assets/libs/docswell-embed/docswell-embed.min.js" data-src="https://www.docswell.com/slide/Z7RJLD/embed" data-aspect="0.5625"&gt;&lt;/script&gt;&lt;div class="docswell-link"&gt;&lt;a href="https://www.docswell.com/s/toutou/Z7RJLD-2024-11-17-155150"&gt;MagicOnionサーバーのパフォーマンス調査と.NET更新によるパフォーマンス改善 by &amp;#64;toutou&lt;/a&gt;&lt;/div&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/andrewkeepcodin/status/1860937997895782853?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The new &lt;a href="https://twitter.com/hashtag/WinUI?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#WinUI&lt;/a&gt; logo! 🤩 &lt;a href="https://t.co/DxFQko8Y5h"&gt;pic.twitter.com/DxFQko8Y5h&lt;/a&gt;&lt;/p&gt;&amp;mdash; Andrew KeepCoding (&amp;#64;AndrewKeepCodin) &lt;a href="https://twitter.com/AndrewKeepCodin/status/1860937997895782853?ref_src=twsrc%5Etfw"&gt;November 25, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-11-19: .NET 9</title>
			<link>https://weekref.net/2024/11/19/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/11/19/updates</guid>
			<pubDate>Tue, 19 Nov 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-9.net-blog"&gt;Announcing .NET 9 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-9/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-9/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.publickey1.jp/blog/24/net_9net_aspireai.html"&gt;［速報］.NET 9が正式リリース。ガベージコレクションの改良でより高速かつ省メモリに、可観測性を実現する.NET Aspire、AIツールのためのミドルウェアなど登場&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.azure.moe/2024/11/13/net-conf-2024-day-1-keynote/"&gt;.NET Conf 2024 Day 1 Keynote&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-v17.12-with.net-9-visual-studio-blog"&gt;Visual Studio 2022 v17.12 with .NET 9 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-12-with-dotnet-9/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-12-with-dotnet-9/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-in.net-aspire-9.0.net-aspire"&gt;What's new in .NET Aspire 9.0 - .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/dotnet-aspire-9?tabs=windows"&gt;https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/dotnet-aspire-9?tabs=windows&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2024.3-day-one-c-13-support-streamlined-code-cleanup-and-enhanced-c-tools-the.net-tools-blog"&gt;ReSharper 2024.3: Day-One C# 13 Support, Streamlined Code Cleanup, and Enhanced C++ Tools | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/11/13/resharper-2024-3-release/"&gt;https://blog.jetbrains.com/dotnet/2024/11/13/resharper-2024-3-release/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dotcover-dotmemory-dotpeek-and-dottrace-2024.3-have-been-released-the.net-tools-blog"&gt;dotCover, dotMemory, dotPeek, and dotTrace 2024.3 Have Been Released! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/11/13/dotnet-tools-243-release/"&gt;https://blog.jetbrains.com/dotnet/2024/11/13/dotnet-tools-243-release/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2024.3-same-day-support-for.net-9-sdk-and-c-13-console-debugging-for-game-dev-ai-enhancements-and-more-the.net-tools-blog"&gt;Rider 2024.3: Same-Day Support for .NET 9 SDK and C# 13, Console Debugging for Game Dev, AI Enhancements, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/11/13/rider-2024-3-release/"&gt;https://blog.jetbrains.com/dotnet/2024/11/13/rider-2024-3-release/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-8.5.0-app-vnextpolly"&gt;Release 8.5.0 · App-vNext/Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.5.0"&gt;https://github.com/App-vNext/Polly/releases/tag/8.5.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v7.0.0-domaindrivendevswashbuckle.aspnetcore"&gt;Release v7.0.0 · domaindrivendev/Swashbuckle.AspNetCore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v7.0.0"&gt;https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v7.0.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-2.4.0-mysql-netmysqlconnector"&gt;Release 2.4.0 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.4.0"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.4.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="npgsql-9.0-release-notes-npgsql-documentation"&gt;Npgsql 9.0 Release Notes | Npgsql Documentation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.npgsql.org/doc/release-notes/9.0.html"&gt;https://www.npgsql.org/doc/release-notes/9.0.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-and.net-framework-november-2024-servicing-releases-updates.net-blog"&gt;.NET and .NET Framework November 2024 servicing releases updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-november-2024-servicing-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-november-2024-servicing-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-windows-app-sdk-1.5.8-1.5.241107002-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.5.8 (1.5.241107002) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.8"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.8&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-windows-app-sdk-1.6.2-1.6.241106002-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.6.2 (1.6.241106002) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.2"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="first-preview-of-visual-studio-2022-v17.13-visual-studio-blog"&gt;First preview of Visual Studio 2022 v17.13 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-13/"&gt;https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-13/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="aws-lambda-snapstart-for-python-and.net-functions-is-now-generally-available-amazon-web-services"&gt;AWS Lambda SnapStart for Python and .NET functions is now generally available | Amazon Web Services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/jp/blogs/aws/aws-lambda-snapstart-for-python-and-net-functions-is-now-generally-available/"&gt;https://aws.amazon.com/jp/blogs/aws/aws-lambda-snapstart-for-python-and-net-functions-is-now-generally-available/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cake-v5.0.0-released"&gt;Cake v5.0.0 released&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cakebuildnet.medium.com/cake-v5-0-0-released-77de939bb7bb"&gt;https://cakebuildnet.medium.com/cake-v5-0-0-released-77de939bb7bb&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-uno-platform-studio-featuring-hot-design"&gt;Announcing Uno Platform Studio featuring Hot Design&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/uno-platform-studio-featuring-hot-design/"&gt;https://platform.uno/blog/uno-platform-studio-featuring-hot-design/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-9-ga-available-on-azure-app-service"&gt;.NET 9 GA available on Azure App Service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://azure.github.io/AppService/2024/11/12/dotnet9-ga.html"&gt;https://azure.github.io/AppService/2024/11/12/dotnet9-ga.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-the-release-of-sql-server-management-studio-21-preview-1"&gt;Announcing the release of SQL Server Management Studio 21 Preview 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/blog/sqlserver/announcing-the-release-of-sql-server-management-studio-21-preview-1/4293314"&gt;https://techcommunity.microsoft.com/blog/sqlserver/announcing-the-release-of-sql-server-management-studio-21-preview-1/4293314&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="codeproject-is-changing-codeproject"&gt;CodeProject is changing- CodeProject&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.codeproject.com/info/Changes.aspx"&gt;https://www.codeproject.com/info/Changes.aspx&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://x.com/saihacksoft/status/1856753465969840590?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://t.co/7QIGD6k2ZV"&gt;https://t.co/7QIGD6k2ZV&lt;/a&gt; is shutting down.&lt;br&gt;One of the sites where Articles were strictly monitored before upload, always had Good Quality Articles.&lt;br&gt;I was a Code Project MVP. &lt;a href="https://twitter.com/codeproject?ref_src=twsrc%5Etfw"&gt;&amp;#64;codeproject&lt;/a&gt; &lt;a href="https://t.co/UhfobL56lt"&gt;https://t.co/UhfobL56lt&lt;/a&gt;&lt;br&gt;It&amp;#39;s unfortunate to see this. &lt;a href="https://t.co/MYCPmoBdRE"&gt;pic.twitter.com/MYCPmoBdRE&lt;/a&gt;&lt;/p&gt;&amp;mdash; Saineshwar Bageri | Microsoft MVP (&amp;#64;saihacksoft) &lt;a href="https://twitter.com/saihacksoft/status/1856753465969840590?ref_src=twsrc%5Etfw"&gt;November 13, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="window-forms-dark-mode"&gt;Window Forms Dark mode&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/window-forms-dark-mode-33on"&gt;https://dev.to/karenpayneoregon/window-forms-dark-mode-33on&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cblazorwasmhttpclientthere-is-no-registered-service-of-type-system.net.http.httpclient-qiita"&gt;【C#】BlazorWASMでHttpClientを使用すると「There is no registered service of type 'System.Net.Http.HttpClient'」となりページが表示されない - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/KM_20005/items/c3f802905d14b64d4316"&gt;https://qiita.com/KM_20005/items/c3f802905d14b64d4316&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="a-journey-of.net-aot-reverse-engineering"&gt;A journey of .NET AOT reverse engineering&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;albertlab/a-journey-of-net-aot-reverse-engineering-c60ae401b33d"&gt;https://medium.com/&amp;#64;albertlab/a-journey-of-net-aot-reverse-engineering-c60ae401b33d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="communitytoolkit.mvvmwpf-mvvm"&gt;CommunityToolkit.Mvvmを使用したWPF MVVMパターン発展的実装ガイド&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sakaki_web/articles/31dc7a3a6689dc"&gt;https://zenn.dev/sakaki_web/articles/31dc7a3a6689dc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="git-tooling-updates-in-visual-studio-17.12-visual-studio-blog"&gt;Git tooling updates in Visual Studio 17.12 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/git-tooling-updates-in-visual-studio-17-12/"&gt;https://devblogs.microsoft.com/visualstudio/git-tooling-updates-in-visual-studio-17-12/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="enhance-your.net-developer-productivity-with-github-copilot.net-blog"&gt;Enhance Your .NET Developer Productivity with GitHub Copilot - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/enhance-your-dotnet-developer-productivity-with-github-copilot/"&gt;https://devblogs.microsoft.com/dotnet/enhance-your-dotnet-developer-productivity-with-github-copilot/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="laravelphpasp.net-core-qiita"&gt;【Laravelから】脱PHPプロジェクト【ASP.NET Coreへ】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/omt_teruki/items/7aa6db2530c8dad3dafa"&gt;https://qiita.com/omt_teruki/items/7aa6db2530c8dad3dafa&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="central-package-management-transitive-pinning"&gt;Central Package Management Transitive Pinning&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ostebaronen.dk/2024/11/transitive-pinning.html"&gt;https://blog.ostebaronen.dk/2024/11/transitive-pinning.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="join-us-at-microsoft-ignite-unlock-github-copilots-new-potential-in-visual-studio-visual-studio-blog"&gt;Join Us at Microsoft Ignite: Unlock GitHub Copilot’s New Potential in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/join-us-at-microsoft-ignite-unlock-github-copilots-new-potential-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/join-us-at-microsoft-ignite-unlock-github-copilots-new-potential-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="for-qiita"&gt;for文でキャッシュライン効果の確認 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/pea1205/items/e6df49a6525b12e8c8ed"&gt;https://qiita.com/pea1205/items/e6df49a6525b12e8c8ed&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="fun-with-bugs-advanced-dictionary-api"&gt;Fun with bugs: Advanced Dictionary API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/201761-C/fun-with-bugs-advanced-dictionary-api?Key=8f507241-34b2-4e31-b3f1-a31f6adbcc28"&gt;https://ayende.com/blog/201761-C/fun-with-bugs-advanced-dictionary-api?Key=8f507241-34b2-4e31-b3f1-a31f6adbcc28&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="wpfwindows-app-sdk-qiita"&gt;WPFの多重起動の処理は、自作しなくてもWindows App SDKで簡単にできる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/d5fbb9f85d02f8eca485"&gt;https://qiita.com/spc_ksudoh/items/d5fbb9f85d02f8eca485&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="calling-methods-is-easier-and-faster-with-c-13-params-collections.net-blog"&gt;Calling methods is easier and faster with C# 13 params collections - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/csharp13-calling-methods-is-easier-and-faster/"&gt;https://devblogs.microsoft.com/dotnet/csharp13-calling-methods-is-easier-and-faster/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="nullable-reference-types-in-f-9.net-blog"&gt;Nullable Reference Types in F# 9 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/nullable-reference-types-in-fsharp-9/"&gt;https://devblogs.microsoft.com/dotnet/nullable-reference-types-in-fsharp-9/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="fix-code-with-github-copilot-visual-studio-blog"&gt;Fix Code with GitHub Copilot - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/fix-code-with-github-copilot/"&gt;https://devblogs.microsoft.com/visualstudio/fix-code-with-github-copilot/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="partialmvvm-toolkit"&gt;partialプロパティをMVVM Toolkitで遊ぶ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tnagata012/articles/play-with-partialprop--7c638681b71825"&gt;https://zenn.dev/tnagata012/articles/play-with-partialprop--7c638681b71825&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="share-your-insights-on-using-rider-and-win-a-prize-the.net-tools-blog"&gt;Share Your Insights on Using Rider and Win a Prize! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/11/13/share-your-insights-on-using-rider-and-win-a-prize/"&gt;https://blog.jetbrains.com/dotnet/2024/11/13/share-your-insights-on-using-rider-and-win-a-prize/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="remote-development-in-rider-2024.3-the.net-tools-blog"&gt;Remote Development in Rider 2024.3 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/11/13/remote-development-in-rider-2024-3/"&gt;https://blog.jetbrains.com/dotnet/2024/11/13/remote-development-in-rider-2024-3/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cli.net-mauiblazor-hybrid-5-qiita"&gt;CLIだけで.NET MAUIBlazor Hybrid アプリを実質5分で作る - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/take-yoda/items/8263fa1c32eb9776d576"&gt;https://qiita.com/take-yoda/items/8263fa1c32eb9776d576&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-9-improves-javascript-module-importing-for-blazor"&gt;.NET 9 improves JavaScript module importing for Blazor&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jonhilton.net/import-js-modules/"&gt;https://jonhilton.net/import-js-modules/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="wpfwin11uifluent.net-9-qiita"&gt;WPFでもWin11っぽいUIを作れるFluentテーマを使う（ただし.NET 9以降） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/0933ebe182047af54345"&gt;https://qiita.com/spc_ksudoh/items/0933ebe182047af54345&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="prompty-c"&gt;Prompty を C# で扱うライブラリがリリースされたので試した - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20241114/1731567299"&gt;https://blog.shibayan.jp/entry/20241114/1731567299&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="automate-web-testing-in-c-a-guide-with-puppeteersharp-and-specflow"&gt;Automate Web Testing in C#: A Guide with PuppeteerSharp and SpecFlow&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/mukarramjavid/automate-web-testing-in-c-a-guide-with-puppeteersharp-and-specflow-48"&gt;https://dev.to/mukarramjavid/automate-web-testing-in-c-a-guide-with-puppeteersharp-and-specflow-48&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="identity-management-using-zitadel"&gt;Identity management using Zitadel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;andrew.macconnell/identity-management-using-zitadel-a3f07e906dd2"&gt;https://medium.com/&amp;#64;andrew.macconnell/identity-management-using-zitadel-a3f07e906dd2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="implementing-dotnet-http-to-monitor-your-http-requests"&gt;Implementing dotnet-http to monitor your HTTP requests&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/implementing-dotnet-http-to-monitor-your-http-requests-04d79422b98d"&gt;https://chnasarre.medium.com/implementing-dotnet-http-to-monitor-your-http-requests-04d79422b98d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="netobjectdisposedexception-asp.net-core"&gt;【.NET】ObjectDisposedExceptionを理解する ASP.NET Coreを例に&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimiyu/articles/6e2accebf2af49"&gt;https://zenn.dev/shimiyu/articles/6e2accebf2af49&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-language-support-in-resharper-and-rider-2024.3-the.net-tools-blog"&gt;C# Language Support in ReSharper and Rider 2024.3 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/11/12/csharp-language-support-in-resharper-and-rider-2024-3/"&gt;https://blog.jetbrains.com/dotnet/2024/11/12/csharp-language-support-in-resharper-and-rider-2024-3/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="better-github-copilot-completions-for-c-visual-studio-blog"&gt;Better GitHub Copilot Completions for C# - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/better-github-copilot-completions-for-c/"&gt;https://devblogs.microsoft.com/visualstudio/better-github-copilot-completions-for-c/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-dotnet.exe-resolves-and-loads-the-hostfxr-library-exploring-the.net-muxer-steve-gordon-code-with-steve"&gt;How dotnet.exe resolves and loads the hostfxr library - Exploring the .NET muxer - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/how-dotnet-muxer-resolves-and-loads-the-hostfxr-library"&gt;https://www.stevejgordon.co.uk/how-dotnet-muxer-resolves-and-loads-the-hostfxr-library&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cysharpossmodern-c"&gt;CysharpのOSS群から見るModern C#の現在地&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/neuecc/cysharpnoossqun-karajian-rumodern-c-number-noxian-zai-di"&gt;https://speakerdeck.com/neuecc/cysharpnoossqun-karajian-rumodern-c-number-noxian-zai-di&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="73bfd578c3324a6e8ce74457445fe9c0" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="net-magiconion-introduction-to-magiconion"&gt;.NET のための通信フレームワーク MagicOnion 入門 / Introduction to MagicOnion&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/mayuki/introduction-to-magiconion"&gt;https://speakerdeck.com/mayuki/introduction-to-magiconion&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="d5b4ad47f5cd4e9f984022e64d623d51" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="b2b-saasc.net"&gt;B2B SaaSから見た最近のC#/.NETの進化&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/sansantech/sansan-20241118"&gt;https://speakerdeck.com/sansantech/sansan-20241118&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="37f104fbcc7147358d6fcd67bdc56c76" data-ratio="1.7772511848341233" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="avaloniavisualbasic.browser"&gt;AvaloniaVisualBasic.Browser&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bandysc.github.io/AvaloniaVisualBasic6/"&gt;https://bandysc.github.io/AvaloniaVisualBasic6/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BAndysc/AvaloniaVisualBasic6"&gt;BAndysc/AvaloniaVisualBasic6: A recreation of the classic Visual Basic 6 IDE and language in C# with Avalonia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-11-08: ReSharper and Rider 2024.3 RC, .NET Diagnostics v9.0.553101</title>
			<link>https://weekref.net/2024/11/08/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/11/08/updates</guid>
			<pubDate>Fri, 08 Nov 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="the-resharper-and-the.net-tools-2024.3-release-candidates-are-now-available-the.net-tools-blog"&gt;The ReSharper and the .NET Tools 2024.3 Release Candidates Are Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/11/07/rsrp-net-tools-2024-3-rc/"&gt;https://blog.jetbrains.com/dotnet/2024/11/07/rsrp-net-tools-2024-3-rc/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the-rider-2024.3-release-candidate-is-now-available-the.net-tools-blog"&gt;The Rider 2024.3 Release Candidate Is Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/11/07/the-rider-2024-3-rc/"&gt;https://blog.jetbrains.com/dotnet/2024/11/07/the-rider-2024-3-rc/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-diagnostics-release-v9.0.553101-dotnetdiagnostics"&gt;Release Diagnostics Release - v9.0.553101 · dotnet/diagnostics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/diagnostics/releases/tag/v9.0.553101"&gt;https://github.com/dotnet/diagnostics/releases/tag/v9.0.553101&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="get-ready-for.net-conf-2024.net-blog"&gt;Get Ready for .NET Conf 2024! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/get-ready-for-dotnet-conf-2024/"&gt;https://devblogs.microsoft.com/dotnet/get-ready-for-dotnet-conf-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="openssf-scorecard-for.net-and-the-nuget-ecosystem-the-nuget-blog"&gt;OpenSSF Scorecard for .NET and the NuGet ecosystem - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/"&gt;https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="fwinformsblazor"&gt;スマートＦ開発における現状の課題と、今後の計画～WinFormsからBlazorへ～&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nexta_/articles/789121c6186b51"&gt;https://zenn.dev/nexta_/articles/789121c6186b51&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="datatable-on.net-8-and-9"&gt;DataTable からデータ抽出方法の性能比較 on .NET 8 and 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/performance-of-datatable-on-dotnet9"&gt;https://zenn.dev/microsoft/articles/performance-of-datatable-on-dotnet9&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="building-a-full-stack-application-with-next.js-and.net-api-backend"&gt;Building a Full-Stack Application with Next.js and .NET API Backend&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://argosco.io/building-a-full-stack-application-with-next-js-and-net-api-backend/net/"&gt;https://argosco.io/building-a-full-stack-application-with-next-js-and-net-api-backend/net/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="uuid-v7-vs-uuid-v8-choosing-the-ideal-identifier-for-scalable-distributed-system"&gt;UUID v7 vs UUID v8: Choosing the Ideal Identifier for Scalable Distributed System&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;anderson.buenogod/uuid-v7-vs-uuid-v8-choosing-the-ideal-identifier-for-scalable-distributed-system-fa8efc0550f7"&gt;https://medium.com/&amp;#64;anderson.buenogod/uuid-v7-vs-uuid-v8-choosing-the-ideal-identifier-for-scalable-distributed-system-fa8efc0550f7&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azure-functions-in-process.net8-function"&gt;Azure Functions (in-process) を .NET8 化したときにFunctionホストが起動しない&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tessecraft_r/articles/6b19ec48805fdb"&gt;https://zenn.dev/tessecraft_r/articles/6b19ec48805fdb&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-a-new-more-conversational-way-to-chat-with-github-copilot-visual-studio-blog"&gt;Introducing a new, more conversational way to chat with GitHub Copilot - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/conversational-way-to-chat-with-github-copilot/"&gt;https://devblogs.microsoft.com/visualstudio/conversational-way-to-chat-with-github-copilot/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ef-core-vs2022-sql-server"&gt;EF Core の公式トレーニングを VS2022 と SQL Server で実行する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/6084fc2001212f"&gt;https://zenn.dev/zead/articles/6084fc2001212f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="learn-how-to-create-a-client-server-application-in-under-45-minutes-in-the-new-season-of-ai-visual-studio-blog"&gt;Learn how to create a Client-Server Application in under 45 Minutes in the new Season of AI - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/learn-how-to-create-a-client-server-application-in-under-45-minutes-in-the-new-season-of-ai/"&gt;https://devblogs.microsoft.com/visualstudio/learn-how-to-create-a-client-server-application-in-under-45-minutes-in-the-new-season-of-ai/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="recent-updates-for-netescapades.enumgenerators-interceptors"&gt;Recent updates for NetEscapades.EnumGenerators: interceptors!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/recent-updates-for-netescapades-enumgenerators-interceptors/"&gt;https://andrewlock.net/recent-updates-for-netescapades-enumgenerators-interceptors/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dotinsights-november-2024-the.net-tools-blog"&gt;dotInsights | November 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/11/04/dotinsights-november-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/11/04/dotinsights-november-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-powershell"&gt;[C#] タスクバー上でPowerShellを実行したい！&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/onakamanpuku/articles/726ec3d99f3287"&gt;https://zenn.dev/onakamanpuku/articles/726ec3d99f3287&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="new-lock-object-and-history"&gt;New Lock object and history&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://mareks-082.medium.com/new-lock-object-and-history-d69877f46521"&gt;https://mareks-082.medium.com/new-lock-object-and-history-d69877f46521&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-in.net-9-system.text.json-improvements"&gt;What's new in .NET 9: System.Text.Json improvements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/whats-new-in-net-9-system-text-json-improvements/"&gt;https://blog.elmah.io/whats-new-in-net-9-system-text-json-improvements/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="xunit-qiita"&gt;xUnit の使い方 テストケースの準備&amp;amp;データの渡し方 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/te-k/items/c97425ab12ef2a73c34f"&gt;https://qiita.com/te-k/items/c97425ab12ef2a73c34f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-qiita"&gt;.NET アプリでデータベースに接続するのさらに続き - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tinymouse/items/a01087fc132b43e8dbb2"&gt;https://qiita.com/tinymouse/items/a01087fc132b43e8dbb2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="excel-dna-qiita"&gt;Excel-DNAで非同期処理の関数をつくる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/msms/items/0978934282c0067e6450"&gt;https://qiita.com/msms/items/0978934282c0067e6450&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-the-modern-web-app-mwa-pattern-for.net"&gt;Introducing the Modern Web App (MWA) Pattern for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/blog/appsonazureblog/introducing-the-modern-web-app-pattern-for-net/4278895"&gt;https://techcommunity.microsoft.com/blog/appsonazureblog/introducing-the-modern-web-app-pattern-for-net/4278895&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-in-system.text.json-in.net-9"&gt;What’s new in System.Text.Json in .NET 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://okyrylchuk.dev/blog/whats-new-in-system-text-json-in-dotnet-9/"&gt;https://okyrylchuk.dev/blog/whats-new-in-system-text-json-in-dotnet-9/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント、配信など&lt;/h2&gt;
&lt;h3 id="visual-studio-users-community-japan-7-20241130-1330"&gt;Visual Studio Users Community Japan 勉強会 #7 (2024/11/30 13:30〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://vsuc.connpass.com/event/335130/"&gt;https://vsuc.connpass.com/event/335130/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="littlelittlecloudstepwise-a-code-first-workflow-engine-build-with-typescript-and-c"&gt;LittleLittleCloud/StepWise: A code-first workflow engine build with typescript and C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/LittleLittleCloud/StepWise"&gt;https://github.com/LittleLittleCloud/StepWise&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/littlelittlecloud/stepwise-a-powerful-c-workflow-engine-for-parallel-task-execution-2nc4"&gt;StepWise: A Powerful C# Workflow Engine for Task Execution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="velopackvelopack-installer-and-automatic-update-framework-for-cross-platform-desktop-applications"&gt;velopack/velopack: Installer and automatic update framework for cross-platform desktop applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/velopack/velopack"&gt;https://github.com/velopack/velopack&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/johmaru/articles/535c12baee666d"&gt;(valopack)C# WPFアプリケーションの自動アップデート実装 &amp;amp; 自動リリース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/dotnetfdn/status/1854534018768736410?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Welcome new .NET Foundation Project: MessagePack-CSharp&lt;br&gt;A highly performance-optimized library for serializing .NET data types using MessagePack, a compact and fast binary format.&lt;a href="https://t.co/zpVbzvCoKq"&gt;https://t.co/zpVbzvCoKq&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://t.co/sRdq7lWA7w"&gt;pic.twitter.com/sRdq7lWA7w&lt;/a&gt;&lt;/p&gt;&amp;mdash; .NET Foundation (&amp;#64;dotnetfdn) &lt;a href="https://twitter.com/dotnetfdn/status/1854534018768736410?ref_src=twsrc%5Etfw"&gt;November 7, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/sergiopedri/status/1853853796063129979?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Starting w/ Visual Studio 17.12 P5, UWP .NET 9 projects will use the new standalone MSIX tooling NuGet package! We decoupled it from WindowsAppSDK to provide a consistent UX for both UWP and WinUI 3 apps and much easier to update! More features coming soon! 👀&lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/windowsdev?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#windowsdev&lt;/a&gt; &lt;a href="https://t.co/kHxlM48y2U"&gt;pic.twitter.com/kHxlM48y2U&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sergio Pedri (&amp;#64;SergioPedri) &lt;a href="https://twitter.com/SergioPedri/status/1853853796063129979?ref_src=twsrc%5Etfw"&gt;November 5, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/mkristensen/status/1852473805748498660?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In Visual Studio, you can now specify whether lines that wrap in the editor should be indented.&lt;br&gt;&lt;br&gt;Coming soon... &lt;a href="https://t.co/XoAq84QuTV"&gt;pic.twitter.com/XoAq84QuTV&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1852473805748498660?ref_src=twsrc%5Etfw"&gt;November 1, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/mkristensen/status/1852033780338327705?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;First we introduced the IEnumerable Visualizer. Then we added IntelliSense to it. And now we&amp;#39;re bringing syntax highlighting. All thanks to the feedback from you. &lt;br&gt;&lt;br&gt;Coming soon to Visual Studio... &lt;a href="https://t.co/zMzGU6pCZ7"&gt;pic.twitter.com/zMzGU6pCZ7&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1852033780338327705?ref_src=twsrc%5Etfw"&gt;October 31, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-11-01: Microsoft.Extensions.VectorData Preview, Uno Platform 5.5, Avalonia UI 11.2.0</title>
			<link>https://weekref.net/2024/11/01/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/11/01/updates</guid>
			<pubDate>Fri, 01 Nov 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="introducing-microsoft.extensions.vectordata-preview.net-blog"&gt;Introducing Microsoft.Extensions.VectorData Preview - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-microsoft-extensions-vector-data/"&gt;https://devblogs.microsoft.com/dotnet/introducing-microsoft-extensions-vector-data/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ベクターストアに対する API の抽象化レイヤーとして Microsoft.Extensions.VecotrData がプレビュー公開された。&lt;/p&gt;
&lt;p&gt;記事ではインメモリストアと Ollama を使用した Embedding とクエリーを実装する例を紹介している。&lt;/p&gt;
&lt;h3 id="uno-platform-5.5-automated-app-packaging.net-9-rc2-opengl-webview2-and-more"&gt;Uno Platform 5.5 - Automated App Packaging, .NET 9 RC2, OpenGL, WebView2 and more&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/5-5/"&gt;https://platform.uno/blog/5-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 5.5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではアプリパッケージの効率化、.NET 9 RC2 の WebAssembly 対応、Visual Studio 2022 上でのホットリロードの完全サポート、Wasm の AOT プロファイルなど、WebAssembly for WebView2、OpenGL Canvas、新しい Skia Canvas、編集可能なコンボボックス、TemplatedParent の更新、パフォーマンスの改善などが含まれる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unoplatform/uno/releases/tag/5.5.37"&gt;Release 5.5.37 · unoplatform/uno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-11.2.0-avaloniauiavalonia"&gt;Release 11.2.0 · AvaloniaUI/Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.2.0"&gt;https://github.com/AvaloniaUI/Avalonia/releases/tag/11.2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia UI 11.2.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは新しい API の追加や内部のリファクタリング、Metal レンダリングのデフォルト化など様々な改善が含まれている。&lt;/p&gt;
&lt;h3 id="the-future-of-wpf-a-transformative-journey-ahead"&gt;The Future of WPF: A Transformative Journey Ahead&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/blog/the-future-of-wpf-a-transformative-journey-ahead"&gt;https://avaloniaui.net/blog/the-future-of-wpf-a-transformative-journey-ahead&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia XPF の将来の計画と新しいライセンスについて。&lt;/p&gt;
&lt;p&gt;小規模開発者向けの Indie ライセンスが新たに設けられ、アプリケーション当たりのライセンスモデルで提供される。また今後 Windows 向けの無償の Community Edition を提供することのこと。&lt;/p&gt;
&lt;h3 id="breaking-change-for-window-server-2022-image-users-with.net-6"&gt;Breaking change for Window Server 2022 Image Users with .NET 6&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/azure-compute-blog/breaking-change-for-window-server-2022-image-users-with-net-6/ba-p/4262423"&gt;https://techcommunity.microsoft.com/t5/azure-compute-blog/breaking-change-for-window-server-2022-image-users-with-net-6/ba-p/4262423&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 のサポートが11月12日で終了することに伴い、Microsoft Azure の Windows Server 2022 イメージから .NET 6 が削除されることについて。&lt;/p&gt;
&lt;p&gt;2025年5月13日にイメージから削除され、それまでの6か月間は Azure Marketplace のイメージに限りセキュリティー修正が提供される。&lt;/p&gt;
&lt;p&gt;現在利用しているユーザーはその日までに .NET 8 などへの移行を行う必要がある。また .NET 8 以降は Windows Server イメージに含まれないため、利用者がインストールする必要がある。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="llm"&gt;家電もチャットでコントロール！LLMで実現するスマートホーム生活&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/semantic_kernel_smarthome"&gt;https://zenn.dev/zead/articles/semantic_kernel_smarthome&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel と Azure OpenAI Service (gpt-4o-mini)、Blazor と Nature Remo Cloud API を組み合わせてチャットから家電をコントロールする仕組みの構築について。&lt;/p&gt;
&lt;h3 id="a-comparison-of-rusts-borrow-checker-to-the-one-in-c"&gt;A comparison of Rust’s borrow checker to the one in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://em-tg.github.io/csborrow/"&gt;https://em-tg.github.io/csborrow/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# の ref と Rust のライフタイムを比較した記事。&lt;/p&gt;
&lt;h3 id="unlocking-the-power-of-github-models-in.net-with-semantic-kernel.net-blog"&gt;Unlocking the Power of GitHub Models in .NET with Semantic Kernel - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/github-ai-models-dotnet-semantic-kernel/"&gt;https://devblogs.microsoft.com/dotnet/github-ai-models-dotnet-semantic-kernel/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel から GitHub Models を使用する手順について。記事では Phi-3.5-mini を使ったチャットを実装する例を紹介している。&lt;/p&gt;
&lt;h3 id="word-c-asycawait"&gt;Word アドイン開発におけるC# の asyc/await&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/boostdraft/articles/1d81d6c98f0666"&gt;https://zenn.dev/boostdraft/articles/1d81d6c98f0666&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire-9.0-rc1-simplified-setup-azure-functions-support-added-and-other-improvements"&gt;.NET Aspire 9.0 RC1: Simplified Setup, Azure Functions Support Added, and Other Improvements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/news/2024/10/dotnet-aspire-rc-1/"&gt;https://www.infoq.com/news/2024/10/dotnet-aspire-rc-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire 9.0 RC1 の変更についての紹介。&lt;/p&gt;
&lt;h3 id="how-to-increase-ef-core-performance-for-read-queries-in.net"&gt;How To Increase EF Core Performance for Read Queries in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/antonmartyniuk/how-to-increase-ef-core-performance-for-read-queries-in-net-2fk9"&gt;https://dev.to/antonmartyniuk/how-to-increase-ef-core-performance-for-read-queries-in-net-2fk9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core のパフォーマンス Tips 9個を紹介。&lt;/p&gt;
&lt;h3 id="easy.net-web-app-integration-testing-with-playwright"&gt;Easy .NET Web App Integration Testing with Playwright&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/younited-tech-blog/easy-net-web-app-integration-testing-with-playwright-9769f1f5b8e3"&gt;https://medium.com/younited-tech-blog/easy-net-web-app-integration-testing-with-playwright-9769f1f5b8e3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PlaywrightTestBuilder を使用して Playwright による Web の統合テストを簡単にセットアップする方法について。&lt;/p&gt;
&lt;h3 id="whats-new-in.net-9-two-new-linq-methods"&gt;What's new in .NET 9: Two new LINQ methods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/whats-new-in-net-9-two-new-linq-methods/"&gt;https://blog.elmah.io/whats-new-in-net-9-two-new-linq-methods/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で追加される LINQ メソッド、CountBy と AggregateBy の紹介。&lt;/p&gt;
&lt;h3 id="qiita"&gt;配列やリストを使わないオブジェクトプール - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/sator_imaging/items/2a387a54a01e91e5d71d"&gt;https://qiita.com/sator_imaging/items/2a387a54a01e91e5d71d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;連結リストベースのオブジェクトプールの実装を行う方法について。&lt;/p&gt;
&lt;h3 id="socket-exhaustion-emulation"&gt;Socket Exhaustion Emulation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;vlad.ganuscheak/socket-exhaustion-emulation-ccfdb33a1146"&gt;https://medium.com/&amp;#64;vlad.ganuscheak/socket-exhaustion-emulation-ccfdb33a1146&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ソケットの枯渇を起こす方法と OS のステータスを確認するための方法の紹介。&lt;/p&gt;
&lt;h3 id="net-qiita"&gt;.NET アプリでデータベースに接続するの続き - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tinymouse/items/24d0de568494fa28dfc7"&gt;https://qiita.com/tinymouse/items/24d0de568494fa28dfc7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;特定のドライバーを直接使わない System.Data.Common、System.Data.OleDb (OLE DB)、System.Data.Odbc (ODBC) といった方法でデータベースに接続する方法について。&lt;/p&gt;
&lt;h3 id="exploring-the-new-features-in-xunit-v3"&gt;Exploring the New Features in xUnit v3&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/c-sharp-programming/exploring-the-new-features-in-xunit-v3-cf06761c7683"&gt;https://medium.com/c-sharp-programming/exploring-the-new-features-in-xunit-v3-cf06761c7683&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;現在開発が進んでいる xUnit v3 での新しいアサーション API などについての紹介。&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;【C#】参照型レコードを逆コンパイルしてみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/3f3ca7f34ff7fbca52a3"&gt;https://qiita.com/abetakahiro123/items/3f3ca7f34ff7fbca52a3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;レコード型 (record class) がどのようにコンパイルされるのか、継承した場合にどうなるのかといった点を確認している。&lt;/p&gt;
&lt;h3 id="using-sql-server-on-windows-arm"&gt;Using Sql Server on Windows ARM&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2024/Oct/24/Using-Sql-Server-on-Windows-ARM"&gt;https://weblog.west-wind.com/posts/2024/Oct/24/Using-Sql-Server-on-Windows-ARM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Arm プロセッサー上の Visual Studio を使用した開発環境で SQL Server を動かすにはどうすればよいのかについて。記事では LocalDb をインストールして何とか実行する方法について紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://csharp.christiannagel.com/2024/10/29/surfacewitharm/"&gt;Developing with Visual Studio on ARM: SQL Server Challenges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="a-brief-introduction-to-the.net-muxer-aka-dotnet.exe-steve-gordon-code-with-steve"&gt;A Brief Introduction to the .NET Muxer (aka dotnet.exe) - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/a-brief-introduction-to-the-dotnet-muxer"&gt;https://www.stevejgordon.co.uk/a-brief-introduction-to-the-dotnet-muxer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Muxer (dotnet.exe; dotnet コマンド) はアプリを起動する際に内部でどのような処理を行っているのかの簡単な解説。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="annulusgameszeromessenger-zero-allocation-extremely-fast-in-memory-messaging-library-for.net-and-unity"&gt;AnnulusGames/ZeroMessenger: Zero-allocation, extremely fast in-memory messaging library for .NET and Unity.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AnnulusGames/ZeroMessenger"&gt;https://github.com/AnnulusGames/ZeroMessenger&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ゼロアロケーションとパフォーマンスに特化したインメモリーメッセージングライブラリ。&lt;/p&gt;
&lt;!-- https://x.com/annulusgames/status/1851234176751845676?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;.NET / Unity向けの超高速なメッセージングライブラリ「ZeroMessenger」をリリースしました！&lt;br&gt;&lt;br&gt;インメモリでの高速なPub/SubやFilter(middleware)、DI(Generic Host、VContainer)などの機能をサポートし、UniRxのMessageBrokerやMessagePipeの代替として使用できます！&lt;a href="https://t.co/ynbBGVDTts"&gt;https://t.co/ynbBGVDTts&lt;/a&gt; &lt;a href="https://t.co/psHebXdJ8i"&gt;pic.twitter.com/psHebXdJ8i&lt;/a&gt;&lt;/p&gt;&amp;mdash; Annulus Games (&amp;#64;AnnulusGames) &lt;a href="https://twitter.com/AnnulusGames/status/1851234176751845676?ref_src=twsrc%5Etfw"&gt;October 29, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="my-book-practical-debugging-for.net-developers-is-now-free"&gt;My book &amp;quot;Practical Debugging for .NET Developers&amp;quot; is now Free!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://michaelscodingspot.com/free-book/"&gt;https://michaelscodingspot.com/free-book/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2020年に書かれた .NET デバッグについての書籍 &amp;quot;Practical Debugging for .NET&amp;quot; が無償の eBook として公開。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-10-25: ASP.NET Core 2.3, Rider Non-Commercial License</title>
			<link>https://weekref.net/2024/10/25/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/10/25/updates</guid>
			<pubDate>Fri, 25 Oct 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="asp.net-core-2.1-becomes-asp.net-core-2.3-issue-331-dotnetannouncements"&gt;ASP.NET Core 2.1 becomes ASP.NET Core 2.3 · Issue #331 · dotnet/announcements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/announcements/issues/331"&gt;https://github.com/dotnet/announcements/issues/331&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core 2.1 を ASP.NET Core 2.3 としてリリースすることについてのアナウンス。&lt;/p&gt;
&lt;p&gt;ASP.NET Core 2.x は .NET Core だけでなく .NET Framework もサポートしていた背景があり、.NET Framework での ASP.NET Core 2.1 は ASP.NET と同じサポートライフサイクルであり現在もサポート中となっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2.3 としてリリースする背景
&lt;ul&gt;
&lt;li&gt;多くのユーザーが ASP.NET Core を 2.1 から 2.2 に更新したが 2.2 でサポート期間が短縮されていることに気づいていないユーザーがいる&lt;/li&gt;
&lt;li&gt;ASP.NET Core 2.3 としてリリースすることで .NET Framework で ASP.NET Core 2.2 を使用している場合の移行をしやすくする
&lt;ul&gt;
&lt;li&gt;NuGet などパッケージの依存関係が 2.2 に依存している場合、アプリケーションを 2.1 にダウングレードすることは難しく、より新しいバージョンのほうがスムーズになるという事情&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core 2.2 を 2.3 としてリリースすると 2.1 のユーザーに破壊的変更を強いるため 2.1 を 2.3 とする形を取る&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core 2.1 (.NET Core) を現在使用しているユーザー
&lt;ul&gt;
&lt;li&gt;すでにランタイムと共にサポート切れ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core 2.1 (.NET Framework) を現在使用しているユーザー
&lt;ul&gt;
&lt;li&gt;今後 ASP.NET Core 2.1 への更新が発生した場合、2.1 が脆弱なパッケージとしてマークされ、アップグレード先として 2.3 が案内されるようになる&lt;/li&gt;
&lt;li&gt;ASP.NET Core 2.3 は 2.1 の再リリースとなるので今すぐ更新する必要や更新しなかった場合に修正が受け取れないといったことはない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core 2.2 (.NET Framework) を使用しているユーザー
&lt;ul&gt;
&lt;li&gt;すでにサポート終了済みのため ASP.NET Core 2.3 へのアップグレード(ただし実質 2.1 なのでダウングレード)か .NET シリーズへの移行を強く推奨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="webstorm-rider-jetbrains"&gt;WebStorm と Rider の非商用利用が無料になりました | JetBrains のブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/ja/blog/2024/10/24/webstorm-and-rider-are-now-free-for-non-commercial-use/"&gt;https://blog.jetbrains.com/ja/blog/2024/10/24/webstorm-and-rider-are-now-free-for-non-commercial-use/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WebStorm と Rider を非商用利用する場合に無償で利用できるライセンスが追加された。&lt;/p&gt;
&lt;p&gt;これにより学習、オープンソースプロジェクト開発、コンテンツ制作や趣味の開発といった非商用目的での無償利用が可能となる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forest.watch.impress.co.jp/docs/news/1634254.html"&gt;JetBrainsの開発環境「WebStorm」「Rider」、非商用ならば無償に／学習、オープンソースプロジェクト開発、コンテンツ制作、趣味などへ活用できる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-upgrade-assistant-now-supports-upgrading-to-centralized-package-mangement.net-blog"&gt;.NET Upgrade Assistant Now Supports Upgrading to Centralized Package Mangement - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-upgrade-assistant-cpm-upgrade/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-upgrade-assistant-cpm-upgrade/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Upgrade Assistant での NuGet パッケージの Centralized Package Managent への移行をサポート。&lt;/p&gt;
&lt;p&gt;Visual Studio の拡張または CLI から既存のプロジェクトを移行することが可能となる。&lt;/p&gt;
&lt;p&gt;また Upgrade Assistant は Visual Studio 17.3 以降のみをサポートするようになったため、それ以前のバージョンでは動作しないとのこと。&lt;/p&gt;
&lt;h3 id="upgrade-your-windows-forms.net-projects-to-the-latest.net-version-for-enhanced-security-visual-studio-blog"&gt;Upgrade Your Windows Forms .NET Projects to the Latest .NET Version for Enhanced Security - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/upgrade-your-windows-forms-net-projects-to-the-latest-net-version-for-enhanced-security/"&gt;https://devblogs.microsoft.com/visualstudio/upgrade-your-windows-forms-net-projects-to-the-latest-net-version-for-enhanced-security/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET での WinForms アプリケーションを最新の .NET にアップグレードすることについて。&lt;/p&gt;
&lt;p&gt;記事ではアップグレードによる利点や今後の Visual Studio 上の WinForms デザイナーでの警告、将来的なバージョンごとのデザイナーサポート状況についてを解説している。&lt;/p&gt;
&lt;h3 id="mongodb-ef-core-provider-whats-new.net-blog"&gt;MongoDB EF Core Provider: What's New? - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/mongodb-ef-core-provider-whats-new/"&gt;https://devblogs.microsoft.com/dotnet/mongodb-ef-core-provider-whats-new/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core の MongoDB 向けプロバイダーの新機能についての解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;プロパティーの追加と変更追跡&lt;/li&gt;
&lt;li&gt;インデックス管理&lt;/li&gt;
&lt;li&gt;データの問い合わせ&lt;/li&gt;
&lt;li&gt;自動トランザクションと楽観的同時実行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-syncfusions-first-set-of-open-source.net-maui-controls"&gt;Introducing Syncfusion's First Set of Open-Source .NET MAUI Controls&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.syncfusion.com/blogs/post/syncfusion-open-source-net-maui-controls-cross-platform"&gt;https://www.syncfusion.com/blogs/post/syncfusion-open-source-net-maui-controls-cross-platform&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Syncfusion が .NET MAUI 向けのコントロールを集めた Syncfusion Toolkit for .NET MAUI をオープンソースで公開した。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;チャート&lt;/li&gt;
&lt;li&gt;カルーセル&lt;/li&gt;
&lt;li&gt;タブビュー&lt;/li&gt;
&lt;li&gt;チップ&lt;/li&gt;
&lt;li&gt;エフェクトビュー&lt;/li&gt;
&lt;li&gt;Shimmer&lt;/li&gt;
&lt;li&gt;Pull to Refresh&lt;/li&gt;
&lt;li&gt;テキストインプットレイアウト&lt;/li&gt;
&lt;li&gt;ナビゲーションドロワー&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syncfusion Toolkit for .NET MAUI は MIT ライセンスで GitHub と NuGet にて提供される。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/syncfusion/maui-toolkit"&gt;syncfusion/maui-toolkit: Syncfusion .NET MAUI Toolkit offers high-quality UI controls to help you build rich, high-performance applications for iOS, Android, macOS, and Windows from a single codebase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-maui-welcomes-syncfusion-open-source-contributions/"&gt;.NET MAUI Welcomes Syncfusion Open-source Contributions - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="cwindowsinfluxdbgrafana-qiita"&gt;C#でWindowsマシンの状態を取得してInfluxDBとGrafanaでグラフ化する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/toRisouP/items/ba0c44cc86e1ca496e27"&gt;https://qiita.com/toRisouP/items/ba0c44cc86e1ca496e27&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows コンピューターのハードウェア状態情報を取得して、InfluxDB にデータを格納し、Grafana でビジュアライズする方法について。&lt;/p&gt;
&lt;p&gt;記事では OpenHardwareMonitorLib を使用した情報取得の実装を行っている。&lt;/p&gt;
&lt;h3 id="eshop-infused-with-ai-a-comprehensive-intelligent-app-sample.net-blog"&gt;eShop infused with AI - a comprehensive intelligent app sample - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/e-shop-infused-with-ai-comprehensive-intelligent-dotnet-app-sample/"&gt;https://devblogs.microsoft.com/dotnet/e-shop-infused-with-ai-comprehensive-intelligent-dotnet-app-sample/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EC サイトのサンプルアプリケーションとして AI を組み込んだカスタマーサポートサイトを作成したことについて。&lt;/p&gt;
&lt;p&gt;記事では eShopSupport がどのような構成になっているか、AI をどのように利用して処理を行っているのかといった点を解説している。&lt;/p&gt;
&lt;h3 id="get-hands-on-with-visual-studio.net-ai-and-more-at-live-360-next-month-visual-studio-blog"&gt;Get Hands-On with Visual Studio, .NET, AI, and More at Live! 360 next month. - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/live-360-orlando-2024/"&gt;https://devblogs.microsoft.com/visualstudio/live-360-orlando-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;11月17日から22日まで Orland で開かれる Visual Studio LIVE! イベントの案内。&lt;/p&gt;
&lt;h3 id="net-for-androidlottienative-library-interop"&gt;.NET for AndroidでLottieアニメーションを使えるようにしてみた(Native Library Interop)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/onepointfive/articles/21641823573f37"&gt;https://zenn.dev/onepointfive/articles/21641823573f37&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET for Android で Lottie を使うため、Lottie ネイティブライブラリーのラッパーライブラリーを作る手順についての解説。&lt;/p&gt;
&lt;h3 id="c-addtransient-addscoped-addsingleton-qiita"&gt;【C#】依存性注入メソッドのライフサイクル - AddTransient, AddScoped, AddSingleton - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/simoyama2323/items/0e082bd1582df9b33180"&gt;https://qiita.com/simoyama2323/items/0e082bd1582df9b33180&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.DependencyInjection の AddTransient, AddScoped, AddSingleton の違いについての簡単な解説。&lt;/p&gt;
&lt;h3 id="whats-new-in-c-13-overview"&gt;What′s new in C# 13: overview&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://pvs-studio.com/en/blog/posts/csharp/1173/"&gt;https://pvs-studio.com/en/blog/posts/csharp/1173/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 13 の新機能についてのまとめ。&lt;/p&gt;
&lt;h3 id="entity-framework-coredbcontext-qiita"&gt;Entity Framework Coreで、同じプロジェクトに複数のDBContextを入れる場合のマイグレーションの使い分け方 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/e7c5d3a61de2b2560159"&gt;https://qiita.com/spc_ksudoh/items/e7c5d3a61de2b2560159&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で一つのプロジェクトに含まれる、複数の DbContext を使い分けてマイグレーションを実行する方法について。&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;【C#】 圧縮ストリームの読み取りに苦戦した話 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/d89ca42373a6626a5d23"&gt;https://qiita.com/abetakahiro123/items/d89ca42373a6626a5d23&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET と .NET Framework での圧縮展開を行う Stream の読み取りの挙動の違いについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/ja-jp/dotnet/core/compatibility/core-libraries/6.0/partial-byte-reads-in-streams"&gt;破壊的変更: DeflateStream、GZipStream、CryptoStream での部分的な読み取りとゼロバイトの読み取り - .NET&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="xunit.combinatorial-a-simple-way-to-test-combinations"&gt;Xunit.Combinatorial: A Simple Way to Test Combinations&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;sugumar.p/xunit-combinatorial-a-simple-way-to-test-combinations-e3a2617df1da"&gt;https://medium.com/&amp;#64;sugumar.p/xunit-combinatorial-a-simple-way-to-test-combinations-e3a2617df1da&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;xUnit.net でパラメータ化されたユニットテストの組み合わせをテストできるようにする Xunit.Combination の使い方について。&lt;/p&gt;
&lt;h3 id="ef-core-raw-queries-c"&gt;EF Core raw queries (C#)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/ef-core-raw-queries-c-13fh"&gt;https://dev.to/karenpayneoregon/ef-core-raw-queries-c-13fh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 8 の生 SQL クエリーを発行する方法について。記事ではクエリーをログに保存する方法についても触れている。&lt;/p&gt;
&lt;h3 id="net-conf-2024-student-zone.net-blog"&gt;.NET Conf 2024 Student Zone - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnetconf-2024-student-zone/"&gt;https://devblogs.microsoft.com/dotnet/dotnetconf-2024-student-zone/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2024 内での初心者/学習者向けのバーチャルイベント、.NET Conf Student Zone の紹介。&lt;/p&gt;
&lt;p&gt;Student Zone のセッションは日本時間の11月19日午前1時と午後1時に .NET YouTube チャンネルで開催される。&lt;/p&gt;
&lt;h3 id="uint-ilistint"&gt;uint[] は IList&amp;lt;int&amp;gt; に変換できる&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ruccho/articles/7903821cd68a12"&gt;https://zenn.dev/ruccho/articles/7903821cd68a12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;uint の配列 (uint[]) は IList&amp;lt;int&amp;gt; に変換できることと、その挙動に関するランタイムの実装や仕様上どのようになっているのかについての解説。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="microsoft-events-microsoft-developer-day-ai"&gt;Microsoft Events - Microsoft Developer Day 〜 AIで開発者の力を最大限に引き出す&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msevents.microsoft.com/event?id=1289012583"&gt;https://msevents.microsoft.com/event?id=1289012583&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c.net-20241118-1900"&gt;イマドキのC#/.NET開発 〜最新の言語とフレームワークの使い方〜 (2024/11/18 19:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sansan.connpass.com/event/333961/"&gt;https://sansan.connpass.com/event/333961/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="bandyscclassic.avalonia-classic-theme-and-controls-for-avalonia"&gt;BAndysc/Classic.Avalonia: Classic Theme and Controls for Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/BAndysc/Classic.Avalonia"&gt;https://github.com/BAndysc/Classic.Avalonia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia のクラシックな Windows のテーマ。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-10-18: What's new in System.Text.Json, MessagePack v2.5.187, Npgsql v8.0.5</title>
			<link>https://weekref.net/2024/10/18/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/10/18/updates</guid>
			<pubDate>Fri, 18 Oct 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="whats-new-in-system.text.json-in.net-9.net-blog"&gt;What's new in System.Text.Json in .NET 9 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/system-text-json-in-dotnet-9/"&gt;https://devblogs.microsoft.com/dotnet/system-text-json-in-dotnet-9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 の System.Text.Json の新機能についての解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JSON Schema エクスポーター&lt;/li&gt;
&lt;li&gt;複数の JSON ドキュメントのストリーミング&lt;/li&gt;
&lt;li&gt;null 許容型アノテーションの尊重&lt;/li&gt;
&lt;li&gt;enum のメンバーの名前のカスタマイズ&lt;/li&gt;
&lt;li&gt;メタデータの順序を無視した読み取り&lt;/li&gt;
&lt;li&gt;インデントのカスタマイズ&lt;/li&gt;
&lt;li&gt;JsonObject プロパティーの順序操作&lt;/li&gt;
&lt;li&gt;JsonElement と JsonNode の DeepEquals メソッド&lt;/li&gt;
&lt;li&gt;JsonSerializerOptions.Web&lt;/li&gt;
&lt;li&gt;パフォーマンス改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-v2.5.187-messagepack-csharpmessagepack-csharp"&gt;Release v2.5.187 · MessagePack-CSharp/MessagePack-CSharp&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MessagePack-CSharp/MessagePack-CSharp/releases/tag/v2.5.187"&gt;https://github.com/MessagePack-CSharp/MessagePack-CSharp/releases/tag/v2.5.187&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MessagePack v2.5.187 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは信頼できないデータによってハッシュ衝突とスタックオーバーフローを起こすことで DoS 攻撃が可能となるセキュリティー上の問題を修正している。&lt;/p&gt;
&lt;h3 id="release-v8.0.5-npgsqlnpgsql"&gt;Release v8.0.5 · npgsql/npgsql&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v8.0.5"&gt;https://github.com/npgsql/npgsql/releases/tag/v8.0.5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Npgsql v8.0.5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではクエリーが失敗する問題や例外がスローされる問題などいくつかの不具合の修正されている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="microsoft.extensions.ai-onnx-runtime-generative-ai"&gt;Microsoft.Extensions.AI 向けに ONNX Runtime Generative AI を使うクラスを書いてみた - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20241015/1728983114"&gt;https://blog.shibayan.jp/entry/20241015/1728983114&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.AI の実装として ONNX Runtime Generative AI を使用するものを用意して、Phi-3.5 mini を呼び出すといったことを試している。&lt;/p&gt;
&lt;h3 id="improve-your-debugger-game-with-editable-expressions-visual-studio-blog"&gt;Improve your debugger game with editable expressions - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/improve-your-debugger-game-with-editable-expressions/"&gt;https://devblogs.microsoft.com/visualstudio/improve-your-debugger-game-with-editable-expressions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の IEnumerable ビジュアライザーで LINQ によるフィルター式の活用についての紹介。&lt;/p&gt;
&lt;h3 id="rider-reveal-livestream-big-news-for.net-and-game-devs-the.net-tools-blog"&gt;Rider Reveal Livestream: Big News for .NET and Game Devs | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/10/16/rider-reveal-livestream-big-news-for-dotnet-and-game-devs/"&gt;https://blog.jetbrains.com/dotnet/2024/10/16/rider-reveal-livestream-big-news-for-dotnet-and-game-devs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10月24日に JetBrains Rider に関するニュースのYouTube ストリーミングを配信するというアナウンス。&lt;/p&gt;
&lt;h3 id="net-nanoframeworkesp32c"&gt;.NET nanoFrameworkを使って、ESP32の開発環境の構築（C#で組み込みデバイスを制御）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/nanoframework_kankyo"&gt;https://zenn.dev/zead/articles/nanoframework_kankyo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP32-WROOM-32 をターゲットとした .NET nanoFramework 開発環境の構築手順を紹介している。&lt;/p&gt;
&lt;h3 id="sqlbulkcopycsvhelpercsvsql-server"&gt;SqlBulkCopyとCsvHelperで大規模CSVを効率的にSQL Serverにインポートする方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2024-10-15-csv-sqlbulkcopy-csvhelper"&gt;https://zenn.dev/nuits_jp/articles/2024-10-15-csv-sqlbulkcopy-csvhelper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大規模な CSV データを SQL Server に効率よくインポートする方法について。&lt;/p&gt;
&lt;h3 id="catch-the-highlights-from-azure-developers.net-aspire-day-2024.net-blog"&gt;Catch the highlights from Azure Developers - .NET Aspire Day 2024! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/azure-developers-dotnet-aspire-day-recap/"&gt;https://devblogs.microsoft.com/dotnet/azure-developers-dotnet-aspire-day-recap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オンラインイベント Azure Developers – .NET Aspire Day 2024 で配信されたセッションとそのレコーディングの紹介。&lt;/p&gt;
&lt;h3 id="net8math-qiita"&gt;.NET8での配列要素に対する一部Math関数の高速化について - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tirol30/items/ff368b1d9b8ae77f411d"&gt;https://qiita.com/tirol30/items/ff368b1d9b8ae77f411d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;double 型の配列要素に対する Math クラスをメソッドを使用した操作で +0.0 のようなコードを追加することで速度が変化する現象について。&lt;/p&gt;
&lt;h3 id="net-9.0-linq-performance-improvements-ndepend-blog"&gt;.NET 9.0 LINQ Performance Improvements - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/net-9-0-linq-performance-improvements/"&gt;https://blog.ndepend.com/net-9-0-linq-performance-improvements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 での LINQ のパフォーマンス改善についての解説。&lt;/p&gt;
&lt;p&gt;記事では Span を取り出せる場合の高速化や、特別なイテレーターについてなどに触れている。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.11.5-xcode-15.4-maui-qiita"&gt;Visual Studio 2022 17.11.5 と Xcode 15.4 で MAUI を使う - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/wukann/items/4eed96ab63b5539b9ac3"&gt;https://qiita.com/wukann/items/4eed96ab63b5539b9ac3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.11.5 と Xcode 15.4 を組み合わせてインストールし、MAUI 開発を行うための解説。&lt;/p&gt;
&lt;h3 id="asp.net-core"&gt;『独習 ASP.NET Core』レビュー&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/fujiwo/articles/149a720a2b49f9"&gt;https://zenn.dev/fujiwo/articles/149a720a2b49f9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;書籍「独習 ASP.NET Core」についてのレビュー。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;説明だけコピーできるようになる話。&lt;/p&gt;
&lt;!-- https://x.com/mkristensen/status/1844778002951139764?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Copying an error (Ctrl+C) from the Error List in Visual Studio now copies just the description instead of the entire row to the clipboard.&lt;br&gt;&lt;br&gt;Coming soon... &lt;a href="https://t.co/wRGUt678Qm"&gt;pic.twitter.com/wRGUt678Qm&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1844778002951139764?ref_src=twsrc%5Etfw"&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-10-11: .NET 9 Release Candidate 2, .NET 6.0.35 &amp; 8.0.10, Microsoft.Extensions.AI Preview</title>
			<link>https://weekref.net/2024/10/11/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/10/11/updates</guid>
			<pubDate>Fri, 11 Oct 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-9-release-candidate-2-is-now-available.net-blog"&gt;.NET 9 Release Candidate 2 is now available! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-9-rc-2/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-9-rc-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Release Candidate 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは正式リリースに向けたバグ修正を中心とした品質の向上が行われている。&lt;/p&gt;
&lt;h3 id="net-and.net-framework-october-2024-servicing-releases-updates.net-blog"&gt;.NET and .NET Framework October 2024 servicing releases updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-october-2024-servicing-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-october-2024-servicing-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024年10月の .NET および .NET Framework のアップデート。.NET 6.0.35, .8.0.10, .NET Framework がリリースされている。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正や改善とセキュリティー修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38229"&gt;CVE-2024-38229&lt;/a&gt;: リモートコード実行の脆弱性 (.NET 8, 9)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/326"&gt;Microsoft Security Advisory CVE-2024-38229 | .NET Remote Code Execution Vulnerability · Issue #326 · dotnet/announcements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ASP.NET の HTTP/3 処理における Use-After-Free&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-43483"&gt;CVE-2024-43483&lt;/a&gt;: サービス拒否の脆弱性 (.NET 6, 8, 9, .NET Framework)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/327"&gt;Microsoft Security Advisory CVE-2024-43483 | .NET Denial of Service Vulnerability · Issue #327 · dotnet/announcements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;System.Security.Cryptography.Cose、System.IO.Packaging、System.Runtime.Caching のハッシュフラッディング&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-43484"&gt;CVE-2024-43484&lt;/a&gt;: サービス拒否の脆弱性 (.NET 6, 8, 9, .NET Framework)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/328"&gt;Microsoft Security Advisory CVE-2024-43484 | .NET Denial of Service Vulnerability · Issue #328 · dotnet/announcements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;System.IO.Packaging への信頼されない入力による複雑な処理でのサービス拒否&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-43485"&gt;CVE-2024-43485&lt;/a&gt;: サービス拒否の脆弱性 (.NET 6, 8, 9)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/329"&gt;Microsoft Security Advisory CVE-2024-43485 | .NET Denial of Service Vulnerability · Issue #329 · dotnet/announcements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;System.Text.Json の &lt;code&gt;[ExtensionData]&lt;/code&gt; プロパティの信頼されない入力のデシリアライズによるサービス拒否&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-microsoft.extensions.ai-preview-unified-ai-building-blocks-for.net.net-blog"&gt;Introducing Microsoft.Extensions.AI Preview - Unified AI Building Blocks for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-microsoft-extensions-ai-preview/"&gt;https://devblogs.microsoft.com/dotnet/introducing-microsoft-extensions-ai-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.AI がプレビューリリースされた。&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.AI は SLM/LLM、Embedding といった AI サービスの抽象化レイヤーとなるものとのこと。プレビューリリースでは OpenAI、Azure AI Inference、Ollama への参照実装が含まれる。記事ではライブラリーのインストールや使用方法についても解説している。&lt;/p&gt;
&lt;h3 id="engineering-the-scalable-vector-extension-in.net.net-blog"&gt;Engineering the Scalable Vector Extension in .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/engineering-sve-in-dotnet/#4.-beyond-code-generation"&gt;https://devblogs.microsoft.com/dotnet/engineering-sve-in-dotnet/#4.-beyond-code-generation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で実験的に追加された Arm64 における SVE (Scalable Vector Extension) のサポートについて。&lt;/p&gt;
&lt;p&gt;記事では API の紹介や実際のコード生成、API 実装時のテストについて、Native AOT でのサポート状況、制限事項といった点について解説している。&lt;/p&gt;
&lt;h3 id="release-windows-app-sdk-1.5.7-1.5.241001000-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.5.7 (1.5.241001000) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.7"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.5.7 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正が含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="easier-localization-with-the-new-resource.resx-manager-visual-studio-blog"&gt;Easier localization with the new resource (.resx) manager - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/easier-localization-with-the-new-resource-resx-manager/"&gt;https://devblogs.microsoft.com/visualstudio/easier-localization-with-the-new-resource-resx-manager/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の新しくなったリソースエクスプローラーの紹介。&lt;/p&gt;
&lt;p&gt;記事では複数のファイルの読み込みや検索とフィルタリング、翻訳のコメント、テキスト中のプレースホルダーのチェック、アクセシビリティーと設定といった点について解説している。&lt;/p&gt;
&lt;h3 id="the-draco-blog-happy-second-birthday-draco-compiler"&gt;The Draco Blog - Happy second birthday Draco compiler!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://draco-lang.org/blog/birthday02"&gt;https://draco-lang.org/blog/birthday02&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;独自の .NET 向けプログラミング言語 Draco のコンパイラーの開発2周年の振り返り。&lt;/p&gt;
&lt;h3 id="cancellation-part-6-linking"&gt;Cancellation, Part 6: Linking&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.stephencleary.com/2024/10/cancellation-6-linking.html"&gt;https://blog.stephencleary.com/2024/10/cancellation-6-linking.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CreateLinkedTokenSource による複数の CancellationToken をリンクした CancellationTokenSource の作り方と使い方、落とし穴についての解説。&lt;/p&gt;
&lt;h3 id="simdsmartvectordotnet4-c.net"&gt;SIMD並列化ライブラリSmartVectorDotNet開発の知見まとめ(4) C#と.Netの最適化&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/aka_nse/articles/e8a72ba241ac5b"&gt;https://zenn.dev/aka_nse/articles/e8a72ba241ac5b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SmartVectorDotNet ライブラリーを実装する上で利用された最適化手法についての解説。&lt;/p&gt;
&lt;p&gt;記事ではジェネリクスの実行時最適化について解説している。&lt;/p&gt;
&lt;h3 id="c.net-nuget.org"&gt;C#/.NET - nuget.org につながらない環境でもビルドできるようにする方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/j_sakamoto/articles/97f183b180ebed"&gt;https://zenn.dev/j_sakamoto/articles/97f183b180ebed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;インターネットに接続されていないような nuget.org に到達できない環境で NuGet パッケージをインストールする方法について。&lt;/p&gt;
&lt;p&gt;記事ではキャッシュからのインストールやローカルパッケージソースを使用した方法などについて解説している。&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;[C#] リフレクションでなるべく高速にクラスメンバを取得 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/radian-jp/items/97a1eaf3cec02d722fd4"&gt;https://qiita.com/radian-jp/items/97a1eaf3cec02d722fd4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;リフレクションによるプロパティーやフィールドの値の読み出しの速度の比較について。&lt;/p&gt;
&lt;p&gt;記事では .NET Framework 4.8.1 と .NET 8 での計測を行っている。&lt;/p&gt;
&lt;h3 id="cdpapi"&gt;C#でDPAPIを使用して機密データを安全に暗号化する方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2024-10-05-encrypt-sensitive-data-csharp-dpapi"&gt;https://zenn.dev/nuits_jp/articles/2024-10-05-encrypt-sensitive-data-csharp-dpapi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows の DPAPI を使用してデータを暗号化する方法について。&lt;/p&gt;
&lt;h3 id="octokit.net"&gt;Octokit.NETを利用し、デバイスフロー認証を使用して、任意のリポジトリに直接ファイルを追加する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2024-10-05-octokit-device-flow-auth"&gt;https://zenn.dev/nuits_jp/articles/2024-10-05-octokit-device-flow-auth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Octokit を使用してデバイスフローによる認証を行ったうえでリポジトリにファイルを追加する手順について。&lt;/p&gt;
&lt;h3 id="support-for-slnx-solution-files-the.net-tools-blog"&gt;Support for SLNX Solution Files | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/10/04/support-for-slnx-solution-files/"&gt;https://blog.jetbrains.com/dotnet/2024/10/04/support-for-slnx-solution-files/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.3 EAP で新しいソリューション形式の .slnx (プレビュー) がサポートされたことについて。&lt;/p&gt;
&lt;p&gt;記事では .slnx での保存方法や制限事項について説明している。&lt;/p&gt;
&lt;h3 id="new-function-calling-available-in.net-for-semantic-kernel-semantic-kernel"&gt;New Function Calling Available in .NET for Semantic Kernel | Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/semantic-kernel/new-function-calling-model-available-in-net-for-semantic-kernel/"&gt;https://devblogs.microsoft.com/semantic-kernel/new-function-calling-model-available-in-net-for-semantic-kernel/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel v1.20 で対応された新しい function calling についての紹介。&lt;/p&gt;
&lt;h3 id="authentication-on.net-openid-connect-bff-spa-dzone"&gt;Authentication on .NET: OpenID Connect, BFF, SPA - DZone&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dzone.com/articles/modern-authentication-on-dotnet"&gt;https://dzone.com/articles/modern-authentication-on-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BFF パターンを用いた OpenID Connect によるシングルページアプリケーションでの認証の実装について。&lt;/p&gt;
&lt;h3 id="building-a-real-time-stock-price-tracker-with.net-8-graphql-and-react-market-pulse"&gt;Building a Real-Time Stock Price Tracker with .NET 8 GraphQL and React: Market Pulse&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.codeproject.com/Articles/5387952/Building-a-Real-Time-Stock-Price-Tracker-with-NET"&gt;https://www.codeproject.com/Articles/5387952/Building-a-Real-Time-Stock-Price-Tracker-with-NET&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core サーバーと React によるフロントエンドを GraphQL で接続してリアルタイムに株価を表示するアプリケーションを実装例の解説。&lt;/p&gt;
&lt;h3 id="crecord-classrecord-structreadonly-record-structsharplab"&gt;【C#】record (class)・record struct・readonly record structがどういう実装になるのかSharpLabでデコンパイルして覗いてみる - はなちるのマイノート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.hanachiru-blog.com/entry/2024/09/30/120000"&gt;https://www.hanachiru-blog.com/entry/2024/09/30/120000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;レコード型、値型レコード型、読み取り専用の値型レコード型がどのような実装となっているか SharpLab でデコンパイルした結果を確認している。&lt;/p&gt;
&lt;h3 id="sponsorlink-v2-a-new-hope"&gt;SponsorLink v2: A New Hope&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.cazzulino.com/sponsorlink2.html"&gt;https://www.cazzulino.com/sponsorlink2.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="altmannfluentresults-a-generalised-result-object-implementation-for.netc"&gt;altmann/FluentResults: A generalised Result object implementation for .NET/C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/altmann/FluentResults"&gt;https://github.com/altmann/FluentResults&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;成功/失敗を型で表す Result パターンを実装するためのライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/sy_delphoxy/items/29d56623f198b0f0aafc"&gt;C#向けResultパターンライブラリ「FluentResult」Readme抄訳 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Visual Studio のコードエディターから GitHub または Azure DevOps のコードへのリンク (URL) をコピーできるようになるという話。&lt;/p&gt;
&lt;!-- https://x.com/mkristensen/status/1844419458787619211?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;You can get a GitHub or Azure DevOps link to a specific line of code to make it easy to share with your colleagues.&lt;br&gt;&lt;br&gt;Coming soon to Visual Studio... &lt;a href="https://t.co/mlh6v451Ap"&gt;pic.twitter.com/mlh6v451Ap&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1844419458787619211?ref_src=twsrc%5Etfw"&gt;October 10, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;IEnumerable ビジュアライザーで IntelliSense が使用できるようになるという話。&lt;/p&gt;
&lt;!-- https://x.com/mkristensen/status/1844068358846808264?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The IEnumerable Visualizer has been enhanced with IntelliSense, providing real-time code suggestions and autocompletion, which makes writing LINQ expressions faster and more accurate. &lt;br&gt;&lt;br&gt;Coming soon to Visual Studio... &lt;a href="https://t.co/GAY456D6UG"&gt;pic.twitter.com/GAY456D6UG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1844068358846808264?ref_src=twsrc%5Etfw"&gt;October 9, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-10-04: Official OpenAI library for .NET, Windows App SDK 1.6.1</title>
			<link>https://weekref.net/2024/10/04/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/10/04/updates</guid>
			<pubDate>Fri, 04 Oct 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing-the-stable-release-of-the-official-openai-library-for.net.net-blog"&gt;Announcing the stable release of the official OpenAI library for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-the-stable-release-of-the-official-open-ai-library-for-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/announcing-the-stable-release-of-the-official-open-ai-library-for-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 向けの公式 OpenAI ライブラリーがリリースされた。&lt;/p&gt;
&lt;p&gt;このライブラリーは OpenAI および Azure OpenAI サービスをサポートするクライアントライブラリーとなっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完全な OpenAI REST API サポート: v2 やチャット補完など柔軟なインタラクションを実現できる&lt;/li&gt;
&lt;li&gt;最新のモデルのサポート: GPT-4o, GPT-4o mini, o1-preview, o1-mini などのモデルのサポート&lt;/li&gt;
&lt;li&gt;拡張性&lt;/li&gt;
&lt;li&gt;同期と非同期 API&lt;/li&gt;
&lt;li&gt;ストリーミング補完: IAsyncEnumerable によるストリーミング補完&lt;/li&gt;
&lt;li&gt;Quality-of-life の向上&lt;/li&gt;
&lt;li&gt;.NET Standard 2.0 の互換性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-windows-app-sdk-1.6.1-1.6.240923002-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.6.1 (1.6.240923002) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.6.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかのクラッシュやバグといった不具合の修正が行われている。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-recent-performance-enhancements-visual-studio-blog"&gt;Visual Studio 2022 - Recent performance enhancements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-recent-performance-enhancements/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-recent-performance-enhancements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 でのパフォーマンス改善についての紹介記事。&lt;/p&gt;
&lt;p&gt;C# に関連する部分でのパフォーマンス改善としてコードのインデックス作成に関する挙動の改善、Source Generator の .NET 8 以降と実行タイミングの変更とその設定がある。&lt;/p&gt;
&lt;p&gt;その他 C++ での条件付きブレークポイントのパフォーマンス改善や C++ シンボル検索の最適化といった改善があるとのこと。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="libgit2sharpgit"&gt;LibGit2Sharpを使用してGitリポジトリを操作する方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2024-10-04-use-libgit2sharp-git-operations"&gt;https://zenn.dev/nuits_jp/articles/2024-10-04-use-libgit2sharp-git-operations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LibGit2Sharp を使用した Git リポジトリの操作についての簡単な説明。&lt;/p&gt;
&lt;h3 id="simdsmartvectordotnet1-ieee754"&gt;SIMD並列化ライブラリSmartVectorDotNet開発の知見まとめ(1) IEEE754浮動小数型の低レベル操作&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/aka_nse/articles/34740bb2088576"&gt;https://zenn.dev/aka_nse/articles/34740bb2088576&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SIMD を使用した並列化ライブラリで各種演算を実装する際の知見についてのまとめ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/aka_nse/articles/54ae08eb9a9fd6"&gt;SIMD並列化ライブラリSmartVectorDotNet開発の知見まとめ(2) SIMD演算の基礎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/aka_nse/articles/f94b7a8dfc59a3"&gt;SIMD並列化ライブラリSmartVectorDotNet開発の知見まとめ(3) 初等関数の実装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="discover-hidden-insights-with-profilers-external-code-decompilation-visual-studio-blog"&gt;Discover Hidden Insights with Profiler's External Code Decompilation - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/discover-hidden-insights-with-profilers-external-code-decompilation/"&gt;https://devblogs.microsoft.com/visualstudio/discover-hidden-insights-with-profilers-external-code-decompilation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio でプロファイリングした際、ソースコードを持たない部分を解析するために自動で逆コンパイルする機能についての紹介。&lt;/p&gt;
&lt;h3 id="cml.net-qiita"&gt;【C#】ML.NETでレビューに含まれる感情を分析してみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/KM_20005/items/2019cd99ba91cc8aeaeb"&gt;https://qiita.com/KM_20005/items/2019cd99ba91cc8aeaeb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET を使用して感情を分析するモデルと実装する手順の紹介。&lt;/p&gt;
&lt;h3 id="major-updates-to-netescapades.aspnetcore.securityheaders"&gt;Major updates to NetEscapades.​AspNetCore.​SecurityHeaders&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/major-updates-to-netescapades-aspnetcore-security-headers/"&gt;https://andrewlock.net/major-updates-to-netescapades-aspnetcore-security-headers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;セキュリティー関連のヘッダーを出力するミドルウェア NetEscapades.​AspNetCore.​SecurityHeaders のアップデートについて。&lt;/p&gt;
&lt;p&gt;記事ではアップデートに際して、削除や変更のあったヘッダーやカスタマイズについてなどを詳しく解説している。&lt;/p&gt;
&lt;h3 id="implement-a-geo-distance-search-using.net-aspire-elasticsearch-and-asp.net-core"&gt;Implement a Geo-distance search using .NET Aspire, Elasticsearch and ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2024/09/23/implement-a-geo-distance-search-using-net-aspire-elasticsearch-and-asp-net-core/"&gt;https://damienbod.com/2024/09/23/implement-a-geo-distance-search-using-net-aspire-elasticsearch-and-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションで Elasticsearch の Geo-distance 検索を呼び出す方法について。&lt;/p&gt;
&lt;h3 id="c-onnxruntimeresnet-qiita"&gt;(C#) OnnxRuntimeを通してResNetによる画像分類を試す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Kujiro/items/7b2e75494e05a2c803dd"&gt;https://qiita.com/Kujiro/items/7b2e75494e05a2c803dd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OnnxRuntime と ResNet を使用した画像分類を実装する方法について。&lt;/p&gt;
&lt;p&gt;記事では画像を読み込んで推論する手順や GPU を使用する場合について触れている。&lt;/p&gt;
&lt;h3 id="csbindgen-qiita"&gt;csbindgenを使ってみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/aiueo-1234/items/df61c6a4ce2695904e5a"&gt;https://qiita.com/aiueo-1234/items/df61c6a4ce2695904e5a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C 言語や Rust のバインディングを生成する csbindgen の使用方法についての解説。&lt;/p&gt;
&lt;h3 id="visual-studio.net"&gt;Visual Studio &amp;amp; .NET - ソースコードを持っていないアセンブリ内にブレークポイントを設置してデバッグしたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/j_sakamoto/articles/f333eecd0949dc"&gt;https://zenn.dev/j_sakamoto/articles/f333eecd0949dc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio でソースコードのない外部アセンブリに対してデバッグ実行時に逆コンパイルしてステップインする方法について。&lt;/p&gt;
&lt;h3 id="asp.net-core-9-and-iasyncenumerable-async-streaming-json-and-ndjson-from-blazor-webassembly"&gt;ASP.NET Core 9 and IAsyncEnumerable - Async Streaming JSON and NDJSON From Blazor WebAssembly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.tpeczek.com/2024/09/aspnet-core-9-and-iasyncenumerable.html"&gt;https://www.tpeczek.com/2024/09/aspnet-core-9-and-iasyncenumerable.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 の Blazor WebAssembly で対応されたストリーミングアップロードを使用して、 JSON および NDJSON のストリーミングアップロードを実装する方法について。&lt;/p&gt;
&lt;h3 id="effortless-instrumentation-profiling-with-persistent-target-selection-visual-studio-blog"&gt;Effortless Instrumentation profiling with Persistent Target Selection - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/effortless-instrumentation-profiling-with-persistent-target-selection/"&gt;https://devblogs.microsoft.com/visualstudio/effortless-instrumentation-profiling-with-persistent-target-selection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 でプロファイリングのターゲット選択を保持する改善についての紹介。&lt;/p&gt;
&lt;p&gt;繰り返しプロファイリングをセッションを実行する場合にその都度選択する必要がなくなる。&lt;/p&gt;
&lt;h3 id="an-efficient-dictionary-for-ipaddress-tracking-using.net-9-with-alternatelookup-and-ialternateequalitycomparer-steve-gordon-code-with-steve"&gt;An Efficient Dictionary for IPAddress Tracking using .NET 9 with AlternateLookup and IAlternateEqualityComparer - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/efficient-dictionary-for-ipaddress-tracking-using-net-9-with-alternatelookup-and-ialternateequalitycomparer"&gt;https://www.stevejgordon.co.uk/efficient-dictionary-for-ipaddress-tracking-using-net-9-with-alternatelookup-and-ialternateequalitycomparer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IP アドレスをキーにした Dictionary で .NET 9 の Dictionary の AlternateLookup を使用して  ReadOnlySpan で検索できるようにする方法について。&lt;/p&gt;
&lt;h3 id="disabling-recording-of-an-activity-span-in.net-opentelemetry-instrumentation-steve-gordon-code-with-steve"&gt;Disabling Recording of an Activity (span) in .NET OpenTelemetry Instrumentation - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/disabling-recording-of-an-activity-span-in-dotnet-opentelemetry-instrumentation"&gt;https://www.stevejgordon.co.uk/disabling-recording-of-an-activity-span-in-dotnet-opentelemetry-instrumentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry での計測時に、Activity (Span) による記録を無効にする方法について。&lt;/p&gt;
&lt;p&gt;特定の無効なリクエストはトレースに含めたくないといったケースでの対応方法。&lt;/p&gt;
&lt;h3 id="unity-tools-case-study-the-qodana-blog"&gt;Unity Tools Case Study The Qodana Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/ja/qodana/2024/08/unity-tools-qodana/"&gt;https://blog.jetbrains.com/ja/qodana/2024/08/unity-tools-qodana/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Qodana を使用して CI/CD で Unity アプリケーションのコードの品質をチェックする方法について。&lt;/p&gt;
&lt;h3 id="spectre.console-helpers"&gt;Spectre.Console helpers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/spectreconsole-helpers-3ml3"&gt;https://dev.to/karenpayneoregon/spectreconsole-helpers-3ml3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spectre.Console の使い方デモを兼ねたヘルパーコードの実装と紹介。&lt;/p&gt;
&lt;h3 id="wpf-qiita"&gt;[WPF] 次の画面再描画時に処理を実行する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/habakino094/items/285ed1f899a6e3dd6ddc"&gt;https://qiita.com/habakino094/items/285ed1f899a6e3dd6ddc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF で再描画時に呼び出される CompositionTarget.Rendering について。&lt;/p&gt;
&lt;h3 id="receiving-push-notifications-from-firebase-in-android-maui"&gt;Receiving Push Notifications from Firebase in Android MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/laura_puckoriute/receiving-push-notifications-from-firebase-in-android-maui-1ho"&gt;https://dev.to/laura_puckoriute/receiving-push-notifications-from-firebase-in-android-maui-1ho&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI の Android 向けアプリケーション実装で、Firebase を使用した通知をハンドリングする方法について。&lt;/p&gt;
&lt;h3 id="oss-keycloak.net-aspireidaas"&gt;OSSの認証サービス Keycloak を.NETから使ってみた-Aspireとコンテナで使える簡単IDaaS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/tomohisa/ossnoren-zheng-sabisu-keycloak-wo-dot-netkarashi-tutemita-aspiretokontenadeshi-erujian-dan-idaas"&gt;https://speakerdeck.com/tomohisa/ossnoren-zheng-sabisu-keycloak-wo-dot-netkarashi-tutemita-aspiretokontenadeshi-erujian-dan-idaas&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="ffe7504c24ba459fa93de27eaa38cf2c" data-ratio="1.7772511848341233" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/26611f2f18990d"&gt;『OSSの認証サービス Keycloak を.NETから使ってみた』という登壇をしました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Visual Studio で return ステートメントで返す値をインラインで表示/確認できるようになる、という話。&lt;/p&gt;
&lt;!-- https://x.com/mkristensen/status/1839677882807017975?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The Visual Studio debugger now displays inline values for return statements, responding to one of the most requested features from the developer community.&lt;br&gt;&lt;br&gt;Coming soon... &lt;a href="https://t.co/99W5Ce3U3C"&gt;pic.twitter.com/99W5Ce3U3C&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1839677882807017975?ref_src=twsrc%5Etfw"&gt;September 27, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;最新の Rider のプレビューでも .slnx 形式のサポートが追加されたという話。&lt;/p&gt;
&lt;!-- https://x.com/maartenballiauw/status/1840763793963471301?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The new &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; `.slnx` solution file format is available in the latest &lt;a href="https://twitter.com/JetBrainsRider?ref_src=twsrc%5Etfw"&gt;&amp;#64;JetBrainsRider&lt;/a&gt; preview 👏 &lt;a href="https://t.co/N9ZVzyrTm6"&gt;pic.twitter.com/N9ZVzyrTm6&lt;/a&gt;&lt;/p&gt;&amp;mdash; Maarten Balliauw &amp;#64;maartenballiauw&amp;#64;mastodon.online (&amp;#64;maartenballiauw) &lt;a href="https://twitter.com/maartenballiauw/status/1840763793963471301?ref_src=twsrc%5Etfw"&gt;September 30, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;C# 13 のコレクション式の要素のより良い変換が 17.13 (Preview 3) にマージされた。&lt;/p&gt;
&lt;!-- https://x.com/jcouv/status/1841596573807214724?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We merged a C# 13 feature into VS 17.12 (preview 3): Better conversion from collection expression element.&lt;br&gt;&lt;br&gt;It improves overload resolution to account for the element type of a collection expressions.&lt;a href="https://t.co/NQLBJutDjA"&gt;https://t.co/NQLBJutDjA&lt;/a&gt;&lt;/p&gt;&amp;mdash; Julien Couvreur (&amp;#64;jcouv) &lt;a href="https://twitter.com/jcouv/status/1841596573807214724?ref_src=twsrc%5Etfw"&gt;October 2, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="add-initial-design-document-for-parsing-net10-by-terrajobst-pull-request-322-dotnetdesigns"&gt;Add initial design document for parsing &lt;code&gt;net10&lt;/code&gt; by terrajobst · Pull Request #322 · dotnet/designs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/designs/pull/322"&gt;https://github.com/dotnet/designs/pull/322&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 10 に向け TargetFramework を &lt;code&gt;net10&lt;/code&gt; どう扱うかについて。&lt;code&gt;net10&lt;/code&gt; そのままでは .NET Framework 1.0 と区別がつかない問題がある。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-09-30: Certificate Issues on macOS 15, Uno Platform 5.4, .NET Diagnostics v8.0.547301</title>
			<link>https://weekref.net/2024/09/30/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/09/30/updates</guid>
			<pubDate>Mon, 30 Sep 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="certificate-issues-on-macos-15-sequoia-issue-324-dotnetannouncements"&gt;Certificate Issues on macOS 15 (&amp;quot;Sequoia&amp;quot;) · Issue #324 · dotnet/announcements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/announcements/issues/324"&gt;https://github.com/dotnet/announcements/issues/324&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;macOS 15 Sequoia で証明書の操作でエラーが発生する問題について。&lt;/p&gt;
&lt;p&gt;macOS 15 Sequoia ではインメモリーキーを使用した CopyWithPrivateKey の呼び出しが失敗するようになったため、証明書を作成/読み込み時に例外が発生する場合がある。この問題は &lt;code&gt;CertificateRequest.CreateSelfSigned&lt;/code&gt; や &lt;code&gt;X509Certificate2.CreateFromPem&lt;/code&gt; といった API やそれらを使用している &lt;code&gt;dotnet dev-certs https&lt;/code&gt; コマンドなどが影響を受ける。&lt;/p&gt;
&lt;p&gt;10月にリリースされる .NET 6.0.34, 8.0.10, 9.0.0-rc2 で修正される予定となっている。&lt;/p&gt;
&lt;h3 id="uno-platform-5.4-perf-improvements-and-290-issues-closed"&gt;Uno Platform 5.4: Perf Improvements and 290+ Issues closed&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/5-4/"&gt;https://platform.uno/blog/5-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 5.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではパフォーマンスの改善や IRootObjectProvider サポート、細かい改善が含まれている。&lt;/p&gt;
&lt;p&gt;また記事では Scott Plot との統合についても触れている。&lt;/p&gt;
&lt;h3 id="release-diagnostics-release-v8.0.547301-dotnetdiagnostics"&gt;Release Diagnostics Release - v8.0.547301 · dotnet/diagnostics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/diagnostics/releases/tag/v8.0.547301"&gt;https://github.com/dotnet/diagnostics/releases/tag/v8.0.547301&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 診断ツール v8.0.547301 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは dotnet-symbol の &lt;code&gt;--internal-server&lt;/code&gt; フラグのサポート、dotnet-dump と SOS での &lt;code&gt;!setsymbolserver&lt;/code&gt; コマンドの追加やいくつかの不具合の修正と ARM64EC のサポート、dotnet-counters の EventCounter ベースのカウンターのみを表示する接頭辞のサポートやいくつかの不具合修正が含まれている。&lt;/p&gt;
&lt;h3 id="release-release-v2.66.0-grpcgrpc-dotnet"&gt;Release Release v2.66.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.66.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.66.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.66.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Wine 互換レイヤー下で発生する問題の修正やチャンネルの HTTP バージョンの設定の追加などが含まれている。&lt;/p&gt;
&lt;h3 id="resharper-2024.3-starts-its-early-access-program-the.net-tools-blog"&gt;ReSharper 2024.3 Starts its Early Access Program! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/09/20/resharper-2024-3-eap/"&gt;https://blog.jetbrains.com/dotnet/2024/09/20/resharper-2024-3-eap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.3 EAP がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .editorconfig でのコードクリーンアップの設定、命名スタイルの追加、C# 書式設定の追加、C++ 関連の改善などが含まれている。&lt;/p&gt;
&lt;h3 id="rider-2024.3-early-access-program-is-here-the.net-tools-blog"&gt;Rider 2024.3 Early Access Program Is Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/09/20/rider-2024-3-eap/"&gt;https://blog.jetbrains.com/dotnet/2024/09/20/rider-2024-3-eap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.3 EAP がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Live++ による C++ のホットリロードのサポート、.editorconfig でのコードクリーンアップの設定、命名スタイルの追加、C# 書式設定の追加、Unreal Engine サポートの向上などが含まれている。&lt;/p&gt;
&lt;h3 id="coreclr-and.net-modernization-unite-2024-unity-engine-unity-discussions"&gt;CoreCLR and .NET Modernization - Unite 2024 - Unity Engine - Unity Discussions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://discussions.unity.com/t/coreclr-and-net-modernization-unite-2024/1519272"&gt;https://discussions.unity.com/t/coreclr-and-net-modernization-unite-2024/1519272&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unity のランタイムの CoreCLR 化と .NET のモダナイズの進捗について。&lt;/p&gt;
&lt;p&gt;記事では Unity 6 には含まれないが .NET 8 以降の CoreCLR への移行作業が進んでいること、まだ最適化などの作業が残っていること、.NET 化によるメリットについて、IL2CPP や Burst 統合、MSBuild との統合、コードのリロードについて触れている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-9"&gt;.NET 9 に対するパフォーマンス改善の貢献 - 小さな改善が大きな価値を生む&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.sigmact.com/updated/dotnet/net9-perf-pr/"&gt;https://www.sigmact.com/updated/dotnet/net9-perf-pr/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET のベースクラスライブラリーにパフォーマンス改善の Pull Request で貢献するに至った流れと実装について。&lt;/p&gt;
&lt;h3 id="creating-a-react-todo-app-in-visual-studio-2022-visual-studio-blog"&gt;Creating a React TODO app in Visual Studio 2022 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/creating-a-react-todo-app-in-visual-studio-2022/"&gt;https://devblogs.microsoft.com/visualstudio/creating-a-react-todo-app-in-visual-studio-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 で React を使用した JavaScript の TODO アプリを実装する手順の紹介。&lt;/p&gt;
&lt;h3 id="accelerating-financial-calculations-with-avx-512-in-c.net-8"&gt;Accelerating Financial Calculations with AVX-512 in C# .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;anderson.buenogod/accelerating-financial-calculations-with-avx-512-in-c-net-8-5c542fd59958"&gt;https://medium.com/&amp;#64;anderson.buenogod/accelerating-financial-calculations-with-avx-512-in-c-net-8-5c542fd59958&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で AVX-512 を使用して財務計算を高速化する例について。&lt;/p&gt;
&lt;h3 id="azurewindows-server.net-core"&gt;【Azure】Windows Server の .NET Core はデフォルトで自動更新しない&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ohori97/articles/ad241913e4af8a"&gt;https://zenn.dev/ohori97/articles/ad241913e4af8a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows Server にインストールされた .NET の Microsoft Update による自動アップデートを有効化する方法について。&lt;/p&gt;
&lt;h3 id="wpfpanel-qiita"&gt;WPFのタブオーダーを、Panel単位で並べ替える方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/783b571f84ad54db9054"&gt;https://qiita.com/spc_ksudoh/items/783b571f84ad54db9054&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF でタブオーダーを Panel ごとに保持することでタブによる移動の制御をする方法について。&lt;/p&gt;
&lt;h3 id="organize-your-breakpoints-like-a-pro-visual-studio-blog"&gt;Organize Your Breakpoints like a pro - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/organize-your-breakpoints-like-a-pro/"&gt;https://devblogs.microsoft.com/visualstudio/organize-your-breakpoints-like-a-pro/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 のブレークポイントをグルーピングして管理する機能の紹介。&lt;/p&gt;
&lt;h3 id="net-mapping-library-in-2024"&gt;.NET: mapping library in 2024&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;rasslabone/net-mapping-library-in-2024-cbab4312b5ae"&gt;https://medium.com/&amp;#64;rasslabone/net-mapping-library-in-2024-cbab4312b5ae&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オブジェクトマッパーの Mapperly の使い方を AutoMapper と比較しつつ紹介。&lt;/p&gt;
&lt;h3 id="fixing-the-https-developer-certificate-error-in.net-on-macos-sequoia"&gt;Fixing the HTTPS Developer Certificate Error in .NET on macOS Sequoia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/michaelcharles/fixing-the-https-developer-certificate-error-in-net-on-macos-sequoia-516h"&gt;https://dev.to/michaelcharles/fixing-the-https-developer-certificate-error-in-net-on-macos-sequoia-516h&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-9.0inlinearray-qiita"&gt;【.NET 9.0】InlineArray を使った値型リストを作ってみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/d3a724dba68cb16ca722"&gt;https://qiita.com/abetakahiro123/items/d3a724dba68cb16ca722&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;InlineArray を使用してスタック上で使用できるような List を実装してみるという例。&lt;/p&gt;
&lt;h3 id="c-harmony-qiita"&gt;[C#] Harmonyでメソッドの動作を変更する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/radian-jp/items/ae6ca1f17071727dda8f"&gt;https://qiita.com/radian-jp/items/ae6ca1f17071727dda8f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;動的に実行プログラムにパッチする Harmony を使用してメソッドを書き換える方法について。&lt;/p&gt;
&lt;h3 id="level-up-your-collaborations-with-the-pull-request-experience-in-visual-studio-visual-studio-blog"&gt;Level up your collaborations with the pull request experience in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/level-up-your-collaborations-with-the-pull-request-experience-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/level-up-your-collaborations-with-the-pull-request-experience-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 での Pull Request に関する機能改善についての紹介。&lt;/p&gt;
&lt;p&gt;記事では Pull Request の作成から、コメントをエディターで表示する方法といった点について紹介している。&lt;/p&gt;
&lt;h3 id="winui3"&gt;WinUI3でとりあえずなんか動かしたいときの下準備&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/spacekey/articles/winui3-project"&gt;https://zenn.dev/spacekey/articles/winui3-project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 アプリケーションを作る際の下準備としての構成の紹介。&lt;/p&gt;
&lt;h3 id="rust-panics-under-the-hood-and-implementing-them-in.net"&gt;Rust panics under the hood, and implementing them in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_2_1.html"&gt;https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_2_1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust の CIL バックエンドを実装する中で panic や unwind がどのように動き、.NET 上で実現するのかといったことについて。&lt;/p&gt;
&lt;h3 id="a-tyrant-guide-to-code-quality-gates-featuring-csharpier-husky.net-and-sonarcloud"&gt;A Tyrant Guide to Code Quality Gates featuring CSharpier, Husky.NET, and SonarCloud&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nikiforovall.github.io/dotnet/2024/09/14/quality-gates-dotnet.html"&gt;https://nikiforovall.github.io/dotnet/2024/09/14/quality-gates-dotnet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CSharpier や Husky.NET、SonarCloud といったツールを CI/CD パイプラインに組み込んだコード品質のゲートを組み上げる方法について。&lt;/p&gt;
&lt;h3 id="anatomy-of-the.net-dictionary"&gt;Anatomy of the .NET dictionary&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dunnhq.com/posts/2024/anatomy-of-the-dotnet-dictionary/"&gt;https://dunnhq.com/posts/2024/anatomy-of-the-dotnet-dictionary/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dictionary がどのように実装されていて、操作時にどのような挙動をするのかを詳細に解説している。&lt;/p&gt;
&lt;h3 id="fastenum-v2.0"&gt;最速奪還への道 - FastEnum v2.0 開発奮闘記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/xin9le/articles/2b71584e23edfd"&gt;https://zenn.dev/xin9le/articles/2b71584e23edfd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FastEnum という Enum に関する操作を高速に行うライブラリーを高速化するにあたって行ったテクニックの紹介。&lt;/p&gt;
&lt;h3 id="generichostiloggerdebug-qiita"&gt;GenericHostのILoggerでDebug以下のログを出す時に引っかかりがちなポイント - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/3632df966f9b10ec9276"&gt;https://qiita.com/spc_ksudoh/items/3632df966f9b10ec9276&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GenericHost のロガーで Trace など Debug 以下のログを出力する際、既定の設定などによって期待通り出力できないことがあることについて。&lt;/p&gt;
&lt;h3 id="building-a-high-performance-tcp-server-from-scratch"&gt;Building a High-Performance TCP Server from scratch&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;Alikhalili/building-a-high-performance-tcp-server-from-scratch-a8ede35c4cc2"&gt;https://medium.com/&amp;#64;Alikhalili/building-a-high-performance-tcp-server-from-scratch-a8ede35c4cc2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SocketAsyncEngine で高速な TCP サーバー (HTTP ハートビートサーバー) を実装することについて。&lt;/p&gt;
&lt;h3 id="net-8windows-qiita"&gt;.NET 8でのWindowsサービスの作り方 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/675b8fe5b04596763ede"&gt;https://qiita.com/spc_ksudoh/items/675b8fe5b04596763ede&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 を使用した Windows サービスを実装する手順について。&lt;/p&gt;
&lt;p&gt;記事では作成とインストール、ライフサイクルの対応といった点について解説している。&lt;/p&gt;
&lt;h3 id="improving-github-copilot-completions-in-visual-studio-for-c-developers.net-blog"&gt;Improving GitHub Copilot Completions in Visual Studio for C# Developers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/improving-github-copilot-completions-in-visual-studio-for-csharp-developers/"&gt;https://devblogs.microsoft.com/dotnet/improving-github-copilot-completions-in-visual-studio-for-csharp-developers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 の GitHub Copilot で C# のコード編集時の入力補完を取得するコンテキストに型やメソッドなどが含まれるようになり、より関連性の高い結果が提示されるようになったことについて。&lt;/p&gt;
&lt;h3 id="multi-project-launch-configuration-visual-studio-blog"&gt;Multi-Project Launch Configuration - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/multi-project-launch-configuration/"&gt;https://devblogs.microsoft.com/visualstudio/multi-project-launch-configuration/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 にプレビュー実装されたマルチプロジェクト起動構成 (Multi-Project Launch Profiles) についての紹介。&lt;/p&gt;
&lt;p&gt;マルチプロジェクト起動構成を使用することで複数のプロジェクトを一度に起動できる。&lt;/p&gt;
&lt;p&gt;記事では設定方法や、起動する際のターゲットの設定、起動プロファイルなどについて説明している。&lt;/p&gt;
&lt;h3 id="boosting-web-performance-with-brotli-a-practical-guide-to-compression-in.net-gameball-engineering-blog"&gt;Boosting Web Performance with Brotli: A Practical Guide to Compression in .NET | Gameball Engineering Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://engineering.gameball.co/posts/boosting-web-performance-with-brotli"&gt;https://engineering.gameball.co/posts/boosting-web-performance-with-brotli&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で Brotli レスポンス圧縮を使用する方法について。&lt;/p&gt;
&lt;h3 id="system.threading.channels-2-qiita"&gt;スレッドセーフ等が付いたキューとして使えるSystem.Threading.Channels (2)応用の紹介編 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/55f194b1c3b272f69ab9"&gt;https://qiita.com/spc_ksudoh/items/55f194b1c3b272f69ab9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;System.Threading.Channels で待ち行列や Dequeue 時の処理分岐といった応用する方法について。&lt;/p&gt;
&lt;h3 id="c-13.net-9-rc-1"&gt;C# 13 / .NET 9 の新機能 (RC 1 時点)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/nenonaninu/net-9-noxin-ji-neng-rc-1-shi-dian"&gt;https://speakerdeck.com/nenonaninu/net-9-noxin-ji-neng-rc-1-shi-dian&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="ec715d8804bd4386a1fb058dded72dab" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.neno.dev/entry/2024/09/28/222353"&gt;【C#】C# 13 / .NET 9 の新機能 (RC 1 時点) - ねののお庭。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="a-perfview-alternative-in-webassembly"&gt;A Perfview Alternative in WebAssembly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techblog.criteo.com/a-perfview-alternative-in-webassembly-f6833820b699"&gt;https://techblog.criteo.com/a-perfview-alternative-in-webassembly-f6833820b699&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PerfView の代わりとして使用できる Blazor WebAssembly によるイベントビューアー。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-09-19: .NET 9 Release Candidate 1, AWS SDK for .NET with OpenTelemetry, StackExchange.Redis 2.8.16</title>
			<link>https://weekref.net/2024/09/19/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/09/19/updates</guid>
			<pubDate>Thu, 19 Sep 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-9-release-candidate-1-is-now-available.net-blog"&gt;.NET 9 Release Candidate 1 is now available! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-9-release-candidate-1-is-now-available/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-9-release-candidate-1-is-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Release Candidate 1 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ライブラリー
&lt;ul&gt;
&lt;li&gt;WebSocket Keep-Alive Ping とタイムアウト API&lt;/li&gt;
&lt;li&gt;ZLib, Brotli 圧縮オプションの追加&lt;/li&gt;
&lt;li&gt;TarEntry.DataOffset の追加&lt;/li&gt;
&lt;li&gt;HttpClientFactory のデフォルトでのヘッダー値のログ無効化&lt;/li&gt;
&lt;li&gt;アウトオブプロセス Meter ワイルドカード購読&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SDK
&lt;ul&gt;
&lt;li&gt;ワークロードヒストリー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core
&lt;ul&gt;
&lt;li&gt;SignalR 分散トレーシングの改善&lt;/li&gt;
&lt;li&gt;WebSockets の Keep-alive タイムアウト&lt;/li&gt;
&lt;li&gt;ミドルウェアでのキー付き DI&lt;/li&gt;
&lt;li&gt;InputNumber タイプ属性のオーバーライド&lt;/li&gt;
&lt;li&gt;Linux での ASP.NET Core HTTPS 開発証明書の信頼&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET MAUI
&lt;ul&gt;
&lt;li&gt;HorizontalTextAlignment.Justify の追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="enhancing-observability-in-the-aws-sdk-for.net-with-opentelemetry-amazon-web-services"&gt;Enhancing Observability in the AWS SDK for .NET with OpenTelemetry | Amazon Web Services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/jp/blogs/developer/enhancing-observability-in-the-aws-sdk-for-net-with-opentelemetry/"&gt;https://aws.amazon.com/jp/blogs/developer/enhancing-observability-in-the-aws-sdk-for-net-with-opentelemetry/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS SDK for .NET 3.7.400 以降でサポートされている OpenTelemetry 対応についての解説。&lt;/p&gt;
&lt;p&gt;記事では OpenTelemetry 統合の有効化と追加方法、サポートされているメトリックや独自のテレメトリープロバイダーの作成方法などを紹介している。&lt;/p&gt;
&lt;h3 id="release-2.8.16-stackexchangestackexchange.redis"&gt;Release 2.8.16 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.14"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.14&lt;/a&gt;
&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.16"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.8.14, 2.8.16 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="github-models-and.net-building-generative-ai-apps-for-engineers.net-blog"&gt;GitHub Models and .NET: Building Generative AI apps for engineers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/using-github-models-and-dotnet-to-build-generative-ai-apps/"&gt;https://devblogs.microsoft.com/dotnet/using-github-models-and-dotnet-to-build-generative-ai-apps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Models を .NET から使用する方法について。&lt;/p&gt;
&lt;p&gt;記事では Azure AI Inference SDK を使用して GitHub Models を使用する例を Phi-3 モデルで解説している。&lt;/p&gt;
&lt;h3 id="android-asset-packs-for.net.net-maui-android-apps.net-blog"&gt;Android Asset Packs for .NET &amp;amp; .NET MAUI Android Apps - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/android-asset-packs-in-dotnet-android/"&gt;https://devblogs.microsoft.com/dotnet/android-asset-packs-in-dotnet-android/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 でサポートされる Android のアセットパックのビルドについて。&lt;/p&gt;
&lt;p&gt;記事ではアセットパックとは何か、今までの .NET ではどのような問題があり .NET 9 で解決されるのか、アセットパックをオンデマンドでダウンロードする方法やデバッグする方法といったことについて。&lt;/p&gt;
&lt;h3 id="runtime-fee"&gt;ゲーム領域向け Runtime Fee の撤回について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://unity.com/ja/blog/unity-is-canceling-the-runtime-fee"&gt;https://unity.com/ja/blog/unity-is-canceling-the-runtime-fee&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unity 6 以降で導入が予定されていた Runtime Fee (インストール数ベースでの課金) を撤回することとなったことについて。&lt;/p&gt;
&lt;h3 id="performance-improvements-in.net-9.net-blog"&gt;Performance Improvements in .NET 9 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-9/"&gt;https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 での様々なパフォーマンス改善についてコードとベンチマークを使った詳細な解説。&lt;/p&gt;
&lt;h3 id="preview-release-of-sdk-style-sql-projects-in-visual-studio-2022"&gt;Preview release of SDK-style SQL projects in Visual Studio 2022&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/azure-sql-blog/preview-release-of-sdk-style-sql-projects-in-visual-studio-2022/ba-p/4240616"&gt;https://techcommunity.microsoft.com/t5/azure-sql-blog/preview-release-of-sdk-style-sql-projects-in-visual-studio-2022/ba-p/4240616&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の SQL Server Data Tools 向けのプロジェクトで SDK スタイルのプロジェクトをプレビューサポートした。&lt;/p&gt;
&lt;h3 id="modernize-your-uwp-app-with-preview-uwp-support-for.net-9-and-native-aot-ifdef-windows"&gt;Modernize your UWP app with preview UWP support for .NET 9 and Native AOT - #ifdef Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/ifdef-windows/preview-uwp-support-for-dotnet-9-native-aot/"&gt;https://devblogs.microsoft.com/ifdef-windows/preview-uwp-support-for-dotnet-9-native-aot/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で UWP のプレビューサポートとなった。&lt;/p&gt;
&lt;p&gt;.NET 9 による UWP のサポートで WinUI 3 への移行が可能になることや、更新されなかった .NET Core 2.0 レベルの機能と .NET Native (AOT) のランタイムからモダンな C# と .NET ランタイムを使用した開発が行えるようになる。&lt;/p&gt;
&lt;p&gt;記事では .NET 9 を使用した UWP プロジェクトの作成方法とプロジェクトファイルの詳細な説明、F# のサポート、その他エコシステムのサポート状況などについても触れている。&lt;/p&gt;
&lt;h3 id="simplifying-components-for.netc-developers-with-componentize-dotnet"&gt;Simplifying components for .NET/C# developers with componentize-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bytecodealliance.org/articles/simplifying-components-for-dotnet-developers-with-componentize-dotnet"&gt;https://bytecodealliance.org/articles/simplifying-components-for-dotnet-developers-with-componentize-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET ツールから WebAssembly コンポーネントを出力できる componentize-dotnet がプレビューリリースされた。&lt;/p&gt;
&lt;p&gt;componentize-dotnet は NativeAOT の LLVM コンパイラーやバインディングの生成、WASI SDK といったものをパッケージにしたもので、NuGet パッケージを参照するだけで dotnet build によって WebAssembly コンポーネントを生成できるようになる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.publickey1.jp/blog/24/netwebassemblywasi_preview_2componentize-dotnetbytecode_alliance.html"&gt;.NETでWebAssemblyの最新仕様「WASI Preview 2」対応コンポーネントを作れる「componentize-dotnet」、Bytecode Allianceがオープンソースでリリース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="how-to-run.net-apps-natively-on-arm64-devices-visual-studio-blog"&gt;How to run .NET apps natively on Arm64 devices - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/how-to-run-net-apps-natively-on-arm64-devices/"&gt;https://devblogs.microsoft.com/visualstudio/how-to-run-net-apps-natively-on-arm64-devices/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 と Windows 11 24H2 で Arm 環境において Any CPU が指定された .NET アプリケーションを Arm ネイティブに実行する方法について。&lt;/p&gt;
&lt;h3 id="cexpression.compile-qiita"&gt;【C#】Expression.Compile()を安易に使ってはいけない理由と対策 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/simoyama2323/items/8741f455292c03ed1fd9"&gt;https://qiita.com/simoyama2323/items/8741f455292c03ed1fd9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Expression.Compile を使用する場合にかかるコストについて。&lt;/p&gt;
&lt;p&gt;記事では Expression.Compile を使用しなくてよい場合の代替案などについても紹介している。&lt;/p&gt;
&lt;h3 id="understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes-visual-studio-blog"&gt;Understanding the behavior of the XAML Designer with abstract base classes - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes/"&gt;https://devblogs.microsoft.com/visualstudio/understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 での XAML デザイナーにおける abstract クラスを使用したコントロールの挙動について。&lt;/p&gt;
&lt;p&gt;記事では abstract クラスを使用した場合の問題点とその解決策について解説している。&lt;/p&gt;
&lt;h3 id="tunit"&gt;TUnit を使おう!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/masakura/articles/e0238d7b87dedd"&gt;https://zenn.dev/masakura/articles/e0238d7b87dedd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;xUnit や NUnit のようなテストフレームワーク TUnit の紹介。&lt;/p&gt;
&lt;h3 id="net-9linqcountby"&gt;.NET 9の新しいLINQのCountBy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/83a3fdf6515435"&gt;https://zenn.dev/tomokusaba/articles/83a3fdf6515435&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 の LINQ で導入される CountBy についての紹介。&lt;/p&gt;
&lt;h3 id="c-11.0-new-features-ref-fields-and-the-scoped-keyword-endjin"&gt;C# 11.0 new features: ref fields and the scoped keyword | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2024/09/dotnet-csharp-11-ref-fields-scoped-keyword"&gt;https://endjin.com/blog/2024/09/dotnet-csharp-11-ref-fields-scoped-keyword&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 11 の ref キーワードと scoped キーワードについての解説。&lt;/p&gt;
&lt;h3 id="building-a-graphql-client-in.net-with-jetbrains-rider-and-strawberryshake-the.net-tools-blog"&gt;Building a GraphQL Client in .NET with JetBrains Rider and StrawberryShake | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/09/17/building-a-graphql-client-in-net-with-jetbrains-rider-and-strawberryshake/"&gt;https://blog.jetbrains.com/dotnet/2024/09/17/building-a-graphql-client-in-net-with-jetbrains-rider-and-strawberryshake/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider と StrawberryShake を使用して GraphQL クライアントを実装することについて。&lt;/p&gt;
&lt;p&gt;記事では Rider の GraphQL 拡張プラグインを使用して GraphQL の開発を効率的に進める方法について触れている。&lt;/p&gt;
&lt;h3 id="linqgroupjoin"&gt;【LINQ】GroupJoinを理解する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimiyu/articles/5a01676d6165f7"&gt;https://zenn.dev/shimiyu/articles/5a01676d6165f7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LINQ の GroupJoin メソッドに関する挙動の解説。SelectMany と組み合わせた結合に関しても触れている。&lt;/p&gt;
&lt;h3 id="implementing-floyd-warshall-algorithm-for-solving-all-pairs-shortest-paths-problem-in-c"&gt;Implementing Floyd-Warshall algorithm for solving all-pairs shortest paths problem in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://olegkarasik.wordpress.com/2021/04/25/implementing-floyd-warshall-algorithm-for-solving-all-pairs-shortest-paths-problem-in-c/"&gt;https://olegkarasik.wordpress.com/2021/04/25/implementing-floyd-warshall-algorithm-for-solving-all-pairs-shortest-paths-problem-in-c/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# で最短パスを探索する Floyd-Warshall アルゴリズムを実装し、その実装を最適化する手法を解説している。&lt;/p&gt;
&lt;h3 id="intersperse-values-for-enumerable-collections"&gt;Intersperse Values for Enumerable Collections&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/intersperse-values-for-enumerable-collections"&gt;https://khalidabuhakmeh.com/intersperse-values-for-enumerable-collections&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コレクションの要素間に要素を追加する Interspase メソッドを実装する方法について。&lt;/p&gt;
&lt;h3 id="tracing-allocations-with-eventpipe-part-3-tracing-without-dotnet-trace"&gt;Tracing allocations with EventPipe part 3 — Tracing without dotnet-trace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-3-tracing-without-dotnet-trace-7244bdb86e03"&gt;https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-3-tracing-without-dotnet-trace-7244bdb86e03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EventPipe を使用してアロケーションをトレースする方法についてのパート3。&lt;/p&gt;
&lt;p&gt;この記事では DiagnosticsClient を使用して実行中のセッションからトレースする方法とその際の問題と dotnet-trace を参考にした解決手段を解説している。&lt;/p&gt;
&lt;h3 id="c.net-8.0native-aot-qiita"&gt;C# .NET 8.0+Native AOTでコンソールアプリを作成する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nekotadon/items/6031ec1d90f1834e2324"&gt;https://qiita.com/nekotadon/items/6031ec1d90f1834e2324&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 でコンソールアプリケーションを Native AOT でビルドするまでの手順の解説。&lt;/p&gt;
&lt;h3 id="semantic-kernel-ai-2"&gt;Semantic Kernel のマルチエージェント AI 機能入門してみよう その 2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-agents-003"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-agents-003&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel の Agent 関連のクラスとそのコードについての詳細を読んでいく話。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-agents-004"&gt;Semantic Kernel のマルチエージェント AI 機能入門してみよう その 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="crsapem.net-7-qiita"&gt;C#でRSA鍵ペアをPEM形式で保存・読み込み、メッセージの暗号化と復号化【.NET 7以降対応】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SoundOrion/items/6d4da8b6cce6b52e318d"&gt;https://qiita.com/SoundOrion/items/6d4da8b6cce6b52e318d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 以降で対応した PEM 形式の RSA 鍵を扱いメッセージを暗号化と復号を行う方法について。&lt;/p&gt;
&lt;h3 id="unexpected-usage-of-eventsource-or-how-to-test-statistical-results-in-clr-pull-request"&gt;Unexpected usage of EventSource or how to test statistical results in CLR pull request&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/unexpected-usage-of-eventsource-or-how-to-test-statistical-results-in-clr-pull-request-8431ffdc460a"&gt;https://chnasarre.medium.com/unexpected-usage-of-eventsource-or-how-to-test-statistical-results-in-clr-pull-request-8431ffdc460a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CLR の Pull request で統計結果のテストを取るために EventSource を利用した話。&lt;/p&gt;
&lt;h3 id="winrt-com-interface-win32-com-interface-qiita"&gt;WinRT COM Interface から Win32 COM Interface へキャストする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kumakamikoubou/items/245991bb7b247da1eea8"&gt;https://qiita.com/kumakamikoubou/items/245991bb7b247da1eea8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IMemoryBufferReference を IMemoryBufferByteAccess へキャストするような WinRT のインターフェースを Win32 COM インターフェースにキャストする必要がある場合の対応方法について。&lt;/p&gt;
&lt;h3 id="alternate-lookup-for-dictionary-and-hashset-in.net-9-ndepend-blog"&gt;Alternate Lookup for Dictionary and HashSet in .NET 9 - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/alternate-lookup-for-dictionary-and-hashset-in-net-9/"&gt;https://blog.ndepend.com/alternate-lookup-for-dictionary-and-hashset-in-net-9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 の Dictionary や HashSet に追加される GetAlternateLookup API について、パフォーマンスと独自の実装方法などを解説している。&lt;/p&gt;
&lt;h3 id="preventing-breaking-changes-in-public-apis-with-publicapigenerator"&gt;Preventing breaking changes in public APIs with PublicApiGenerator&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/preventing-breaking-changes-in-public-apis-with-publicapigenerator/"&gt;https://andrewlock.net/preventing-breaking-changes-in-public-apis-with-publicapigenerator/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;クラスライブラリーの公開 API の破壊的変更を PublicApiGenerator で防ぐ方法について。&lt;/p&gt;
&lt;p&gt;記事では PublicApiAnalyzer を使用した場合の不満と別な手段としての PublicApiGenerator とユニットテストを使用した検証方法を紹介している。&lt;/p&gt;
&lt;h3 id="webassembly-and-containers-orchestrating-distributed-architectures-with.net-aspire"&gt;WebAssembly and Containers: Orchestrating Distributed Architectures with .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/articles/webassembly-containers-dotnet-aspire/"&gt;https://www.infoq.com/articles/webassembly-containers-dotnet-aspire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire で WebAssembly によるサーバーレスアプリケーションを実行する Spin をホストできる Fermyon.Aspire.Spin の紹介。&lt;/p&gt;
&lt;h3 id="qiita"&gt;値型レコードを逆コンパイルしてみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/0ea0eeaa82e6921ede87"&gt;https://qiita.com/abetakahiro123/items/0ea0eeaa82e6921ede87&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;値型レコードを逆コンパイルしてどのような実装となっているのかについての解説。&lt;/p&gt;
&lt;h3 id="why-is-f-code-so-robust-and-reliable.net-blog"&gt;Why is F# code so robust and reliable? - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/why-is-fsharp-code-so-robust-and-reliable/"&gt;https://devblogs.microsoft.com/dotnet/why-is-fsharp-code-so-robust-and-reliable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# によるコードの堅牢さと信頼性についての紹介記事。(.NET ブログのゲスト寄稿記事)&lt;/p&gt;
&lt;h3 id="break-for-async-user-unhandled-exceptions-in-the-visual-studio-debugger-visual-studio-blog"&gt;Break for Async User-Unhandled exceptions in the Visual Studio Debugger - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/break-for-async-user-unhandled-exceptions-in-the-visual-studio-debugger/"&gt;https://devblogs.microsoft.com/visualstudio/break-for-async-user-unhandled-exceptions-in-the-visual-studio-debugger/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 以降と Visual Studio を組み合わせた場合に非同期処理の中で発生したユーザーの未処理例外をブレークできるようになることについて。&lt;/p&gt;
&lt;h3 id="asp.net-core1password"&gt;ASP.NET Coreを用いた開発で使う環境変数を1Passwordで管理するようにした&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/i999m/articles/4e613a5cc95e6b"&gt;https://zenn.dev/i999m/articles/4e613a5cc95e6b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションの開発時に環境変数を 1Password で管理し、取得、実行する方法について。&lt;/p&gt;
&lt;h3 id="winui-3window-qiita"&gt;WinUI 3での実用的なWindowサイズの設定 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/emoacht/items/e3935ebc6f713f95ed50"&gt;https://qiita.com/emoacht/items/e3935ebc6f713f95ed50&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 でウィンドウサイズをコードから設定する方法について。記事では AppWindow.ResizeClient を使用した具体的な実装方法について触れている。&lt;/p&gt;
&lt;h3 id="learn-to-build-your-first-blazor-hybrid-app.net-blog"&gt;Learn to Build Your First Blazor Hybrid App! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-blazor-hybrid-workshop/"&gt;https://devblogs.microsoft.com/dotnet/introducing-blazor-hybrid-workshop/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Hybrid アプリケーションを作成するワークショップの紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet-presentations/blazor-hybrid-workshop"&gt;dotnet-presentations/blazor-hybrid-workshop: A full day workshop (.NET MAUI Blazor Hybrid Workshop in a Box) on how to build Blazor Hybrid apps with .NET MAUI for iOS, Android, macOS, and Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="search-scoping-helps-you-find-what-youre-looking-for-visual-studio-blog"&gt;Search scoping helps you find what you’re looking for - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/search-scoping-helps-you-find-what-youre-looking-for/"&gt;https://devblogs.microsoft.com/visualstudio/search-scoping-helps-you-find-what-youre-looking-for/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の検索でスコープ(ソリューション、プロジェクト、ドキュメント)を指定する方法について。&lt;/p&gt;
&lt;h3 id="visualstudio.extensibility-17.11-settings-and-more-remote-ui-support-visual-studio-blog"&gt;VisualStudio.Extensibility 17.11: Settings and more Remote UI support - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-11-settings-and-more-remote-ui-support/"&gt;https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-11-settings-and-more-remote-ui-support/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の新しい拡張モデル VisualStudio.Extensibility 17.11 リリースについて。&lt;/p&gt;
&lt;p&gt;17.11 では設定のサポートやリモート UI の拡張、ツールバーとツールウィンドウなどのアップデートが行われている。&lt;/p&gt;
&lt;p&gt;記事ではプロジェクトクエリー API ドキュメントの更新や試験的 API と破壊的変更についての決定についても触れている。&lt;/p&gt;
&lt;h3 id="onnx-runtime-qnn-execution-provider-snapdragon-x-elite-npu"&gt;ONNX Runtime の QNN Execution Provider を使って Snapdragon X Elite の NPU で画像分類を行ってみた - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20240911/1726041638"&gt;https://blog.shibayan.jp/entry/20240911/1726041638&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ONNX Runtime で Qualcomm AI Engine Direct SDK を使用する QNN Execution Provider を使用して、Snapdragon X Elite の NPU で ResNet50 による画像分類を実行する方法について。&lt;/p&gt;
&lt;h3 id="implementing-local-rag-using-phi-3-onnx-runtime-and-sidecar-pattern-on-linux-app-service"&gt;Implementing Local RAG using Phi-3 ONNX Runtime and Sidecar Pattern on Linux App Service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://azure.github.io/AppService/2024/09/03/Phi3-vector.html"&gt;https://azure.github.io/AppService/2024/09/03/Phi3-vector.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Linux App Service で ONNX Runtime と Phi-3 モデルをサイドカーでバックエンドとして動かしてローカル LAG を実装する方法について。&lt;/p&gt;
&lt;h3 id="c.net"&gt;C#/.NETのすすめ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/3b1150edaafb8c"&gt;https://zenn.dev/tomokusaba/articles/3b1150edaafb8c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;現状の C# と .NET についてを簡単に紹介。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント、動画など&lt;/h2&gt;
&lt;h3 id="semantic-kernel-20240926-1200"&gt;昼休みに Semantic Kernel をさわってみよう配信 (2024/09/26 12:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msdevjp.connpass.com/event/330257/"&gt;https://msdevjp.connpass.com/event/330257/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="prozoliccstoml-toml-parserserializer-for.net"&gt;prozolic/CsToml: TOML Parser/Serializer for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/prozolic/CsToml"&gt;https://github.com/prozolic/CsToml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;パフォーマンスを重視した TOML パーサー/シリアライザーライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/prozolic/items/1e4340fb84efb45ee111"&gt;[C#] TOMLパーサー/シリアライザーライブラリ CsToml で使用している機能 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>