<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>WeekRef.NET</title>
		<link>https://weekref.net/</link>
		<description>.NET 関連の情報をほぼ週刊配信</description>
		<copyright>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</copyright>
		<managingEditor>Mayuki Sawatari</managingEditor>
		<pubDate>Fri, 04 Oct 2024 08:02:28 GMT</pubDate>
		<lastBuildDate>Fri, 04 Oct 2024 08:02:28 GMT</lastBuildDate>
		<item>
			<title>2024-10-04: Official OpenAI library for .NET, Windows App SDK 1.6.1</title>
			<link>https://weekref.net/2024/10/04/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/10/04/updates</guid>
			<pubDate>Fri, 04 Oct 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing-the-stable-release-of-the-official-openai-library-for.net.net-blog"&gt;Announcing the stable release of the official OpenAI library for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-the-stable-release-of-the-official-open-ai-library-for-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/announcing-the-stable-release-of-the-official-open-ai-library-for-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 向けの公式 OpenAI ライブラリーがリリースされた。&lt;/p&gt;
&lt;p&gt;このライブラリーは OpenAI および Azure OpenAI サービスをサポートするクライアントライブラリーとなっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完全な OpenAI REST API サポート: v2 やチャット補完など柔軟なインタラクションを実現できる&lt;/li&gt;
&lt;li&gt;最新のモデルのサポート: GPT-4o, GPT-4o mini, o1-preview, o1-mini などのモデルのサポート&lt;/li&gt;
&lt;li&gt;拡張性&lt;/li&gt;
&lt;li&gt;同期と非同期 API&lt;/li&gt;
&lt;li&gt;ストリーミング補完: IAsyncEnumerable によるストリーミング補完&lt;/li&gt;
&lt;li&gt;Quality-of-life の向上&lt;/li&gt;
&lt;li&gt;.NET Standard 2.0 の互換性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-windows-app-sdk-1.6.1-1.6.240923002-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.6.1 (1.6.240923002) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.6.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかのクラッシュやバグといった不具合の修正が行われている。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-recent-performance-enhancements-visual-studio-blog"&gt;Visual Studio 2022 - Recent performance enhancements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-recent-performance-enhancements/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-recent-performance-enhancements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 でのパフォーマンス改善についての紹介記事。&lt;/p&gt;
&lt;p&gt;C# に関連する部分でのパフォーマンス改善としてコードのインデックス作成に関する挙動の改善、Source Generator の .NET 8 以降と実行タイミングの変更とその設定がある。&lt;/p&gt;
&lt;p&gt;その他 C++ での条件付きブレークポイントのパフォーマンス改善や C++ シンボル検索の最適化といった改善があるとのこと。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="libgit2sharpgit"&gt;LibGit2Sharpを使用してGitリポジトリを操作する方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2024-10-04-use-libgit2sharp-git-operations"&gt;https://zenn.dev/nuits_jp/articles/2024-10-04-use-libgit2sharp-git-operations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LibGit2Sharp を使用した Git リポジトリの操作についての簡単な説明。&lt;/p&gt;
&lt;h3 id="simdsmartvectordotnet1-ieee754"&gt;SIMD並列化ライブラリSmartVectorDotNet開発の知見まとめ(1) IEEE754浮動小数型の低レベル操作&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/aka_nse/articles/34740bb2088576"&gt;https://zenn.dev/aka_nse/articles/34740bb2088576&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SIMD を使用した並列化ライブラリで各種演算を実装する際の知見についてのまとめ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/aka_nse/articles/54ae08eb9a9fd6"&gt;SIMD並列化ライブラリSmartVectorDotNet開発の知見まとめ(2) SIMD演算の基礎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/aka_nse/articles/f94b7a8dfc59a3"&gt;SIMD並列化ライブラリSmartVectorDotNet開発の知見まとめ(3) 初等関数の実装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="discover-hidden-insights-with-profilers-external-code-decompilation-visual-studio-blog"&gt;Discover Hidden Insights with Profiler's External Code Decompilation - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/discover-hidden-insights-with-profilers-external-code-decompilation/"&gt;https://devblogs.microsoft.com/visualstudio/discover-hidden-insights-with-profilers-external-code-decompilation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio でプロファイリングした際、ソースコードを持たない部分を解析するために自動で逆コンパイルする機能についての紹介。&lt;/p&gt;
&lt;h3 id="cml.net-qiita"&gt;【C#】ML.NETでレビューに含まれる感情を分析してみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/KM_20005/items/2019cd99ba91cc8aeaeb"&gt;https://qiita.com/KM_20005/items/2019cd99ba91cc8aeaeb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET を使用して感情を分析するモデルと実装する手順の紹介。&lt;/p&gt;
&lt;h3 id="major-updates-to-netescapades.aspnetcore.securityheaders"&gt;Major updates to NetEscapades.​AspNetCore.​SecurityHeaders&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/major-updates-to-netescapades-aspnetcore-security-headers/"&gt;https://andrewlock.net/major-updates-to-netescapades-aspnetcore-security-headers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;セキュリティー関連のヘッダーを出力するミドルウェア NetEscapades.​AspNetCore.​SecurityHeaders のアップデートについて。&lt;/p&gt;
&lt;p&gt;記事ではアップデートに際して、削除や変更のあったヘッダーやカスタマイズについてなどを詳しく解説している。&lt;/p&gt;
&lt;h3 id="implement-a-geo-distance-search-using.net-aspire-elasticsearch-and-asp.net-core"&gt;Implement a Geo-distance search using .NET Aspire, Elasticsearch and ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2024/09/23/implement-a-geo-distance-search-using-net-aspire-elasticsearch-and-asp-net-core/"&gt;https://damienbod.com/2024/09/23/implement-a-geo-distance-search-using-net-aspire-elasticsearch-and-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションで Elasticsearch の Geo-distance 検索を呼び出す方法について。&lt;/p&gt;
&lt;h3 id="c-onnxruntimeresnet-qiita"&gt;(C#) OnnxRuntimeを通してResNetによる画像分類を試す - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Kujiro/items/7b2e75494e05a2c803dd"&gt;https://qiita.com/Kujiro/items/7b2e75494e05a2c803dd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OnnxRuntime と ResNet を使用した画像分類を実装する方法について。&lt;/p&gt;
&lt;p&gt;記事では画像を読み込んで推論する手順や GPU を使用する場合について触れている。&lt;/p&gt;
&lt;h3 id="csbindgen-qiita"&gt;csbindgenを使ってみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/aiueo-1234/items/df61c6a4ce2695904e5a"&gt;https://qiita.com/aiueo-1234/items/df61c6a4ce2695904e5a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C 言語や Rust のバインディングを生成する csbindgen の使用方法についての解説。&lt;/p&gt;
&lt;h3 id="visual-studio.net"&gt;Visual Studio &amp;amp; .NET - ソースコードを持っていないアセンブリ内にブレークポイントを設置してデバッグしたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/j_sakamoto/articles/f333eecd0949dc"&gt;https://zenn.dev/j_sakamoto/articles/f333eecd0949dc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio でソースコードのない外部アセンブリに対してデバッグ実行時に逆コンパイルしてステップインする方法について。&lt;/p&gt;
&lt;h3 id="asp.net-core-9-and-iasyncenumerable-async-streaming-json-and-ndjson-from-blazor-webassembly"&gt;ASP.NET Core 9 and IAsyncEnumerable - Async Streaming JSON and NDJSON From Blazor WebAssembly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.tpeczek.com/2024/09/aspnet-core-9-and-iasyncenumerable.html"&gt;https://www.tpeczek.com/2024/09/aspnet-core-9-and-iasyncenumerable.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 の Blazor WebAssembly で対応されたストリーミングアップロードを使用して、 JSON および NDJSON のストリーミングアップロードを実装する方法について。&lt;/p&gt;
&lt;h3 id="effortless-instrumentation-profiling-with-persistent-target-selection-visual-studio-blog"&gt;Effortless Instrumentation profiling with Persistent Target Selection - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/effortless-instrumentation-profiling-with-persistent-target-selection/"&gt;https://devblogs.microsoft.com/visualstudio/effortless-instrumentation-profiling-with-persistent-target-selection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 でプロファイリングのターゲット選択を保持する改善についての紹介。&lt;/p&gt;
&lt;p&gt;繰り返しプロファイリングをセッションを実行する場合にその都度選択する必要がなくなる。&lt;/p&gt;
&lt;h3 id="an-efficient-dictionary-for-ipaddress-tracking-using.net-9-with-alternatelookup-and-ialternateequalitycomparer-steve-gordon-code-with-steve"&gt;An Efficient Dictionary for IPAddress Tracking using .NET 9 with AlternateLookup and IAlternateEqualityComparer - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/efficient-dictionary-for-ipaddress-tracking-using-net-9-with-alternatelookup-and-ialternateequalitycomparer"&gt;https://www.stevejgordon.co.uk/efficient-dictionary-for-ipaddress-tracking-using-net-9-with-alternatelookup-and-ialternateequalitycomparer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IP アドレスをキーにした Dictionary で .NET 9 の Dictionary の AlternateLookup を使用して  ReadOnlySpan で検索できるようにする方法について。&lt;/p&gt;
&lt;h3 id="disabling-recording-of-an-activity-span-in.net-opentelemetry-instrumentation-steve-gordon-code-with-steve"&gt;Disabling Recording of an Activity (span) in .NET OpenTelemetry Instrumentation - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/disabling-recording-of-an-activity-span-in-dotnet-opentelemetry-instrumentation"&gt;https://www.stevejgordon.co.uk/disabling-recording-of-an-activity-span-in-dotnet-opentelemetry-instrumentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry での計測時に、Activity (Span) による記録を無効にする方法について。&lt;/p&gt;
&lt;p&gt;特定の無効なリクエストはトレースに含めたくないといったケースでの対応方法。&lt;/p&gt;
&lt;h3 id="unity-tools-case-study-the-qodana-blog"&gt;Unity Tools Case Study The Qodana Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/ja/qodana/2024/08/unity-tools-qodana/"&gt;https://blog.jetbrains.com/ja/qodana/2024/08/unity-tools-qodana/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Qodana を使用して CI/CD で Unity アプリケーションのコードの品質をチェックする方法について。&lt;/p&gt;
&lt;h3 id="spectre.console-helpers"&gt;Spectre.Console helpers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/spectreconsole-helpers-3ml3"&gt;https://dev.to/karenpayneoregon/spectreconsole-helpers-3ml3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spectre.Console の使い方デモを兼ねたヘルパーコードの実装と紹介。&lt;/p&gt;
&lt;h3 id="wpf-qiita"&gt;[WPF] 次の画面再描画時に処理を実行する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/habakino094/items/285ed1f899a6e3dd6ddc"&gt;https://qiita.com/habakino094/items/285ed1f899a6e3dd6ddc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF で再描画時に呼び出される CompositionTarget.Rendering について。&lt;/p&gt;
&lt;h3 id="receiving-push-notifications-from-firebase-in-android-maui"&gt;Receiving Push Notifications from Firebase in Android MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/laura_puckoriute/receiving-push-notifications-from-firebase-in-android-maui-1ho"&gt;https://dev.to/laura_puckoriute/receiving-push-notifications-from-firebase-in-android-maui-1ho&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI の Android 向けアプリケーション実装で、Firebase を使用した通知をハンドリングする方法について。&lt;/p&gt;
&lt;h3 id="oss-keycloak.net-aspireidaas"&gt;OSSの認証サービス Keycloak を.NETから使ってみた-Aspireとコンテナで使える簡単IDaaS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/tomohisa/ossnoren-zheng-sabisu-keycloak-wo-dot-netkarashi-tutemita-aspiretokontenadeshi-erujian-dan-idaas"&gt;https://speakerdeck.com/tomohisa/ossnoren-zheng-sabisu-keycloak-wo-dot-netkarashi-tutemita-aspiretokontenadeshi-erujian-dan-idaas&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="ffe7504c24ba459fa93de27eaa38cf2c" data-ratio="1.7772511848341233" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/26611f2f18990d"&gt;『OSSの認証サービス Keycloak を.NETから使ってみた』という登壇をしました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Visual Studio で return ステートメントで返す値をインラインで表示/確認できるようになる、という話。&lt;/p&gt;
&lt;!-- https://x.com/mkristensen/status/1839677882807017975?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The Visual Studio debugger now displays inline values for return statements, responding to one of the most requested features from the developer community.&lt;br&gt;&lt;br&gt;Coming soon... &lt;a href="https://t.co/99W5Ce3U3C"&gt;pic.twitter.com/99W5Ce3U3C&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1839677882807017975?ref_src=twsrc%5Etfw"&gt;September 27, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;最新の Rider のプレビューでも .slnx 形式のサポートが追加されたという話。&lt;/p&gt;
&lt;!-- https://x.com/maartenballiauw/status/1840763793963471301?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The new &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; `.slnx` solution file format is available in the latest &lt;a href="https://twitter.com/JetBrainsRider?ref_src=twsrc%5Etfw"&gt;&amp;#64;JetBrainsRider&lt;/a&gt; preview 👏 &lt;a href="https://t.co/N9ZVzyrTm6"&gt;pic.twitter.com/N9ZVzyrTm6&lt;/a&gt;&lt;/p&gt;&amp;mdash; Maarten Balliauw &amp;#64;maartenballiauw&amp;#64;mastodon.online (&amp;#64;maartenballiauw) &lt;a href="https://twitter.com/maartenballiauw/status/1840763793963471301?ref_src=twsrc%5Etfw"&gt;September 30, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;C# 13 のコレクション式の要素のより良い変換が 17.13 (Preview 3) にマージされた。&lt;/p&gt;
&lt;!-- https://x.com/jcouv/status/1841596573807214724?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We merged a C# 13 feature into VS 17.12 (preview 3): Better conversion from collection expression element.&lt;br&gt;&lt;br&gt;It improves overload resolution to account for the element type of a collection expressions.&lt;a href="https://t.co/NQLBJutDjA"&gt;https://t.co/NQLBJutDjA&lt;/a&gt;&lt;/p&gt;&amp;mdash; Julien Couvreur (&amp;#64;jcouv) &lt;a href="https://twitter.com/jcouv/status/1841596573807214724?ref_src=twsrc%5Etfw"&gt;October 2, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="add-initial-design-document-for-parsing-net10-by-terrajobst-pull-request-322-dotnetdesigns"&gt;Add initial design document for parsing &lt;code&gt;net10&lt;/code&gt; by terrajobst · Pull Request #322 · dotnet/designs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/designs/pull/322"&gt;https://github.com/dotnet/designs/pull/322&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 10 に向け TargetFramework を &lt;code&gt;net10&lt;/code&gt; どう扱うかについて。&lt;code&gt;net10&lt;/code&gt; そのままでは .NET Framework 1.0 と区別がつかない問題がある。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-09-30: Certificate Issues on macOS 15, Uno Platform 5.4, .NET Diagnostics v8.0.547301</title>
			<link>https://weekref.net/2024/09/30/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/09/30/updates</guid>
			<pubDate>Mon, 30 Sep 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="certificate-issues-on-macos-15-sequoia-issue-324-dotnetannouncements"&gt;Certificate Issues on macOS 15 (&amp;quot;Sequoia&amp;quot;) · Issue #324 · dotnet/announcements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/announcements/issues/324"&gt;https://github.com/dotnet/announcements/issues/324&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;macOS 15 Sequoia で証明書の操作でエラーが発生する問題について。&lt;/p&gt;
&lt;p&gt;macOS 15 Sequoia ではインメモリーキーを使用した CopyWithPrivateKey の呼び出しが失敗するようになったため、証明書を作成/読み込み時に例外が発生する場合がある。この問題は &lt;code&gt;CertificateRequest.CreateSelfSigned&lt;/code&gt; や &lt;code&gt;X509Certificate2.CreateFromPem&lt;/code&gt; といった API やそれらを使用している &lt;code&gt;dotnet dev-certs https&lt;/code&gt; コマンドなどが影響を受ける。&lt;/p&gt;
&lt;p&gt;10月にリリースされる .NET 6.0.34, 8.0.10, 9.0.0-rc2 で修正される予定となっている。&lt;/p&gt;
&lt;h3 id="uno-platform-5.4-perf-improvements-and-290-issues-closed"&gt;Uno Platform 5.4: Perf Improvements and 290+ Issues closed&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/5-4/"&gt;https://platform.uno/blog/5-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 5.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではパフォーマンスの改善や IRootObjectProvider サポート、細かい改善が含まれている。&lt;/p&gt;
&lt;p&gt;また記事では Scott Plot との統合についても触れている。&lt;/p&gt;
&lt;h3 id="release-diagnostics-release-v8.0.547301-dotnetdiagnostics"&gt;Release Diagnostics Release - v8.0.547301 · dotnet/diagnostics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/diagnostics/releases/tag/v8.0.547301"&gt;https://github.com/dotnet/diagnostics/releases/tag/v8.0.547301&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 診断ツール v8.0.547301 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは dotnet-symbol の &lt;code&gt;--internal-server&lt;/code&gt; フラグのサポート、dotnet-dump と SOS での &lt;code&gt;!setsymbolserver&lt;/code&gt; コマンドの追加やいくつかの不具合の修正と ARM64EC のサポート、dotnet-counters の EventCounter ベースのカウンターのみを表示する接頭辞のサポートやいくつかの不具合修正が含まれている。&lt;/p&gt;
&lt;h3 id="release-release-v2.66.0-grpcgrpc-dotnet"&gt;Release Release v2.66.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.66.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.66.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.66.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Wine 互換レイヤー下で発生する問題の修正やチャンネルの HTTP バージョンの設定の追加などが含まれている。&lt;/p&gt;
&lt;h3 id="resharper-2024.3-starts-its-early-access-program-the.net-tools-blog"&gt;ReSharper 2024.3 Starts its Early Access Program! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/09/20/resharper-2024-3-eap/"&gt;https://blog.jetbrains.com/dotnet/2024/09/20/resharper-2024-3-eap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.3 EAP がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .editorconfig でのコードクリーンアップの設定、命名スタイルの追加、C# 書式設定の追加、C++ 関連の改善などが含まれている。&lt;/p&gt;
&lt;h3 id="rider-2024.3-early-access-program-is-here-the.net-tools-blog"&gt;Rider 2024.3 Early Access Program Is Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/09/20/rider-2024-3-eap/"&gt;https://blog.jetbrains.com/dotnet/2024/09/20/rider-2024-3-eap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.3 EAP がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Live++ による C++ のホットリロードのサポート、.editorconfig でのコードクリーンアップの設定、命名スタイルの追加、C# 書式設定の追加、Unreal Engine サポートの向上などが含まれている。&lt;/p&gt;
&lt;h3 id="coreclr-and.net-modernization-unite-2024-unity-engine-unity-discussions"&gt;CoreCLR and .NET Modernization - Unite 2024 - Unity Engine - Unity Discussions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://discussions.unity.com/t/coreclr-and-net-modernization-unite-2024/1519272"&gt;https://discussions.unity.com/t/coreclr-and-net-modernization-unite-2024/1519272&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unity のランタイムの CoreCLR 化と .NET のモダナイズの進捗について。&lt;/p&gt;
&lt;p&gt;記事では Unity 6 には含まれないが .NET 8 以降の CoreCLR への移行作業が進んでいること、まだ最適化などの作業が残っていること、.NET 化によるメリットについて、IL2CPP や Burst 統合、MSBuild との統合、コードのリロードについて触れている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-9"&gt;.NET 9 に対するパフォーマンス改善の貢献 - 小さな改善が大きな価値を生む&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.sigmact.com/updated/dotnet/net9-perf-pr/"&gt;https://www.sigmact.com/updated/dotnet/net9-perf-pr/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET のベースクラスライブラリーにパフォーマンス改善の Pull Request で貢献するに至った流れと実装について。&lt;/p&gt;
&lt;h3 id="creating-a-react-todo-app-in-visual-studio-2022-visual-studio-blog"&gt;Creating a React TODO app in Visual Studio 2022 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/creating-a-react-todo-app-in-visual-studio-2022/"&gt;https://devblogs.microsoft.com/visualstudio/creating-a-react-todo-app-in-visual-studio-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 で React を使用した JavaScript の TODO アプリを実装する手順の紹介。&lt;/p&gt;
&lt;h3 id="accelerating-financial-calculations-with-avx-512-in-c.net-8"&gt;Accelerating Financial Calculations with AVX-512 in C# .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;anderson.buenogod/accelerating-financial-calculations-with-avx-512-in-c-net-8-5c542fd59958"&gt;https://medium.com/&amp;#64;anderson.buenogod/accelerating-financial-calculations-with-avx-512-in-c-net-8-5c542fd59958&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で AVX-512 を使用して財務計算を高速化する例について。&lt;/p&gt;
&lt;h3 id="azurewindows-server.net-core"&gt;【Azure】Windows Server の .NET Core はデフォルトで自動更新しない&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ohori97/articles/ad241913e4af8a"&gt;https://zenn.dev/ohori97/articles/ad241913e4af8a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows Server にインストールされた .NET の Microsoft Update による自動アップデートを有効化する方法について。&lt;/p&gt;
&lt;h3 id="wpfpanel-qiita"&gt;WPFのタブオーダーを、Panel単位で並べ替える方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/783b571f84ad54db9054"&gt;https://qiita.com/spc_ksudoh/items/783b571f84ad54db9054&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF でタブオーダーを Panel ごとに保持することでタブによる移動の制御をする方法について。&lt;/p&gt;
&lt;h3 id="organize-your-breakpoints-like-a-pro-visual-studio-blog"&gt;Organize Your Breakpoints like a pro - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/organize-your-breakpoints-like-a-pro/"&gt;https://devblogs.microsoft.com/visualstudio/organize-your-breakpoints-like-a-pro/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 のブレークポイントをグルーピングして管理する機能の紹介。&lt;/p&gt;
&lt;h3 id="net-mapping-library-in-2024"&gt;.NET: mapping library in 2024&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;rasslabone/net-mapping-library-in-2024-cbab4312b5ae"&gt;https://medium.com/&amp;#64;rasslabone/net-mapping-library-in-2024-cbab4312b5ae&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オブジェクトマッパーの Mapperly の使い方を AutoMapper と比較しつつ紹介。&lt;/p&gt;
&lt;h3 id="fixing-the-https-developer-certificate-error-in.net-on-macos-sequoia"&gt;Fixing the HTTPS Developer Certificate Error in .NET on macOS Sequoia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/michaelcharles/fixing-the-https-developer-certificate-error-in-net-on-macos-sequoia-516h"&gt;https://dev.to/michaelcharles/fixing-the-https-developer-certificate-error-in-net-on-macos-sequoia-516h&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-9.0inlinearray-qiita"&gt;【.NET 9.0】InlineArray を使った値型リストを作ってみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/d3a724dba68cb16ca722"&gt;https://qiita.com/abetakahiro123/items/d3a724dba68cb16ca722&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;InlineArray を使用してスタック上で使用できるような List を実装してみるという例。&lt;/p&gt;
&lt;h3 id="c-harmony-qiita"&gt;[C#] Harmonyでメソッドの動作を変更する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/radian-jp/items/ae6ca1f17071727dda8f"&gt;https://qiita.com/radian-jp/items/ae6ca1f17071727dda8f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;動的に実行プログラムにパッチする Harmony を使用してメソッドを書き換える方法について。&lt;/p&gt;
&lt;h3 id="level-up-your-collaborations-with-the-pull-request-experience-in-visual-studio-visual-studio-blog"&gt;Level up your collaborations with the pull request experience in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/level-up-your-collaborations-with-the-pull-request-experience-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/level-up-your-collaborations-with-the-pull-request-experience-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 での Pull Request に関する機能改善についての紹介。&lt;/p&gt;
&lt;p&gt;記事では Pull Request の作成から、コメントをエディターで表示する方法といった点について紹介している。&lt;/p&gt;
&lt;h3 id="winui3"&gt;WinUI3でとりあえずなんか動かしたいときの下準備&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/spacekey/articles/winui3-project"&gt;https://zenn.dev/spacekey/articles/winui3-project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 アプリケーションを作る際の下準備としての構成の紹介。&lt;/p&gt;
&lt;h3 id="rust-panics-under-the-hood-and-implementing-them-in.net"&gt;Rust panics under the hood, and implementing them in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_2_1.html"&gt;https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_2_1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust の CIL バックエンドを実装する中で panic や unwind がどのように動き、.NET 上で実現するのかといったことについて。&lt;/p&gt;
&lt;h3 id="a-tyrant-guide-to-code-quality-gates-featuring-csharpier-husky.net-and-sonarcloud"&gt;A Tyrant Guide to Code Quality Gates featuring CSharpier, Husky.NET, and SonarCloud&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nikiforovall.github.io/dotnet/2024/09/14/quality-gates-dotnet.html"&gt;https://nikiforovall.github.io/dotnet/2024/09/14/quality-gates-dotnet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CSharpier や Husky.NET、SonarCloud といったツールを CI/CD パイプラインに組み込んだコード品質のゲートを組み上げる方法について。&lt;/p&gt;
&lt;h3 id="anatomy-of-the.net-dictionary"&gt;Anatomy of the .NET dictionary&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dunnhq.com/posts/2024/anatomy-of-the-dotnet-dictionary/"&gt;https://dunnhq.com/posts/2024/anatomy-of-the-dotnet-dictionary/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dictionary がどのように実装されていて、操作時にどのような挙動をするのかを詳細に解説している。&lt;/p&gt;
&lt;h3 id="fastenum-v2.0"&gt;最速奪還への道 - FastEnum v2.0 開発奮闘記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/xin9le/articles/2b71584e23edfd"&gt;https://zenn.dev/xin9le/articles/2b71584e23edfd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FastEnum という Enum に関する操作を高速に行うライブラリーを高速化するにあたって行ったテクニックの紹介。&lt;/p&gt;
&lt;h3 id="generichostiloggerdebug-qiita"&gt;GenericHostのILoggerでDebug以下のログを出す時に引っかかりがちなポイント - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/3632df966f9b10ec9276"&gt;https://qiita.com/spc_ksudoh/items/3632df966f9b10ec9276&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GenericHost のロガーで Trace など Debug 以下のログを出力する際、既定の設定などによって期待通り出力できないことがあることについて。&lt;/p&gt;
&lt;h3 id="building-a-high-performance-tcp-server-from-scratch"&gt;Building a High-Performance TCP Server from scratch&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;Alikhalili/building-a-high-performance-tcp-server-from-scratch-a8ede35c4cc2"&gt;https://medium.com/&amp;#64;Alikhalili/building-a-high-performance-tcp-server-from-scratch-a8ede35c4cc2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SocketAsyncEngine で高速な TCP サーバー (HTTP ハートビートサーバー) を実装することについて。&lt;/p&gt;
&lt;h3 id="net-8windows-qiita"&gt;.NET 8でのWindowsサービスの作り方 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/675b8fe5b04596763ede"&gt;https://qiita.com/spc_ksudoh/items/675b8fe5b04596763ede&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 を使用した Windows サービスを実装する手順について。&lt;/p&gt;
&lt;p&gt;記事では作成とインストール、ライフサイクルの対応といった点について解説している。&lt;/p&gt;
&lt;h3 id="improving-github-copilot-completions-in-visual-studio-for-c-developers.net-blog"&gt;Improving GitHub Copilot Completions in Visual Studio for C# Developers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/improving-github-copilot-completions-in-visual-studio-for-csharp-developers/"&gt;https://devblogs.microsoft.com/dotnet/improving-github-copilot-completions-in-visual-studio-for-csharp-developers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 の GitHub Copilot で C# のコード編集時の入力補完を取得するコンテキストに型やメソッドなどが含まれるようになり、より関連性の高い結果が提示されるようになったことについて。&lt;/p&gt;
&lt;h3 id="multi-project-launch-configuration-visual-studio-blog"&gt;Multi-Project Launch Configuration - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/multi-project-launch-configuration/"&gt;https://devblogs.microsoft.com/visualstudio/multi-project-launch-configuration/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 にプレビュー実装されたマルチプロジェクト起動構成 (Multi-Project Launch Profiles) についての紹介。&lt;/p&gt;
&lt;p&gt;マルチプロジェクト起動構成を使用することで複数のプロジェクトを一度に起動できる。&lt;/p&gt;
&lt;p&gt;記事では設定方法や、起動する際のターゲットの設定、起動プロファイルなどについて説明している。&lt;/p&gt;
&lt;h3 id="boosting-web-performance-with-brotli-a-practical-guide-to-compression-in.net-gameball-engineering-blog"&gt;Boosting Web Performance with Brotli: A Practical Guide to Compression in .NET | Gameball Engineering Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://engineering.gameball.co/posts/boosting-web-performance-with-brotli"&gt;https://engineering.gameball.co/posts/boosting-web-performance-with-brotli&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で Brotli レスポンス圧縮を使用する方法について。&lt;/p&gt;
&lt;h3 id="system.threading.channels-2-qiita"&gt;スレッドセーフ等が付いたキューとして使えるSystem.Threading.Channels (2)応用の紹介編 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/spc_ksudoh/items/55f194b1c3b272f69ab9"&gt;https://qiita.com/spc_ksudoh/items/55f194b1c3b272f69ab9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;System.Threading.Channels で待ち行列や Dequeue 時の処理分岐といった応用する方法について。&lt;/p&gt;
&lt;h3 id="c-13.net-9-rc-1"&gt;C# 13 / .NET 9 の新機能 (RC 1 時点)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/nenonaninu/net-9-noxin-ji-neng-rc-1-shi-dian"&gt;https://speakerdeck.com/nenonaninu/net-9-noxin-ji-neng-rc-1-shi-dian&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="ec715d8804bd4386a1fb058dded72dab" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.neno.dev/entry/2024/09/28/222353"&gt;【C#】C# 13 / .NET 9 の新機能 (RC 1 時点) - ねののお庭。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="a-perfview-alternative-in-webassembly"&gt;A Perfview Alternative in WebAssembly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techblog.criteo.com/a-perfview-alternative-in-webassembly-f6833820b699"&gt;https://techblog.criteo.com/a-perfview-alternative-in-webassembly-f6833820b699&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PerfView の代わりとして使用できる Blazor WebAssembly によるイベントビューアー。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-09-19: .NET 9 Release Candidate 1, AWS SDK for .NET with OpenTelemetry, StackExchange.Redis 2.8.16</title>
			<link>https://weekref.net/2024/09/19/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/09/19/updates</guid>
			<pubDate>Thu, 19 Sep 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-9-release-candidate-1-is-now-available.net-blog"&gt;.NET 9 Release Candidate 1 is now available! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-9-release-candidate-1-is-now-available/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-9-release-candidate-1-is-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Release Candidate 1 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ライブラリー
&lt;ul&gt;
&lt;li&gt;WebSocket Keep-Alive Ping とタイムアウト API&lt;/li&gt;
&lt;li&gt;ZLib, Brotli 圧縮オプションの追加&lt;/li&gt;
&lt;li&gt;TarEntry.DataOffset の追加&lt;/li&gt;
&lt;li&gt;HttpClientFactory のデフォルトでのヘッダー値のログ無効化&lt;/li&gt;
&lt;li&gt;アウトオブプロセス Meter ワイルドカード購読&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SDK
&lt;ul&gt;
&lt;li&gt;ワークロードヒストリー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core
&lt;ul&gt;
&lt;li&gt;SignalR 分散トレーシングの改善&lt;/li&gt;
&lt;li&gt;WebSockets の Keep-alive タイムアウト&lt;/li&gt;
&lt;li&gt;ミドルウェアでのキー付き DI&lt;/li&gt;
&lt;li&gt;InputNumber タイプ属性のオーバーライド&lt;/li&gt;
&lt;li&gt;Linux での ASP.NET Core HTTPS 開発証明書の信頼&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET MAUI
&lt;ul&gt;
&lt;li&gt;HorizontalTextAlignment.Justify の追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="enhancing-observability-in-the-aws-sdk-for.net-with-opentelemetry-amazon-web-services"&gt;Enhancing Observability in the AWS SDK for .NET with OpenTelemetry | Amazon Web Services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/jp/blogs/developer/enhancing-observability-in-the-aws-sdk-for-net-with-opentelemetry/"&gt;https://aws.amazon.com/jp/blogs/developer/enhancing-observability-in-the-aws-sdk-for-net-with-opentelemetry/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS SDK for .NET 3.7.400 以降でサポートされている OpenTelemetry 対応についての解説。&lt;/p&gt;
&lt;p&gt;記事では OpenTelemetry 統合の有効化と追加方法、サポートされているメトリックや独自のテレメトリープロバイダーの作成方法などを紹介している。&lt;/p&gt;
&lt;h3 id="release-2.8.16-stackexchangestackexchange.redis"&gt;Release 2.8.16 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.14"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.14&lt;/a&gt;
&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.16"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.8.14, 2.8.16 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="github-models-and.net-building-generative-ai-apps-for-engineers.net-blog"&gt;GitHub Models and .NET: Building Generative AI apps for engineers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/using-github-models-and-dotnet-to-build-generative-ai-apps/"&gt;https://devblogs.microsoft.com/dotnet/using-github-models-and-dotnet-to-build-generative-ai-apps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Models を .NET から使用する方法について。&lt;/p&gt;
&lt;p&gt;記事では Azure AI Inference SDK を使用して GitHub Models を使用する例を Phi-3 モデルで解説している。&lt;/p&gt;
&lt;h3 id="android-asset-packs-for.net.net-maui-android-apps.net-blog"&gt;Android Asset Packs for .NET &amp;amp; .NET MAUI Android Apps - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/android-asset-packs-in-dotnet-android/"&gt;https://devblogs.microsoft.com/dotnet/android-asset-packs-in-dotnet-android/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 でサポートされる Android のアセットパックのビルドについて。&lt;/p&gt;
&lt;p&gt;記事ではアセットパックとは何か、今までの .NET ではどのような問題があり .NET 9 で解決されるのか、アセットパックをオンデマンドでダウンロードする方法やデバッグする方法といったことについて。&lt;/p&gt;
&lt;h3 id="runtime-fee"&gt;ゲーム領域向け Runtime Fee の撤回について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://unity.com/ja/blog/unity-is-canceling-the-runtime-fee"&gt;https://unity.com/ja/blog/unity-is-canceling-the-runtime-fee&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unity 6 以降で導入が予定されていた Runtime Fee (インストール数ベースでの課金) を撤回することとなったことについて。&lt;/p&gt;
&lt;h3 id="performance-improvements-in.net-9.net-blog"&gt;Performance Improvements in .NET 9 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-9/"&gt;https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 での様々なパフォーマンス改善についてコードとベンチマークを使った詳細な解説。&lt;/p&gt;
&lt;h3 id="preview-release-of-sdk-style-sql-projects-in-visual-studio-2022"&gt;Preview release of SDK-style SQL projects in Visual Studio 2022&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/azure-sql-blog/preview-release-of-sdk-style-sql-projects-in-visual-studio-2022/ba-p/4240616"&gt;https://techcommunity.microsoft.com/t5/azure-sql-blog/preview-release-of-sdk-style-sql-projects-in-visual-studio-2022/ba-p/4240616&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の SQL Server Data Tools 向けのプロジェクトで SDK スタイルのプロジェクトをプレビューサポートした。&lt;/p&gt;
&lt;h3 id="modernize-your-uwp-app-with-preview-uwp-support-for.net-9-and-native-aot-ifdef-windows"&gt;Modernize your UWP app with preview UWP support for .NET 9 and Native AOT - #ifdef Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/ifdef-windows/preview-uwp-support-for-dotnet-9-native-aot/"&gt;https://devblogs.microsoft.com/ifdef-windows/preview-uwp-support-for-dotnet-9-native-aot/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で UWP のプレビューサポートとなった。&lt;/p&gt;
&lt;p&gt;.NET 9 による UWP のサポートで WinUI 3 への移行が可能になることや、更新されなかった .NET Core 2.0 レベルの機能と .NET Native (AOT) のランタイムからモダンな C# と .NET ランタイムを使用した開発が行えるようになる。&lt;/p&gt;
&lt;p&gt;記事では .NET 9 を使用した UWP プロジェクトの作成方法とプロジェクトファイルの詳細な説明、F# のサポート、その他エコシステムのサポート状況などについても触れている。&lt;/p&gt;
&lt;h3 id="simplifying-components-for.netc-developers-with-componentize-dotnet"&gt;Simplifying components for .NET/C# developers with componentize-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bytecodealliance.org/articles/simplifying-components-for-dotnet-developers-with-componentize-dotnet"&gt;https://bytecodealliance.org/articles/simplifying-components-for-dotnet-developers-with-componentize-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET ツールから WebAssembly コンポーネントを出力できる componentize-dotnet がプレビューリリースされた。&lt;/p&gt;
&lt;p&gt;componentize-dotnet は NativeAOT の LLVM コンパイラーやバインディングの生成、WASI SDK といったものをパッケージにしたもので、NuGet パッケージを参照するだけで dotnet build によって WebAssembly コンポーネントを生成できるようになる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.publickey1.jp/blog/24/netwebassemblywasi_preview_2componentize-dotnetbytecode_alliance.html"&gt;.NETでWebAssemblyの最新仕様「WASI Preview 2」対応コンポーネントを作れる「componentize-dotnet」、Bytecode Allianceがオープンソースでリリース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="how-to-run.net-apps-natively-on-arm64-devices-visual-studio-blog"&gt;How to run .NET apps natively on Arm64 devices - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/how-to-run-net-apps-natively-on-arm64-devices/"&gt;https://devblogs.microsoft.com/visualstudio/how-to-run-net-apps-natively-on-arm64-devices/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 と Windows 11 24H2 で Arm 環境において Any CPU が指定された .NET アプリケーションを Arm ネイティブに実行する方法について。&lt;/p&gt;
&lt;h3 id="cexpression.compile-qiita"&gt;【C#】Expression.Compile()を安易に使ってはいけない理由と対策 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/simoyama2323/items/8741f455292c03ed1fd9"&gt;https://qiita.com/simoyama2323/items/8741f455292c03ed1fd9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Expression.Compile を使用する場合にかかるコストについて。&lt;/p&gt;
&lt;p&gt;記事では Expression.Compile を使用しなくてよい場合の代替案などについても紹介している。&lt;/p&gt;
&lt;h3 id="understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes-visual-studio-blog"&gt;Understanding the behavior of the XAML Designer with abstract base classes - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes/"&gt;https://devblogs.microsoft.com/visualstudio/understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 での XAML デザイナーにおける abstract クラスを使用したコントロールの挙動について。&lt;/p&gt;
&lt;p&gt;記事では abstract クラスを使用した場合の問題点とその解決策について解説している。&lt;/p&gt;
&lt;h3 id="tunit"&gt;TUnit を使おう!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/masakura/articles/e0238d7b87dedd"&gt;https://zenn.dev/masakura/articles/e0238d7b87dedd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;xUnit や NUnit のようなテストフレームワーク TUnit の紹介。&lt;/p&gt;
&lt;h3 id="net-9linqcountby"&gt;.NET 9の新しいLINQのCountBy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/83a3fdf6515435"&gt;https://zenn.dev/tomokusaba/articles/83a3fdf6515435&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 の LINQ で導入される CountBy についての紹介。&lt;/p&gt;
&lt;h3 id="c-11.0-new-features-ref-fields-and-the-scoped-keyword-endjin"&gt;C# 11.0 new features: ref fields and the scoped keyword | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2024/09/dotnet-csharp-11-ref-fields-scoped-keyword"&gt;https://endjin.com/blog/2024/09/dotnet-csharp-11-ref-fields-scoped-keyword&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 11 の ref キーワードと scoped キーワードについての解説。&lt;/p&gt;
&lt;h3 id="building-a-graphql-client-in.net-with-jetbrains-rider-and-strawberryshake-the.net-tools-blog"&gt;Building a GraphQL Client in .NET with JetBrains Rider and StrawberryShake | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/09/17/building-a-graphql-client-in-net-with-jetbrains-rider-and-strawberryshake/"&gt;https://blog.jetbrains.com/dotnet/2024/09/17/building-a-graphql-client-in-net-with-jetbrains-rider-and-strawberryshake/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider と StrawberryShake を使用して GraphQL クライアントを実装することについて。&lt;/p&gt;
&lt;p&gt;記事では Rider の GraphQL 拡張プラグインを使用して GraphQL の開発を効率的に進める方法について触れている。&lt;/p&gt;
&lt;h3 id="linqgroupjoin"&gt;【LINQ】GroupJoinを理解する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimiyu/articles/5a01676d6165f7"&gt;https://zenn.dev/shimiyu/articles/5a01676d6165f7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LINQ の GroupJoin メソッドに関する挙動の解説。SelectMany と組み合わせた結合に関しても触れている。&lt;/p&gt;
&lt;h3 id="implementing-floyd-warshall-algorithm-for-solving-all-pairs-shortest-paths-problem-in-c"&gt;Implementing Floyd-Warshall algorithm for solving all-pairs shortest paths problem in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://olegkarasik.wordpress.com/2021/04/25/implementing-floyd-warshall-algorithm-for-solving-all-pairs-shortest-paths-problem-in-c/"&gt;https://olegkarasik.wordpress.com/2021/04/25/implementing-floyd-warshall-algorithm-for-solving-all-pairs-shortest-paths-problem-in-c/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# で最短パスを探索する Floyd-Warshall アルゴリズムを実装し、その実装を最適化する手法を解説している。&lt;/p&gt;
&lt;h3 id="intersperse-values-for-enumerable-collections"&gt;Intersperse Values for Enumerable Collections&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/intersperse-values-for-enumerable-collections"&gt;https://khalidabuhakmeh.com/intersperse-values-for-enumerable-collections&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コレクションの要素間に要素を追加する Interspase メソッドを実装する方法について。&lt;/p&gt;
&lt;h3 id="tracing-allocations-with-eventpipe-part-3-tracing-without-dotnet-trace"&gt;Tracing allocations with EventPipe part 3 — Tracing without dotnet-trace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-3-tracing-without-dotnet-trace-7244bdb86e03"&gt;https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-3-tracing-without-dotnet-trace-7244bdb86e03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EventPipe を使用してアロケーションをトレースする方法についてのパート3。&lt;/p&gt;
&lt;p&gt;この記事では DiagnosticsClient を使用して実行中のセッションからトレースする方法とその際の問題と dotnet-trace を参考にした解決手段を解説している。&lt;/p&gt;
&lt;h3 id="c.net-8.0native-aot-qiita"&gt;C# .NET 8.0+Native AOTでコンソールアプリを作成する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nekotadon/items/6031ec1d90f1834e2324"&gt;https://qiita.com/nekotadon/items/6031ec1d90f1834e2324&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 でコンソールアプリケーションを Native AOT でビルドするまでの手順の解説。&lt;/p&gt;
&lt;h3 id="semantic-kernel-ai-2"&gt;Semantic Kernel のマルチエージェント AI 機能入門してみよう その 2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-agents-003"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-agents-003&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel の Agent 関連のクラスとそのコードについての詳細を読んでいく話。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-agents-004"&gt;Semantic Kernel のマルチエージェント AI 機能入門してみよう その 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="crsapem.net-7-qiita"&gt;C#でRSA鍵ペアをPEM形式で保存・読み込み、メッセージの暗号化と復号化【.NET 7以降対応】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SoundOrion/items/6d4da8b6cce6b52e318d"&gt;https://qiita.com/SoundOrion/items/6d4da8b6cce6b52e318d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 以降で対応した PEM 形式の RSA 鍵を扱いメッセージを暗号化と復号を行う方法について。&lt;/p&gt;
&lt;h3 id="unexpected-usage-of-eventsource-or-how-to-test-statistical-results-in-clr-pull-request"&gt;Unexpected usage of EventSource or how to test statistical results in CLR pull request&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/unexpected-usage-of-eventsource-or-how-to-test-statistical-results-in-clr-pull-request-8431ffdc460a"&gt;https://chnasarre.medium.com/unexpected-usage-of-eventsource-or-how-to-test-statistical-results-in-clr-pull-request-8431ffdc460a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CLR の Pull request で統計結果のテストを取るために EventSource を利用した話。&lt;/p&gt;
&lt;h3 id="winrt-com-interface-win32-com-interface-qiita"&gt;WinRT COM Interface から Win32 COM Interface へキャストする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kumakamikoubou/items/245991bb7b247da1eea8"&gt;https://qiita.com/kumakamikoubou/items/245991bb7b247da1eea8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IMemoryBufferReference を IMemoryBufferByteAccess へキャストするような WinRT のインターフェースを Win32 COM インターフェースにキャストする必要がある場合の対応方法について。&lt;/p&gt;
&lt;h3 id="alternate-lookup-for-dictionary-and-hashset-in.net-9-ndepend-blog"&gt;Alternate Lookup for Dictionary and HashSet in .NET 9 - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/alternate-lookup-for-dictionary-and-hashset-in-net-9/"&gt;https://blog.ndepend.com/alternate-lookup-for-dictionary-and-hashset-in-net-9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 の Dictionary や HashSet に追加される GetAlternateLookup API について、パフォーマンスと独自の実装方法などを解説している。&lt;/p&gt;
&lt;h3 id="preventing-breaking-changes-in-public-apis-with-publicapigenerator"&gt;Preventing breaking changes in public APIs with PublicApiGenerator&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/preventing-breaking-changes-in-public-apis-with-publicapigenerator/"&gt;https://andrewlock.net/preventing-breaking-changes-in-public-apis-with-publicapigenerator/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;クラスライブラリーの公開 API の破壊的変更を PublicApiGenerator で防ぐ方法について。&lt;/p&gt;
&lt;p&gt;記事では PublicApiAnalyzer を使用した場合の不満と別な手段としての PublicApiGenerator とユニットテストを使用した検証方法を紹介している。&lt;/p&gt;
&lt;h3 id="webassembly-and-containers-orchestrating-distributed-architectures-with.net-aspire"&gt;WebAssembly and Containers: Orchestrating Distributed Architectures with .NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/articles/webassembly-containers-dotnet-aspire/"&gt;https://www.infoq.com/articles/webassembly-containers-dotnet-aspire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire で WebAssembly によるサーバーレスアプリケーションを実行する Spin をホストできる Fermyon.Aspire.Spin の紹介。&lt;/p&gt;
&lt;h3 id="qiita"&gt;値型レコードを逆コンパイルしてみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/0ea0eeaa82e6921ede87"&gt;https://qiita.com/abetakahiro123/items/0ea0eeaa82e6921ede87&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;値型レコードを逆コンパイルしてどのような実装となっているのかについての解説。&lt;/p&gt;
&lt;h3 id="why-is-f-code-so-robust-and-reliable.net-blog"&gt;Why is F# code so robust and reliable? - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/why-is-fsharp-code-so-robust-and-reliable/"&gt;https://devblogs.microsoft.com/dotnet/why-is-fsharp-code-so-robust-and-reliable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# によるコードの堅牢さと信頼性についての紹介記事。(.NET ブログのゲスト寄稿記事)&lt;/p&gt;
&lt;h3 id="break-for-async-user-unhandled-exceptions-in-the-visual-studio-debugger-visual-studio-blog"&gt;Break for Async User-Unhandled exceptions in the Visual Studio Debugger - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/break-for-async-user-unhandled-exceptions-in-the-visual-studio-debugger/"&gt;https://devblogs.microsoft.com/visualstudio/break-for-async-user-unhandled-exceptions-in-the-visual-studio-debugger/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 以降と Visual Studio を組み合わせた場合に非同期処理の中で発生したユーザーの未処理例外をブレークできるようになることについて。&lt;/p&gt;
&lt;h3 id="asp.net-core1password"&gt;ASP.NET Coreを用いた開発で使う環境変数を1Passwordで管理するようにした&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/i999m/articles/4e613a5cc95e6b"&gt;https://zenn.dev/i999m/articles/4e613a5cc95e6b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションの開発時に環境変数を 1Password で管理し、取得、実行する方法について。&lt;/p&gt;
&lt;h3 id="winui-3window-qiita"&gt;WinUI 3での実用的なWindowサイズの設定 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/emoacht/items/e3935ebc6f713f95ed50"&gt;https://qiita.com/emoacht/items/e3935ebc6f713f95ed50&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 でウィンドウサイズをコードから設定する方法について。記事では AppWindow.ResizeClient を使用した具体的な実装方法について触れている。&lt;/p&gt;
&lt;h3 id="learn-to-build-your-first-blazor-hybrid-app.net-blog"&gt;Learn to Build Your First Blazor Hybrid App! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-blazor-hybrid-workshop/"&gt;https://devblogs.microsoft.com/dotnet/introducing-blazor-hybrid-workshop/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Hybrid アプリケーションを作成するワークショップの紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet-presentations/blazor-hybrid-workshop"&gt;dotnet-presentations/blazor-hybrid-workshop: A full day workshop (.NET MAUI Blazor Hybrid Workshop in a Box) on how to build Blazor Hybrid apps with .NET MAUI for iOS, Android, macOS, and Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="search-scoping-helps-you-find-what-youre-looking-for-visual-studio-blog"&gt;Search scoping helps you find what you’re looking for - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/search-scoping-helps-you-find-what-youre-looking-for/"&gt;https://devblogs.microsoft.com/visualstudio/search-scoping-helps-you-find-what-youre-looking-for/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の検索でスコープ(ソリューション、プロジェクト、ドキュメント)を指定する方法について。&lt;/p&gt;
&lt;h3 id="visualstudio.extensibility-17.11-settings-and-more-remote-ui-support-visual-studio-blog"&gt;VisualStudio.Extensibility 17.11: Settings and more Remote UI support - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-11-settings-and-more-remote-ui-support/"&gt;https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-11-settings-and-more-remote-ui-support/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の新しい拡張モデル VisualStudio.Extensibility 17.11 リリースについて。&lt;/p&gt;
&lt;p&gt;17.11 では設定のサポートやリモート UI の拡張、ツールバーとツールウィンドウなどのアップデートが行われている。&lt;/p&gt;
&lt;p&gt;記事ではプロジェクトクエリー API ドキュメントの更新や試験的 API と破壊的変更についての決定についても触れている。&lt;/p&gt;
&lt;h3 id="onnx-runtime-qnn-execution-provider-snapdragon-x-elite-npu"&gt;ONNX Runtime の QNN Execution Provider を使って Snapdragon X Elite の NPU で画像分類を行ってみた - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20240911/1726041638"&gt;https://blog.shibayan.jp/entry/20240911/1726041638&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ONNX Runtime で Qualcomm AI Engine Direct SDK を使用する QNN Execution Provider を使用して、Snapdragon X Elite の NPU で ResNet50 による画像分類を実行する方法について。&lt;/p&gt;
&lt;h3 id="implementing-local-rag-using-phi-3-onnx-runtime-and-sidecar-pattern-on-linux-app-service"&gt;Implementing Local RAG using Phi-3 ONNX Runtime and Sidecar Pattern on Linux App Service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://azure.github.io/AppService/2024/09/03/Phi3-vector.html"&gt;https://azure.github.io/AppService/2024/09/03/Phi3-vector.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Linux App Service で ONNX Runtime と Phi-3 モデルをサイドカーでバックエンドとして動かしてローカル LAG を実装する方法について。&lt;/p&gt;
&lt;h3 id="c.net"&gt;C#/.NETのすすめ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/3b1150edaafb8c"&gt;https://zenn.dev/tomokusaba/articles/3b1150edaafb8c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;現状の C# と .NET についてを簡単に紹介。&lt;/p&gt;
&lt;h2 id="section-2"&gt;イベント、動画など&lt;/h2&gt;
&lt;h3 id="semantic-kernel-20240926-1200"&gt;昼休みに Semantic Kernel をさわってみよう配信 (2024/09/26 12:00〜)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msdevjp.connpass.com/event/330257/"&gt;https://msdevjp.connpass.com/event/330257/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="prozoliccstoml-toml-parserserializer-for.net"&gt;prozolic/CsToml: TOML Parser/Serializer for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/prozolic/CsToml"&gt;https://github.com/prozolic/CsToml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;パフォーマンスを重視した TOML パーサー/シリアライザーライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/prozolic/items/1e4340fb84efb45ee111"&gt;[C#] TOMLパーサー/シリアライザーライブラリ CsToml で使用している機能 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-09-06: Windows App SDK 1.6, StackExchange.Redis 2.8.12</title>
			<link>https://weekref.net/2024/09/06/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/09/06/updates</guid>
			<pubDate>Fri, 06 Sep 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="whats-new-in-windows-app-sdk-1.6"&gt;What’s new in Windows App SDK 1.6&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blogs.windows.com/windowsdeveloper/2024/09/04/whats-new-in-windows-app-sdk-1-6/"&gt;https://blogs.windows.com/windowsdeveloper/2024/09/04/whats-new-in-windows-app-sdk-1-6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.6 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Native AOT のサポート、WebView2 のバージョンを NuGet 参照の形へ移行、新しいパッケージ展開 API、TabView のタブの切り離しに関する改善、その他いくつかのコントロールの改善や API の追加などが含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-16"&gt;Version 1.6 - Stable channel release notes for the Windows App SDK - Windows apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-2.8.12-stackexchangestackexchange.redis"&gt;Release 2.8.12 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.12"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.8.12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.8.12 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではハッシュフィールドに対する有効期限コマンドのサポート追加、&lt;code&gt;HSCAN NOVALUES&lt;/code&gt; のサポート追加の他、いくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="enhance-your-cloud-development-skills-at-azure-developers.net-aspire-day-2024.net-blog"&gt;Enhance Your Cloud Development Skills at 'Azure Developers - .NET Aspire Day 2024' - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/enhance-your-cloud-development-skills-at-azure-developers-dotnet-aspire-day-2024/"&gt;https://devblogs.microsoft.com/dotnet/enhance-your-cloud-development-skills-at-azure-developers-dotnet-aspire-day-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9月18日 (日本時間の9月19日午前1時) にオンラインイベントの Azure Developers - .NET Aspire Day 2024 が配信される。&lt;/p&gt;
&lt;p&gt;記事ではイベントでのどのような内容が配信されるかといった点について紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.microsoft.com/ja-jp/reactor/events/23485/"&gt;Azure Developers - .NET Aspire Day 2024 | イベント | Microsoft Reactor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="faster-dictionary-in-c-ndepend-blog"&gt;Faster Dictionary in C# - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/faster-dictionary-in-c/"&gt;https://blog.ndepend.com/faster-dictionary-in-c/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dictionary を高速に取り扱うための手法として TryAdd や CollectionMarshal ヘルパーメソッドのようないくつかの Tips を紹介している。&lt;/p&gt;
&lt;h3 id="easily-dock-and-float-tool-windows-visual-studio-blog"&gt;Easily dock and float tool windows - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/easily-dock-and-float-tool-windows/"&gt;https://devblogs.microsoft.com/visualstudio/easily-dock-and-float-tool-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio でドッキングウィンドウのタイトル部分を Ctrl キーを押しながらダブルクリックするとドッキング解除/元の位置に再ドッキングできることについて。&lt;/p&gt;
&lt;h3 id="qiita"&gt;【コレクション式】スプレッドを逆コンパイルしてみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/abetakahiro123/items/f3bcb4e1351d62c7b0dd"&gt;https://qiita.com/abetakahiro123/items/f3bcb4e1351d62c7b0dd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コレクション式のスプレッド (&lt;code&gt;..&lt;/code&gt;) がコンパイルされる際にどのように展開されるのか逆コンパイルで確認してみたことについて。&lt;/p&gt;
&lt;h3 id="dotinsights-september-2024-the.net-tools-blog"&gt;dotInsights | September 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/09/03/dotinsights-september-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/09/03/dotinsights-september-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による2024年9月の .NET 関連情報のまとめ。&lt;/p&gt;
&lt;h3 id="discover.net-at-devintersection-las-vegas-2024.net-blog"&gt;Discover .NET at DEVintersection Las Vegas 2024 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/discover-dotnet-at-dev-intersection-las-vegas-2024/"&gt;https://devblogs.microsoft.com/dotnet/discover-dotnet-at-dev-intersection-las-vegas-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9月9日から Las Vegas にて開催される DEVintersection での .NET 関連のセッションについての紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devintersection.com/"&gt;DEVintersection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="incorporate-github-copilot-into-your-daily-flow-visual-studio-blog"&gt;Incorporate GitHub Copilot into your daily flow - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/incorporate-github-copilot-into-your-daily-flow/"&gt;https://devblogs.microsoft.com/visualstudio/incorporate-github-copilot-into-your-daily-flow/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.11 の GitHub Copilot によるワークフローの効率化に役立つ機能の紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;インラインチャットによる入力候補の調整&lt;/li&gt;
&lt;li&gt;インラインチャットをチャットウィンドウに移動し、コンテキストを増やす&lt;/li&gt;
&lt;li&gt;エディターから直接シンボルを理解する&lt;/li&gt;
&lt;li&gt;GitHub Copilot でコードを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="dev-proxy-v0.20-with-improved-simulating-api-errors-and-a-new-api-for-building-integrations-microsoft-365-developer-blog"&gt;Dev Proxy v0.20 with improved simulating API errors and a new API for building integrations - Microsoft 365 Developer Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/microsoft365dev/dev-proxy-v0-20-with-improved-simulating-api-errors-and-a-new-api-for-building-integrations/"&gt;https://devblogs.microsoft.com/microsoft365dev/dev-proxy-v0-20-with-improved-simulating-api-errors-and-a-new-api-for-building-integrations/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dev Proxy v0.20 での API のエラーシミュレーションの強化やリモート制御など新機能についての紹介。&lt;/p&gt;
&lt;h3 id="connection-resiliency-for-entity-framework-core-and-sqlclient"&gt;Connection Resiliency for Entity Framework Core and SqlClient&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.codeinside.eu/2024/09/02/connection-resiliency-for-ef-core-and-sql-data/"&gt;https://blog.codeinside.eu/2024/09/02/connection-resiliency-for-ef-core-and-sql-data/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core と SqlClient をする際の接続回復性を担保する方法について。&lt;/p&gt;
&lt;h3 id="enhancing-your-visual-studio-authentication-experience-visual-studio-blog"&gt;Enhancing your Visual Studio authentication experience - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/enhancing-your-visual-studio-authentication-experience/"&gt;https://devblogs.microsoft.com/visualstudio/enhancing-your-visual-studio-authentication-experience/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visaul Studio 2022 17.11 で改善された(Visual Studio 自体の)認証の体験に関する仕組みについての解説。&lt;/p&gt;
&lt;p&gt;記事では Web Access Manager に変わったことで得られるメリットなどを解説している。&lt;/p&gt;
&lt;h3 id="net8"&gt;.Net8 で追加されたコレクション式で初期化できるファーストクラスコレクションを実装する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/coppla/articles/b2124d70a1bb5a"&gt;https://zenn.dev/coppla/articles/b2124d70a1bb5a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コレクション式で表現(初期化)可能な独自の型を実装する方法について。&lt;/p&gt;
&lt;h3 id="join-us-for-jetbrains.net-days-online-2024-the.net-tools-blog"&gt;Join Us for JetBrains .NET Days Online 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/09/02/dotnet-days-online-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/09/02/dotnet-days-online-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET のオンラインイベント JetBrains .NET Days Online 2024 についての案内。&lt;/p&gt;
&lt;p&gt;イベントは9月25日から2日間にわたり開催され、.NET に関する様々なセッションが配信される。&lt;/p&gt;
&lt;h3 id="working-with-tar-files-in.net-8"&gt;Working with tar files in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/working-with-tar-files-in-dotnet/"&gt;https://andrewlock.net/working-with-tar-files-in-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の標準ライブラリーで tar 形式のファイルを取り扱うことについて。&lt;/p&gt;
&lt;p&gt;記事では tar.gz 形式のアーカイブの作成、展開、内容の確認といったアーカイブ操作についてのほか、ライブラリーの機能上の制限や問題点についても解説している。&lt;/p&gt;
&lt;h3 id="torchsharpc-1-qiita"&gt;【TorchSharp】C#で機械学習 ①手書き文字認識アプリの実装 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kkaneko1090/items/5773edca77f042393966"&gt;https://qiita.com/kkaneko1090/items/5773edca77f042393966&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TorchSharp を使用して機械学習による手書き文字認識アプリケーションを実装する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="mini-softwareminiexcel-fast-low-memory-easy-excel.net-helper-to-importexporttemplate-spreadsheet-support-linux-mac"&gt;mini-software/MiniExcel: Fast, Low-Memory, Easy Excel .NET helper to import/export/template spreadsheet (support Linux, Mac)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mini-software/MiniExcel"&gt;https://github.com/mini-software/MiniExcel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;高速で省メモリーな Excel ファイル操作のためのライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/c-sharp-programming/the-best-way-to-work-with-exel-in-net-is-miniexcel-0a113f70e5aa"&gt;The best way to work with Exel in .NET is MiniExcel?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="annulusgamesrandomextensions-provides-better-random-number-utilities-and-weighted-collections-for.net-and-unity"&gt;AnnulusGames/RandomExtensions: Provides better random number utilities and weighted collections for .NET and Unity.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AnnulusGames/RandomExtensions"&gt;https://github.com/AnnulusGames/RandomExtensions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ランダムに関する抽象化と高速な複数のアルゴリズムの実装を提供するライブラリー。System.Numerics や Unity 向けの拡張のほか、重み付きの乱数の取り扱いなどにも対応。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://annulusgames.com/blog/random-extensions/"&gt;【C#】Random Extensions – .NET / Unity用の乱数ライブラリ - Annulus Games&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-09-01: Transfer Mono to WineHQ, .NET Aspire 8.2, BinaryFormatter removed from .NET 9</title>
			<link>https://weekref.net/2024/09/01/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/09/01/updates</guid>
			<pubDate>Sun, 01 Sep 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="thank-you-to-all-the-mono-developers-issue-21796-monomono"&gt;Thank you to all the Mono developers! · Issue #21796 · mono/mono&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mono/mono/issues/21796"&gt;https://github.com/mono/mono/issues/21796&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gigazine.net/news/20240828-mono-microsoft-wine/"&gt;Microsoftが「Mono」をWineチームに寄贈、Microsoftの手を離れることでMonoが再び活気を取り戻すと期待する声も&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-aspire-8.2-goodbye-components-hello-integrations.net-blog"&gt;Announcing .NET Aspire 8.2 - Goodbye Components, Hello Integrations! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-aspire-8-2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-aspire-8-2/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="binaryformatter-removed-from.net-9.net-blog"&gt;BinaryFormatter removed from .NET 9 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/binaryformatter-removed-from-dotnet-9/"&gt;https://devblogs.microsoft.com/dotnet/binaryformatter-removed-from-dotnet-9/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-the-pinecone.net-sdk.net-blog"&gt;Introducing the Pinecone .NET SDK - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-pinecone-dotnet-sdk/"&gt;https://devblogs.microsoft.com/dotnet/introducing-pinecone-dotnet-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-community-toolkit-8.3-is-here-nativeaot.net-8-enhancements-and-more.net-blog"&gt;.NET Community Toolkit 8.3 is here! NativeAOT, .NET 8 enhancements, and more! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-the-dotnet-community-toolkit-830/"&gt;https://devblogs.microsoft.com/dotnet/announcing-the-dotnet-community-toolkit-830/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-corewcf-v1.6.0-corewcfcorewcf"&gt;Release CoreWCF v1.6.0 · CoreWCF/CoreWCF&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/CoreWCF/CoreWCF/releases/tag/v1.6.0"&gt;https://github.com/CoreWCF/CoreWCF/releases/tag/v1.6.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-asp.net-core-odata-9-official-release-odata"&gt;Announcing ASP.NET Core OData 9 Official Release - OData&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/odata/announcing-asp-net-core-odata-9-official-release/"&gt;https://devblogs.microsoft.com/odata/announcing-asp-net-core-odata-9-official-release/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windows-terminal-preview-1.22-release"&gt;Windows Terminal Preview 1.22 Release&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/commandline/windows-terminal-preview-1-22-release/"&gt;https://devblogs.microsoft.com/commandline/windows-terminal-preview-1-22-release/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-dev-kit-update-brings-enhanced-razor-intellisense-project-status-and-new-config-options.net-blog"&gt;C# Dev Kit update brings enhanced Razor IntelliSense, Project Status, and New Config Options - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/whats-new-in-csharp-dev-kit-august-2024/"&gt;https://devblogs.microsoft.com/dotnet/whats-new-in-csharp-dev-kit-august-2024/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="cizayoi.data-orm"&gt;【C#】Izayoi.Data ライブラリー (ORM)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/izayoijiichan/articles/2243e4db5a14ad"&gt;https://zenn.dev/izayoijiichan/articles/2243e4db5a14ad&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-wasm-asp.net-core-pwa-qiita"&gt;Blazor Wasm でない ASP.NET Core アプリを PWA 化する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/higege-amdeker/items/80e23fd03480ec6c6eea"&gt;https://qiita.com/higege-amdeker/items/80e23fd03480ec6c6eea&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ccdktf-azure"&gt;【C#】CDKTF を使って Azure のリソースを作成する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nekojoker/articles/bf6f79ecf165fc"&gt;https://zenn.dev/nekojoker/articles/bf6f79ecf165fc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="modern-authentication-on.net-in-practice-openid-connect-bff-and-spa"&gt;Modern Authentication on .NET in Practice: OpenID Connect, BFF and SPA&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/kirill-abblix/modern-authentication-on-net-in-practice-openid-connect-bff-and-spa-3gj2"&gt;https://dev.to/kirill-abblix/modern-authentication-on-net-in-practice-openid-connect-bff-and-spa-3gj2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azure-functions.net-8-swagger-qiita"&gt;Azure Functions .NET 8 分離ワーカーモデルで Swagger のトップページをカスタマイズする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/higege-amdeker/items/e90b3d9413a090280298"&gt;https://qiita.com/higege-amdeker/items/e90b3d9413a090280298&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ccmsorchard-corecms"&gt;C#ベースのオープンソースCMS「Orchard Core」をヘッドレスCMSとして利用する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/orchardcore-headless-cms"&gt;https://zenn.dev/zead/articles/orchardcore-headless-cms&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="understanding.net-stack-traces-a-guide-for-developers"&gt;Understanding .NET stack traces - A guide for developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/understanding-net-stack-traces-a-guide-for-developers/"&gt;https://blog.elmah.io/understanding-net-stack-traces-a-guide-for-developers/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="partial"&gt;型の分割定義 (partial)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/study/csharp/misc/partial-type/"&gt;https://ufcpp.net/study/csharp/misc/partial-type/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="building-pipelines-with-iasyncenumerable-in.net"&gt;Building pipelines with IAsyncEnumerable in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nikiforovall.github.io/dotnet/2024/08/22/async-enumerable-pipelines.html"&gt;https://nikiforovall.github.io/dotnet/2024/08/22/async-enumerable-pipelines.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="virtualstoragelibrary-release-version-0.8.0-qiita"&gt;VirtualStorageLibrary Release Version 0.8.0 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/pec02304/items/34580833cd21c2b9958a"&gt;https://qiita.com/pec02304/items/34580833cd21c2b9958a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="avalonia-ui"&gt;Avalonia UI 超入門&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/inuinu/articles/avalonia-ui-for-absolute-beginners"&gt;https://zenn.dev/inuinu/articles/avalonia-ui-for-absolute-beginners&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="new-github-copilot-features-in-visual-studio-2022-17.11-visual-studio-blog"&gt;New GitHub Copilot features in Visual Studio 2022 17.11 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/new-github-copilot-features-in-visual-studio-2022-17-11/"&gt;https://devblogs.microsoft.com/visualstudio/new-github-copilot-features-in-visual-studio-2022-17-11/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-is-the-windows.foundation.uri.domain-property-different-from-host-the-old-new-thing"&gt;How is the Windows.Foundation.Uri.Domain property different from Host? - The Old New Thing&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/oldnewthing/20240829-00/?p=110192"&gt;https://devblogs.microsoft.com/oldnewthing/20240829-00/?p=110192&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="neue-cc.net-9-alternatelookup-c-13utf8dictionary"&gt;neue cc - .NET 9 AlternateLookup によるC# 13時代のUTF8文字列の高速なDictionary参照&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2024/08/29_AlternateLookup.html"&gt;https://neue.cc/2024/08/29_AlternateLookup.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="new-ide-features-in-visual-studio-v17.11-visual-studio-blog"&gt;New IDE features in Visual Studio v17.11 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/new-ide-features-in-visual-studio-v17-11/"&gt;https://devblogs.microsoft.com/visualstudio/new-ide-features-in-visual-studio-v17-11/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net"&gt;.NET のオプション機能を完全に理解した。 - 鷲ノ巣&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://tech.blog.aerie.jp/entry/2024/08/23/175944"&gt;https://tech.blog.aerie.jp/entry/2024/08/23/175944&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-08-23: Windows Community Toolkit v8.1, Windows App SDK Version 1.6 Preview 2, System.Data.SqlClient deprecated</title>
			<link>https://weekref.net/2024/08/23/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/08/23/updates</guid>
			<pubDate>Fri, 23 Aug 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing-windows-community-toolkit-v8.1-ifdef-windows"&gt;Announcing Windows Community Toolkit v8.1 - #ifdef Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/ifdef-windows/announcing-windows-community-toolkit-v8-1/"&gt;https://devblogs.microsoft.com/ifdef-windows/announcing-windows-community-toolkit-v8-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows Community Toolkit v8.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンでは .NET 8 をサポートし、依存するフレームワークが Windows App　SDK 1.5 と Uno Platform 5.2 へアップデートされた。
新機能としてカラーピッカー、タブ付きのコマンドバー、カメラヘルパー、イメージ切り抜きオーバーレイ、DockPanel の間隔といったものが追加されている。&lt;/p&gt;
&lt;p&gt;その他 Windows Community Toolkit Labs では実験的なコントロールとして Markdown テキストブロックやリボンといったものが追加されている。&lt;/p&gt;
&lt;h3 id="windows-app-sdk-version-1.6-preview-2-1.6.0-preview2-preview-release-channel-for-the-windows-app-sdk-windows-apps"&gt;Windows App SDK Version 1.6 Preview 2 (1.6.0-preview2) - Preview release channel for the Windows App SDK - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/preview-channel#version-16-preview-2-160-preview2"&gt;https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/preview-channel#version-16-preview-2-160-preview2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK Version 1.6 Preview 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは CsWinRT のアップデートによる Native AOT サポートの向上、Edge WebView2 SDK の統合の改善、その他さまざまな不具合の修正が含まれている。&lt;/p&gt;
&lt;h3 id="net-9-preview-6-now-available-on-app-service"&gt;.NET 9 Preview 6 now available on App Service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://azure.github.io/AppService/2024/08/19/net-9-preview-6-available-on-app-service.html"&gt;https://azure.github.io/AppService/2024/08/19/net-9-preview-6-available-on-app-service.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure の App Service で .NET 9 Preview 6 が利用できるようになった。&lt;/p&gt;
&lt;p&gt;現在 Linux App Service プランのすべてのリージョンで利用できるが、Windows App Service プランでも今後利用できるようになるとのこと。&lt;/p&gt;
&lt;h3 id="announcement-system.data.sqlclient-package-is-now-deprecated-issue-2778-dotnetsqlclient"&gt;Announcement: System.Data.SqlClient package is now deprecated · Issue #2778 · dotnet/SqlClient&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/SqlClient/issues/2778"&gt;https://github.com/dotnet/SqlClient/issues/2778&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;System.Data.SqlClient パッケージが非推奨となる。&lt;/p&gt;
&lt;p&gt;System.Data.SqlClient は今後非推奨化され、.NET 9 でのサポートはされず、.NET 8 の EOL 以降は .NET Framework のサポートのみが残される形となる。
今後は Microsoft.Data.SqlClient への移行が推奨される。また、.NET Framework の System.Data.SqlClient 名前空間はこの非推奨プロセスには含まれない。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="optimizing-old-code-streambitarray-refactoring"&gt;Optimizing old code: StreamBitArray refactoring&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/201601-A/optimizing-old-code-streambitarray-refactoring?Key=3620c293-cb23-48b8-bb06-df1576cea427"&gt;https://ayende.com/blog/201601-A/optimizing-old-code-streambitarray-refactoring?Key=3620c293-cb23-48b8-bb06-df1576cea427&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RavenDB 内のコードを元に古いスタイルのコードを現代的な形に最適化、リファクタリングする例の紹介。&lt;/p&gt;
&lt;h3 id="net-blazor-server2"&gt;.NET Blazor Serverアプリをストップさせる2つの原因&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan_pub/articles/26113e0b49967b"&gt;https://zenn.dev/jtechjapan_pub/articles/26113e0b49967b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Server アプリケーションで意図せずアプリケーションが停止してしまう原因とその対処について。&lt;/p&gt;
&lt;h3 id="enhancing-code-comprehension-github-copilots-features-in-visual-studio-2022-17.11-visual-studio-blog"&gt;Enhancing Code Comprehension: GitHub Copilot’s Features in Visual Studio 2022 17.11 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/enhancing-code-comprehension-github-copilots-features-in-visual-studio-2022-17-11/"&gt;https://devblogs.microsoft.com/visualstudio/enhancing-code-comprehension-github-copilots-features-in-visual-studio-2022-17-11/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 v17.11 の GitHub Copilot で拡張された、GitHub Copilot Chat に現在のプロジェクトやソリューションを渡せるようになった機能や Web 検索といった機能について。&lt;/p&gt;
&lt;h3 id="supercharge-your-testing-experience-with-mstest.analyzers.net-blog"&gt;Supercharge your testing experience with MSTest.Analyzers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/supercharge-your-testing-experience-with-ms-test-analyzers/"&gt;https://devblogs.microsoft.com/dotnet/supercharge-your-testing-experience-with-ms-test-analyzers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSTest.Analyzer の 3.5.1 で追加されたアナライザールールの紹介。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TestClass&lt;/code&gt; 属性の付け忘れ、&lt;code&gt;AssemblyInitializer&lt;/code&gt; の形式の警告といったアナライザールールについて紹介している。&lt;/p&gt;
&lt;h3 id="unokeyboard"&gt;UnoKeyboard&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/uno-platform/unokeyboard-23po"&gt;https://dev.to/uno-platform/unokeyboard-23po&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform でのオンスクリーンキーボード実装 UnoKeyboard について。&lt;/p&gt;
&lt;h3 id="async2-the.net-runtime-async-experiment-concludes"&gt;async2 - The .NET Runtime Async experiment concludes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/59752c38-9c99-4641-9853-9cfa97bb2d29"&gt;https://steven-giesel.com/blogPost/59752c38-9c99-4641-9853-9cfa97bb2d29&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ランタイムに非同期処理を組み込む async2 (コードネーム) 実験プロジェクトについて。グリーンスレッドから始まり、ランタイムへ組み込む流れとなったことなどについて触れている。&lt;/p&gt;
&lt;h3 id="new-debugging-and-diagnostic-features-visual-studio-blog"&gt;New debugging and diagnostic features - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/new-debugging-and-diagnostic-features/"&gt;https://devblogs.microsoft.com/visualstudio/new-debugging-and-diagnostic-features/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 v17.11 でのデバッグと診断の新機能についての紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;デバッグ
&lt;ul&gt;
&lt;li&gt;非同期メソッドでの例外のブレーク&lt;/li&gt;
&lt;li&gt;AI 生成によるブレークポイント式&lt;/li&gt;
&lt;li&gt;Arm64 として実行するようマニフェストで指定された AnyCPU のデバッグ&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly のデバッグ&lt;/li&gt;
&lt;li&gt;デフォルトブレークポイントグループによるブレークポイントの整理&lt;/li&gt;
&lt;li&gt;IEnumerable ビジュアライザーでの LINQ 式の編集とビジュアライズ&lt;/li&gt;
&lt;li&gt;C++ でのコンディショナルブレークポイントのパフォーマンス改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;プロファイル
&lt;ul&gt;
&lt;li&gt;実行を跨いだインストルメンテーションツールのターゲット選択の保持&lt;/li&gt;
&lt;li&gt;.NET アセンブリーの逆コンパイル&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-git-tooling-features-visual-studio-blog"&gt;New git tooling features - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/new-git-tooling-features/"&gt;https://devblogs.microsoft.com/visualstudio/new-git-tooling-features/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 v17.11 での Git に関する新機能/改善についての紹介。&lt;/p&gt;
&lt;h3 id="c-xinput-qiita"&gt;C# から XInput 経由でゲームパッドの入力を得る (外部ライブラリなし) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mikecat_mixc/items/7ea7bab63c93f1b2b04d"&gt;https://qiita.com/mikecat_mixc/items/7ea7bab63c93f1b2b04d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;XInput API を使用してゲームパッドの入力を C# から取り扱う方法についての解説。&lt;/p&gt;
&lt;h3 id="urlencode-the-space-character"&gt;UrlEncode the Space Character&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.codeinside.eu/2024/08/20/urlencoding-the-space-char/"&gt;https://blog.codeinside.eu/2024/08/20/urlencoding-the-space-char/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;URL エンコードする際のスペースの取り扱い(&lt;code&gt;+&lt;/code&gt; となるパターンと &lt;code&gt;%20&lt;/code&gt; となるパターン)についてと、.NET での API について。&lt;/p&gt;
&lt;h3 id="semantic-kernel"&gt;Semantic Kernel のマルチエージェントを試してみよう！&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-agents-001"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-agents-001&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel で複数のエージェント(異なる役割を持つエージェント)を組み合わせるマルチエージェントで実行する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="shimodateakiravirtualstoragelibrary-virtualstoragelibrary-project"&gt;shimodateakira/VirtualStorageLibrary: VirtualStorageLibrary Project&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/shimodateakira/VirtualStorageLibrary?tab=readme-ov-file"&gt;https://github.com/shimodateakira/VirtualStorageLibrary?tab=readme-ov-file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ファイルシステムのような概念を持ったインメモリーの木構造を取り扱うライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/shimodateakira/introducing-virtualstoragelibrary-a-net-solution-for-in-memory-tree-structures-2133"&gt;Introducing VirtualStorageLibrary: A .NET Solution for In-Memory Tree Structures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="hanachirurapidenum-enum-utility-with-sourcegenerator-for-c.net"&gt;hanachiru/RapidEnum: Enum utility with SourceGenerator for C#/.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/hanachiru/RapidEnum"&gt;https://github.com/hanachiru/RapidEnum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Generator ベースの高速な Enum のユーティリティー。&lt;/p&gt;
&lt;!-- https://x.com/hanaaaaaachiru/status/1825004695905034626?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;.NET標準API や 世界最速のenumライブラリ FastEnum よりもパフォーマンスが良いライブラリ RapidEnum リリースしました！！&lt;br&gt;手元で計測したところ、.NET APIより数十~数万倍良い計測結果がでてました&lt;br&gt;Unity Package Managerにも対応してるので、Unity勢も手軽に導入できます&lt;a href="https://t.co/8miqpRUo0r"&gt;https://t.co/8miqpRUo0r&lt;/a&gt; &lt;a href="https://t.co/FOztfAYD5f"&gt;pic.twitter.com/FOztfAYD5f&lt;/a&gt;&lt;/p&gt;&amp;mdash; はなちる&amp;#64;ゲーム制作 (&amp;#64;hanaaaaaachiru) &lt;a href="https://twitter.com/hanaaaaaachiru/status/1825004695905034626?ref_src=twsrc%5Etfw"&gt;August 18, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="dark-mode-experimental-feature-by-jeremykuhne-pull-request-11857-dotnetwinforms"&gt;Dark mode experimental feature by JeremyKuhne · Pull Request #11857 · dotnet/winforms&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/winforms/pull/11857"&gt;https://github.com/dotnet/winforms/pull/11857&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows Forms でのダークモードの実験的サポートの PR。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-08-16: .NET 6.0.33, 8.0.8 and 9 Preview 7, Visual Studio 2022 v17.11, Rider and ReSharper 2024.2</title>
			<link>https://weekref.net/2024/08/16/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/08/16/updates</guid>
			<pubDate>Fri, 16 Aug 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-and.net-framework-august-2024-updates.net-blog"&gt;.NET and .NET Framework August 2024 updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-august-2024-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-august-2024-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6, 8と .NET Framework の2024年8月の更新がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは不具合の修正などに加えて、いくつかのセキュリティー修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/320"&gt;CVE-2024-38168&lt;/a&gt;: ASP.NET の HTTP.sys に関するサービス拒否の脆弱性 (.NET 8)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/319"&gt;CVE-2024-38167&lt;/a&gt;: TlsStream による情報漏洩の脆弱性 (.NET 8)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-v17.11-your-feedback-in-action-visual-studio-blog"&gt;Visual Studio 2022 v17.11 – Your feedback in action - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-11-your-feedback-in-action/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-11-your-feedback-in-action/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.11 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースの新機能や機能強化、改修といったものの多くはフィードバックをもとに行われ、記事ではそれらが反映されたものについて紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性の強化
&lt;ul&gt;
&lt;li&gt;コード検索&lt;/li&gt;
&lt;li&gt;コードレビュー&lt;/li&gt;
&lt;li&gt;Pull request の作成のアップデート&lt;/li&gt;
&lt;li&gt;親しみあるキーボードショートカット&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GitHub Copilot
&lt;ul&gt;
&lt;li&gt;AI 生成ブレークポイント式&lt;/li&gt;
&lt;li&gt;シンボルの理解&lt;/li&gt;
&lt;li&gt;提案の刷新&lt;/li&gt;
&lt;li&gt;よりセキュアな GitHub Copilot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;デバッグと診断
&lt;ul&gt;
&lt;li&gt;より簡単な非同期での例外の修正&lt;/li&gt;
&lt;li&gt;外部コードのプロファイリングを簡単に&lt;/li&gt;
&lt;li&gt;Arm64 でのデバッグの改善&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly のデバッグ&lt;/li&gt;
&lt;li&gt;表現力豊かな IEnumerable ビジュアライザー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IDE とワークフローの強化
&lt;ul&gt;
&lt;li&gt;コンポーネントのインストール忘れを防止&lt;/li&gt;
&lt;li&gt;常に最新とセキュアな状態&lt;/li&gt;
&lt;li&gt;新しい Teams Toolkit のテンプレート&lt;/li&gt;
&lt;li&gt;ユーザー認証の改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web とゲーム開発
&lt;ul&gt;
&lt;li&gt;ソリューションエクスプローラーの npm パッケージ&lt;/li&gt;
&lt;li&gt;動的な Web API ルートの検出&lt;/li&gt;
&lt;li&gt;Unreal Engine のクラステンプレートの追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET と C++ 開発
&lt;ul&gt;
&lt;li&gt;リソースエクスプローラーの刷新&lt;/li&gt;
&lt;li&gt;Linux での CMake プロジェクトのデバッグ&lt;/li&gt;
&lt;li&gt;Build Insights の QoL アップデート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-9-preview-7-is-now-available.net-blog"&gt;.NET 9 Preview 7 is now available! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-9-preview-7/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-9-preview-7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 Preview 7 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ライブラリー&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BinaryFormatter の削除の完了&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ReadOnlySpan&amp;lt;Char&amp;gt;.Split()&lt;/code&gt; によるセグメントの列挙&lt;/li&gt;
&lt;li&gt;Debug.Assert でのアサート条件の報告のデフォルト化&lt;/li&gt;
&lt;li&gt;Compression API での zlib-ng の利用&lt;/li&gt;
&lt;li&gt;Guid.CreateVersion7 による自然ソート順対応の GUID 生成&lt;/li&gt;
&lt;li&gt;Interlocked.CompareExchange のより多くの型への対応&lt;/li&gt;
&lt;li&gt;iOS/tvOS/Mac Catalyst での AES-GCM と ChaChaPoly1305 アルゴリズムの有効化&lt;/li&gt;
&lt;li&gt;X.509 証明書の読み込みの変更&lt;/li&gt;
&lt;li&gt;XPS バーチャルプリンターからの XPS ドキュメントのサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tensor&amp;lt;T&amp;gt;&lt;/code&gt; を実験的としてマーク&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ランタイム&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARM64 SVE サポート&lt;/li&gt;
&lt;li&gt;ARM64 での後置インデックスアドレッシング&lt;/li&gt;
&lt;li&gt;ループの強度低減&lt;/li&gt;
&lt;li&gt;Box のオブジェクトスタックアロケーション&lt;/li&gt;
&lt;li&gt;GC Dynamic Adaptation To Application Sizes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C#&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OverloadResolutionPriority&lt;/code&gt; 属性によるオーバーロードの優先付け&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SDK&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安全ではないレジストリーへのコンテナー発行の改善&lt;/li&gt;
&lt;li&gt;コンテナー発行の環境変数の一貫性の向上&lt;/li&gt;
&lt;li&gt;ワークロードをより細かく制御するためのワークロードセットの導入&lt;/li&gt;
&lt;li&gt;'torn SDK' と呼ばれるアナライザーのミスマッチ問題の軽減&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ASP.NET Core&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SignalR でのトリミングと Native AOT のサポート&lt;/li&gt;
&lt;li&gt;Microsoft.AspNetCore.OpenApi でのトリミングと Native AOT のサポート&lt;/li&gt;
&lt;li&gt;Microsoft.AspNetCore.OpenApi の transforer 登録 API の強化&lt;/li&gt;
&lt;li&gt;ルートグループでの ProducesProblem および ProducesValidationProblem の生成&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IEnumerable&amp;lt;KeyValuePair&amp;lt;string, object?&amp;gt;&amp;gt;&lt;/code&gt; から Problem と ValidationProblem 結果型の生成&lt;/li&gt;
&lt;li&gt;OpenIdConnectHandler での Pushed Authorization Requests (PAR) サポート&lt;/li&gt;
&lt;li&gt;データ保護でのキーの削除のサポート&lt;/li&gt;
&lt;li&gt;Kestrel の名前付きパイプエンドポイントのカスタマイズ&lt;/li&gt;
&lt;li&gt;特定のエンドポイントとリクエストでの HTTP メトリクスのオプトアウト&lt;/li&gt;
&lt;li&gt;ExceptionHandlerMiddleware の例外によるステータスコード選択&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;.NET MAUI&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HybridWebView の導入&lt;/li&gt;
&lt;li&gt;Windows 向けの新しい TitleBar コントロールと Window.TitleBar&lt;/li&gt;
&lt;li&gt;CollectionView と CarouselView を改善した iOS と Mac Catalyst 向け新しいオプトインハンドラー&lt;/li&gt;
&lt;li&gt;ActivateWindow による Windows のフォアグラウンド化&lt;/li&gt;
&lt;li&gt;BackButtonBehavior.OneWay バインディングモード&lt;/li&gt;
&lt;li&gt;BlazorWebView のホストアドレス後方互換性&lt;/li&gt;
&lt;li&gt;ネイティブ埋め込みの改善&lt;/li&gt;
&lt;li&gt;MainPage の非推奨化&lt;/li&gt;
&lt;li&gt;新しいハンドラー切断ポリシー&lt;/li&gt;
&lt;li&gt;WebView コントロールの ProcessTerminated イベント&lt;/li&gt;
&lt;li&gt;iOS と Mac Catalyst 上のリモート通知のためのライフサイクルメソッド&lt;/li&gt;
&lt;li&gt;CLI と Visual Studio Code のための Xcode 同期&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/dotnet/core/pull/9450"&gt;API diff between .NET 9 Preview 6 and .NET 9 Preview 7 by carlossanlop · Pull Request #9450 · dotnet/core&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/dotnet/core/discussions/9448"&gt;.NET 9 Preview 7 · dotnet/core · Discussion #9448&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-conf-2024-celebrating-the-release-of.net-9-save-the-date.net-blog"&gt;.NET Conf 2024 – Celebrating the Release of .NET 9! – Save the Date! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-conf-2024-celebrating-the-release-of-dotnet-9-save-the-date/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-conf-2024-celebrating-the-release-of-dotnet-9-save-the-date/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2024 の開催に関するアナウンス。&lt;/p&gt;
&lt;p&gt;11月12日から14日までの3日間バーチャルで開催され、イベント中に .NET 9 がリリースされる。
現在イベント向けのコンテンツの募集も行っているとのこと。&lt;/p&gt;
&lt;h3 id="rider-2024.2-full-line-code-completion-reader-mode-major-enhancements-to-debugging-and-more.the.net-tools-blog"&gt;Rider 2024.2: Full Line Code Completion, Reader Mode, Major Enhancements to Debugging, and More. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/15/rider-2024-2/"&gt;https://blog.jetbrains.com/dotnet/2024/08/15/rider-2024-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは フルラインコード補完、リーダーモード、タスクとタスク依存グラフ、クラスメンバーのナビゲーションの強化、.NET Aspire プラグインのバンドルをはじめ、.NET 9 Preview SDK のサポートや新しい UI のデフォルト化、ドキュメントのインラインレンダリング、C# 12 と 13 への対応など様々な新機能と改善が含まれている。&lt;/p&gt;
&lt;h3 id="resharper-2024.2-deepened-c12-and-initial-c13-support-new-ai-capabilities-localization-and-more-the.net-tools-blog"&gt;ReSharper 2024.2: Deepened C#12 and Initial C#13 Support, New AI Capabilities, Localization, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/15/resharper-2024-2/"&gt;https://blog.jetbrains.com/dotnet/2024/08/15/resharper-2024-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 9 Preview SDK のサポート、C# 12 と 13 の初期サポート、C++ のサポートの改善、日本語および韓国語、中国語のローカライズ、非同期タイピングによる応答性の向上、AI アシスタントの強化、逆コンパイラーの強化といった新機能や改善が含まれている。&lt;/p&gt;
&lt;h3 id="dotcover-dotmemory-dotpeek-and-dottrace-2024.2-have-been-released-the.net-tools-blog"&gt;dotCover, dotMemory, dotPeek, and dotTrace 2024.2 Have Been Released! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/15/dotnet-tools-242-release/"&gt;https://blog.jetbrains.com/dotnet/2024/08/15/dotnet-tools-242-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dotCover, dotMemory, dotPeek, dotTrace 2024.2 がリリースされた。&lt;/p&gt;
&lt;h3 id="release-windows-app-sdk-1.4.7-1.5.6-1.6.0-preview1"&gt;Release Windows App SDK 1.4.7, 1.5.6, 1.6.0-preview1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/"&gt;https://github.com/microsoft/WindowsAppSDK/releases/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.4.7, 1.5.6, 1.6.0-preview1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは 1.4.7 および 1.5.6 では安定性に関する修正が含まれ、1.6.0-preview1 では Native AOT のサポートや WebView2 SDK の統合、新しいパッケージ展開 API、TabView のタブティアアウトの改善といった新機能が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.7"&gt;Release Windows App SDK 1.4.7 (1.4.240802001) · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5.6"&gt;Release Windows App SDK 1.5.6 (1.5.240802000) · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.0-preview1"&gt;Release v1.6.0-preview1 · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing-uno-platform-solution-template-wizard-for-jetbrains-rider"&gt;Announcing Uno Platform Solution Template Wizard for JetBrains Rider&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/announcing-uno-platform-solution-template-wizard-for-jetbrains-rider/"&gt;https://platform.uno/blog/announcing-uno-platform-solution-template-wizard-for-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider 向けの Uno Platform ソリューションテンプレートウィザードがリリースされた。&lt;/p&gt;
&lt;p&gt;このプラグインにより Rider で Uno Platform を使用したソリューションの開発が簡単に開始できるようになる。&lt;/p&gt;
&lt;h3 id="introducing-the-azure-ai-inference-sdk-access-more-ai-models-with-the-azure-ai-model-catalog.net-blog"&gt;Introducing the Azure AI Inference SDK: Access More AI Models with the Azure AI Model Catalog - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/azure-ai-model-catalog-dotnet-inference-sdk/"&gt;https://devblogs.microsoft.com/dotnet/azure-ai-model-catalog-dotnet-inference-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure AI Inference SDK for .NET が公開された。&lt;/p&gt;
&lt;p&gt;Azure AI Inference SDK for .NET は Azure AI モデルカタログにデプロイしたモデルを簡単に扱えるようにするクライアント SDK。記事では簡単な使用方法についても触れている。&lt;/p&gt;
&lt;h3 id="first-preview-of-visual-studio-2022-v17.12-with.net-9-visual-studio-blog"&gt;First preview of Visual Studio 2022 v17.12 with .NET 9 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-12-with-net-9/"&gt;https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-12-with-net-9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.12 のプレビューがリリースされた。&lt;/p&gt;
&lt;p&gt;このアップデートでは .NET 9 プロジェクトの開発体験と AI 生産性機能にフォーカスするとしている。&lt;/p&gt;
&lt;h3 id="announcing-odata.net-8-official-release-odata"&gt;Announcing OData .NET 8 Official Release - OData&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/odata/announcing-odata-net-8-official-release/"&gt;https://devblogs.microsoft.com/odata/announcing-odata-net-8-official-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OData .NET 8 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET Framework のサポートの削除をはじめ、破壊的な変更を含む様々な改善が行われている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="copilot-content-exclusion-now-available-in-visual-studio-2022-17.11-visual-studio-blog"&gt;Copilot Content Exclusion Now Available in Visual Studio 2022 17.11 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/copilot-content-exclusion-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/copilot-content-exclusion-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 v17.11 で導入された GitHub Copilot へ渡すコンテンツを制限する機能についての紹介。&lt;/p&gt;
&lt;p&gt;特定のリポジトリーやファイルを GitHub Copilot に渡すコンテンツから除外することで機密情報の保護できる。&lt;/p&gt;
&lt;h3 id="aws-lambda-cold-start-time-from-infinity-to-zero"&gt;AWS Lambda Cold Start Time From Infinity to Zero&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;feiflow/aws-lambda-cold-start-time-from-infinity-to-zero-d011635608ac"&gt;https://medium.com/&amp;#64;feiflow/aws-lambda-cold-start-time-from-infinity-to-zero-d011635608ac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS Lambda で Java アプリケーションのコールドスタートを高速化できる SnapStart を .NET アプリケーションでも実現する PoC 的な試み。&lt;/p&gt;
&lt;h3 id="journey-through-the.net-world-behind-old-and-new-names"&gt;Journey through the .NET World: Behind Old and New Names&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/dogaaydinn/journey-through-the-net-world-behind-old-and-new-names-393h"&gt;https://dev.to/dogaaydinn/journey-through-the-net-world-behind-old-and-new-names-393h&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET の歴史とその中に出てくる様々なワードについての解説。&lt;/p&gt;
&lt;h3 id="how-to-implement-customized-role-permissions-in-asp.net-core"&gt;How to implement customized role permissions in ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/how-to-implement-customized-role-permissions-in-asp-net-core/"&gt;https://blog.elmah.io/how-to-implement-customized-role-permissions-in-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core と Entity Framework Core でロールパーミッションの仕組みを実装する方法について。&lt;/p&gt;
&lt;h3 id="how-to-pick-the-right-constructor-when-using-activatorutilities-in.net"&gt;How To Pick The Right Constructor When Using ActivatorUtilities In .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/how-to-pick-the-right-constructor-when-using-activatorutilities-in-dotnet"&gt;https://khalidabuhakmeh.com/how-to-pick-the-right-constructor-when-using-activatorutilities-in-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ActivatorUtilities.CreateInstance でインスタンスを作る際に、曖昧となるコンストラクターオーバーロードがある場合に特定のコンストラクターを使用するように指定する方法について。&lt;/p&gt;
&lt;h3 id="add-a-property-to-the-top-level-statements-program-class"&gt;Add a Property to the Top-level Statements Program class&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/add-a-property-to-the-top-level-statements-program-class"&gt;https://khalidabuhakmeh.com/add-a-property-to-the-top-level-statements-program-class&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Top-level Statements の隠された Program クラスにプロパティーを追加する方法について。&lt;/p&gt;
&lt;h3 id="tips-and-tricks-from-validating-a-pull-request-in.net-clr"&gt;Tips and tricks from validating a Pull Request in .NET CLR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/tips-and-tricks-from-validating-a-pull-request-in-net-clr-0a2c8ed3e5b9"&gt;https://chnasarre.medium.com/tips-and-tricks-from-validating-a-pull-request-in-net-clr-0a2c8ed3e5b9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET ランタイムのランダムアロケーションサンプリングを実装する Pull request を投げる際に作成したテストやその実行方法といったものを紹介している。&lt;/p&gt;
&lt;h3 id="add-a-swagger-ui-using-a.net-9-json-openapi-file"&gt;Add a Swagger UI using a .NET 9 Json OpenAPI file&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2024/08/12/add-a-swagger-ui-using-a-net-9-json-openapi-file/"&gt;https://damienbod.com/2024/08/12/add-a-swagger-ui-using-a-net-9-json-openapi-file/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 で生成された OpenAPI の JSON ファイルを使用する Swagger UI を実装する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="sql-formatter-visual-studio-marketplace"&gt;Sql Formatter - Visual Studio Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=MadsKristensen.SqlFormatter"&gt;https://marketplace.visualstudio.com/items?itemName=MadsKristensen.SqlFormatter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;T-SQL をフォーマットする Visual Studio 拡張。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://visualstudiomagazine.com/Articles/2024/08/13/VSLive-Dev-Conference-Tip-Leads-to-New-IDE-Extension-Sql-Formatter.aspx"&gt;VSLive! Dev Conference Tip Leads to New IDE Extension: Sql Formatter -- Visual Studio Magazine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/opensilverteam/status/1823686157927870686?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Just pushed support for {DynamicResource ...} to the &amp;quot;develop&amp;quot; branch! &lt;a href="https://twitter.com/hashtag/OpenSilver?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#OpenSilver&lt;/a&gt; continues to grow from a Silverlight clone (WPF subset) into &amp;quot;WPF for the Web&amp;quot;, leveraging HTML5 &amp;amp; WebAssembly. We&amp;#39;re steadily working towards full WPF support—stay tuned for migrated app examples. &lt;a href="https://t.co/9uYjhQAKY7"&gt;pic.twitter.com/9uYjhQAKY7&lt;/a&gt;&lt;/p&gt;&amp;mdash; OpenSilver (Silverlight replacement) (&amp;#64;OpenSilverTeam) &lt;a href="https://twitter.com/OpenSilverTeam/status/1823686157927870686?ref_src=twsrc%5Etfw"&gt;August 14, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/davidfowl/status/1823873547061879199?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;One of the biggest changes to the .NET GC since inception: &amp;quot;GC Dynamic Adaptation To Application Sizes&amp;quot;. This addresses the most common complaint with server GC which is that it uses too much memory by default.&lt;a href="https://t.co/isG7ICNFr1"&gt;https://t.co/isG7ICNFr1&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1823873547061879199?ref_src=twsrc%5Etfw"&gt;August 15, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/opensilverteam/status/1822940904140788161?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;🚀Introducing &lt;a href="https://twitter.com/hashtag/XAML3D?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#XAML3D&lt;/a&gt;: a work-in-progress 3D design system for .NET, offering more than Material &amp;amp; Fluent. It will work across Web, desktop, mobile, &amp;amp; mixed reality. Preview it now at &lt;a href="https://t.co/KzBtOkKFvG"&gt;https://t.co/KzBtOkKFvG&lt;/a&gt; &amp;amp; stay tuned for the full release in a few months (Built on &lt;a href="https://twitter.com/hashtag/OpenSilver?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#OpenSilver&lt;/a&gt;) &lt;a href="https://t.co/bpFfTNDX6u"&gt;pic.twitter.com/bpFfTNDX6u&lt;/a&gt;&lt;/p&gt;&amp;mdash; OpenSilver (Silverlight replacement) (&amp;#64;OpenSilverTeam) &lt;a href="https://twitter.com/OpenSilverTeam/status/1822940904140788161?ref_src=twsrc%5Etfw"&gt;August 12, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="unify-whether-throw-helpers-are-stacktracehidden-or-not-issue-90539-dotnetruntime"&gt;Unify whether throw helpers are [StackTraceHidden] or not · Issue #90539 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/90539"&gt;https://github.com/dotnet/runtime/issues/90539&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ArgumentException.ThrowIfNullOrEmpty のような例外ヘルパーをスタックトレースから非表示に統一するかどうかという Issue。&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-08-11: ReSharper and Rider 2024.2 Release Candidates</title>
			<link>https://weekref.net/2024/08/11/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/08/11/updates</guid>
			<pubDate>Sun, 11 Aug 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="the-resharper-and-the.net-tools-2024.2-release-candidates-are-now-available-the.net-tools-blog"&gt;The ReSharper and the .NET tools 2024.2 Release Candidates Are Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/07/resharper-2024-2-release-candidate/"&gt;https://blog.jetbrains.com/dotnet/2024/08/07/resharper-2024-2-release-candidate/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2024.2 Release Candidate がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは C# 12 機能サポートの拡張、ref struct や \e エスケープシーケンス、params 修飾子といった C# 13 の初期サポート、非同期タイピングによる文字入力のパフォーマンス向上といった改善が含まれている。&lt;/p&gt;
&lt;p&gt;その他 ReSharper C++、dotMemory、dotTrace、dotCover、dotPeek のアップデートについても触れている。&lt;/p&gt;
&lt;h3 id="the-rider-2024.2-release-candidate-is-now-available-the.net-tools-blog"&gt;The Rider 2024.2 Release Candidate Is Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/07/rider-2024-2-rc/"&gt;https://blog.jetbrains.com/dotnet/2024/08/07/rider-2024-2-rc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2024.2 Release Candidate がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 9 Preview SDK と C# 13 機能の初期サポート、フルラインコード補完、リーダーモード、ドキュメンテーションコメントのインラインレンダリング、セマンティックハイライト、Tasks タブと依存グラフなど様々な改善が含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c-12.net-8-c"&gt;[C# 12, .NET 8] C# の非同期処理における効果的なキャンセルトークンの使用方法について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nossa/articles/df258b3ddc351f"&gt;https://zenn.dev/nossa/articles/df258b3ddc351f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;非同期処理での CancellationToken の使い方についての解説。&lt;/p&gt;
&lt;p&gt;記事ではユースケースごとにどのように使用するとよいかといった点を開設している。&lt;/p&gt;
&lt;h3 id="cstandardresiliencehandler-http"&gt;【C#】StandardResilienceHandler で HTTP リクエストの回復力を高める。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2024/08/08/171524"&gt;https://blog.neno.dev/entry/2024/08/08/171524&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.Http.Resilience を使用した HTTP リクエストの失敗などからの回復力を高める方法についての解説。&lt;/p&gt;
&lt;p&gt;記事では StandardResilienceHandler や裏側で使用される Polly についてなど、どのように構成するかといった点について触れている。&lt;/p&gt;
&lt;h3 id="adding.net-aspire-to-your-existing.net-apps.net-blog"&gt;Adding .NET Aspire to your existing .NET apps - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/adding-dotnet-aspire-to-your-existing-dotnet-apps/"&gt;https://devblogs.microsoft.com/dotnet/adding-dotnet-aspire-to-your-existing-dotnet-apps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;既存の .NET アプリケーションに .NET Aspire を追加して統合を有効化するための手順の解説。&lt;/p&gt;
&lt;p&gt;ステップバイステップで有効化からメトリクスやログの表示までを行っている。&lt;/p&gt;
&lt;h3 id="escape-character-extract-common-code-params-modifier-out-vars-c-language-support-in-2024.2-the.net-tools-blog"&gt;Escape Character, Extract Common Code, Params Modifier, Out Vars – C# Language Support in 2024.2 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/07/escape-character-extract-common-code-params-modifier-out-vars-csharp-language-support-in-2024-2/"&gt;https://blog.jetbrains.com/dotnet/2024/08/07/escape-character-extract-common-code-params-modifier-out-vars-csharp-language-support-in-2024-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider と ReSharper 2024.2 の C# 言語サポートの新機能についての紹介。&lt;/p&gt;
&lt;p&gt;記事ではエスケープ文字、共通コードの抽出、params 修飾子、out 変数コード補完といった機能を紹介している。&lt;/p&gt;
&lt;h3 id="hotchocolate-graphql-limit-alias-overloading"&gt;HotChocolate GraphQl — Limit Alias Overloading&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;sankeththesmasher/hotchocolate-graphql-limit-alias-overloading-3867aa28af3a"&gt;https://medium.com/&amp;#64;sankeththesmasher/hotchocolate-graphql-limit-alias-overloading-3867aa28af3a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HotChocolate でクエリーに含まれるエイリアスの最大数を制限する方法について。&lt;/p&gt;
&lt;h3 id="simplifying-theory-test-data-with-xunit.combinatorial"&gt;Simplifying [Theory] test data with Xunit.Combinatorial&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/simplifying-theory-test-data-with-xunit-combinatorial/"&gt;https://andrewlock.net/simplifying-theory-test-data-with-xunit-combinatorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ユニットテストのパラメータを組み合わせで実行する方法について。&lt;/p&gt;
&lt;p&gt;記事では Xunit.Combinatorial を使用したパラメータの指定する方法を紹介している。&lt;/p&gt;
&lt;h3 id="introducing-the-revamped-attach-to-process-experience-visual-studio-blog"&gt;Introducing the revamped Attach to Process experience - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-attach-to-process-experience/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-attach-to-process-experience/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.10 で導入された新しいデバッガーのプロセスアタッチウィンドウの紹介。&lt;/p&gt;
&lt;p&gt;新しい UI ではテーマのサポートやプロセスツリー表示などより使いやすい形に刷新されている。&lt;/p&gt;
&lt;h3 id="nuking-local-nuget-package-sources-to-show-newly-published-packages"&gt;Nuking Local Nuget Package Sources to show newly Published Packages&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2024/Aug/04/Nuking-Local-Nuget-Package-Sources-to-show-newly-published-Packages"&gt;https://weblog.west-wind.com/posts/2024/Aug/04/Nuking-Local-Nuget-Package-Sources-to-show-newly-published-Packages&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-9-msbuild-message"&gt;.NET 9 の MSBuild で Message タスクの出力がコンソールに表示されなくなっていた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/j_sakamoto/articles/d2b7f7024f8d7b"&gt;https://zenn.dev/j_sakamoto/articles/d2b7f7024f8d7b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 でデフォルト有効となるモダンなターミナルロガーで MSBuild の Message タスクによるメッセージ出力が表示されないことについて。&lt;/p&gt;
&lt;h3 id="simplifying-remote-docker-container-connections-in.net-aspire-with-ssh.net"&gt;Simplifying Remote Docker Container Connections in .NET Aspire with SSH.Net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/syamaner/simplifying-remote-docker-container-connections-in-net-aspire-with-sshnet-207"&gt;https://dev.to/syamaner/simplifying-remote-docker-container-connections-in-net-aspire-with-sshnet-207&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Aspire とリモートの Docker ホストを組み合わせて開発するために SSH.NET を使用してポートフォワーディングすることで構成をシンプルにする方法の紹介。&lt;/p&gt;
&lt;h3 id="async-isnt-always-async"&gt;Async isn't always async&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.joelving.dk/2024/06/async-isnt-always-async/?_bhlid=aad52fd84ab1c142b00ff5150265b37fb91f84ed"&gt;https://blog.joelving.dk/2024/06/async-isnt-always-async/?_bhlid=aad52fd84ab1c142b00ff5150265b37fb91f84ed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Async となっているメソッドが常に非同期とは限らないことについて。記事ではテストで Fake として同期的な Task を返した結果、無限ループしたことを例に挙げている。&lt;/p&gt;
&lt;h3 id="sharepoint-microsoft-graph-api-api-qiita"&gt;SharePoint のファイルを Microsoft Graph API を使用してダウンロードする ～API理解編～ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Takuma_Kondo/items/af11257b3e2dcb9d8869"&gt;https://qiita.com/Takuma_Kondo/items/af11257b3e2dcb9d8869&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SharePoint 上のファイルを Microsoft Graph API でダウンロードする方法について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/Takuma_Kondo/items/a9cefb6128e092ff27a9"&gt;SharePoint のファイルを Microsoft Graph API を使用してダウンロードする(C#) ～実装編～ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="binaryformatter-migration-guide.net"&gt;BinaryFormatter migration guide - .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-migration-guide/"&gt;https://learn.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-migration-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 から廃止される BinaryFormatter の移行ガイド。&lt;/p&gt;
&lt;h3 id="effective.net-memory-management-programming-ebook"&gt;Effective .NET Memory Management | Programming | eBook&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/en-us/product/effective-net-memory-management-9781835461044"&gt;https://www.packtpub.com/en-us/product/effective-net-memory-management-9781835461044&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET メモリー管理に関するトピックを中心とした書籍。&lt;/p&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Visual Studio version 17.11 からバックグラウンドプロセスの大多数は .NET 8 で稼働するようになるという話。&lt;/p&gt;
&lt;!-- https://x.com/davkean/status/1821839852561953212?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;devenv.exe is .NET Framework. Starting 17.11 almost every core background process bar a few moved to .NET 8. &lt;a href="https://t.co/tuBH5mMFFo"&gt;https://t.co/tuBH5mMFFo&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Kean (&amp;#64;davkean) &lt;a href="https://twitter.com/davkean/status/1821839852561953212?ref_src=twsrc%5Etfw"&gt;August 9, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;非同期 I/O は同期 I/O よりも遅く、スレッドを明け渡す必要がない場合は同期 I/O のほうがパフォーマンスがよくなる。&lt;/p&gt;
&lt;!-- https://x.com/davkean/status/1821875521954963742?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Tips for .NET Windows I/O:&lt;br&gt;&lt;br&gt;Async/overlapped I/O is never as fast as sync reads. Async is about being a good citizen amongst a sea of other work by freeing up thread pool for other (hopefully CPU) work while blocked. If you have no other work other than the I/O don&amp;#39;t use async.&lt;/p&gt;&amp;mdash; David Kean (&amp;#64;davkean) &lt;a href="https://twitter.com/davkean/status/1821875521954963742?ref_src=twsrc%5Etfw"&gt;August 9, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;.NET 9 で Span ベースの Split によってアロケーションなしで処理できるようになるという話。&lt;/p&gt;
&lt;!-- https://x.com/davidfowl/status/1821007036269916530?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Non-allocating split finally coming in .NET 9&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/R0D8aF5k91"&gt;pic.twitter.com/R0D8aF5k91&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1821007036269916530?ref_src=twsrc%5Etfw"&gt;August 7, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;macOS で LINQPad が動作している話。 Avalonia XPF で実現しているとのこと。&lt;/p&gt;
&lt;!-- https://x.com/linqpad/status/1820379112651026587?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;LINQPad is coming to macOS!&lt;br&gt;&lt;br&gt;using &lt;a href="https://twitter.com/AvaloniaUI?ref_src=twsrc%5Etfw"&gt;&amp;#64;AvaloniaUI&lt;/a&gt; XPF &lt;a href="https://t.co/R8VE0lG4m5"&gt;pic.twitter.com/R8VE0lG4m5&lt;/a&gt;&lt;/p&gt;&amp;mdash; LINQPad·Joe Albahari (&amp;#64;linqpad) &lt;a href="https://twitter.com/linqpad/status/1820379112651026587?ref_src=twsrc%5Etfw"&gt;August 5, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-08-03: Security Patch for IdentityServer, grpc-dotnet v2.65.0</title>
			<link>https://weekref.net/2024/08/03/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/08/03/updates</guid>
			<pubDate>Sat, 03 Aug 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="security-patch-for-identityserver-cve-2024-39694-duende-software-blog"&gt;Security Patch for IdentityServer (CVE-2024-39694) - Duende Software Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.duendesoftware.com/posts/20240731_security_patch"&gt;https://blog.duendesoftware.com/posts/20240731_security_patch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Duende.IdentityServer のセキュリティー修正がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではオープンリダイレクトの脆弱性が修正されている。記事では脆弱性の内容の他、今回の対応での学びについても触れている。&lt;/p&gt;
&lt;h3 id="release-release-v2.65.0-grpcgrpc-dotnet"&gt;Release Release v2.65.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.65.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.65.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.65.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Windows Server でのバージョンチェックやスレッドプール枯渇を軽減するような改善が含まれている。&lt;/p&gt;
&lt;h3 id="easily-deploy.net-apps-to-azure-container-apps-with-default-configuration-for-data-protection"&gt;Easily deploy .NET apps to Azure Container Apps with default configuration for data protection&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/apps-on-azure-blog/easily-deploy-net-apps-to-azure-container-apps-with-default/ba-p/4204285"&gt;https://techcommunity.microsoft.com/t5/apps-on-azure-blog/easily-deploy-net-apps-to-azure-container-apps-with-default/ba-p/4204285&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Container Apps での ASP.NET データ保護がサポートがプレビューリリース。&lt;/p&gt;
&lt;p&gt;複数のレプリカで実行される場合に必要となるデータ保護の構成が設定一つで行えるようになる。対応状況は .NET のバージョンによって異なる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="detecting-anomalies-with.net-and-ml.net-a-practical-guide"&gt;Detecting Anomalies with .NET and ML.NET: A Practical Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/alisson_podgurski/detecting-anomalies-with-net-and-mlnet-a-practical-guide-ng5"&gt;https://dev.to/alisson_podgurski/detecting-anomalies-with-net-and-mlnet-a-practical-guide-ng5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET を使用して異常検知を実装する方法について。&lt;/p&gt;
&lt;h3 id="c-semantic-kernel-ollama-phi-3"&gt;C# Semantic Kernel と Ollama を使って Phi-3 を自端末で動かす&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantickernel-dotnet-phi3-01"&gt;https://zenn.dev/microsoft/articles/semantickernel-dotnet-phi3-01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ローカル環境で Phi-3 モデルを Semantic Kernel (.NET) と Ollama を組み合わせて実行する方法について。&lt;/p&gt;
&lt;h3 id="dotinsights-august-2024-the.net-tools-blog"&gt;dotInsights | August 2024 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/08/01/dotinsights-august-2024/"&gt;https://blog.jetbrains.com/dotnet/2024/08/01/dotinsights-august-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 関連情報まとめ2024年8月分。&lt;/p&gt;
&lt;h3 id="searchvalues-in.net-8-and.net-9"&gt;SearchValues in .NET 8 and .NET 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/codenx/searchvalues-in-net-8-and-net-9-42b88444eefa"&gt;https://medium.com/codenx/searchvalues-in-net-8-and-net-9-42b88444eefa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で導入された SearchValues クラスについての説明と使い方について。記事では .NET 9 での改善についても触れている。&lt;/p&gt;
&lt;h3 id="tracing-allocations-with-eventpipe-part-2-reading-call-stacks-without-tracelog"&gt;Tracing allocations with EventPipe part 2 — Reading call stacks without TraceLog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-2-reading-call-stacks-without-tracelog-4b0bfe4592aa"&gt;https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-2-reading-call-stacks-without-tracelog-4b0bfe4592aa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EventPipe でトレースしてコールスタックを読み出す試みについて。&lt;/p&gt;
&lt;h3 id="tool-call-with-local-model-using-ollama-and-autogen.net"&gt;Tool call with local model using Ollama and AutoGen.Net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/littlelittlecloud/tool-call-with-local-model-using-ollama-and-autogennet-3o64"&gt;https://dev.to/littlelittlecloud/tool-call-with-local-model-using-ollama-and-autogennet-3o64&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ollama と AutoGen.Net を使用してローカルモデルからツールの呼び出しを行う方法について。&lt;/p&gt;
&lt;h3 id="enhancing-help-in-f-interactive.net-blog"&gt;Enhancing #help in F# Interactive - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/enhancing-help-in-fsi/"&gt;https://devblogs.microsoft.com/dotnet/enhancing-help-in-fsi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 9 の F# インタラクティブで追加される #help   ディレクティブについての紹介。&lt;/p&gt;
&lt;h3 id="net-8-web-api-with-elasticsearch-and-kibana"&gt;.NET 8 Web API with Elasticsearch and Kibana&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;faulycoelho/net-web-eb-api-with-elasticsearch-and-kibana-e26c6eba27b3"&gt;https://medium.com/&amp;#64;faulycoelho/net-web-eb-api-with-elasticsearch-and-kibana-e26c6eba27b3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core と Elasticsearch、Kibana を使用したログの可視化の簡単な実装例。&lt;/p&gt;
&lt;h3 id="microsoft.extensions.configuration-microsoft.extensions.options-qiita"&gt;Microsoft.Extensions.Configuration と Microsoft.Extensions.Options の使い方入門 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/sakatuba&amp;#64;github/items/3908409d48004b19c98f"&gt;https://qiita.com/sakatuba&amp;#64;github/items/3908409d48004b19c98f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.Configuration と Microsoft.Extensions.Options の使い方とそれぞれの役割についての簡単な解説。&lt;/p&gt;
&lt;h3 id="creating-bindings-for.net-maui-with-native-library-interop.net-blog"&gt;Creating Bindings for .NET MAUI with Native Library Interop - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/native-library-interop-dotnet-maui/"&gt;https://devblogs.microsoft.com/dotnet/native-library-interop-dotnet-maui/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Native Library Interop for .NET MAUI を使用したネイティブバインディングを簡単に実装する方法についての解説。記事ではチャートライブラリーを使用した iOS/Android 対応のライブラリーを実装している。&lt;/p&gt;
&lt;h3 id="advanced-routing-techniques-in-asp.net-core-mvc-for-large-scale-applications"&gt;Advanced Routing Techniques in ASP.NET Core MVC for Large-Scale Applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;bhavinmoradiya99/advanced-routing-techniques-in-asp-net-core-mvc-for-large-scale-applications-71547485a43f"&gt;https://medium.com/&amp;#64;bhavinmoradiya99/advanced-routing-techniques-in-asp-net-core-mvc-for-large-scale-applications-71547485a43f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のルーティングコントロールのいくつかの実装パターンを簡単に紹介している。&lt;/p&gt;
&lt;h3 id="office-vstomsi"&gt;[Office] VSTOアドインをmsiで配布する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimarisu_121/articles/09af3ff2930c99"&gt;https://zenn.dev/shimarisu_121/articles/09af3ff2930c99&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VSTO アドインを msi 形式でパッケージングして配布できるようにする手順について。&lt;/p&gt;
&lt;h3 id="sign-vsix-packages-with-sign-cli-visual-studio-blog"&gt;Sign VSIX packages with Sign CLI - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/sign-vsix-packages-with-sign-cli/"&gt;https://devblogs.microsoft.com/visualstudio/sign-vsix-packages-with-sign-cli/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sign コマンドラインツールを使用して VSIX パッケージを署名する方法について。&lt;/p&gt;
&lt;h3 id="create-a.net-plantuml-markdown-render-extension"&gt;Create a .NET PlantUML Markdown Render Extension&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2024/Jul/29/Create-a-PlantUML-Markdown-RenderExtension"&gt;https://weblog.west-wind.com/posts/2024/Jul/29/Create-a-PlantUML-Markdown-RenderExtension&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Markdown のプレビューで PlantUML をレンダリングする拡張の実装について。記事では PlantUML サーバーで画像をレンダリングするための URL を生成する方法を紹介している。&lt;/p&gt;
&lt;h3 id="the-worst.net-bug-ive-ever-fixed"&gt;The Worst .NET Bug I've Ever Fixed&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://petabridge.com/blog/worst-dotnet-bug/"&gt;https://petabridge.com/blog/worst-dotnet-bug/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Akka.NET での分散システム/シャーディングに関する難しい不具合について発生した問題とその対応。&lt;/p&gt;
&lt;h3 id="the-singleton-pattern-in-c-today-is-not-your-dads-one"&gt;The Singleton Pattern in C# Today Is Not Your Dad's One!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.postsharp.net/singleton"&gt;https://blog.postsharp.net/singleton&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DI を含むシングルトンの実装パターンとシングルトンを期待するクラスに対するコンストラクター呼び出し場所の検証を行う方法について。&lt;/p&gt;
&lt;h3 id="a-custom-reverse-geocoding-resource-container-startup-dependencies-in.net-aspire"&gt;A Custom Reverse Geocoding Resource &amp;amp; Container Startup Dependencies in .Net Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/syamaner/building-a-custom-reverse-geocoding-resource-for-net-aspire-2n9o"&gt;https://dev.to/syamaner/building-a-custom-reverse-geocoding-resource-for-net-aspire-2n9o&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ジオコーティング、リバースジオコーディングを行うためにローカルでホストする Nominatim を .NET Aspire から使用する手順について。&lt;/p&gt;
&lt;h3 id="health-checks-for-asp.net-core-and-entity-framework-core"&gt;Health Checks for ASP.NET Core and Entity Framework Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/health-checks-for-aspnet-core-and-entity-framework-core"&gt;https://khalidabuhakmeh.com/health-checks-for-aspnet-core-and-entity-framework-core&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のヘルスチェックについてと Entyty Framework Core を組み合わせたヘルスチェックを実装する方法について。&lt;/p&gt;
&lt;h3 id="avalonia-ui-enhance-your-app-with-datagrid-and-converters"&gt;Avalonia UI: Enhance Your App with DataGrid and Converters&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;faruk.akyapak/avalonia-ui-enhance-your-app-with-datagrid-and-converters-faf8f2dc7562"&gt;https://medium.com/&amp;#64;faruk.akyapak/avalonia-ui-enhance-your-app-with-datagrid-and-converters-faf8f2dc7562&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia の DataGrid を使用する方法について。&lt;/p&gt;
&lt;h3 id="creating-source-only-nuget-packages"&gt;Creating source-only NuGet packages&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/creating-source-only-nuget-packages/"&gt;https://andrewlock.net/creating-source-only-nuget-packages/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アセンブリーを含まずソースコードのみを含む NuGet パッケージの利用ケースとその作り方について。&lt;/p&gt;
&lt;h3 id="support-for-azure.ai.openai-and-openai-v2-is-coming-semantic-kernel"&gt;Support for Azure.AI.OpenAI and OpenAI v2 is coming | Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/semantic-kernel/support-for-azure-ai-openai-and-openai-v2-is-coming/"&gt;https://devblogs.microsoft.com/semantic-kernel/support-for-azure-ai-openai-and-openai-v2-is-coming/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel での Azure.AI.OpenAI と OpenAI v2 のサポートが近づいていることについて。&lt;/p&gt;
&lt;p&gt;記事では変更後のアップグレードで起こりうることとその対応について説明している。&lt;/p&gt;
&lt;h3 id="there-is-no-mystery-over-who-wrote-the-blue-screen-of-death-despite-what-some-may-want-you-to-believe-the-old-new-thing"&gt;There is no mystery over who wrote the Blue Screen of Death, despite what some may want you to believe - The Old New Thing&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/oldnewthing/20240730-00/?p=110062"&gt;https://devblogs.microsoft.com/oldnewthing/20240730-00/?p=110062&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;.NET 9 の SignalR に分散トレーシングが導入される話。&lt;/p&gt;
&lt;!-- https://x.com/jamesnk/status/1818928330810200330?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;SignalR distributed tracing is coming in .NET 9.&lt;br&gt;&lt;br&gt;Before: A mess of operations under one long running connection 🥀&lt;br&gt;After: Organized hub invocations, traced from the client to the server 🔥&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnetaspire?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnetaspire&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/signalr?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#signalr&lt;/a&gt; &lt;a href="https://t.co/lNTgY6qVxP"&gt;pic.twitter.com/lNTgY6qVxP&lt;/a&gt;&lt;/p&gt;&amp;mdash; James Newton-King ♔ (&amp;#64;JamesNK) &lt;a href="https://twitter.com/JamesNK/status/1818928330810200330?ref_src=twsrc%5Etfw"&gt;August 1, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;std-uritemplate (.NET 版) が .NET Foundation 入り。&lt;/p&gt;
&lt;!-- https://x.com/dotnetfdn/status/1819368806000599405?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;🎉 std-uritemplate joins the .NET Foundation! 🚀 Powerful URI template processing for .NET devs. Stay tuned for updates! &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/opensource?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#opensource&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/github?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#github&lt;/a&gt;&lt;a href="https://t.co/fETzuZ7M6z"&gt;https://t.co/fETzuZ7M6z&lt;/a&gt;&lt;/p&gt;&amp;mdash; .NET Foundation (&amp;#64;dotnetfdn) &lt;a href="https://twitter.com/dotnetfdn/status/1819368806000599405?ref_src=twsrc%5Etfw"&gt;August 2, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio の次期プレビューで HTTP リクエストファイルでのリクエスト変数がサポートされる話。&lt;/p&gt;
&lt;!-- https://x.com/sayedihashimi/status/1819514959073603617?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In the next preview of &lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;VisualStudio&lt;/a&gt; we will add support for Request Variables in HTTP files. You can send a request, and then use a value from the response (or request) in a future request. For ex, you can login and then pass the token on future requests. See ex in image. &lt;a href="https://t.co/tFhvBw1Uci"&gt;pic.twitter.com/tFhvBw1Uci&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sayed I. Hashimi (&amp;#64;sayedihashimi) &lt;a href="https://twitter.com/sayedihashimi/status/1819514959073603617?ref_src=twsrc%5Etfw"&gt;August 2, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio の app.config を Full CLR (.NET Framework) が処理するため(最初のアセンブリを読む前)に時間がある程度かかっている話。&lt;/p&gt;
&lt;!-- https://x.com/davkean/status/1818207766642860259?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;It takes the full CLR about 30ms to parse Visual Studio&amp;#39;s app.config, so our first managed binary load costs at least that much.&lt;/p&gt;&amp;mdash; David Kean (&amp;#64;davkean) &lt;a href="https://twitter.com/davkean/status/1818207766642860259?ref_src=twsrc%5Etfw"&gt;July 30, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>2024-07-27: .NET Conf, .NET Aspire 8.1, Uno Platform 5.3, Avalonia 11.1</title>
			<link>https://weekref.net/2024/07/27/updates</link>
			<description>.NET 関連の情報をほぼ週刊配信</description>
			<author>Mayuki Sawatari</author>
			<enclosure url="https://weekref.net/img/logo.png" length="0" type="image" />
			<guid>https://weekref.net/2024/07/27/updates</guid>
			<pubDate>Sat, 27 Jul 2024 00:00:00 GMT</pubDate>
			<content:encoded>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-conf-focus-on-ai-august-20th-2024.net-blog"&gt;Announcing .NET Conf: Focus on AI - August 20th 2024 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnetconf-focus-on-ai/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnetconf-focus-on-ai/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-in.net-aspire-8.1-for-cloud-native-developers.net-blog"&gt;What's new in .NET Aspire 8.1 for cloud native developers! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/whats-new-in-aspire-8-1/"&gt;https://devblogs.microsoft.com/dotnet/whats-new-in-aspire-8-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-full-rider-support-and-350-enhancements"&gt;5.3 Release: Full Rider Support and 350+ Enhancements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/5-3/"&gt;https://platform.uno/blog/5-3/&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://x.com/unoplatform/status/1815795033712574753?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Hello &lt;a href="https://twitter.com/JetBrainsRider?ref_src=twsrc%5Etfw"&gt;&amp;#64;JetBrainsRider&lt;/a&gt; fans!!&lt;br&gt;&lt;br&gt;Uno Platform 5.3 brings FULL support for JetBrains Rider. Starting today, you can &lt;br&gt;&lt;br&gt;✔️Start your cross-platform projects easily using Uno Platform Live Wizard &lt;br&gt;✔️Iterate quickly using Hot Reload for XAML and C# Markup&lt;br&gt;✔️Enjoy Rider-provided Code… &lt;a href="https://t.co/xHbDJIfeRZ"&gt;pic.twitter.com/xHbDJIfeRZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Uno Platform (&amp;#64;UnoPlatform) &lt;a href="https://twitter.com/UnoPlatform/status/1815795033712574753?ref_src=twsrc%5Etfw"&gt;July 23, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="avalonia-11.1-a-quantum-leap-in-cross-platform-ui-development"&gt;Avalonia 11.1: A Quantum Leap in Cross-Platform UI Development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/blog/avalonia-11-1-a-quantum-leap-in-cross-platform-ui-development"&gt;https://avaloniaui.net/blog/avalonia-11-1-a-quantum-leap-in-cross-platform-ui-development&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v12.4.0-jbogardmediatr"&gt;Release v12.4.0 · jbogard/MediatR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jbogard/MediatR/releases/tag/v12.4.0"&gt;https://github.com/jbogard/MediatR/releases/tag/v12.4.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-20-years-the.net-tools-blog"&gt;ReSharper 20 years! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2024/07/23/resharper-20-years/"&gt;https://blog.jetbrains.com/dotnet/2024/07/23/resharper-20-years/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ilspy-for-macos-first-public-beta-release"&gt;ILSpy for macOS: First Public Beta Release&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/blog/ilspy-for-macos-first-public-beta-release"&gt;https://avaloniaui.net/blog/ilspy-for-macos-first-public-beta-release&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://x.com/avaloniaui/status/1815971299010765277?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;It&amp;#39;s here! 🎉 &lt;br&gt;&lt;br&gt;ILSpy for Linux is now available for download, powered by Avalonia XPF. &lt;br&gt;&lt;br&gt;Give it a try, and let us know what you think! &lt;a href="https://t.co/M6Cr33eokR"&gt;https://t.co/M6Cr33eokR&lt;/a&gt; &lt;a href="https://t.co/C6iIkRf2kE"&gt;pic.twitter.com/C6iIkRf2kE&lt;/a&gt;&lt;/p&gt;&amp;mdash; Avalonia UI (&amp;#64;AvaloniaUI) &lt;a href="https://twitter.com/AvaloniaUI/status/1815971299010765277?ref_src=twsrc%5Etfw"&gt;July 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="developers-want-more-more-more-the-2024-results-from-stack-overflows-annual-developer-survey-stack-overflow"&gt;Developers want more, more, more: the 2024 results from Stack Overflow’s Annual Developer Survey - Stack Overflow&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.blog/2024/07/24/developers-want-more-more-more-the-2024-results-from-stack-overflow-s-annual-developer-survey/"&gt;https://stackoverflow.blog/2024/07/24/developers-want-more-more-more-the-2024-results-from-stack-overflow-s-annual-developer-survey/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="streamline.net-8-unit-tests-simplify-logging-with-fakelogger"&gt;Streamline .NET 8 Unit Tests: Simplify Logging with FakeLogger&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/codenx/streamline-net-8-unit-tests-simplify-logging-with-fakelogger-f7d0f5baf980"&gt;https://medium.com/codenx/streamline-net-8-unit-tests-simplify-logging-with-fakelogger-f7d0f5baf980&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="stack-overflow-dev-survey-vs-code-visual-studio-and.net-shine-visual-studio-magazine"&gt;Stack Overflow Dev Survey: VS Code, Visual Studio and .NET Shine -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/Articles/2024/07/26/so-dev-survey.aspx"&gt;https://visualstudiomagazine.com/Articles/2024/07/26/so-dev-survey.aspx&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-c-13-qiita"&gt;C# で生産性を向上させよう～C# 13 アップデート完全ガイド～ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hez2010/items/9750c3686fabc5f19a8d"&gt;https://qiita.com/hez2010/items/9750c3686fabc5f19a8d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="playwright-qiita"&gt;Playwright で作成したテストのパフォーマンスを改善する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/FumikaKoyama/items/cb173d321778c68c9627"&gt;https://qiita.com/FumikaKoyama/items/cb173d321778c68c9627&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="getting-started-with-htmx-a-beginners-guide"&gt;Getting Started with HTMX: A Beginner's Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/raulnq/getting-started-with-htmx-a-beginners-guide-559p"&gt;https://dev.to/raulnq/getting-started-with-htmx-a-beginners-guide-559p&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c"&gt;C# 文字列リテラルのシンタックスハイライト&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/masakura/articles/2bcb6c7ee2104e"&gt;https://zenn.dev/masakura/articles/2bcb6c7ee2104e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-use-a-blazor-quickgrid-with-graphql.net-blog"&gt;How use a Blazor QuickGrid with GraphQL - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/how-use-a-blazor-quickgrid-with-graphql/"&gt;https://devblogs.microsoft.com/dotnet/how-use-a-blazor-quickgrid-with-graphql/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="tracing-allocations-with-eventpipe-part-1-dotnet-trace-and-tracelog"&gt;Tracing allocations with EventPipe part 1: dotnet-trace and TraceLog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-1-dotnet-trace-and-tracelog-8ebda7e90773"&gt;https://medium.com/&amp;#64;ocoanet/tracing-allocations-with-eventpipe-part-1-dotnet-trace-and-tracelog-8ebda7e90773&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-tip-using-ctrl-l-to-delete-a-line-with-and-without-clipboard-backup-visual-studio-blog"&gt;Visual Studio tip: Using Ctrl-L to delete a line with and without Clipboard backup - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-tip-deleting-a-line/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-tip-deleting-a-line/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-implement-structured-logging-and-distributed-tracing-for-microservices-with-seq"&gt;How to Implement Structured Logging and Distributed Tracing for Microservices with Seq&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/antonmartyniuk/how-to-implement-structured-logging-and-distributed-tracing-for-microservices-with-seq-401a"&gt;https://dev.to/antonmartyniuk/how-to-implement-structured-logging-and-distributed-tracing-for-microservices-with-seq-401a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="semantic-kernel-python-c"&gt;Semantic Kernel でバックエンドは Python &amp;amp; フロントエンドは C# を動かしてみる&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantickernel-dotnet-python-01"&gt;https://zenn.dev/microsoft/articles/semantickernel-dotnet-python-01&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-the-cost-of-returning-an-empty-collection"&gt;.NET: the cost of returning an empty collection&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/medialesson/net-the-cost-of-returning-an-empty-collection-7fee40c9919d"&gt;https://medium.com/medialesson/net-the-cost-of-returning-an-empty-collection-7fee40c9919d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-uses-rubicon-to-improve-ai-conversations-visual-studio-magazine"&gt;Visual Studio Uses RUBICON to Improve AI Conversations -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/Articles/2024/07/22/rubicon-visual-studio.aspx"&gt;https://visualstudiomagazine.com/Articles/2024/07/22/rubicon-visual-studio.aspx&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="add-ai-to-your.net-apps-easily-with-prompty.net-blog"&gt;Add AI to Your .NET Apps Easily with Prompty - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/add-ai-to-your-dotnet-apps-easily-with-prompty/"&gt;https://devblogs.microsoft.com/dotnet/add-ai-to-your-dotnet-apps-easily-with-prompty/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="combining.net-aspire-python-docker-remote-and-machine-learning-models-for-summarising-photos"&gt;Combining .NET Aspire, Python, Docker (Remote), and Machine Learning Models for Summarising Photos&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/syamaner/combining-net-aspire-docker-remote-and-machine-learning-models-for-summarising-photos-3iec"&gt;https://dev.to/syamaner/combining-net-aspire-docker-remote-and-machine-learning-models-for-summarising-photos-3iec&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="debug-your.net-8-code-more-efficiently"&gt;Debug your .NET 8 code more efficiently&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bartwullems.blogspot.com/2024/07/debug-your-net-8-code-more-efficiently.html?m=1"&gt;https://bartwullems.blogspot.com/2024/07/debug-your-net-8-code-more-efficiently.html?m=1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-not-to-benchmark"&gt;How not to benchmark!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/98458f74-5205-4b2b-9f5b-535e34ec2fea"&gt;https://steven-giesel.com/blogPost/98458f74-5205-4b2b-9f5b-535e34ec2fea&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ccmsorchard-core"&gt;C#ベースのオープンソースCMS「Orchard Core」の日本語化&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zead/articles/orchardcore-localization"&gt;https://zenn.dev/zead/articles/orchardcore-localization&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="semantic-kernel20247-qiita"&gt;これから始める Semantic Kernel【2024年7月版】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takashiuesaka/items/299c64bb3c5873a470b9"&gt;https://qiita.com/takashiuesaka/items/299c64bb3c5873a470b9&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azure-functions.net-6.net-8-qiita"&gt;Azure Functions のインプロセスモデルを .NET 6 から .NET 8 に移行する検証をしてみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mnrst/items/d9ded8ed93c74da8a403"&gt;https://qiita.com/mnrst/items/d9ded8ed93c74da8a403&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cloned-dictionary-vs.immutable-dictionary-vs.frozen-dictionary-in-high-traffic-systems"&gt;Cloned Dictionary vs. Immutable Dictionary vs. Frozen Dictionary in high traffic systems&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/201314-B/cloned-dictionary-vs-immutable-dictionary-vs-frozen-dictionary-in-high-traffic-systems?Key=5b127528-fc8b-4749-9442-eedcd34afb9b"&gt;https://ayende.com/blog/201314-B/cloned-dictionary-vs-immutable-dictionary-vs-frozen-dictionary-in-high-traffic-systems?Key=5b127528-fc8b-4749-9442-eedcd34afb9b&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cisymbol.todisplaysymboldisplayformat.fullyqualifiedsymbol"&gt;【C#】ISymbol.ToDisplay(SymbolDisplayFormat.FullyQualified)を用いてSymbolの完全修飾名を取得する(プロパティなどのメンバーシンボルでは取得できないので注意) - はなちるのマイノート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.hanachiru-blog.com/entry/2024/07/18/120000"&gt;https://www.hanachiru-blog.com/entry/2024/07/18/120000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-source-generator"&gt;C# Source Generator 開発チュートリアル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://developer.aiming-inc.com/csharp/source-generator-tutorial/"&gt;https://developer.aiming-inc.com/csharp/source-generator-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/ufcpp/status/1816032682968752267?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;&lt;a href="https://t.co/f1PAUYW9mK"&gt;https://t.co/f1PAUYW9mK&lt;/a&gt;&lt;br&gt;ちゃんとした利用例ちらほらもらったので、ちゃんと C# 13 時点でref struct インターフェイス実装のプレビュー外す(正式リリースする)って。&lt;/p&gt;&amp;mdash; ++C++; // 管理人: 岩永 (&amp;#64;ufcpp) &lt;a href="https://twitter.com/ufcpp/status/1816032682968752267?ref_src=twsrc%5Etfw"&gt;July 24, 2024&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="csharplangproposalstypeunions.md-at-18a527bcc1f0bdaf542d8b9a189c50068615b439-dotnetcsharplang"&gt;csharplang/proposals/TypeUnions.md at 18a527bcc1f0bdaf542d8b9a189c50068615b439 · dotnet/csharplang&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/csharplang/blob/18a527bcc1f0bdaf542d8b9a189c50068615b439/proposals/TypeUnions.md"&gt;https://github.com/dotnet/csharplang/blob/18a527bcc1f0bdaf542d8b9a189c50068615b439/proposals/TypeUnions.md&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>