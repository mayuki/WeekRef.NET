<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>/</id>
	<title>WeekRef.NET</title>
	<author>
		<name>Mayuki Sawatari</name>
	</author>
	<link rel="self" href="/" />
	<rights>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</rights>
	<updated>2023-05-21T14:12:35Z</updated>
	<logo>/img/logo.png</logo>
	<subtitle>.NET 関連の情報をほぼ週刊配信</subtitle>
	<entry>
		<id>/2023/05/21/updates</id>
		<title>2023-05-21: Visual Studio 2022 version 17.6, .NET 8 Preview 4, Rx.NET v6.0</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/05/21/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-05-21T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="visual-studio-2022-17.6-now-available-visual-studio-blog"&gt;Visual Studio 2022 - 17.6 Now Available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-6-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-6-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性の向上
&lt;ul&gt;
&lt;li&gt;パフォーマンスの改善
&lt;ul&gt;
&lt;li&gt;ソリューションのオープン、クローズの速度向上&lt;/li&gt;
&lt;li&gt;Performance Profiler の収集の停止時速度向上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;エディターの強化
&lt;ul&gt;
&lt;li&gt;スティッキースクロール&lt;/li&gt;
&lt;li&gt;All-in-One 検索&lt;/li&gt;
&lt;li&gt;ブレースペアの色付け&lt;/li&gt;
&lt;li&gt;スペルチェッカー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;デバッグと診断機能
&lt;ul&gt;
&lt;li&gt;ブレークポイントグループ&lt;/li&gt;
&lt;li&gt;.NET リモートデバッグ&lt;/li&gt;
&lt;li&gt;Visual Studio プロファイラー&lt;/li&gt;
&lt;li&gt;Visual Studio プロファイラーでのインストルメンテーション&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Git コラボレーションツール
&lt;ul&gt;
&lt;li&gt;マージダイアログの改善&lt;/li&gt;
&lt;li&gt;Git 行アンステージング&lt;/li&gt;
&lt;li&gt;GitHub Issues へのリンク&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;モダン .NET とクラウドネイティブアプリの構築
&lt;ul&gt;
&lt;li&gt;Android Manifest Editor&lt;/li&gt;
&lt;li&gt;JavaScript/TypeScript での CodeLens&lt;/li&gt;
&lt;li&gt;JavaScript/TypeScript のシンタックスハイライト&lt;/li&gt;
&lt;li&gt;ASP.NET Core の Web API 開発&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ゲーム開発の効率化
&lt;ul&gt;
&lt;li&gt;Unreal Engine ログビューア&lt;/li&gt;
&lt;li&gt;Tim Jones による HLSL ツール拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ クロスプラットフォームコードベースの持ち込み
&lt;ul&gt;
&lt;li&gt;CMake デバッガー&lt;/li&gt;
&lt;li&gt;Unix 向けリモートファイルエクスプローラー&lt;/li&gt;
&lt;li&gt;STM32CubeIDE プロジェクトのインポート&lt;/li&gt;
&lt;li&gt;Vcpkg&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;エンタープライズ管理
&lt;ul&gt;
&lt;li&gt;組織によるイントラネットウェブサイトでの Visual Studio レイアウトのホストとデプロイ&lt;/li&gt;
&lt;li&gt;リポジトリーの任意の場所で複数の .vsconfig をサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-8-preview-4.net-blog"&gt;Announcing .NET 8 Preview 4 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-4/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-4/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MSBuild: New, modern terminal build output&lt;/li&gt;
&lt;li&gt;MSBuild: 新しい、モダンなターミナルビルド出力&lt;/li&gt;
&lt;li&gt;SDK: 出力パスの単純化のアップデート
&lt;ul&gt;
&lt;li&gt;artifacts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;テンプレートエンジン: Nuget.org からのパッケージのセキュアな体験&lt;/li&gt;
&lt;li&gt;NuGet: Linux での署名されたパッケージの検証&lt;/li&gt;
&lt;li&gt;NuGet: セキュリティー脆弱性に関するパッケージ依存関係の監査&lt;/li&gt;
&lt;li&gt;ライブラリー: UTF-8 サポートの改善
&lt;ul&gt;
&lt;li&gt;IUtf8SpanFormattable&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;時刻の抽象化の導入
&lt;ul&gt;
&lt;li&gt;TimeProvider&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;System.Runtime.Intrinsics.Vector512 と AVX-512&lt;/li&gt;
&lt;li&gt;Native AOT の改善&lt;/li&gt;
&lt;li&gt;Linux distro バージョンサポート&lt;/li&gt;
&lt;li&gt;System.Text.Json: 読み取り専用メンバーの収集&lt;/li&gt;
&lt;li&gt;System.Text.Json 改善
&lt;ul&gt;
&lt;li&gt;JsonSerializer.IsReflectionEnabledByDefault&lt;/li&gt;
&lt;li&gt;JsonSerializerOptions.TypeInfoResolverChain&lt;/li&gt;
&lt;li&gt;JsonSerializerOptions.TryGetTypeInfo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;コード生成
&lt;ul&gt;
&lt;li&gt;連続したレジスターの割り当て&lt;/li&gt;
&lt;li&gt;最適化された ThreadStatic フィールドアクセス&lt;/li&gt;
&lt;li&gt;Arm64&lt;/li&gt;
&lt;li&gt;コードのベクトル化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ef-core-8-preview-4-primitive-collections-and-improved-contains.net-blog"&gt;EF Core 8 Preview 4: Primitive collections and improved Contains - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-4/"&gt;https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 8 Preview 4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは LINQ 内での Contains の変換のサポート、OPENJSON のサポート、接続先 SQL Server の互換性レベルの指定、プリミティブコレクションのカラムサポートなどが含まれている。&lt;/p&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-4.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 4 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-4/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 4 での ASP.NET Core のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blazor
&lt;ul&gt;
&lt;li&gt;Blazor コンポーネントのストリーミングレンダリング&lt;/li&gt;
&lt;li&gt;Blazor SSR のフォーム送信のハンドリング&lt;/li&gt;
&lt;li&gt;Blazor での名前付き要素へのルート&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly アプリの Webcli パッケージング&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API オーサリング
&lt;ul&gt;
&lt;li&gt;Minimal APIs でのフォームバインディングの拡張サポート&lt;/li&gt;
&lt;li&gt;.http ファイルを含む API プロジェクトテンプレート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Native AOT
&lt;ul&gt;
&lt;li&gt;コンパイル時生成 Minimal APIs でのロギングと例外ハンドリング&lt;/li&gt;
&lt;li&gt;ASP.NET Core トップレベル API のトリム警告アノテーション&lt;/li&gt;
&lt;li&gt;構成可能な HTTPS サポートでのアプリサイズの削減&lt;/li&gt;
&lt;li&gt;Worker サービステンプレートの更新&lt;/li&gt;
&lt;li&gt;スリムビルダーに構成されたデフォルトのサービスの追加&lt;/li&gt;
&lt;li&gt;API テンプレート JSON 構成の変更&lt;/li&gt;
&lt;li&gt;コンパイラー生成 IAsyncEnumerable の特殊な型の JSON シリアライズサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;認証と認可
&lt;ul&gt;
&lt;li&gt;アイデンティティ API エンドポイント&lt;/li&gt;
&lt;li&gt;IAuthorizationRequirementData でのカスタム認可ポリシーのサポート向上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ASP.NET Core メトリクス&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rx.net-v6.0-now-available-endjin"&gt;Rx.NET v6.0 Now Available | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2023/05/rx-dotnet-v6-released"&gt;https://endjin.com/blog/2023/05/rx-dotnet-v6-released&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rx.NET v6.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 6/7 のサポートやトリミングのサポート、snupkg を使用したシンボルの提供、その他の改善が含まれている。&lt;/p&gt;
&lt;p&gt;記事では Async Rx.NET のアルファ版の案内や v6.0 での更新点について、この先についてといったことについて書かれている。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.7-preview-1-is-here-visual-studio-blog"&gt;Visual Studio 2022 17.7 Preview 1 is here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-preview-1-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-preview-1-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.7 Preview 1 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性
&lt;ul&gt;
&lt;li&gt;ファイルの比較&lt;/li&gt;
&lt;li&gt;マルチブランチグラフおよび Git リポジトリの改善&lt;/li&gt;
&lt;li&gt;テキストのコピーとインデントの削除&lt;/li&gt;
&lt;li&gt;All-in-One 検索強化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET とクラウド開発
&lt;ul&gt;
&lt;li&gt;IntelliTest の .NET 6 および .NET Standard でのサポート&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly の Azure Static Web Apps への発行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ とゲーム開発
&lt;ul&gt;
&lt;li&gt;Unreal Engine C++ マクロフォーマット&lt;/li&gt;
&lt;li&gt;Unreal Engine C++ 名前規約チェッカー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="hot-reload-supports-modifying-generics.net-blog"&gt;Hot Reload Supports Modifying Generics! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/hot-reload-generics/"&gt;https://devblogs.microsoft.com/dotnet/hot-reload-generics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ジェネリクスのコードを変更した際のホットリロードが .NET 8 でサポートされることについての解説。&lt;/p&gt;
&lt;p&gt;以下のシナリオでのホットリロードがサポートされるようになる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新しい (静的, インスタンス) メソッドの(非)ジェネリック型への追加&lt;/li&gt;
&lt;li&gt;新しい (静的, インスタンス) ジェネリックメソッドの(非)ジェネリック型への追加&lt;/li&gt;
&lt;li&gt;(非)ジェネリック型の既存の (静的, インスタンス) メソッドの編集&lt;/li&gt;
&lt;li&gt;(非)ジェネリック型の既存の (静的, インスタンス) ジェネリックメソッドの編集&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="client-support-for-calling-wcfcorewcf-with-system.servicemodel-6.0-is-here.net-blog"&gt;Client Support for Calling WCF/CoreWCF with System.ServiceModel 6.0 Is Here! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/wcf-client-60-has-been-released/"&gt;https://devblogs.microsoft.com/dotnet/wcf-client-60-has-been-released/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WCF/CoreWCF を呼び出す WCF クライアントである System.ServiceModel の 6.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;System.ServiceModel は Microsoft によりサポートされる WCF クライアントライブラリー。&lt;/p&gt;
&lt;p&gt;このリリースでは NetNamedPipe サポートの追加、.NET Standard および .NET Framework サポートの削除、System.ServiceModel.Duplex および Security の非推奨化といったアップデートが含まれている。&lt;/p&gt;
&lt;h3 id="resharper-and-rider-2023.1.2-more-bug-fixes-released-the.net-tools-blog"&gt;ReSharper and Rider 2023.1.2 – More Bug-fixes Released | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/17/rsrp-and-rider-2023-1-2-bug-fixes/"&gt;https://blog.jetbrains.com/dotnet/2023/05/17/rsrp-and-rider-2023-1-2-bug-fixes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2023.1.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは様々な不具合の修正が行われている。&lt;/p&gt;
&lt;h3 id="xamarin.forms-and-essentials-now-target-android-13-in-preview-xamarin-blog"&gt;Xamarin.Forms and Essentials now target Android 13 (in Preview) - Xamarin Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/xamarin/xamarin-forms-essentials-target-android13-preview/"&gt;https://devblogs.microsoft.com/xamarin/xamarin-forms-essentials-target-android13-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Xamarin.Forms と Essentials が Android 13 をターゲットにできるようになった(プレビュー)。&lt;/p&gt;
&lt;p&gt;.NET と .NET MAUI では Android 13 がすでにサポートされている。&lt;/p&gt;
&lt;h3 id="get-ready-for-visual-studio-at-build-2023-join-tens-of-thousands-online-visual-studio-blog"&gt;Get Ready for Visual Studio at Build 2023: Join Tens of Thousands Online! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/get-ready-for-visual-studio-at-build-2023-join-tens-of-thousands-online/"&gt;https://devblogs.microsoft.com/visualstudio/get-ready-for-visual-studio-at-build-2023-join-tens-of-thousands-online/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5月23日から25日にかけて行われる Microsoft Build 2023 での Visual Studio に関連するセッションなどの紹介。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="object-detection-in-ml.net-model-builder.net-blog"&gt;Object Detection in ML.NET Model Builder - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/object-detection-ml-dotnet-model-builder/"&gt;https://devblogs.microsoft.com/dotnet/object-detection-ml-dotnet-model-builder/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET Model Builder を使用してオブジェクト検出を行う紹介。&lt;/p&gt;
&lt;h3 id="get-started-with-chatgpt-in.net.net-blog"&gt;Get started with ChatGPT in .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/get-started-chatgpt-azure-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/get-started-chatgpt-azure-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET から OpenAI API を使用するシリーズ。ChatGPT (チャットとプロンプト) についての解説。&lt;/p&gt;
&lt;h3 id="sticky-scroll-stay-in-the-right-context-visual-studio-blog"&gt;Sticky Scroll: Stay in the Right Context - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/sticky-scroll-stay-in-the-right-context/"&gt;https://devblogs.microsoft.com/visualstudio/sticky-scroll-stay-in-the-right-context/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 で追加されたスティッキースクロール機能の紹介。&lt;/p&gt;
&lt;h3 id="calendar-control-from-scratch-on.net-maui"&gt;Calendar Control from scratch on .NET MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/serhii_korol_ab7776c50dba/calendar-control-from-scratch-on-net-maui-5dh6"&gt;https://dev.to/serhii_korol_ab7776c50dba/calendar-control-from-scratch-on-net-maui-5dh6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI でカレンダーコントロールを一から作ってみるという記事。&lt;/p&gt;
&lt;h3 id="using-octokit.graphql-to-interact-with-the-github-discussions-api"&gt;Using Octokit.GraphQL to interact with the GitHub discussions API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/using-octokit-graphql-to-interact-with-the-github-discussions-api/"&gt;https://andrewlock.net/using-octokit-graphql-to-interact-with-the-github-discussions-api/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Octokit.GraphQL NuGet パッケージを使用して GitHub ディスカッションの API を使用する方法について。&lt;/p&gt;
&lt;p&gt;記事ではディスカッションの取得や作成、レートリミットなどについて解説している。&lt;/p&gt;
&lt;h3 id="integration-tests-for-aws-serverless-solution"&gt;Integration tests for AWS serverless solution&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/ohalay/integration-tests-for-aws-serverless-solution-12aj"&gt;https://dev.to/ohalay/integration-tests-for-aws-serverless-solution-12aj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS サーバーレス構成のアプリケーションを統合テストする方法について。&lt;/p&gt;
&lt;p&gt;LocalStack を使用してローカルコンテナーを動かすことでユニットテストを実行する方法を紹介している。&lt;/p&gt;
&lt;h3 id="how-to-control-visual-studio-from-an-external-application-gerald-barre"&gt;How to Control Visual Studio from an external application - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/control-visual-studio-from-an-external-application.htm"&gt;https://www.meziantou.net/control-visual-studio-from-an-external-application.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;COM 経由で Visual Studio のインスタンスを取得し、操作する方法について。&lt;/p&gt;
&lt;h3 id="are-compiled-queries-really-efficient-on-c-ef-core"&gt;Are compiled queries really efficient on C# EF Core?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://goatreview.com/are-compiled-queries-efficient-efcore/"&gt;https://goatreview.com/are-compiled-queries-efficient-efcore/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core のコンパイル済みクエリーは効果的なのかどうかについて。&lt;/p&gt;
&lt;p&gt;コンパイル済みクエリーは特定のパターンで効果的ではあるがそうでないパターンも多いため、利用にはテストすることやクエリーそのものを見直すことなどをすめてている。&lt;/p&gt;
&lt;h3 id="concurrent-hosted-service-start-and-stop-in.net-8-steve-gordon-code-with-steve"&gt;Concurrent Hosted Service Start and Stop in .NET 8 - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/concurrent-hosted-service-start-and-stop-in-dotnet-8"&gt;https://www.stevejgordon.co.uk/concurrent-hosted-service-start-and-stop-in-dotnet-8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Microsoft.Extensions.Hosting ではホストの起動と停止が並列化されることについて。&lt;/p&gt;
&lt;p&gt;記事では開始と停止が並列化されることによる影響や並列化を無効にする方法などを解説している。&lt;/p&gt;
&lt;h3 id="netnugetglobal-using"&gt;.NETのNuGetパッケージからアプリにglobal usingを自動で追加する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2023-05-15-global-usings"&gt;https://zenn.dev/nuits_jp/articles/2023-05-15-global-usings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;インストールすることで global using が自動で追加されるような NuGet パッケージを作る方法について。&lt;/p&gt;
&lt;h3 id="microsoft-build-cloud-skills-challenge"&gt;Microsoft Build | Cloud Skills Challenge&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.microsoft.com/ja-JP/cloudskillschallenge/build/officialrules/2022"&gt;https://www.microsoft.com/ja-JP/cloudskillschallenge/build/officialrules/2022&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Build 2023 に合わせたキャンペーン。チャレンジを完了することで Microsoft 認定資格試験を一つ無料で受ける権利をもらえる。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="drasticactionsllamamaui"&gt;drasticactions/LLaMAMaui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/llamamaui"&gt;https://github.com/drasticactions/llamamaui&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;llama.cpp の .NET MAUI 向けバインディング。&lt;/p&gt;
&lt;!-- https://twitter.com/drasticactions/status/1658867229637898240?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I wrote a small MAUI app to show off llama.cpp .NET Bindings running on more platforms. It works well! Although with multi-gig file sizes for the models, it&amp;#39;s not that great on phones. Still, it does work though! 😉&lt;a href="https://t.co/rZsq6GpvNQ"&gt;https://t.co/rZsq6GpvNQ&lt;/a&gt; &lt;a href="https://t.co/v2cgs2uBWO"&gt;pic.twitter.com/v2cgs2uBWO&lt;/a&gt;&lt;/p&gt;&amp;mdash; Drastic Actions (&amp;#64;drasticactions) &lt;a href="https://twitter.com/drasticactions/status/1658867229637898240?ref_src=twsrc%5Etfw"&gt;May 17, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="introduction-rust-for-c.net-developers"&gt;Introduction - Rust for C#/.NET Developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://microsoft.github.io/rust-for-dotnet-devs/latest/"&gt;https://microsoft.github.io/rust-for-dotnet-devs/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C#/.NET 開発者向けの Rust 解説ドキュメント。&lt;/p&gt;
&lt;p&gt;.NET のものが Rust ではどのように表現されるのかといったことを説明している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/rust-for-dotnet-devs"&gt;microsoft/rust-for-dotnet-devs: Rust for C#/.NET Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;ClaimsPrincipal のデバッガー上での表示がマシになるという話。ASP.NET Core のほかの型も対応するとのこと。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/48205"&gt;ASP.NET Core ❤️ Debugging · Issue #48205 · dotnet/aspnetcore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://twitter.com/jamesnk/status/1659366431920898049?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Debugging ClaimsPrincipal is better in .NET 8 &lt;a href="https://t.co/SKu5wbgQSm"&gt;https://t.co/SKu5wbgQSm&lt;/a&gt; &lt;a href="https://t.co/esWQ1aqShC"&gt;pic.twitter.com/esWQ1aqShC&lt;/a&gt;&lt;/p&gt;&amp;mdash; James Newton-King ♔ (&amp;#64;JamesNK) &lt;a href="https://twitter.com/JamesNK/status/1659366431920898049?ref_src=twsrc%5Etfw"&gt;May 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;AWS FOSS fund が Avalonia UI をスポンサーしたという話。&lt;/p&gt;
&lt;!-- https://twitter.com/dotnetonaws/status/1658578068762394625?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;For the month of May, the .NET on AWS FOSS fund is proud to have selected Avalonia UI as part of its monthly pledge to sponsor .NET &lt;a href="https://twitter.com/hashtag/OSS?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#OSS&lt;/a&gt; projects. 🎉&lt;br&gt;Our selection committee awarded &lt;a href="https://twitter.com/AvaloniaUI?ref_src=twsrc%5Etfw"&gt;&amp;#64;AvaloniaUI&lt;/a&gt; 12 $500 payments totaling $6k in funding. Thanks for empowering the &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; ecosystem! &lt;a href="https://t.co/WunElv1Dql"&gt;pic.twitter.com/WunElv1Dql&lt;/a&gt;&lt;/p&gt;&amp;mdash; .NET on AWS (&amp;#64;dotnetonAWS) &lt;a href="https://twitter.com/dotnetonAWS/status/1658578068762394625?ref_src=twsrc%5Etfw"&gt;May 16, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="api-diff-between.net-8.0-preview-3-and.net-8-preview-4-by-carlossanlop-pull-request-8469-dotnetcore"&gt;API diff between .NET 8.0 Preview 3 and .NET 8 Preview 4 by carlossanlop · Pull Request #8469 · dotnet/core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/pull/8469"&gt;https://github.com/dotnet/core/pull/8469&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 から 4 への API の差分&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/05/14/updates</id>
		<title>2023-05-14: Windows App SDK v1.3.1, Visual Studio UI Refresh, .NET Framework 4.8.1 on Windows Update and Catalog</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/05/14/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-05-14T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-v1.3.1-microsoftwindowsappsdk"&gt;Release v1.3.1 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3.1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK v1.3.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかのクラッシュする問題の修正やテンプレートの更新などが含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-131-13230502000"&gt;Version 1.3.1 (1.3.230502000) - Stable channel release notes for the Windows App SDK - Windows apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-ui-refresh-visual-studio-blog"&gt;Visual Studio UI Refresh - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-ui-refresh/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-ui-refresh/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の UI をリフレッシュする計画についてのアナウンス。&lt;/p&gt;
&lt;p&gt;将来的に Visual Studio の UI を Fluent Design に準じたものへアップデートすることを計画していること、現時点でのデザイン案の共有、フィードバックの受け付けについてなど。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developercommunity.visualstudio.com/t/Feedback-on-the-Visual-Studio-UI-Refresh/10351411"&gt;Feedback on the Visual Studio UI Refresh - Developer Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="upcoming-availability-of.net-framework-4.8.1-on-windows-update-and-catalog.net-blog"&gt;Upcoming availability of .NET Framework 4.8.1 on Windows Update and Catalog - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/upcoming-availability-of-net-framework-4-8-1-on-windows-update-and-catalog/"&gt;https://devblogs.microsoft.com/dotnet/upcoming-availability-of-net-framework-4-8-1-on-windows-update-and-catalog/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework 4.8.1 が Windows Update と Windows Updaet Catalog から利用可能となることについてのアナウンス。&lt;/p&gt;
&lt;p&gt;今後数週間かけて Windows Update および Windows Update Catalog から .NET Framework 4.8.1 が配信される。配信は Windows Insider Preview の Release Preview から展開される。&lt;/p&gt;
&lt;p&gt;記事ではダウンロード方法や言語パック、自動更新のブロック、その他 FAQ について書かれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="azure.ai.openai-openai-azure-openai-service"&gt;Azure.AI.OpenAI パッケージで OpenAI と Azure OpenAI Service に繋ぐときの違い&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/howtouser-azure-ai-openai"&gt;https://zenn.dev/microsoft/articles/howtouser-azure-ai-openai&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure.AI.OpenAI NuGet パッケージでは OpenAI API と Azure OpenAI Service の両方に対応しているが、利用設定時に若干異なる部分があることについて。&lt;/p&gt;
&lt;h3 id="visualizing-data-in-dotnet-with-polyglot-notebooks-and-sanddance"&gt;Visualizing Data in dotnet with Polyglot Notebooks and SandDance&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/integerman/visualizing-data-in-dotnet-with-polyglot-notebooks-and-sanddance-55k9"&gt;https://dev.to/integerman/visualizing-data-in-dotnet-with-polyglot-notebooks-and-sanddance-55k9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polyglot Notebooks でデータビジュアライズのライブラリー SandDance を C# コードから利用する方法について。&lt;/p&gt;
&lt;h3 id="level-up-your-gpt-game-with-prompt-engineering.net-blog"&gt;Level up your GPT game with prompt engineering - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/gpt-prompt-engineering-openai-azure-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/gpt-prompt-engineering-openai-azure-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenAI の ChatGPT を呼び出す際に役立つプロンプトエンジニアリングについて。&lt;/p&gt;
&lt;h3 id="join-us-for-hacktogether-the-microsoft-teams-global-hack.net-blog"&gt;Join us for HackTogether: The Microsoft Teams Global Hack - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/hacktogether-microsoft-teams-global-hack/"&gt;https://devblogs.microsoft.com/dotnet/hacktogether-microsoft-teams-global-hack/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Teams のバーチャルハッカソンイベントについて。&lt;/p&gt;
&lt;p&gt;6月1日にキーノートとともに開始し、15日までの間で開発、提出を行うイベント。いくつかの省が用意され、勝者には賞品が贈られる。&lt;/p&gt;
&lt;h3 id="net"&gt;.NET のオプション パターンで設定が正しい値かどうか検証をしたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/options-pattern-validation"&gt;https://zenn.dev/microsoft/articles/options-pattern-validation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core をはじめとした Microsoft.Extensions.Options をを使用したオプションパターンで設定値を検証する方法について。&lt;/p&gt;
&lt;p&gt;記事では Microsoft.Extensions.Options.DataAnnotations を使用して DataAnnotations で検証する方法を紹介している。&lt;/p&gt;
&lt;h3 id="ef-coreupdate-qiita"&gt;EF Coreで正しくUPDATEする方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jun1s/items/3e2b3702a965bb5e2705"&gt;https://qiita.com/jun1s/items/3e2b3702a965bb5e2705&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で間違えて使用される Update メソッドについてや Detach されているエンティティから更新する方法についてなど。&lt;/p&gt;
&lt;h3 id="surround-selection-experiment-visual-studio-blog"&gt;Surround selection experiment - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/surround-selection-experiment/"&gt;https://devblogs.microsoft.com/visualstudio/surround-selection-experiment/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;選択範囲を囲むような入力を実現する機能について。&lt;/p&gt;
&lt;p&gt;実際に製品に組み込む前の実験的な拡張を提供し、すべての言語に適用できるか検証を行いフィードバックを求めている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=MadsKristensen.Surrounder"&gt;Surrounder - Visual Studio Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="api-versioning-and-swagger-in-asp.net-core-7.0"&gt;API versioning and Swagger in ASP.NET Core 7.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://mohsen.es/api-versioning-and-swagger-in-asp-net-core-7-0-fe45f67d8419"&gt;https://mohsen.es/api-versioning-and-swagger-in-asp-net-core-7-0-fe45f67d8419&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core でバージョニングされた API を提供し、Swagger を Bearer 認証で利用できるようにするまでの手順を説明している。&lt;/p&gt;
&lt;h3 id="top-10-c-conference-talks-20192022"&gt;Top 10 C# conference talks 2019–2022&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://unicorn-dev.medium.com/top-10-c-conference-talks-2019-2022-78c049b2d6e9"&gt;https://unicorn-dev.medium.com/top-10-c-conference-talks-2019-2022-78c049b2d6e9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019年から2022年に行われた C# 関連のカンファレンスのセッション10選。&lt;/p&gt;
&lt;h3 id="how-to-use-visual-studio-like-a-pro-when-presenting-your-code"&gt;How to Use Visual Studio Like a Pro When Presenting Your Code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/this-is-learning/how-to-use-visual-studio-like-a-pro-when-presenting-your-code-5955"&gt;https://dev.to/this-is-learning/how-to-use-visual-studio-like-a-pro-when-presenting-your-code-5955&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プレゼンテーションで Visual Studio を使用するためのモードを用意する方法について。&lt;/p&gt;
&lt;h3 id="modern-minimal-workers-in.net-anthony-simmon"&gt;Modern minimal workers in .NET | Anthony Simmon&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://anthonysimmon.com/dotnet-minimal-workers/"&gt;https://anthonysimmon.com/dotnet-minimal-workers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generic Host と Top-level Statements を使用して Worker 型のをアプリケーションを実装する方法について。&lt;/p&gt;
&lt;h3 id="net-market-history-in-china"&gt;.NET Market History in China&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://tonyqus.medium.com/net-market-history-in-china-d057e1f24d0f"&gt;https://tonyqus.medium.com/net-market-history-in-china-d057e1f24d0f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;中国における .NET の状況の今昔。&lt;/p&gt;
&lt;h3 id="semantic-kernel-v0.13.442.1-preview"&gt;Semantic Kernel v0.13.442.1-preview がリリースされました&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-12"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel v0.13.442.1-preview での更新点について。&lt;/p&gt;
&lt;p&gt;gRPC をスキルとして読み込めるようになったことや Azure Cognitive Search を Semantic Memory として利用できるようになったこと、Completion のストリーミング対応などについて。&lt;/p&gt;
&lt;h3 id="how-to-start-using.net-background-services-the.net-tools-blog"&gt;How to start using .NET Background Services | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/09/dotnet-background-services/"&gt;https://blog.jetbrains.com/dotnet/2023/05/09/dotnet-background-services/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generic Host でバックグラウンドで処理を行う BackgroundService の開発の始め方について。&lt;/p&gt;
&lt;h3 id="net-maui-webviews-how-to-play-videos-in-full-screen"&gt;.NET MAUI WebViews: How to Play Videos in Full Screen&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/vhugogarcia/net-maui-webviews-how-to-play-videos-in-full-screen-1j03"&gt;https://dev.to/vhugogarcia/net-maui-webviews-how-to-play-videos-in-full-screen-1j03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI の Android WebView で全画面動画再生を行う方法について。&lt;/p&gt;
&lt;h3 id="how-to-download-files-from-secure-ftp-server-sftp-using-winscp-in.net"&gt;How to Download Files from Secure FTP Server (SFTP) using WinSCP in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://juldhais.net/how-to-download-files-from-secure-ftp-server-sftp-using-winscp-in-net-895fbb44362c"&gt;https://juldhais.net/how-to-download-files-from-secure-ftp-server-sftp-using-winscp-in-net-895fbb44362c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinSCP の .NET 向けスクリプティングライブラリーを利用して SFTP サーバーからファイルをダウンロードする方法について。&lt;/p&gt;
&lt;h3 id="raiders-of-the-lost-root-looking-for-memory-leaks-in.net"&gt;Raiders of the lost root: looking for memory leaks in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/raiders-of-the-lost-root-looking-for-memory-leaks-in-net-28febafebac1"&gt;https://chnasarre.medium.com/raiders-of-the-lost-root-looking-for-memory-leaks-in-net-28febafebac1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C++ Profiler API を使用してオブジェクトの参照を辿ってメモリーリークを探す方法について。&lt;/p&gt;
&lt;h3 id="go-for-c-developers-defer-is-not-idisposable"&gt;Go for C# developers: defer is not IDisposable&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.cellfish.se/2023/05/go-for-c-developers-defer-is-not.html"&gt;https://blog.cellfish.se/2023/05/go-for-c-developers-defer-is-not.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go の defer と C# の IDisposable (using) の違いについて。一見似ていて勘違いしそうであるが defer は関数スコープとなる。&lt;/p&gt;
&lt;h3 id="reading-windows-application-manifest-of-an-exe-in.net-gerald-barre"&gt;Reading Windows Application Manifest of an exe in .NET - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/reading-windows-application-manifest-of-an-exe-in-dotnet.htm"&gt;https://www.meziantou.net/reading-windows-application-manifest-of-an-exe-in-dotnet.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;実行ファイル (.exe) ファイルのマニフェストファイルを Win32 API を使用して読み出す方法について。&lt;/p&gt;
&lt;h3 id="c"&gt;C# で始める並列化：目次&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/k_taro56/articles/vetcorized-csharp-introduction"&gt;https://zenn.dev/k_taro56/articles/vetcorized-csharp-introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SIMD を使用した並列化についてのシリーズ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/k_taro56/articles/vetcorized-csharp-array-summation"&gt;C# で始める並列化：配列の総和&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;イベント&lt;/h2&gt;
&lt;h3 id="net-20235-connpass"&gt;.NETラボ 勉強会 2023年5月 - connpass&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnetlab.connpass.com/event/281932/"&gt;https://dotnetlab.connpass.com/event/281932/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5月27日(土)に開催されるオンライン勉強会。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tanzu Application Platform と Azure Spring Apps によるマイクロサービスアプリケーション開発のアジリティ向上&lt;/li&gt;
&lt;li&gt;C# の async/await は実際にどうやって動いているか&lt;/li&gt;
&lt;li&gt;C#とUnityによる初めてのゲーム開発&lt;/li&gt;
&lt;li&gt;Semantic Kernel(C#)でAzure OpenAI ServiceのGTP-4を使ってみる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="chatgpt-apitmcgpt-debuggerv2.0-beta"&gt;ChatGPT APIクライアントアプリ『TmCGPT Debugger』v2.0-beta&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jun_murakami/articles/a5ca626eb8204b"&gt;https://zenn.dev/jun_murakami/articles/a5ca626eb8204b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia UI で実装された ChatGPT の API クライアント。&lt;/p&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;.NET 8 のマネージドヒープの種類。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1657007196171902976?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Types of managed heaps in .NET 8.0: (&lt;a href="https://t.co/BoJeF91nZN"&gt;https://t.co/BoJeF91nZN&lt;/a&gt; and &lt;a href="https://t.co/mhJlwsuMDx"&gt;https://t.co/mhJlwsuMDx&lt;/a&gt;) &lt;a href="https://t.co/OwZeOypp3r"&gt;pic.twitter.com/OwZeOypp3r&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1657007196171902976?ref_src=twsrc%5Etfw"&gt;May 12, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio でサポートされた .http ファイルのドキュメントが追加された。&lt;/p&gt;
&lt;!-- https://twitter.com/sayedihashimi/status/1656751184697339905?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We have added formal docs for the HTTP file support in &lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;VisualStudio&lt;/a&gt; at &lt;a href="https://t.co/MgJmde3wGn"&gt;https://t.co/MgJmde3wGn&lt;/a&gt;. We made sure to give credit to the VS Code REST Client extension as the inspiration for that support!&lt;/p&gt;&amp;mdash; Sayed I. Hashimi 🇺🇦 (&amp;#64;sayedihashimi) &lt;a href="https://twitter.com/sayedihashimi/status/1656751184697339905?ref_src=twsrc%5Etfw"&gt;May 11, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="delete-windows-arm32-support-by-jkotas-pull-request-86065-dotnetruntime"&gt;Delete Windows arm32 support by jkotas · Pull Request #86065 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/86065"&gt;https://github.com/dotnet/runtime/pull/86065&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 以前でサポートが終わっていた Windows の ARM32 サポートの削除 PR。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1656456755835027457?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We&amp;#39;ve purged the last pieces of win-arm32 support from .NET today :-) &lt;a href="https://t.co/1m90wvUNcA"&gt;https://t.co/1m90wvUNcA&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1656456755835027457?ref_src=twsrc%5Etfw"&gt;May 11, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/05/06/updates</id>
		<title>2023-05-06: Temporal .NET, Bob’s Used Books, .NET mobile Debugging in VS Code</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/05/06/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-05-06T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="introducing-temporal.net-deterministic-workflow-authoring-in.net"&gt;Introducing Temporal .NET – Deterministic Workflow Authoring in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://temporal.io/blog/introducing-temporal-dotnet"&gt;https://temporal.io/blog/introducing-temporal-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Temporal ワークフローエンジンで .NET のサポート追加のアナウンス。&lt;/p&gt;
&lt;p&gt;記事では C# でのワークフローの実装と呼び出し例のコードや仕組みについてなどを紹介している。&lt;/p&gt;
&lt;p&gt;現在 .NET SDK はアルファーリリースであり、API は変更の可能性があるが機能はすべて実装され、ベータと GA が近く公開予定とのこと。&lt;/p&gt;
&lt;h3 id="introducing-bobs-used-booksa-new-real-world.net-sample-application-amazon-web-services"&gt;Introducing Bob’s Used Books—a New, Real-World, .NET Sample Application | Amazon Web Services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/jp/blogs/aws/introducing-bobs-used-books-a-new-real-world-net-sample-application/"&gt;https://aws.amazon.com/jp/blogs/aws/introducing-bobs-used-books-a-new-real-world-net-sample-application/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AWS が .NET 6 で構築した Bob’s Used Books と呼ばれる架空の中古書店のコマースサイトのサンプルアプリケーションを公開した。&lt;/p&gt;
&lt;p&gt;このアプリケーションはコマースサイトの一連の機能を実装し、Amazon Web Service の各種サービスを利用するサンプルとして作られている。&lt;/p&gt;
&lt;p&gt;今後 App Runner や Amazon EKS などにデプロイするコンテンツなどを用意する予定であるとしている。&lt;/p&gt;
&lt;h3 id="announcing.net-mobile-debugging-in-vs-code.mobile-development-in-vs-code-with-uno-platform-or.net-maui"&gt;Announcing .NET mobile Debugging in VS Code. Mobile development in VS Code with Uno Platform or .NET MAUI.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/announcing-net-mobile-debugging-in-vs-code-mobile-development-in-vs-code-with-uno-platform-or-net-maui/"&gt;https://platform.uno/blog/announcing-net-mobile-debugging-in-vs-code-mobile-development-in-vs-code-with-uno-platform-or-net-maui/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform の Visual Studio Code 向けの拡張機能でモバイル開発がサポートされた。&lt;/p&gt;
&lt;p&gt;このサポートにより Windows, macOS, Linux での Visual Studio Code を利用した Uno Platform および .NET MAUI のビルドとデバッグが行えるようになる。&lt;/p&gt;
&lt;h3 id="release-2.2.6-mysql-netmysqlconnector"&gt;Release 2.2.6 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.2.6"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.2.6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Async MySQL Connector 2.2.6 がリリースされた。&lt;/p&gt;
&lt;p&gt;TransactionScope 内でロールバック時に発生したデッドロックの例外によってメモリーリークする問題などいくつかの修正が含まれている。&lt;/p&gt;
&lt;h3 id="release-2.6.111-stackexchangestackexchange.redis"&gt;Release 2.6.111 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.111"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.111&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.6.111 がリリースされた。&lt;/p&gt;
&lt;p&gt;Envoy プロキシーを使用した際のマルチスロットコマンドの対応やいくつかの不具合と改善が含まれている。&lt;/p&gt;
&lt;h3 id="release-release-v2.53.0-grpcgrpc-dotnet"&gt;Release Release v2.53.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.53.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.53.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gRPC (grpc-dotnet) v2.53.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;エラーメッセージの改善や .NET 6 でのトリミング有効時の例外の修正などいくつかの修正が含まれている。&lt;/p&gt;
&lt;h3 id="c-support-in-fleet-solution-view-unit-testing-and-more-the.net-tools-blog"&gt;C# Support in Fleet: Solution View, Unit Testing, and More! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/04/csharp-support-in-fleet-solution-view-unit-testing-and-more/"&gt;https://blog.jetbrains.com/dotnet/2023/05/04/csharp-support-in-fleet-solution-view-unit-testing-and-more/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Fleet の C# サポートにソリューションビューやユニットテストが追加された。&lt;/p&gt;
&lt;p&gt;記事ではソリューションビューとユニットテスト関連の機能についてのほか、マルチターゲットフレームワークプロジェクトのサポートの向上やソリューションプロパティー、ショートカットキーマップの追加、実行構成の変更対応の必要について触れている。&lt;/p&gt;
&lt;h3 id="rider-2023.2-roadmap-the.net-tools-blog"&gt;Rider 2023.2 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/03/rider-2023-2-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2023/05/03/rider-2023-2-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider 2023.2 のロードマップについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;言語サポートと改善&lt;/li&gt;
&lt;li&gt;ビルドツールウィンドウの再構築&lt;/li&gt;
&lt;li&gt;新しい UI&lt;/li&gt;
&lt;li&gt;新しいソリューションウィザード&lt;/li&gt;
&lt;li&gt;ゲーム開発
&lt;ul&gt;
&lt;li&gt;Unity
&lt;ul&gt;
&lt;li&gt;DOTS サポートの継続&lt;/li&gt;
&lt;li&gt;UI Toolkit&lt;/li&gt;
&lt;li&gt;シェーダー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unreal Engine
&lt;ul&gt;
&lt;li&gt;パフォーマンスの改善&lt;/li&gt;
&lt;li&gt;デバッグ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;設定の同期&lt;/li&gt;
&lt;li&gt;その他改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="resharper-2023.2-roadmap-the.net-tools-blog"&gt;ReSharper 2023.2 Roadmap | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/03/resharper-2023-2-roadmap/"&gt;https://blog.jetbrains.com/dotnet/2023/05/03/resharper-2023-2-roadmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains ReSharper 2023.2 のロードマップについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;言語サポートと改善&lt;/li&gt;
&lt;li&gt;パフォーマンス&lt;/li&gt;
&lt;li&gt;プレディクティブ デバッガー&lt;/li&gt;
&lt;li&gt;コードスタイル&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing-a-new-version-of-the.net-upgrade-assistant-with-support-for.net-maui-and-azure-functions.net-blog"&gt;Announcing a new version of the .NET Upgrade Assistant with support for .NET MAUI and Azure Functions! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/upgrade-assistant-general-availability/"&gt;https://devblogs.microsoft.com/dotnet/upgrade-assistant-general-availability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Upgrade Assistant の新しいバージョンがリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンでは .NET MAUI や Azure Functions のアップグレードに対応している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NET 8 のサポート&lt;/li&gt;
&lt;li&gt;Xamarin.Forms から .NET MAUI へのアップグレード&lt;/li&gt;
&lt;li&gt;Azure Functions のアップグレード&lt;/li&gt;
&lt;li&gt;UWP から WinUI へのアップグレード&lt;/li&gt;
&lt;li&gt;ARM64 のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;記事では機能の強化についてのほか、.NET MAUI と Azure Functions のアップグレードについて解説している。&lt;/p&gt;
&lt;h3 id="announcing-copilot-chat-semantic-kernel"&gt;Announcing Copilot Chat | Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/semantic-kernel/announcing-copilot-chat/"&gt;https://devblogs.microsoft.com/semantic-kernel/announcing-copilot-chat/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel に Copilot Chat という仕組みが追加された。&lt;/p&gt;
&lt;p&gt;Copilot Chat を使用することで LLM ベースのカスタムのチャットボットをアプリケーションに組み込むことができるようになる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="real-time-charts-with-blazor-signalr-and-apexcharts"&gt;Real-time charts with Blazor, SignalR and ApexCharts&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.genezini.com/p/real-time-charts-with-blazor-signalr-and-apexcharts/"&gt;https://blog.genezini.com/p/real-time-charts-with-blazor-signalr-and-apexcharts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor WebAssembly と SignalR、ApexCharts を使用したリアルタイムなチャートのアプリケーションの実装について。&lt;/p&gt;
&lt;h3 id="unlock-the-power-of-nuget-essential-packages-for.net-rest-api-or-microservices"&gt;Unlock the Power of NuGet: Essential Packages for .NET REST API or Microservices&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://levelup.gitconnected.com/unlock-the-power-of-nuget-essential-packages-for-net-rest-api-or-microservices-b1c25cfbdefa"&gt;https://levelup.gitconnected.com/unlock-the-power-of-nuget-essential-packages-for-net-rest-api-or-microservices-b1c25cfbdefa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET サーバーアプリケーションで定番の NuGet パッケージの紹介まとめ。&lt;/p&gt;
&lt;h3 id="running-vite-with-asp.net-core-web-applications"&gt;Running Vite with ASP.NET Core Web Applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/running-vite-with-aspnet-core-web-applications"&gt;https://khalidabuhakmeh.com/running-vite-with-aspnet-core-web-applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Web アプリケーションでフロントエンドに Vite (TypeScript など) を使用して開発するための手順について。&lt;/p&gt;
&lt;h3 id="uploading-large-files-in-asp.net-core-code-maze"&gt;Uploading Large Files in ASP.NET Core - Code Maze&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code-maze.com/aspnetcore-upload-large-files/"&gt;https://code-maze.com/aspnetcore-upload-large-files/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core での巨大なファイルのアップロードの取り扱いについて。&lt;/p&gt;
&lt;h3 id="moving.net-apps-to-the-cloud"&gt;Moving .NET Apps to the Cloud&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/presentations/net-apps-cloud/"&gt;https://www.infoq.com/presentations/net-apps-cloud/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET アプリケーションをクラウドに移行することについてのセッションの書き起こし。&lt;/p&gt;
&lt;p&gt;リフトアンドシフトやコンテナープラットフォーム、クラウドネイティブで注意すべき点、サーバーレスについてやポータビリティなど。&lt;/p&gt;
&lt;h3 id="jetbrains.net-day-online-2023-call-for-speakers-the.net-tools-blog"&gt;JetBrains .NET Day Online 2023 – Call for Speakers | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/04/jetbrains-net-day-online-2023-call-for-speakers/"&gt;https://blog.jetbrains.com/dotnet/2023/05/04/jetbrains-net-day-online-2023-call-for-speakers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9月26日に開催される JetBrains .NET Day Online 2023 のスピーカー募集について。(英語)&lt;/p&gt;
&lt;h3 id="semantic-kernelgtp-4"&gt;Semantic KernelでGTP-4でのチャットアプリを実装する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/4fcc3f865036ad"&gt;https://zenn.dev/tomokusaba/articles/4fcc3f865036ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Server と Semantic Kernel で Azure OpenAI Services の GPT-4 を使用してチャットアプリを実装する方法について。&lt;/p&gt;
&lt;h3 id="c-winui-3"&gt;カスタムコントロールで自由に描画する（C# / WinUI 3）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/custom-control-draw"&gt;https://zenn.dev/shinta0806/articles/custom-control-draw&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 で自由な描画を行うカスタムコントロールを実装する方法について。&lt;/p&gt;
&lt;h3 id="signalrpostman"&gt;SignalRをPostmanでデバッグする&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/satoppepper/articles/8bdcff559d6c86"&gt;https://zenn.dev/satoppepper/articles/8bdcff559d6c86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Postman を使用して SignalR で通信するアプリケーションとメッセージをやり取りしてデバッグする手順について。&lt;/p&gt;
&lt;h3 id="web-api-development-in-visual-studio-2022-visual-studio-blog"&gt;Web API development in Visual Studio 2022 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/web-api-development-in-visual-studio-2022/"&gt;https://devblogs.microsoft.com/visualstudio/web-api-development-in-visual-studio-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6 のプレビューで強化された Web API 開発についての紹介&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;クライアントが統合された HTTP エディター&lt;/li&gt;
&lt;li&gt;API エンドポイントエクスプローラー&lt;/li&gt;
&lt;li&gt;スキャフォールディング&lt;/li&gt;
&lt;li&gt;Visual Studio での Entity Framework ツール&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="okazuki-semantic-kernel"&gt;日本マイクロソフトの大田さん (&amp;#64;okazuki) による Semantic Kernel の記事&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-10"&gt;Semantic Kernel でトークンの限界を超えるような長い文章を分割してスキルに渡して結果を結合したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-7"&gt;Semantic Kernel のテンプレートをプログラムでレンダリングする方法とテンプレートの文法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-8"&gt;Semantic Kernel で Open AI の Embeddings を使う (あいまい検索出来てすげーやつ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-6"&gt;Semantic Kernel でプランナーを使って自発的に解決策を考えて実行する AI を作ってみよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-9"&gt;Semantic Kernel で自作スキルをクラスライブラリ形式で共有したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-3"&gt;Semantic Kernel のネイティブ スキルを試してみよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-5"&gt;Semantic Kernel でトークンを数える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-4"&gt;Semantic Kernel のスキルを好きにカスタマイズしよう (余談です)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="jwt-authentication-with-c.net"&gt;JWT Authentication with C# .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/rmaurodev/jwt-authentication-with-c-net-1h4c"&gt;https://dev.to/rmaurodev/jwt-authentication-with-c-net-1h4c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で JWT を使用した Bearer 認証を実装する手順の紹介。&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-may-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | May 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/05/02/net-annotated-monthly-may-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/05/02/net-annotated-monthly-may-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による3月の .NET 関連情報まとめ。&lt;/p&gt;
&lt;h3 id="how-to-lock-orientation-at-runtime-on-ios-16-with.net-maui-and-xamarin.forms"&gt;How to lock orientation at runtime on iOS 16 with .NET MAUI and Xamarin.Forms&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msicc.net/how-to-lock-orientation-at-runtime-on-ios-16-with-net-maui-and-xamarin-forms/"&gt;https://msicc.net/how-to-lock-orientation-at-runtime-on-ios-16-with-net-maui-and-xamarin-forms/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iOS 16 上での .NET MAUI および Xamarin.Forms アプリケーションで実行時に回転ロックを行う方法について。&lt;/p&gt;
&lt;h3 id="verificationexception-in.net-framework-when-using-structs"&gt;VerificationException in .NET Framework when using structs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minidump.net/verificationexception-in-net-framework-when-using-structs-6269eb3df448"&gt;https://minidump.net/verificationexception-in-net-framework-when-using-structs-6269eb3df448&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework では値型を readonly フィールドにした上で部分信頼状態で実行すると VerificationException をスローするという問題の原因とその回避方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/issues/27382"&gt;VerificationException due to read-only struct use · Issue #27382 · dotnet/roslyn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="calling-internal-ctors-in-your-unit-tests"&gt;Calling internal ctors in your unit tests&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://haacked.com/archive/2023/05/01/calling-internal-ctors/"&gt;https://haacked.com/archive/2023/05/01/calling-internal-ctors/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ユニットテストで主に外部のライブラリーなどの型を使う場合に非公開なコンストラクターを呼び出すという手段について。&lt;/p&gt;
&lt;h3 id="netstandard.net-framework.netapi"&gt;.netstandardなアセンブリの中で.NET Frameworkや.NETのAPIをフルに使用する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/benutomo/articles/3365c3dc61a9d3"&gt;https://zenn.dev/benutomo/articles/3365c3dc61a9d3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Standard 向けにビルドされたアセンブリーから .NET Framework や .NET (Core) の API を使用する方法について。&lt;/p&gt;
&lt;p&gt;入り口となる .NET Standard 向けのビルドを用意して、それぞれのランタイム向けのアセンブリーを読み込み呼び出すという手法。&lt;/p&gt;
&lt;h3 id="uno-platform-for-figma-preview-5-enhanced-features-for-designers-and-developers"&gt;Uno Platform for Figma Preview 5: Enhanced Features for Designers and Developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/news/2023/04/uno-platform-figma-plugin-5/"&gt;https://www.infoq.com/news/2023/04/uno-platform-figma-plugin-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform の Figma 向けプラグインの Preview 5 での機能強化された点についての紹介。&lt;/p&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="constant-folding-for-simd-comparisons-by-egorbo-pull-request-85584-dotnetruntime"&gt;Constant folding for SIMD comparisons by EgorBo · Pull Request #85584 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/85584"&gt;https://github.com/dotnet/runtime/pull/85584&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SIMD 比較での定数畳み込みの PR。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1653014086534266881?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In .NET 8.0 JIT is able to perform constant folding for SIMD operations, example: (&lt;a href="https://t.co/CHwfC8CZ79"&gt;https://t.co/CHwfC8CZ79&lt;/a&gt;) &lt;a href="https://t.co/ZcWkp29jJf"&gt;pic.twitter.com/ZcWkp29jJf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1653014086534266881?ref_src=twsrc%5Etfw"&gt;May 1, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="allocate-array.empty-on-a-frozen-segment-nongc-heap-by-egorbo-pull-request-85559-dotnetruntime"&gt;Allocate Array.Empty on a frozen segment (NonGC heap) by EgorBo · Pull Request #85559 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/85559"&gt;https://github.com/dotnet/runtime/pull/85559&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Array.Empty&amp;lt;T&amp;gt;&lt;/code&gt; のオブジェクトは GC 対象とは別のセグメントに確保されるようになる、という話。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1653716548517806080?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Merged today a PR to make Array&amp;lt;T&amp;gt;.Empty cheaper than it used to be (basically a direct address to a frozen heap object) 🙂&lt;a href="https://t.co/mgA5kzZA4S"&gt;https://t.co/mgA5kzZA4S&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1653716548517806080?ref_src=twsrc%5Etfw"&gt;May 3, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="introducing-time-abstraction-whats-new-in.net-8-preview-4-wip-issue-8234-dotnetcore"&gt;Introducing Time abstraction - What's new in .NET 8 Preview 4 [WIP] · Issue #8234 · dotnet/core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/issues/8234#issuecomment-1530525108"&gt;https://github.com/dotnet/core/issues/8234#issuecomment-1530525108&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;時間に関する抽象化 API である TimeProvider が .NET 8 Preview 4 に。&lt;/p&gt;
&lt;!-- https://twitter.com/ufcpp/status/1653208094888046593?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="vi" dir="ltr"&gt;&lt;a href="https://t.co/mAHs5VkwZm"&gt;https://t.co/mAHs5VkwZm&lt;/a&gt;&lt;br&gt;TimeProviderもPreview 4で。&lt;/p&gt;&amp;mdash; ++C++; // 管理人: 岩永 (&amp;#64;ufcpp) &lt;a href="https://twitter.com/ufcpp/status/1653208094888046593?ref_src=twsrc%5Etfw"&gt;May 2, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/04/30/updates</id>
		<title>2023-04-30: SqlScriptDOM, Avalonia UI 11 Preview 7, ReSharper and Rider 2023.1.1</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/04/30/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-04-30T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="microsoftsqlscriptdom-scriptdomsqldom-is-a.net-library-for-parsing-t-sql-statements-and-interacting-with-its-abstract-syntax-tree"&gt;microsoft/SqlScriptDOM: ScriptDOM/SqlDOM is a .NET library for parsing T-SQL statements and interacting with its abstract syntax tree&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/SqlScriptDOM"&gt;https://github.com/microsoft/SqlScriptDOM&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://techcommunity.microsoft.com/t5/azure-sql-blog/scriptdom-net-library-for-t-sql-parsing-is-now-open-source/ba-p/3804284"&gt;ScriptDOM .NET library for T-SQL parsing is now open source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-11.0.0-preview-7-avaloniauiavalonia"&gt;Release 11.0.0 Preview 7 · AvaloniaUI/Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.0-preview7"&gt;https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.0-preview7&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-and-rider-2023.1.1-bug-fixes-are-here-the.net-tools-blog"&gt;ReSharper and Rider 2023.1.1 – Bug Fixes Are Here | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/27/resharper-and-rider-2023-1-1-bug-fixes/"&gt;https://blog.jetbrains.com/dotnet/2023/04/27/resharper-and-rider-2023-1-1-bug-fixes/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-framework-april-2023-cumulative-update-preview-updates.net-blog"&gt;.NET Framework April 2023 Cumulative Update Preview Updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-april-2023-cumulative-update-preview-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-april-2023-cumulative-update-preview-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v7.0.4-npgsqlnpgsql"&gt;Release v7.0.4 · npgsql/npgsql&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v7.0.4"&gt;https://github.com/npgsql/npgsql/releases/tag/v7.0.4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="join-the.net-team-at-microsoft-build-2023.net-blog"&gt;Join the .NET Team at Microsoft Build 2023! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/microsoft-build-2023-and-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/microsoft-build-2023-and-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="semantic-kernel"&gt;Semantic Kernel のスキルを外部ファイルで定義して読み込む&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-2"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="azure-openai-service-semantic-kernel-on-c"&gt;Azure OpenAI Service を便利に使うための Semantic Kernel を試してみよう on C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-1"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-winui-3"&gt;テーマの実際の色等をコードで取得する（C# / WinUI 3）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/theme-property"&gt;https://zenn.dev/shinta0806/articles/theme-property&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="exploring-javascript-and-typescript-development-in-visual-studio-visual-studio-blog"&gt;Exploring JavaScript and TypeScript Development in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/exploring-javascript-and-typescript-development-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/exploring-javascript-and-typescript-development-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="html-xml-json-and-jwt-visualizers-in-rider-2023.1-the.net-tools-blog"&gt;HTML, XML, JSON, and JWT Visualizers in Rider 2023.1 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/27/html-xml-json-and-jwt-visualizers-in-rider-2023-1/"&gt;https://blog.jetbrains.com/dotnet/2023/04/27/html-xml-json-and-jwt-visualizers-in-rider-2023-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="jetbrains-rider-the.net-tools-blog"&gt;JetBrains Rider を使ったリモート開発 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/ja/dotnet/2023/04/10/remote-development-with-jetbrains-rider/"&gt;https://blog.jetbrains.com/ja/dotnet/2023/04/10/remote-development-with-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-i-saved-my-production-database-with-one-simple-console-message"&gt;How I Saved My Production Database with One Simple Console Message&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/vanenshi/how-i-saved-my-production-database-with-one-simple-console-message-4fjm"&gt;https://dev.to/vanenshi/how-i-saved-my-production-database-with-one-simple-console-message-4fjm&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="creating-a-dapr-pluggable-component-for-supabase"&gt;Creating a Dapr pluggable component for Supabase&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/diagrid/creating-a-dapr-pluggable-component-for-supabase-32kj"&gt;https://dev.to/diagrid/creating-a-dapr-pluggable-component-for-supabase-32kj&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introduction-to-asp.net-core-minimal-apis-the.net-tools-blog"&gt;Introduction to ASP.NET Core Minimal APIs | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/25/introduction-to-asp-net-core-minimal-apis/"&gt;https://blog.jetbrains.com/dotnet/2023/04/25/introduction-to-asp-net-core-minimal-apis/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="send.net-application-traces-to-elasticsearch-using-elastic-apm-rum-agent"&gt;Send .Net application traces to Elasticsearch using Elastic APM / RUM agent&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.zenika.com/send-net-application-traces-to-elasticsearch-using-elastic-apm-rum-agent-d7ff111b1ef"&gt;https://medium.zenika.com/send-net-application-traces-to-elasticsearch-using-elastic-apm-rum-agent-d7ff111b1ef&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="observability.net-opentelemetry-collector"&gt;Observability .NET &amp;amp; OpenTelemetry Collector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/kim-ch/observability-net-opentelemetry-collector-25g1"&gt;https://dev.to/kim-ch/observability-net-opentelemetry-collector-25g1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-mauictrlenter-qiita"&gt;.NET MAUIでのCtrl+Enterなどのキーイベントハンドリングの難しさ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/selfstudy/items/d0f9520d3b40f8946d36"&gt;https://qiita.com/selfstudy/items/d0f9520d3b40f8946d36&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="converting-strings-to.net-objects-iparsable-and-ispanparsable"&gt;Converting Strings to .NET Objects – IParsable and ISpanParsable&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://csharp.christiannagel.com/2023/04/14/iparsable/"&gt;https://csharp.christiannagel.com/2023/04/14/iparsable/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="industrial-strength-controlled-concurrency-testing-for-c-programs-with-coyote-microsoft-research"&gt;Industrial-Strength Controlled Concurrency Testing for C# Programs with Coyote - Microsoft Research&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.microsoft.com/en-us/research/publication/industrial-strength-controlled-concurrency-testing-for-c-programs-with-coyote/"&gt;https://www.microsoft.com/en-us/research/publication/industrial-strength-controlled-concurrency-testing-for-c-programs-with-coyote/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="japanese-lets-learn.net-azure-youtube"&gt;[Japanese] Let's Learn .NET - Azure - YouTube&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/live/g5KIYx6p8Ek"&gt;https://www.youtube.com/live/g5KIYx6p8Ek&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/lets-learn-dotnet-anywhere-in-the-world/"&gt;Let's Learn .NET Virtual Events - All Around the World - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/g5KIYx6p8Ek" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id="get-started-with-openai-in.net.net-blog"&gt;Get started with OpenAI in .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/getting-started-azure-openai-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/getting-started-azure-openai-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windows-app-sdk-1.3-system-backdrop-appwindow"&gt;Windows App SDK 1.3 で System Backdrop の設定と AppWindow の利用が簡単になった - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20230425/1682412792"&gt;https://blog.shibayan.jp/entry/20230425/1682412792&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="do-you-know-what-is-going-on-with-your-api-collect-asp.net-core-api-metrics-using-appmetrics"&gt;Do you know what is going on with your API? Collect ASP.NET Core API metrics using AppMetrics.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;milwojarski/do-you-know-what-is-going-on-with-your-api-collect-asp-net-core-api-metrics-using-appmetrics-f5efa2cf050d"&gt;https://medium.com/&amp;#64;milwojarski/do-you-know-what-is-going-on-with-your-api-collect-asp-net-core-api-metrics-using-appmetrics-f5efa2cf050d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="redis-keyspace-notifications-with-a-c-example"&gt;Redis keyspace notifications with a C# example&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/sayganov/redis-keyspace-notifications-with-a-c-example-2ahp"&gt;https://dev.to/sayganov/redis-keyspace-notifications-with-a-c-example-2ahp&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="wpf-vs-winui-3"&gt;WPF vs WinUI 3 機能対比表&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/dcc4bf056ab1d4"&gt;https://zenn.dev/shinta0806/articles/dcc4bf056ab1d4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="http2-grpc"&gt;HTTP/2 と gRPC に対するよくある誤解。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/04/22/190510"&gt;https://blog.neno.dev/entry/2023/04/22/190510&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="making-friends-with-httpclientfactory-a-chill-guide-to-upgrading-your-httpclient-game-in.net"&gt;Making Friends with HttpClientFactory: A Chill Guide to Upgrading Your HttpClient Game in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;longeardev/making-friends-with-httpclientfactory-a-chill-guide-to-upgrading-your-httpclient-game-in-net-f4cef3f72a63"&gt;https://medium.com/&amp;#64;longeardev/making-friends-with-httpclientfactory-a-chill-guide-to-upgrading-your-httpclient-game-in-net-f4cef3f72a63&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="making-friends-with-httpclientfactory-a-chill-guide-to-upgrading-your-httpclient-game-in.net-1"&gt;Making Friends with HttpClientFactory: A Chill Guide to Upgrading Your HttpClient Game in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;longeardev/making-friends-with-httpclientfactory-a-chill-guide-to-upgrading-your-httpclient-game-in-net-f4cef3f72a63"&gt;https://medium.com/&amp;#64;longeardev/making-friends-with-httpclientfactory-a-chill-guide-to-upgrading-your-httpclient-game-in-net-f4cef3f72a63&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-enumeratefiles-qiita"&gt;[C#] EnumerateFiles()の例外ハンドルの最適な方法を探る - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hqf00342/items/3707ab2bf5f480ec41f8"&gt;https://qiita.com/hqf00342/items/3707ab2bf5f480ec41f8&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="exploring-hashicorp-vault-with-vault.net-client-library"&gt;Exploring HashiCorp Vault with Vault .NET Client Library&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/berviantoleo/exploring-hashicorp-vault-with-vault-net-client-library-194n"&gt;https://dev.to/berviantoleo/exploring-hashicorp-vault-with-vault-net-client-library-194n&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/04/23/updates</id>
		<title>2023-04-23: Windows Community Toolkit 2023 Update</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/04/23/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-04-23T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="the-windows-community-toolkit-2023-update-ifdef-windows"&gt;The Windows Community Toolkit 2023 Update - #ifdef Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/ifdef-windows/the-windows-community-toolkit-2023-update/"&gt;https://devblogs.microsoft.com/ifdef-windows/the-windows-community-toolkit-2023-update/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows Community Toolkit のアップデートについて。&lt;/p&gt;
&lt;p&gt;新しい WCT Lab コンポーネントや次期バージョンでのコンポーネント、名前空間の統一についてといったことを紹介している。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="azure-functions-line-messaging-api-chatgpt"&gt;Azure Functions と LINE Messaging API を使って ChatGPT とやり取りできるサービスを作ってみた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/takunology/articles/linebotandazure-gpt"&gt;https://zenn.dev/takunology/articles/linebotandazure-gpt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Functions と OpenAI の ChatGPT API を使用して LINE ボットを実装する方法について。&lt;/p&gt;
&lt;h3 id="setwindowsubclass-c-winui-3"&gt;SetWindowSubclass によるウィンドウプロシージャーのカスタム（C# / WinUI 3）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/de27f23a0c3684"&gt;https://zenn.dev/shinta0806/articles/de27f23a0c3684&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI 3 アプリケーションでウィンドウプロシージャーのカスタム(ウィンドウのサブクラス化)を行う方法について。&lt;/p&gt;
&lt;h3 id="windowsservice-qiita"&gt;WindowsのServiceを簡単にデバッグする方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/TheParkSider/items/dc0aa0a03c02cec462e6"&gt;https://qiita.com/TheParkSider/items/dc0aa0a03c02cec462e6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows のサービスを実装した際にデバッグ実行などを簡単にする方法について。&lt;/p&gt;
&lt;h3 id="improving-the-syntax-highlighting-of-javascript-in-visual-studio-visual-studio-blog"&gt;Improving the Syntax Highlighting of JavaScript in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/improving-the-syntax-highlighting-of-javascript-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/improving-the-syntax-highlighting-of-javascript-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 v17.6 以降での JavaScript のシンタックスハイライトの改善についての紹介。&lt;/p&gt;
&lt;h3 id="how-to-use-aqua-web-inspector-for-asp.net-core-development-in-rider-the.net-tools-blog"&gt;How to Use Aqua Web Inspector for ASP.NET Core Development in Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/20/jetbrains-rider-and-aqua-for-aspnetcore-development/"&gt;https://blog.jetbrains.com/dotnet/2023/04/20/jetbrains-rider-and-aqua-for-aspnetcore-development/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider で利用できる JetBrains Aqua プラグインで IDE に組み込まれた Web インスペクターを ASP.NET Core 開発で使用する方法について。&lt;/p&gt;
&lt;h3 id="git-tooling-preview-features-to-enhance-productivity-visual-studio-blog"&gt;Git Tooling Preview Features to Enhance Productivity - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/git-tooling-preview-features-to-enhance-productivity/"&gt;https://devblogs.microsoft.com/visualstudio/git-tooling-preview-features-to-enhance-productivity/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio (プレビュー) で強化された Git 関連機能のまとめ記。&lt;/p&gt;
&lt;h3 id="reduce-collection-lookups-with-resharper-the.net-tools-blog"&gt;Reduce Collection Lookups With ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/18/reduce-lookups-in-hashset-dictionary-and-other-collections-with-resharper/"&gt;https://blog.jetbrains.com/dotnet/2023/04/18/reduce-lookups-in-hashset-dictionary-and-other-collections-with-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper で Dictionary や HashSet といったコレクションの ContainsKey や Contains を呼び出してから操作することの不要なケースについて指摘できるようになったことについて。&lt;/p&gt;
&lt;h3 id="chrome-extensions-in.net-web-view-controls"&gt;Chrome extensions in .NET web view controls&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/dotnetbrowser/chrome-extensions-in-net-web-view-controls-11lm"&gt;https://dev.to/dotnetbrowser/chrome-extensions-in-net-web-view-controls-11lm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DotNetBrowser をはじめとして WebView2、CefSharp といった Web View での Chrome 拡張のサポート状況について。&lt;/p&gt;
&lt;h3 id="format-and-send.net-application-logs-to-elasticsearch-using-serilog"&gt;Format and send .Net application logs to Elasticsearch using Serilog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ingrid.jardillier/format-and-send-net-application-logs-to-elasticsearch-using-serilog-9819742cf806"&gt;https://medium.com/&amp;#64;ingrid.jardillier/format-and-send-net-application-logs-to-elasticsearch-using-serilog-9819742cf806&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Serilog から Elasticsearch にログを送信するように構成する手順について。&lt;/p&gt;
&lt;h3 id="nethttp-qiita"&gt;.NETアプリケーションがHTTP通信に使用したプロキシ設定をメモリダンプから確認する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nishiseki/items/fe3e4795df9f790831f7"&gt;https://qiita.com/nishiseki/items/fe3e4795df9f790831f7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET アプリケーションのメモリーダンプを取得し、そのメモリーダンプから HTTP のプロキシー設定情報を解析して確認する方法について。&lt;/p&gt;
&lt;h3 id="running-non-root.net-containers-with-kubernetes.net-blog"&gt;Running non-root .NET containers with Kubernetes - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/running-nonroot-kubernetes-with-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/running-nonroot-kubernetes-with-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で対応する non-root なコンテナーの Kubernetes での利用について、サンプルを交えて紹介している。dotnet-monitor に関しても動作することのこと。&lt;/p&gt;
&lt;h3 id="xamarincvr"&gt;【Xamarin/C#】スマホでVR写真表示アプリを作る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/daddy_yukio/articles/a70e04b8896f15"&gt;https://zenn.dev/daddy_yukio/articles/a70e04b8896f15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Xamarin.Forms で360度全天球映像を表示する実装について。&lt;/p&gt;
&lt;h3 id="setting-an-absolute-output-path-for.net-sdk-projects"&gt;Setting an Absolute Output Path for .NET SDK Projects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2023/Apr/21/Setting-an-Absolute-Output-Path-for-NET-SDK-Projects"&gt;https://weblog.west-wind.com/posts/2023/Apr/21/Setting-an-Absolute-Output-Path-for-NET-SDK-Projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ビルド時の出力先パスの指定方法と AppendTargetFrameworkToOutputPath によるターゲットフレームワークをパスに追加しない指定について。&lt;/p&gt;
&lt;h3 id="investigating-a-crash-in-enumerable.lastordefault-with-a-custom-collection-gerald-barre"&gt;Investigating a crash in Enumerable.LastOrDefault with a custom collection - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/investigating-a-crash-in-enumerable-lastordefault.htm"&gt;https://www.meziantou.net/investigating-a-crash-in-enumerable-lastordefault.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;カスタムコレクションで LINQ の LastOrDefault メソッドを使用した際にスレッドセーフではない操作によって例外が発生するケースについての解説。&lt;/p&gt;
&lt;h3 id="net-8-performance-edition"&gt;.NET 8 Performance Edition&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/f6504300-7bf0-48d2-8a14-ba4e2bbea02e"&gt;https://steven-giesel.com/blogPost/f6504300-7bf0-48d2-8a14-ba4e2bbea02e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 とそれ以前でのパフォーマンスを Enum, LINQ, Reflection やリストといった部分でのベンチマークによる比較。&lt;/p&gt;
&lt;h3 id="azure-openai-service-c-sdk-chatgpt"&gt;Azure OpenAI Service の C# SDK (ChatGPT でも使えます)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/azure-openai-service-csharpsdk"&gt;https://zenn.dev/microsoft/articles/azure-openai-service-csharpsdk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ChatGPT を含む Azure OpenAI Service の .NET SDK を使用してみるという記事。&lt;/p&gt;
&lt;h3 id="cqrexcelnpoizxing"&gt;C#でQR画像入りExcelを作る（NPOI、ZXing）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/junnuj/articles/a68409f9e18fd0"&gt;https://zenn.dev/junnuj/articles/a68409f9e18fd0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ZXing.NET で QR コードを生成して NPOI を使用して Excel に画像を埋め込む方法について。&lt;/p&gt;
&lt;h3 id="semantic-kernelgpt-taste-of-tech-topics"&gt;Semantic Kernelを使ってGPTと外部ツールを簡単に連携してみる - Taste of Tech Topics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://acro-engineer.hatenablog.com/entry/2023/04/18/120000"&gt;https://acro-engineer.hatenablog.com/entry/2023/04/18/120000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel を使用して ChatGPT API と外部ツールである Elasticsearch を連携させる実装方法について。&lt;/p&gt;
&lt;h3 id="c-c"&gt;[雑記] 明確な代入ルール | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/study/csharp/start/definiteassignment/"&gt;https://ufcpp.net/study/csharp/start/definiteassignment/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;未初期化を避けるための明確に代入するルールについて。C# 10で改善された点についても触れている。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="microsofttokenizer.net-implementation-of-bpe-tokenizer-for-openai-llms"&gt;microsoft/Tokenizer: .NET implementation of BPE tokenizer for OpenAI LLMs.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/Tokenizer"&gt;https://github.com/microsoft/Tokenizer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenAI の tiktoken というトークンをカウントするライブラリーの .NET 実装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/microsoft/articles/azure-openai-count-token"&gt;C# で Azure OpenAI Service のトークン数を数えよう&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="calvinallenvs4mac-super-clean-super-clean-is-an-extension-for-visual-studio-for-mac-that-when-triggered-completely-obiterates-the-bin-and-obj-directories-from-all-projects-in-the-solution"&gt;CalvinAllen/vs4mac-super-clean: Super Clean is an extension for Visual Studio for Mac that, when triggered, completely obiterates the bin and obj directories from all projects in the solution&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/CalvinAllen/vs4mac-super-clean"&gt;https://github.com/CalvinAllen/vs4mac-super-clean&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;obj や bin ディレクトリをすべて削除する Visual Studio for Mac 用拡張。&lt;/p&gt;
&lt;h3 id="bunit-devbunit-bunit-is-a-testing-library-for-blazor-components-that-make-tests-look-feel-and-runs-like-regular-unit-tests.bunit-makes-it-easy-to-render-and-control-a-component-under-tests-life-cycle-pass-parameter-and-inject-services-into-it-trigger-event-handlers-and-verify-the-rendered-markup-from-the-component-using-a-built-in-semantic-html-comparer"&gt;bUnit-dev/bUnit: bUnit is a testing library for Blazor components that make tests look, feel, and runs like regular unit tests. bUnit makes it easy to render and control a component under test’s life-cycle, pass parameter and inject services into it, trigger event handlers, and verify the rendered markup from the component using a built-in semantic HTML comparer.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/bUnit-dev/bUnit"&gt;https://github.com/bUnit-dev/bUnit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor のコンポーネントをテストしやすくするためのライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/&amp;#64;longeardev/blazor-component-testing-basic-verification-of-a-raw-markup-670bf91c1d90"&gt;Blazor Component Testing: Basic Verification of a Raw Markup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/04/15/updates</id>
		<title>2023-04-15: .NET 8 Preview 3, .NET 7.0.5 &amp; 6.0.16, Windows App SDK v1.3.0</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/04/15/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-04-15T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-8-preview-3.net-blog"&gt;Announcing .NET 8 Preview 3 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-3/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 がリリースされた。&lt;/p&gt;
&lt;p&gt;記事では次の機能や改善点について紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SDK
&lt;ul&gt;
&lt;li&gt;簡略化された出力先パス&lt;/li&gt;
&lt;li&gt;dotnet workload clean コマンド&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ランタイム
&lt;ul&gt;
&lt;li&gt;ValidateOptionsResultBuilder&lt;/li&gt;
&lt;li&gt;構成バインディングソースジェネレーター&lt;/li&gt;
&lt;li&gt;ネイティブコード生成の改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;コンテナー
&lt;ul&gt;
&lt;li&gt;複数のプラットフォームのイメージのビルド&lt;/li&gt;
&lt;li&gt;非 root ユーザー UID 値の環境変数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-3.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 3 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-3/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 での ASP.NET Core のアップデートについての紹介。&lt;/p&gt;
&lt;p&gt;このリリースでは ASP.NET Core の Native AOT でのサポートとサポート範囲/互換性、テンプレートなどについてをはじめとして、様々な新機能を紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Native AOT での ASP.NET Core サポート&lt;/li&gt;
&lt;li&gt;Blazor でのサーバーサイドレンダリング&lt;/li&gt;
&lt;li&gt;ASP.NET Core の外で Razor コンポーネントのレンダリング&lt;/li&gt;
&lt;li&gt;Blazor でのセクションのサポート&lt;/li&gt;
&lt;li&gt;Blazor Server の回線アクティビティのモニター&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly アプリケーションでの SIMD のデフォルト有効化&lt;/li&gt;
&lt;li&gt;リクエストタイムアウト&lt;/li&gt;
&lt;li&gt;ショートサーキットルート&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-maui-in.net-8-preview-3.net-blog"&gt;Announcing .NET MAUI in .NET 8 Preview 3 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-3/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 での .NET MAUI のアップデートについての紹介。&lt;/p&gt;
&lt;p&gt;このリリースでは品質の向上やメモリー管理の改善などが行われている。&lt;/p&gt;
&lt;h3 id="check-out-new-c-12-preview-features.net-blog"&gt;Check out new C# 12 preview features! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/check-out-csharp-12-preview/"&gt;https://devblogs.microsoft.com/dotnet/check-out-csharp-12-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のプレビュー機能の紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非レコードなクラスと構造体でのプライマリーコンストラクター&lt;/li&gt;
&lt;li&gt;あらゆる型に対する using エイリアス&lt;/li&gt;
&lt;li&gt;ラムダ式のパラメーターのデフォルト値&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-april-2023-updates.net-7.0.5.net-6.0.16.net-blog"&gt;.NET April 2023 Updates – .NET 7.0.5, .NET 6.0.16 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/april-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/april-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7.0.5 および 6.0.16 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースにはセキュリティー修正は含まれず、不具合の修正や小さな改善が含まれている。&lt;/p&gt;
&lt;h3 id="v1.3.0-stable-channel-release-notes-for-the-windows-app-sdk-windows-apps"&gt;v1.3.0 - Stable channel release notes for the Windows App SDK - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-13"&gt;https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-13&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK v1.3.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは XAML Backdrop API (ウィンドウ背景への Mica の適用など)、アプリウィンドウにアクセスするための Window.AppWindow API などいくつかの新機能が導入されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3.0"&gt;Release v1.3.0 · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-2.3.0-beta-2-mysql-netmysqlconnector"&gt;Release 2.3.0 Beta 2 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.0-beta.2"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.0-beta.2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Async MySQL Connector 2.3.0 Beat 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは MariaDB でのメタデータスキップによるパフォーマンスの改善や MySqlDataReader のリサイクルなどの改善が含まれている。&lt;/p&gt;
&lt;h3 id="nuget.org-terms-of-service-update-on-unexpected-behavior-and-hate-speech-the-nuget-blog"&gt;NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/"&gt;https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet.org の利用規約のアップデートについて。&lt;/p&gt;
&lt;p&gt;利用規約が更新され、不正行為に関する二つのルールが追加された。一つはパッケージの説明や README にない予期しない動作(悪意あるバックドアなど)についてのルール、もう一つはヘイトスピーチについてのルールについて追加となっている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="debugging-native-memory-issues-in-a-c-application"&gt;Debugging native memory issues in a C# application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/199265-A/debugging-native-memory-issues-in-a-c-application"&gt;https://ayende.com/blog/199265-A/debugging-native-memory-issues-in-a-c-application&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# アプリケーションでアクセス違反でクラッシュする問題を調査した話。&lt;/p&gt;
&lt;p&gt;Avx2 でメモリーを読み取るときに無効なメモリーも読み取ってしまうことによって発生した問題。&lt;/p&gt;
&lt;h3 id="data-validation-with-fluent-validation-for-asp-net-core"&gt;Data validation with Fluent Validation for ASP NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/c-sharp-progarmming/data-validation-with-fluent-validation-for-asp-net-core-6613c71211f8"&gt;https://medium.com/c-sharp-progarmming/data-validation-with-fluent-validation-for-asp-net-core-6613c71211f8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で Fluent Validation を使用した入力検証の導入方法について。&lt;/p&gt;
&lt;h3 id="net-avaloniaui-1"&gt;.NET + AvaloniaUI 制作日誌①&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jun_murakami/articles/87c79a3c622b6f"&gt;https://zenn.dev/jun_murakami/articles/87c79a3c622b6f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia UI v11 プレビューを使用しての変更点などのメモ。&lt;/p&gt;
&lt;h3 id="improving-visual-studio-performance-with-the-new-instrumentation-tool-visual-studio-blog"&gt;Improving Visual Studio performance with the new Instrumentation Tool - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/improving-visual-studio-performance-with-the-new-instrumentation-tool/"&gt;https://devblogs.microsoft.com/visualstudio/improving-visual-studio-performance-with-the-new-instrumentation-tool/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の新しいインストルメンテーションツールの紹介として Visual Studio のパフォーマンスを改善する記事。&lt;/p&gt;
&lt;h3 id="boost-your-integration-testing-for-rest-apis-with-snapshot-testing-in.net"&gt;📈 Boost Your Integration Testing for REST APIs with Snapshot Testing in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/kamilbaczek/boost-your-integration-testing-for-rest-apis-with-snapshot-testing-g2b"&gt;https://dev.to/kamilbaczek/boost-your-integration-testing-for-rest-apis-with-snapshot-testing-g2b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;データを比較して検証する Verify を使用してユニットテストを行う方法について。&lt;/p&gt;
&lt;h3 id="c11-generic-math"&gt;[C#11] Generic Mathで桁あふれしないように足し算を実装する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimat/articles/c4b5b05dcd85c7"&gt;https://zenn.dev/shimat/articles/c4b5b05dcd85c7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generic Math で独自の Vector 構造体を定義し、足し算を行うときに桁あふれしないような実装を行う。&lt;/p&gt;
&lt;h3 id="whats-new-in.net-8-discover-all.net-8-features"&gt;What’s New in .NET 8 🧐 ? Discover ALL .NET 8 Features⚡🚀&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/abp-community/whats-new-in-net-8-discover-all-net-8-features-bf98bc9cf68c"&gt;https://medium.com/abp-community/whats-new-in-net-8-discover-all-net-8-features-bf98bc9cf68c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の新機能や Random.GetItems など API を紹介している。&lt;/p&gt;
&lt;h3 id="looking-at-c-12-proposals-and-beyond"&gt;Looking at C# 12 Proposals and Beyond&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://michaelscodingspot.com/csharp-12-proposals/"&gt;https://michaelscodingspot.com/csharp-12-proposals/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 での提案やその先にある C# の機能を紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;プライマリーコンストラクター&lt;/li&gt;
&lt;li&gt;半自動プロパティー&lt;/li&gt;
&lt;li&gt;リストパターンマッチングの IEnumerable への拡張&lt;/li&gt;
&lt;li&gt;Pure Union と Discriminating Union&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="normalize-and-compare-urls-with-c"&gt;Normalize and compare URLs with C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/normalize-and-compare-urls-with-csharp/"&gt;https://blog.elmah.io/normalize-and-compare-urls-with-csharp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;URL に含まれる ID などをつぶして正規化して比較する方法について。&lt;/p&gt;
&lt;h3 id="externalfinalizer-adding-a-finalizer-to-3rd-party-objects"&gt;ExternalFinalizer: Adding a finalizer to 3rd party objects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ravendb.net/articles/externalfinalizer-adding-a-finalizer-to-3rd-party-objects"&gt;https://ravendb.net/articles/externalfinalizer-adding-a-finalizer-to-3rd-party-objects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ファイナライザーを持たないオブジェクトを外部からファイナライザーを使用して破棄するというテクニック。&lt;/p&gt;
&lt;h3 id="linq-on-steroids-with-simd"&gt;LINQ on steroids with SIMD&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/faf06188-bae9-484d-804d-a42d58d18cad"&gt;https://steven-giesel.com/blogPost/faf06188-bae9-484d-804d-a42d58d18cad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SIMD を使用して LINQ の高速化を試み、ライブラリーを実装したことについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/linkdotnet/LinqSIMDExtensions"&gt;linkdotnet/LinqSIMDExtensions: A LINQ-like extensions for C# that uses SIMD extensions to parallelize the operations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="the-journey-with-multi-tenancy-accesses-continues-with-some-issues"&gt;The Journey with multi-tenancy accesses continues with some issues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://danielwertheim.se/the-journey-with-multi-tenancy-accesses-continues-with-some-issues/"&gt;https://danielwertheim.se/the-journey-with-multi-tenancy-accesses-continues-with-some-issues/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;マルチテナントアクセスを行う際の実装と注意すべき取り扱いについて。&lt;/p&gt;
&lt;h3 id="working-with-nested-tasks"&gt;Working With Nested Tasks&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://itnext.io/working-with-nested-tasks-9acd700c0e86"&gt;https://itnext.io/working-with-nested-tasks-9acd700c0e86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ネストされた Task の挙動とその制御について。&lt;/p&gt;
&lt;h3 id="github"&gt;GitHub、ソフトウェア部品表の作成機能を無償公開--脆弱性管理を容易に&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://japan.zdnet.com/article/35202341/"&gt;https://japan.zdnet.com/article/35202341/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub で SBOM のエクスポートがサポートされたことについての紹介。&lt;/p&gt;
&lt;h3 id="wasm-wasi-wtf-webassembly-101-for.net-developers"&gt;WASM, WASI, WTF? WebAssembly 101 – for .NET developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/christianweyer/wasm-wasi-wtf-webassembly-101-for-net-developers"&gt;https://speakerdeck.com/christianweyer/wasm-wasi-wtf-webassembly-101-for-net-developers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 開発者向けの WebAssembly や WASI、Blazor の現状と今後についてのスライド。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="0a81aefc1f4448e4915fbbd52da14969" data-ratio="1.77725118483412" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="c"&gt;C#によるクライアント/サーバーの開発言語統一がもたらす高効率な開発体制 ～プリコネ！グランドマスターズ開発事例～&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/cygames/sabanokai-fa-yan-yu-tong-gamotarasugao-xiao-lu-nakai-fa-ti-zhi-purikone-gurandomasutazukai-fa-shi-li"&gt;https://speakerdeck.com/cygames/sabanokai-fa-yan-yu-tong-gamotarasugao-xiao-lu-nakai-fa-ti-zhi-purikone-gurandomasutazukai-fa-shi-li&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プリコネ!グランドマスターズでの C# を用いたクライアントとサーバーでの言語統一環境での開発事例についてのスライド。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="eb88699993234d21bab16eab3baafaf4" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="net-20234-connpass"&gt;.NETラボ 勉強会 2023年4月 - connpass&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnetlab.connpass.com/event/279139/"&gt;https://dotnetlab.connpass.com/event/279139/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Azure OpenAI Service 概要とサンプルアプリ等のご紹介&lt;/li&gt;
&lt;li&gt;Microsoft PowerToysを使ってみよう&lt;/li&gt;
&lt;li&gt;Windows 365 Frontline すべての働く人にクラウド PC を！&lt;/li&gt;
&lt;li&gt;Azure OpenAIサービスでChatGPTをC#で使ってみる&lt;/li&gt;
&lt;li&gt;モノレポなライブラリ群をCICDでデプロイした話&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="hololabinciwasmunity-unity-c-wrapper-of-iwasm"&gt;HoloLabInc/IwasmUnity: Unity C# wrapper of iwasm&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/HoloLabInc/IwasmUnity"&gt;https://github.com/HoloLabInc/IwasmUnity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unity 向けの WebAssembly Micro Runtime の iwasm のバインディング。&lt;/p&gt;
&lt;!-- https://twitter.com/ikorin24/status/1646773888767119361?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;Unity で Wasm を動かせる Unity C# 向けライブラリを作りました。iOS を含め、各種プラットフォームで動作できます。(Apple チップの Mac は私が所持していないため現状非対応)&lt;br&gt;UPM でインポート可能です&lt;a href="https://t.co/UchqnicsoE"&gt;https://t.co/UchqnicsoE&lt;/a&gt; &lt;a href="https://t.co/FT2UZwDxrJ"&gt;pic.twitter.com/FT2UZwDxrJ&lt;/a&gt;&lt;/p&gt;&amp;mdash; いこり (&amp;#64;ikorin24) &lt;a href="https://twitter.com/ikorin24/status/1646773888767119361?ref_src=twsrc%5Etfw"&gt;April 14, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;AVX-512 サポートの話。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1645390605818773505?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET 8.0 teaser: AVX-512 &lt;a href="https://t.co/Ch2Nl0a4do"&gt;https://t.co/Ch2Nl0a4do&lt;/a&gt; (PR is based on a huge work done by contributors from Intel, &lt;a href="https://twitter.com/tannergooding?ref_src=twsrc%5Etfw"&gt;&amp;#64;tannergooding&lt;/a&gt;, &lt;a href="https://twitter.com/BruceForstall?ref_src=twsrc%5Etfw"&gt;&amp;#64;BruceForstall&lt;/a&gt; and other members) &lt;a href="https://t.co/Z2dMvAwBS3"&gt;pic.twitter.com/Z2dMvAwBS3&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1645390605818773505?ref_src=twsrc%5Etfw"&gt;April 10, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;アラインの有無によるメモリーアクセスのパフォーマンスの差の話。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1646922981744992261?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Unaligned data access penalty 😒 &lt;a href="https://t.co/T5rIkkrUdQ"&gt;pic.twitter.com/T5rIkkrUdQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1646922981744992261?ref_src=twsrc%5Etfw"&gt;April 14, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;ネイティブビルドをしたコード (SeeSharpSnake) を 486 の MS-DOS で動かすという話。最終的にリアルな PC の上で動かしている。&lt;/p&gt;
&lt;!-- https://twitter.com/lukaaash/status/1644761881721044994?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;It actually works in DOSBox and in DOSBox-X&amp;#39;s 486 mode! I&amp;#39;ll try it on a real PC with 120Mhz AMD Am486 with 32MB of RAM, but that will have to wait until Tuesday because I keep the old machine in my office as a museum piece :-) &lt;a href="https://t.co/BkEx8kETVI"&gt;pic.twitter.com/BkEx8kETVI&lt;/a&gt;&lt;/p&gt;&amp;mdash; shakul (&amp;#64;lukaaash) &lt;a href="https://twitter.com/lukaaash/status/1644761881721044994?ref_src=twsrc%5Etfw"&gt;April 8, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/04/08/updates</id>
		<title>2023-04-08: WiX v4.0.0, ReSharper &amp; Rider 2023.1</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/04/08/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-04-08T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="wix-v4.0.0-release-notes-wix-toolset"&gt;WiX v4.0.0 | Release notes | WiX Toolset&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://wixtoolset.org/docs/releasenotes/#v4"&gt;https://wixtoolset.org/docs/releasenotes/#v4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WiX v4.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンでは ARM64 のサポートや NuGet によるツールの提供といった様々な改善が含まれている。&lt;/p&gt;
&lt;h3 id="resharper-2023.1-comes-with-enhanced-c-support-exciting-updates-for-c-and-more-the.net-tools-blog"&gt;ReSharper 2023.1 Comes With Enhanced C# Support, Exciting Updates for C++, and More! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/05/resharper-2023-1/"&gt;https://blog.jetbrains.com/dotnet/2023/04/05/resharper-2023-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではコレクションの複数回のルックアップを修正する QuickFix や null チェックパターンの Syntax style の導入、ショートカットやアップデートのダイアログの改善などが含まれている。&lt;/p&gt;
&lt;p&gt;またこのバージョンから Visual Studio 2010 および 2012 のサポートが廃止されている。&lt;/p&gt;
&lt;h3 id="dotcover-dotmemory-dotpeek-and-dottrace-2023.1-release-the.net-tools-blog"&gt;dotCover, dotMemory, dotPeek, and dotTrace 2023.1 Release! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/05/dottools-2023-1-release/"&gt;https://blog.jetbrains.com/dotnet/2023/04/05/dottools-2023-1-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dotCover, dotMemory, dotPeek, dotTrace 2023.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;dotTrace は Linux と macOS 向けのスタンドアローン版がベータとして利用できるようになったほか、様々な改善が行われている。&lt;/p&gt;
&lt;h3 id="improvements-to-auth-and-identity-in-asp.net-core-8.net-blog"&gt;Improvements to auth and identity in ASP.NET Core 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/improvements-auth-identity-aspnetcore-8/"&gt;https://devblogs.microsoft.com/dotnet/improvements-auth-identity-aspnetcore-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core における認証と ID 管理について。&lt;/p&gt;
&lt;p&gt;.NET 8 の SPA テンプレートからは IdentityServer への依存が削除されること、セルフホストの認証の改善点について触れている。&lt;/p&gt;
&lt;h3 id="asp.net-core-route-tooling-enhancements-in.net-8.net-blog"&gt;ASP.NET Core Route Tooling Enhancements in .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/aspnet-core-route-tooling-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/aspnet-core-route-tooling-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core のルーティングのツール強化について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ルートのシンタックスハイライト&lt;/li&gt;
&lt;li&gt;パラメーターとルート名の補完&lt;/li&gt;
&lt;li&gt;ルート制約の補完&lt;/li&gt;
&lt;li&gt;ルートの Analyzer と CodeFix&lt;/li&gt;
&lt;li&gt;Minimal APIs と Web API、Blazor のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-ilspy-8.0-preview-4-icsharpcodeilspy"&gt;Release ILSpy 8.0 Preview 4 · icsharpcode/ILSpy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/icsharpcode/ILSpy/releases/tag/v8.0-preview4"&gt;https://github.com/icsharpcode/ILSpy/releases/tag/v8.0-preview4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ILSpy 8.0 Preview 4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではテーマの追加や様々な不具合の修正が行われている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="receive-and-test-incoming-webhooks-in-an-asp.net-core-minimal-api-a-comprehensive-guide"&gt;Receive and Test Incoming Webhooks in an ASP.NET Core Minimal API: A Comprehensive Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.christianfindlay.com/blog/asp-dotnet-core-minimal-webhooks"&gt;https://www.christianfindlay.com/blog/asp-dotnet-core-minimal-webhooks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core の Minimal API でリクエストを受信する Webhook の実装、テストを行う手順の解説。&lt;/p&gt;
&lt;h3 id="visual-studio-toolbox-debug-threads-tasks-with-parallel-stacks-visual-studio-blog"&gt;Visual Studio Toolbox: Debug Threads &amp;amp; Tasks with Parallel Stacks - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-toolbox-debug-threads-tasks-with-parallel-stacks/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-toolbox-debug-threads-tasks-with-parallel-stacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;スレッドと並列スタックのデバッグツールの紹介動画。&lt;/p&gt;
&lt;h3 id="how-to-create-a-nuget-package-for-both-desktop-and-mobile-development"&gt;How to Create a NuGet Package for Both Desktop and Mobile Development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/yushulx/how-to-create-a-nuget-package-for-both-desktop-and-mobile-development-5e61"&gt;https://dev.to/yushulx/how-to-create-a-nuget-package-for-both-desktop-and-mobile-development-5e61&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;デスクトップ向けに加えて Android や iOS 向けのバインディングライブラリーを含むような NuGet パッケージを作る方法について。&lt;/p&gt;
&lt;h3 id="c11-generic-mathopencvsaturate_cast"&gt;[C#11] Generic MathでOpenCVのsaturate_castを模す&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimat/articles/daab88eea9c41f"&gt;https://zenn.dev/shimat/articles/daab88eea9c41f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenCV の saturate_cast 関数のようなメソッドを Generic Math を使用して実装してみるという記事。&lt;/p&gt;
&lt;h3 id="cdotnet-user-jwts"&gt;【C#】dotnet user-jwts はいいぞ。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/04/07/165241"&gt;https://blog.neno.dev/entry/2023/04/07/165241&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core での開発時に JWT を使用する場合にローカル開発環境で使用できる JWT を簡単委に生成できる user-jwts ツールについての紹介。&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-april-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | April 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/06/net-annotated-monthly-april-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/04/06/net-annotated-monthly-april-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 関連情報まとめ4月号。&lt;/p&gt;
&lt;h3 id="arraypool-in-depth"&gt;ArrayPool in depth&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;epeshk/arraypool-t-ea90cb24b87f"&gt;https://medium.com/&amp;#64;epeshk/arraypool-t-ea90cb24b87f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ArrayPool の内部実装についての解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ikorin2.hatenablog.jp/entry/2020/07/25/113904"&gt;(C#) ArrayPool&lt;T&gt;.Shared 解体新書 - ネコのために鐘は鳴る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="improved-windows-broker-support-with-msal.net-microsoft-entra-identity-developer-blog"&gt;Improved Windows Broker Support with MSAL.NET | Microsoft Entra Identity Developer Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/identity/improved-windows-broker-support-with-msal-net/"&gt;https://devblogs.microsoft.com/identity/improved-windows-broker-support-with-msal-net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSAL.NET での Windows 環境における Broker サポートの向上について。&lt;/p&gt;
&lt;h3 id="csonarqube-qiita"&gt;C#でSonarQubeでカバレッジを表示する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/YoshijiGates/items/e1055e14c9960228726b"&gt;https://qiita.com/YoshijiGates/items/e1055e14c9960228726b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# プロジェクトのカバレッジを取得し SonarQube で確認できるようにする方法について。&lt;/p&gt;
&lt;h3 id="adding-client-side-validation-to-asp.net-core-without-jquery-or-unobtrusive-validation"&gt;Adding client-side validation to ASP.NET Core, without jQuery or unobtrusive validation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/adding-client-side-validation-to-aspnet-core-without-jquery-or-unobtrusive-validation/"&gt;https://andrewlock.net/adding-client-side-validation-to-aspnet-core-without-jquery-or-unobtrusive-validation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で jQuery や unobtrusive validation を使用せずクライアントサイド検証を追加する方法について。&lt;/p&gt;
&lt;p&gt;記事では npm の aspnet-client-validation パッケージを使用し、カスタマイズする方法などを紹介している。&lt;/p&gt;
&lt;h3 id="microsoft-llm-osssemantic-kernel-qiita"&gt;Microsoft が LLM をアプリ開発に統合するための OSS「Semantic Kernel」を発表 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nohanaga/items/430b59209b02c298ef2a"&gt;https://qiita.com/nohanaga/items/430b59209b02c298ef2a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アプリケーションに ChatGPT などの LLM を統合するためのフレームワークである Semantic Kernel についての解説。&lt;/p&gt;
&lt;h3 id="iterator-benchmarks-that-shocked-with-unexpected-results-dev-leader"&gt;Iterator Benchmarks That Shocked With Unexpected Results - Dev Leader&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.devleader.ca/2023/03/17/shocking-results-from-collection-and-iterator-benchmarks/"&gt;https://www.devleader.ca/2023/03/17/shocking-results-from-collection-and-iterator-benchmarks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;リストやイテレーターに対する LINQ のベンチマークをとったときに期待と異なる結果となって見落としていたことについての振り返り。&lt;/p&gt;
&lt;h3 id="citext7pdf-qiita"&gt;C#でiText7を使ってPDFファイルを分割・結合する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nekohei/items/9a2e8b1e9dfc922592ea"&gt;https://qiita.com/nekohei/items/9a2e8b1e9dfc922592ea&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iText 7 を使用して PDF ファイルを分割、結合する方法について。&lt;/p&gt;
&lt;h3 id="primary-constructors-with-c"&gt;Primary Constructors with C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://csharp.christiannagel.com/2023/03/28/primaryctors/"&gt;https://csharp.christiannagel.com/2023/03/28/primaryctors/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で導入予定のプライマリーコンストラクターについての解説。&lt;/p&gt;
&lt;h3 id="aws-lambda-web-adapter.net-web-apilambda"&gt;AWS Lambda Web Adapterで.NET WEB APIをLambdaで動かす&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/junnuj/articles/c2ba888670bc8e"&gt;https://zenn.dev/junnuj/articles/c2ba888670bc8e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lambda Web Adapter を使用してピュアな ASP.NET Core アプリケーションを Lambda で動かす方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="ufcppscribansourcegenerator"&gt;ufcpp/ScribanSourceGenerator&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ufcpp/ScribanSourceGenerator"&gt;https://github.com/ufcpp/ScribanSourceGenerator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scriban (テンプレートエンジン) を使用してソースコードを生成する ScribanSourceGenerator。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/thinva/items/6ae7e295dabe417645cf"&gt;[C#] ScribanSourceGenerator によるコンパイル時コード生成 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-marketplace-publisher-github-marketplace"&gt;Visual Studio Marketplace Publisher - GitHub Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/visual-studio-marketplace-publisher"&gt;https://github.com/marketplace/actions/visual-studio-marketplace-publisher&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Marketplace に発行する GitHub Action。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/calvinallen/introducing-the-visual-studio-marketplace-publisher-github-action-1nme"&gt;Introducing the “Visual Studio Marketplace Publisher” GitHub Action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-vsix-signer-github-marketplace"&gt;Visual Studio VSIX Signer - GitHub Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/visual-studio-vsix-signer"&gt;https://github.com/marketplace/actions/visual-studio-vsix-signer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio VSIX のサインを行う GitHub Action。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/calvinallen/introducing-the-visual-studio-vsix-signer-github-action-3iog"&gt;Introducing the ‘Visual Studio VSIX Signer’ GitHub Action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="drasticactionsdrastic.inappsettingskit"&gt;drasticactions/Drastic.InAppSettingsKit&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/Drastic.InAppSettingsKit"&gt;https://github.com/drasticactions/Drastic.InAppSettingsKit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iOS アプリケーション内の設定画面を作る InAppSettingsKit のバインディングライブラリー。&lt;/p&gt;
&lt;!-- https://twitter.com/drasticactions/status/1642778859992154114?s=20 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I needed to add a settings UI for my .NET iOS app, so I updated the original Xamarin binding for InAppSettingsKit. With it, you can generate a setting bundle and have it appear in Settings and in your app. It also works on Catalyst!&lt;a href="https://t.co/ZRwuMuaZg4"&gt;https://t.co/ZRwuMuaZg4&lt;/a&gt;. &lt;a href="https://t.co/5KK6cPn5MP"&gt;pic.twitter.com/5KK6cPn5MP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Drastic Actions (&amp;#64;drasticactions) &lt;a href="https://twitter.com/drasticactions/status/1642778859992154114?ref_src=twsrc%5Etfw"&gt;April 3, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Java と .NET のスタックトレースの違いについて。&lt;/p&gt;
&lt;!-- https://twitter.com/matarillo/status/1643864714466951168?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;例外から取り出せるスタックトレースがそもそも違っていルコとに注意。Javaの場合throwされた時点のコールスタックがキャプチャされてる。&lt;a href="https://t.co/WR7UuXBcOx"&gt;https://t.co/WR7UuXBcOx&lt;/a&gt; C# （というか.NET）では、throw地点からcatch地点の間の大域脱出情報になる。&lt;a href="https://t.co/ulm9nOxajv"&gt;https://t.co/ulm9nOxajv&lt;/a&gt; &lt;a href="https://t.co/6DAXPLEPmN"&gt;https://t.co/6DAXPLEPmN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kentaro Inomata (&amp;#64;matarillo) &lt;a href="https://twitter.com/matarillo/status/1643864714466951168?ref_src=twsrc%5Etfw"&gt;April 6, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;MFractor が Visual Studio for Mac v17.5 をサポート。&lt;/p&gt;
&lt;!-- https://twitter.com/matthewrdev/status/1642281174793068544?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I&amp;#39;ve just released v5.0 of MFractor for Visual Studio Mac... This *finally* includes full support for .NET MAUI.&lt;br&gt;&lt;br&gt;All of MFractors existing Xamarin.Forms tools now work in MAUI XAML files; code analysis, refactorings, navigation, tooltips etc.&lt;br&gt;&lt;br&gt;Release:&lt;a href="https://t.co/5EB9kwHR6X"&gt;https://t.co/5EB9kwHR6X&lt;/a&gt;&lt;/p&gt;&amp;mdash; Matthew Robbins (&amp;#64;matthewrdev) &lt;a href="https://twitter.com/matthewrdev/status/1642281174793068544?ref_src=twsrc%5Etfw"&gt;April 1, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="implement-iutf8spanformattable-on-datetime-datetimeoffset-dateonly-timeonly-timespan-char-rune-by-stephentoub-pull-request-84469-dotnetruntime"&gt;Implement IUtf8SpanFormattable on DateTime, DateTimeOffset, DateOnly, TimeOnly, TimeSpan, Char, Rune by stephentoub · Pull Request #84469 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/84469"&gt;https://github.com/dotnet/runtime/pull/84469&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DateTime などの値型に &lt;code&gt;IUtf8SpanFormattable&lt;/code&gt; を実装するという PR。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/04/02/updates</id>
		<title>2023-04-02: Visual Studio Code 1.77, StackExchange.Redis 2.6.104, Rider &amp; ReSharper 2023.1 Beta</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/04/02/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-04-02T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="visual-studio-code-march-2023"&gt;Visual Studio Code March 2023&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com/updates/v1_77"&gt;https://code.visualstudio.com/updates/v1_77&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-2.6.104-stackexchangestackexchange.redis"&gt;Release 2.6.104 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.104"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.104&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.1-beta-is-out-the.net-tools-blog"&gt;Rider 2023.1 Beta is Out | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/30/rider-2023-1-beta-is-out/"&gt;https://blog.jetbrains.com/dotnet/2023/03/30/rider-2023-1-beta-is-out/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.1-goes-beta-the.net-tools-blog"&gt;ReSharper 2023.1 Goes Beta | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/30/resharper-2023-1-beta/"&gt;https://blog.jetbrains.com/dotnet/2023/03/30/resharper-2023-1-beta/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="discover.net-7-sdk-containers-support-for-authentication-and-cross-architecture-builds.net-blog"&gt;Discover .NET 7 SDK Containers - Support for Authentication and Cross-architecture Builds - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/updates-to-container-support-in-the-dotnet-sdk/"&gt;https://devblogs.microsoft.com/dotnet/updates-to-container-support-in-the-dotnet-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c"&gt;C#の正規表現のチートシートの翻訳&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/boukichi/articles/d4ab6a06690868"&gt;https://zenn.dev/boukichi/articles/d4ab6a06690868&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="encrypt-and-decrypt-users-data-in-asp.net-core-identity-using-the-ilookupprotector-and-ilookupprotectorkeyring-interfaces"&gt;Encrypt and Decrypt users' data in ASP.NET Core Identity using the ILookupProtector and ILookupProtectorKeyRing interfaces&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/mohammedahmed/encrypt-and-decrypt-users-data-in-aspnet-core-identity-using-the-ilookupprotector-and-ilookupprotectorkeyring-interfaces-2gep"&gt;https://dev.to/mohammedahmed/encrypt-and-decrypt-users-data-in-aspnet-core-identity-using-the-ilookupprotector-and-ilookupprotectorkeyring-interfaces-2gep&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qiita"&gt;文字列検索アルゴリズムについて - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takayoshi1968/items/97f232cb7ab50b48131a"&gt;https://qiita.com/takayoshi1968/items/97f232cb7ab50b48131a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="sail-sharp-8-tips-to-optimize-and-secure-your.net-containers-for-kubernetes"&gt;Sail Sharp, 8 tips to optimize and secure your .NET containers for Kubernetes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;mabenoit/sail-sharp-8-tips-to-optimize-and-secure-your-net-containers-for-kubernetes-c68ba253844a"&gt;https://medium.com/&amp;#64;mabenoit/sail-sharp-8-tips-to-optimize-and-secure-your-net-containers-for-kubernetes-c68ba253844a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qiita-1"&gt;短時間フーリエ変換とその逆変換 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takayoshi1968/items/636372d464d02699ba4f"&gt;https://qiita.com/takayoshi1968/items/636372d464d02699ba4f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qiita-2"&gt;ローカルの開発用証明書を更新する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/alicial/items/f7ee1224037dcd10c932"&gt;https://qiita.com/alicial/items/f7ee1224037dcd10c932&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-get-the-client-ip-in-asp.net-core-even-behind-a-proxy"&gt;How to get the client IP in ASP.NET Core even behind a proxy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/how-to-get-the-client-ip-in-asp-net-core-even-behind-a-proxy/"&gt;https://blog.elmah.io/how-to-get-the-client-ip-in-asp-net-core-even-behind-a-proxy/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="chatgpt.net-slackbot"&gt;ChatGPT + .NET Slackbot&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blogg.blank.no/chatgpt-net-slackbot-cd9ec5664f23"&gt;https://blogg.blank.no/chatgpt-net-slackbot-cd9ec5664f23&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="kerberos-in-kubernetes"&gt;Kerberos in Kubernetes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/da1rren/escaping-kerberos-with-some-simple-kubernetes-tricks-3hal"&gt;https://dev.to/da1rren/escaping-kerberos-with-some-simple-kubernetes-tricks-3hal&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-il-viewer-and-low-level-c-the.net-tools-blog"&gt;ReSharper IL Viewer and Low-Level C# | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/30/resharper-il-viewer-and-low-level-csharp/"&gt;https://blog.jetbrains.com/dotnet/2023/03/30/resharper-il-viewer-and-low-level-csharp/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="chatgpt-api-c-qiita"&gt;ChatGPT API で C# でコマンドラインで会話する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/2675b596191e4fa2d0e3"&gt;https://qiita.com/fsdg-adachi_h/items/2675b596191e4fa2d0e3&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/1c61064fc46bc77beab4"&gt;ChatGPT API で C# でコマンドラインで会話する (複数とおしゃべり) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/7cb530b19d8647d840e6"&gt;ChatGPT API で C# でコマンドラインで会話する (機能切り出し) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/8af59ab0a7a52724d064"&gt;ChatGPT API で C# でコマンドラインで会話する (人格を設定) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cthis"&gt;C#：構造体におけるthisのこと&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ruccho/articles/0042b9a9eeb6ed"&gt;https://zenn.dev/ruccho/articles/0042b9a9eeb6ed&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="simplifying-security-resource-based-authorization-in-asp.net-core"&gt;Simplifying Security: Resource-Based Authorization in ASP. NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;niteshsinghal85/simplifying-security-resource-based-authorization-in-asp-net-core-3f70486059d5"&gt;https://medium.com/&amp;#64;niteshsinghal85/simplifying-security-resource-based-authorization-in-asp-net-core-3f70486059d5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-pass-lambda-expression-to-where-linq-at-runtime"&gt;C#: Pass Lambda Expression to Where LINQ at Runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/kenakamu/c-pass-lambda-expression-to-where-linq-at-runtime-1ma4"&gt;https://dev.to/kenakamu/c-pass-lambda-expression-to-where-linq-at-runtime-1ma4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="webview2html"&gt;WebView2を使ってHTML帳票をプリンタから直接印刷する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/junnuj/articles/7fea619ba7e237"&gt;https://zenn.dev/junnuj/articles/7fea619ba7e237&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="vendor-agnostic-telemetry-using-opentelemetry-collector-in.net"&gt;Vendor-Agnostic Telemetry Using OpenTelemetry Collector in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code-maze.com/vendor-agnostic-telemetry-opentelemetry-collector-dotnet/"&gt;https://code-maze.com/vendor-agnostic-telemetry-opentelemetry-collector-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="attackers-are-starting-to-target.net-developers-with-malicious-code-nuget-packages-jfrog"&gt;Attackers are starting to target .NET developers with malicious-code NuGet packages | JFrog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jfrog.com/blog/attackers-are-starting-to-target-net-developers-with-malicious-code-nuget-packages/"&gt;https://jfrog.com/blog/attackers-are-starting-to-target-net-developers-with-malicious-code-nuget-packages/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="understanding-the.net-ecosystem-the-evolution-of.net-into.net-7"&gt;Understanding the .NET ecosystem: The evolution of .NET into .NET 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/understanding-the-dotnet-ecosystem-the-evolution-of-dotnet-into-dotnet-7/"&gt;https://andrewlock.net/understanding-the-dotnet-ecosystem-the-evolution-of-dotnet-into-dotnet-7/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ndepend-qiita"&gt;リファクタリングによる技術的負債の返済をNDependで可視化してみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/JHashimoto/items/1cde008689c0446be780"&gt;https://qiita.com/JHashimoto/items/1cde008689c0446be780&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ef-core-7-json-columns"&gt;EF Core 7: Json columns&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/ef-core-7-json-columns-2k1f"&gt;https://dev.to/karenpayneoregon/ef-core-7-json-columns-2k1f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rudderstack-introduction-and-implementation-using.net-core-7-web-api"&gt;Rudderstack Introduction and Implementation using .NET Core 7 Web API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;jaydeepvpatil225/rudderstack-introduction-and-implementation-using-net-core-7-web-api-d32fc486589a"&gt;https://medium.com/&amp;#64;jaydeepvpatil225/rudderstack-introduction-and-implementation-using-net-core-7-web-api-d32fc486589a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="sequential-guids-in-entity-framework-core-might-not-be-sequential"&gt;Sequential GUIDs in Entity Framework Core Might Not Be Sequential&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/connerphillis/sequential-guids-in-entity-framework-core-might-not-be-sequential-3408"&gt;https://dev.to/connerphillis/sequential-guids-in-entity-framework-core-might-not-be-sequential-3408&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-c"&gt;関数ポインター | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/study/csharp/interop/functionpointer/"&gt;https://ufcpp.net/study/csharp/interop/functionpointer/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-the-github-actions-extension-for-vs-code-the-github-blog"&gt;Announcing the GitHub Actions extension for VS Code | The GitHub Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.blog/2023-03-28-announcing-the-github-actions-extension-for-vs-code/"&gt;https://github.blog/2023-03-28-announcing-the-github-actions-extension-for-vs-code/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-selenium-webdriver-manager-jsakamoto"&gt;[.NET] Selenium に純正の WebDriver Manager が付属するようになった話 | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/29530356/"&gt;https://devadjust.exblog.jp/29530356/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-http2-grpc"&gt;C# と HTTP/2 と gRPC&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/nenonaninu/2-to-grpc"&gt;https://speakerdeck.com/nenonaninu/2-to-grpc&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="c9b998abaa804c76975da04414cfeab2" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="michalstrehovskysizoscope.net-tool-to-analyze-size-of-native-aot-binaries"&gt;MichalStrehovsky/sizoscope: .NET tool to analyze size of Native AOT binaries.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MichalStrehovsky/sizoscope"&gt;https://github.com/MichalStrehovsky/sizoscope&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://twitter.com/mstrehovsky/status/1641307198415585280?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;1/N I made a new tool! Ever wondered what contributes to the binary size of your .NET Native AOT executables? I now have a tool for you! 🧵 &lt;a href="https://t.co/cS9Qlgj0vN"&gt;pic.twitter.com/cS9Qlgj0vN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Michal Strehovský (&amp;#64;MStrehovsky) &lt;a href="https://twitter.com/MStrehovsky/status/1641307198415585280?ref_src=twsrc%5Etfw"&gt;March 30, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="microsoftnode-api-dotnet-implementation-of-node-api-for.net.it-can-be-used-to-create-node.js-plugins-in-c-and-other.net-languages.it-also-enables-use-of-c-and.net-for-direct-access-to-javascript-engines-or-frameworks-that-implement-node-api"&gt;microsoft/node-api-dotnet: Implementation of Node-API for .Net. It can be used to create Node.JS plugins in C# and other .Net languages. It also enables use of C# and .Net for direct access to JavaScript engines or frameworks that implement Node-API.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/node-api-dotnet"&gt;https://github.com/microsoft/node-api-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="drasticactionsdrastic.flipper-a-binding-of-flipper-for.net-ios-applications"&gt;drasticactions/Drastic.Flipper: A binding of Flipper for .NET iOS Applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/Drastic.Flipper"&gt;https://github.com/drasticactions/Drastic.Flipper&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/hassanrezkhabib/status/1640689844275003393?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Did you know that &lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;VisualStudio&lt;/a&gt;  allows you to create multiple files in one shot?&lt;br&gt;&lt;br&gt;Thanks &lt;a href="https://twitter.com/cjdutoit?ref_src=twsrc%5Etfw"&gt;&amp;#64;cjdutoit&lt;/a&gt; for the tip!&lt;a href="https://twitter.com/hashtag/visualstudio?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#visualstudio&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://t.co/4dByvAKk0q"&gt;pic.twitter.com/4dByvAKk0q&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hassan Habib (&amp;#64;HassanRezkHabib) &lt;a href="https://twitter.com/HassanRezkHabib/status/1640689844275003393?ref_src=twsrc%5Etfw"&gt;March 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="deadlock-when-using-trystartnogcregion-andor-gc.collect-issue-84096-dotnetruntime"&gt;Deadlock when using TryStartNoGCRegion and/or GC.Collect · Issue #84096 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/84096"&gt;https://github.com/dotnet/runtime/issues/84096&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/03/24/updates</id>
		<title>2023-03-24: .NET 5 to .NET 7 @ Bing, GitHub Copilot chat for Visual Studio 2022, Uno Platform 4.8.15</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/03/24/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-03-24T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-performance-delivers-again-for-bing-from.net-5-to.net-7.net-blog"&gt;.NET Performance Delivers Again for Bing, From .NET 5 to .NET 7 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-performance-delivers-again-for-bing-from-dotnet-5-to-dotnet-7/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-performance-delivers-again-for-bing-from-dotnet-5-to-dotnet-7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bing の中央ワークフローエンジンを .NET 5 から .NET 6, 7 へと更新した際の課題や効果について。&lt;/p&gt;
&lt;p&gt;.NET 5 から .NET 6 への移行は簡単に完了すると考えていたが、内部の HTTP 呼び出しで使用されていた誤ったペイロードを取りあつかえなくなる問題や、スピンカウントに関するバグによる可用性の低下といった問題に .NET 側が対応する必要があったがそれ以外では大きな書き換えもなく移行は行えたとのこと。&lt;/p&gt;
&lt;p&gt;また、起動時に事前の分析を元に JIT を意図的に発生させるよう暖気を行っていたが .NET 6 で JIT 効率が改善されたことで起動時間が劇的に改善された。&lt;/p&gt;
&lt;p&gt;.NET 7 への移行ではスレッドプールの動作の変更とリージョンベースの GC という大きな変更があったため、注意深くテストを行った結果 GC にかかる時間は24-30%近い改善を示し、GC の改善とスレッドプールの改善などにより95パーセンタイルレイテンシーは3-7%程度改善されたとのこと。&lt;/p&gt;
&lt;h3 id="github-copilot-chat-for-visual-studio-2022-visual-studio-blog"&gt;GitHub Copilot chat for Visual Studio 2022 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/github-copilot-chat-for-visual-studio-2022/"&gt;https://devblogs.microsoft.com/visualstudio/github-copilot-chat-for-visual-studio-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Copilot chat for Visual Studio 2022 の紹介。&lt;/p&gt;
&lt;p&gt;GitHub Copilot chat ではエディター上から直接 AI に対するチャットの質問文を入力できるようになり、Visual Studio 上のウィンドウで AI とチャットを行いコードに関する問題の改善などが行える。その他例外発生時に AI チャットで例外の内容を調べるといったこともできる。&lt;/p&gt;
&lt;p&gt;現在はプライベートプレビューに向けてウェイトリストの登録フォームが公開されている。&lt;/p&gt;
&lt;h3 id="release-4.8.15-unoplatformuno"&gt;Release 4.8.15 · unoplatform/uno&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/unoplatform/uno/releases/tag/4.8.15"&gt;https://github.com/unoplatform/uno/releases/tag/4.8.15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 4.8.15 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 8 Preview のサポート、スタートアップエクスペリエンスの改善、ThemeShadow for iOS/Catalyst/Android、Skia ターゲットでの影、パフォーマンスとメモリーの改善、その他さまざまな修正が含まれる。&lt;/p&gt;
&lt;h3 id="resharper-and-rider-2022.3.3-bug-fixes-have-landed-the.net-tools-blog"&gt;ReSharper and Rider 2022.3.3 Bug Fixes Have Landed | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/22/resharper-and-rider-2022-3-3-bug-fixes/"&gt;https://blog.jetbrains.com/dotnet/2023/03/22/resharper-and-rider-2022-3-3-bug-fixes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2022.3.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの細かい不具合が修正されている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="how-to-perform-mutation-testing-in.net-and-c"&gt;How to perform mutation testing in .NET and C#?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;RebeldeCuantico/how-to-perform-mutation-testing-in-net-and-c-bd23a530341f"&gt;https://medium.com/&amp;#64;RebeldeCuantico/how-to-perform-mutation-testing-in-net-and-c-bd23a530341f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET / C# でミューテーションテストを行う方法について。記事では Stryker というツールを使用してテストを行う方法を解説している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stryker-mutator.io/"&gt;Stryker Mutator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="c.net-tools-with-system.commandline"&gt;C# .NET Tools with System.CommandLine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/c-net-tools-withsystemcommandline-2nc2"&gt;https://dev.to/karenpayneoregon/c-net-tools-withsystemcommandline-2nc2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;System.CommandLine を使用してコンソールアプリケーションを実装する簡単な紹介。&lt;/p&gt;
&lt;h3 id="asp.net-web-app-migration-to-azure-app-service-using-powershell-scripts"&gt;ASP. Net web app Migration to Azure App Service using PowerShell Scripts&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/apps-on-azure-blog/asp-net-web-app-migration-to-azure-app-service-using-powershell/ba-p/2814513"&gt;https://techcommunity.microsoft.com/t5/apps-on-azure-blog/asp-net-web-app-migration-to-azure-app-service-using-powershell/ba-p/2814513&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Web アプリケーション (.NET Framework) を Azure App Service に移行する PowerShell ツールの紹介。&lt;/p&gt;
&lt;h3 id="too-many-timers-in.net-gerald-barre"&gt;Too many timers in .NET? - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/too-many-timers-in-dotnet.htm"&gt;https://www.meziantou.net/too-many-timers-in-dotnet.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET に含まれる複数のタイマー (System.Threading.Timer, System.Threading.PeriodicTimer, System.Timers.Timer) の違いと使い方の紹介。&lt;/p&gt;
&lt;h3 id="scatter-plots-in-f-and-c-using-plotly.net"&gt;Scatter plots in F# and C# using Plotly.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fslab.org/blog/graph-gallery/scatter/csharp.html"&gt;https://fslab.org/blog/graph-gallery/scatter/csharp.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Plotly.NET を使用して散布図を表示する方法について。記事では Interactive (Juptyer Notebook) での使用例を紹介している。&lt;/p&gt;
&lt;h3 id="mastering-blazor-part-2-hot-reloading"&gt;Mastering Blazor - Part 2: Hot Reloading&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/florianrappl/mastering-blazor-part-2-hot-reloading-2b87"&gt;https://dev.to/florianrappl/mastering-blazor-part-2-hot-reloading-2b87&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor でのホットリロードについての解説。&lt;/p&gt;
&lt;p&gt;記事ではホットリロードはどのように使用し、どのような制限があるのか、そしてどのように動作しているのかを解説している。&lt;/p&gt;
&lt;h3 id="debugging-multiple.net-projects-in-vs-code"&gt;Debugging Multiple .NET Projects in VS Code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/this-is-learning/debugging-multiple-net-projects-in-vs-code-28kn"&gt;https://dev.to/this-is-learning/debugging-multiple-net-projects-in-vs-code-28kn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code で複数の .NET プロジェクトをまとめてデバッグ実行する方法について。&lt;/p&gt;
&lt;h3 id="remote-development-with-jetbrains-rider-the.net-tools-blog"&gt;Remote Development with JetBrains Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/22/remote-development-with-jetbrains-rider/"&gt;https://blog.jetbrains.com/dotnet/2023/03/22/remote-development-with-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2022.2 でベータとしてサポートされたリモート開発についての紹介記事。&lt;/p&gt;
&lt;p&gt;記事ではどのようにして Rider を使用してリモート開発を始めるのか、どのようなことができるのかといったことを紹介している。&lt;/p&gt;
&lt;h3 id="secure-your.net-cloud-apps-with-rootless-linux-containers.net-blog"&gt;Secure your .NET cloud apps with rootless Linux Containers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/securing-containers-with-rootless/"&gt;https://devblogs.microsoft.com/dotnet/securing-containers-with-rootless/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で導入される rootless な Linux コンテナーイメージについて。&lt;/p&gt;
&lt;p&gt;rootless コンテナーイメージは一般ユーザーで動作することでセキュリティー面でのリスクを軽減することができる。.NET 8 ではコンテナーイメージにアプリケーション用のユーザーが含まれるようになる。&lt;/p&gt;
&lt;p&gt;記事では一般ユーザーで実行する方法やその際に必要な対応などを説明している。&lt;/p&gt;
&lt;h3 id="streamlining-your-debugging-process-with-breakpoint-groups-visual-studio-blog"&gt;Streamlining your Debugging process with Breakpoint Groups - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/streamlining-your-debugging-process-with-breakpoint-groups/"&gt;https://devblogs.microsoft.com/visualstudio/streamlining-your-debugging-process-with-breakpoint-groups/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6 Preview 2 で導入されたブレークポイントをグループ化する機能についての紹介。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-c-iotraspberrypi-l-qiita"&gt;Visual Studio 2022 C# でIOT（RaspberryPi でＬチカ） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/dail1015/items/aa8169c72598865f3bca"&gt;https://qiita.com/dail1015/items/aa8169c72598865f3bca&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Raspberry Pi 4 で .NET 7 を実行してLチカする方法について。&lt;/p&gt;
&lt;h3 id="why-is-resharper-suggesting-this-the.net-tools-blog"&gt;Why is ReSharper suggesting this? | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/20/why-is-resharper-suggesting-this/"&gt;https://blog.jetbrains.com/dotnet/2023/03/20/why-is-resharper-suggesting-this/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;Why is ReSharper suggesting this?&amp;quot; という ReSharper が何故その提案を行っているのかについてのヘルプを表示できる機能についての紹介。&lt;/p&gt;
&lt;h3 id="akka.net-v1.5-no-hocon-no-lighthouse-no-problem"&gt;Akka.NET v1.5: No Hocon, No Lighthouse, No Problem&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://petabridge.com/blog/akkadotnet-1.5-no-hocon-no-lighthouse-no-problem/"&gt;https://petabridge.com/blog/akkadotnet-1.5-no-hocon-no-lighthouse-no-problem/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Akka.NET 1.5 で追加された Akka.Hosting, Akka.Management, Akka.HealthCheck についての解説。&lt;/p&gt;
&lt;h3 id="create-a-portfolio-website-without-installing-any-tools.net-blog"&gt;Create a portfolio website without installing any tools - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/codespaces-template-blazor-portfolio-website/"&gt;https://devblogs.microsoft.com/dotnet/codespaces-template-blazor-portfolio-website/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Codespaces を使用して GitHub Pages や Azure Static Web Apps に Blazor WebAssembly のウェブサイトを作る方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="endeciphercoracle.raft-clusterize-your-functionality-and-build-your-own-replicated-state-machine-using-this-completely-extensible-implementation-of-the-raft-consensus-algorithm-in.net"&gt;endecipher/Coracle.Raft: Clusterize your functionality and build your own replicated state machine using this completely extensible implementation of the Raft consensus algorithm in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/endecipher/Coracle.Raft"&gt;https://github.com/endecipher/Coracle.Raft&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Raft コンセンサスアルゴリズムを使用したクラスターを実装するためのライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/&amp;#64;ayan.choudhury329/extensible-raft-consensus-algorithm-in-net-1db4ba13efa2"&gt;Extensible Raft Consensus algorithm in .NET | by Ayan Choudhury | Mar, 2023 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="stevesandersonmsdotnetisolator-a-library-for-running-isolated.net-runtimes-inside.net"&gt;SteveSandersonMS/DotNetIsolator: A library for running isolated .NET runtimes inside .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/SteveSandersonMS/DotNetIsolator"&gt;https://github.com/SteveSandersonMS/DotNetIsolator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET ランタイムの上で Wasm の .NET ランタイムをホストすることで隔離環境でコードを実行できるようにするという仕組みを提供するライブラリー。&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/5u1UaqkPZbg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id="drasticactionsdrastic.flex.net-binding-of-flex-an-in-app-debugging-and-exploration-tool-for-ios"&gt;drasticactions/Drastic.Flex: .NET Binding of FLEX, An in-app debugging and exploration tool for iOS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/Drastic.Flex"&gt;https://github.com/drasticactions/Drastic.Flex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iOS 向けのアプリ内開発ツールの Flex の .NET バインディング。&lt;/p&gt;
&lt;!-- https://twitter.com/drasticactions/status/1637324021103755264?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In my quest for more iOS Perf tools to help debug MAUI, I bound another iOS Library to .NET: Flex.&lt;br&gt;&lt;br&gt;Debug your iOS UI, networking features, and much much more, all from within your application!&lt;a href="https://t.co/Uciktm6mjv"&gt;https://t.co/Uciktm6mjv&lt;/a&gt; &lt;a href="https://t.co/iH9UZgicee"&gt;pic.twitter.com/iH9UZgicee&lt;/a&gt;&lt;/p&gt;&amp;mdash; Drastic Actions (&amp;#64;drasticactions) &lt;a href="https://twitter.com/drasticactions/status/1637324021103755264?ref_src=twsrc%5Etfw"&gt;March 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;.NET のデコンパイラーについての記事が2023年の情報で更新されている。&lt;/p&gt;
&lt;!-- https://twitter.com/ndepend/status/1635867251084521472?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET Decompilers Compared: A Comprehensive Guide &lt;a href="https://t.co/Rwr7458YqY"&gt;https://t.co/Rwr7458YqY&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/decompilation?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#decompilation&lt;/a&gt; &lt;a href="https://t.co/tviFpkPZzJ"&gt;pic.twitter.com/tviFpkPZzJ&lt;/a&gt;&lt;/p&gt;&amp;mdash; ndepend (&amp;#64;ndepend) &lt;a href="https://twitter.com/ndepend/status/1635867251084521472?ref_src=twsrc%5Etfw"&gt;March 15, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Rx.Async の最初のアルファーリリースが出たという話。&lt;/p&gt;
&lt;!-- https://twitter.com/howardvrooijen/status/1637018355243646977?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The first alpha release of Async Rx is available&lt;a href="https://t.co/SCq7RHRQeo"&gt;https://t.co/SCq7RHRQeo&lt;/a&gt; &lt;a href="https://t.co/Ta9GapjOgQ"&gt;pic.twitter.com/Ta9GapjOgQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Howard van Rooijen (&amp;#64;HowardvRooijen) &lt;a href="https://twitter.com/HowardvRooijen/status/1637018355243646977?ref_src=twsrc%5Etfw"&gt;March 18, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Span.CopyTo がアンロール可能になったという話。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1637807882979667973?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Span.CopyTo is now unrollable! &lt;a href="https://t.co/OLON4Xom92"&gt;https://t.co/OLON4Xom92&lt;/a&gt; it allows us to remove hacks like this one in Boolean.cs and have the same optimized codegen: &lt;a href="https://t.co/hf1voKUC4o"&gt;pic.twitter.com/hf1voKUC4o&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1637807882979667973?ref_src=twsrc%5Etfw"&gt;March 20, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="optimize-stackalloc-zeroing-via-blk-by-egorbo-pull-request-83255-dotnetruntime"&gt;Optimize stackalloc zeroing via BLK by EgorBo · Pull Request #83255 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/83255"&gt;https://github.com/dotnet/runtime/pull/83255&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-spa-templates-need-better-options-for-authentication-issue-42158-dotnetaspnetcore"&gt;ASP.NET Core SPA Templates Need Better Options for Authentication · Issue #42158 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/42158#issuecomment-1481742187"&gt;https://github.com/dotnet/aspnetcore/issues/42158#issuecomment-1481742187&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 での ASP.NET Core SPA テンプレートに関する変更点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;既存の Cookie ベースの認証を拡張し、SPA アプリケーションでのカスタマイズのサポート&lt;/li&gt;
&lt;li&gt;既存のアイデンティティのモダン化によるトークベースの認証のサポート&lt;/li&gt;
&lt;li&gt;SPA テンプレートから Duende IdentityServer の依存の削除&lt;/li&gt;
&lt;li&gt;ASP.NET Core の認証オプションの新しいドキュメントの作成&lt;/li&gt;
&lt;li&gt;認証ドキュメントへのテンプレートからのリンク&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/03/19/updates</id>
		<title>2023-03-19: .NET 8 Preview 2, Visual Studio 2022 v17.6 Preview 2, Semantic Kernel, MessagePack-CSharp v2.5.108</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/03/19/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-03-19T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-8-preview-2.net-blog"&gt;Announcing .NET 8 Preview 2 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは System.ComponentModel.DataAnnotations を拡張する属性の追加やリフレクションでの関数ポインターのサポートが追加された。&lt;/p&gt;
&lt;h3 id="ef-core-8-preview-2-lite-and-familiar.net-blog"&gt;EF Core 8 Preview 2: Lite and familiar - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 8 Preview 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;記事ではこのリリースで利用できるようになった SQLite での JSON 列サポートと SQL Server/Azure SQL databases での HierarchyId サポートについて紹介している。&lt;/p&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-2.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 2 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-2/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 8 での ASP.NET Core のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blazor の QuickGrid サポート&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly での JIT (Jiterpreter) によるパフォーマンス向上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[FromBody]&lt;/code&gt; が複数指定されていることを検出する Analyzer&lt;/li&gt;
&lt;li&gt;より回復力のある統合のための &lt;code&gt;ProblemDetails&lt;/code&gt; の新 API&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ObjectPool&lt;/code&gt; での &lt;code&gt;IResettable&lt;/code&gt; インターフェース&lt;/li&gt;
&lt;li&gt;名前付きパイプのパフォーマンスの向上&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-v17.6-preview-2-is-now-available-visual-studio-blog"&gt;Visual Studio 2022 v17.6 Preview 2 is now available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-6-preview-2-is-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-6-preview-2-is-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6 Preview 2 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性のレベルアップ
&lt;ul&gt;
&lt;li&gt;ビルド中の Git ステージとコミット&lt;/li&gt;
&lt;li&gt;マージダイアログの改善&lt;/li&gt;
&lt;li&gt;ブレークポイントグループ&lt;/li&gt;
&lt;li&gt;C++ のインストルメンテーションプロファイリング&lt;/li&gt;
&lt;li&gt;WSL 上での .NET のプロファイラーライブグラフ&lt;/li&gt;
&lt;li&gt;C++ メンバー関数の作成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ゲーム開発の合理化
&lt;ul&gt;
&lt;li&gt;Unreal Engine コード解析&lt;/li&gt;
&lt;li&gt;Tim Jones による　HLSL ツール拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET モバイル開発
&lt;ul&gt;
&lt;li&gt;Android Manifest エディター&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;エンタープライズ管理
&lt;ul&gt;
&lt;li&gt;Visual Studio のレイアウトのイントラネットからのホストとデプロイ&lt;/li&gt;
&lt;li&gt;インストーラーでの利用可能なプロダクトの公開の制限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="hello-semantic-kernel-semantic-kernel"&gt;Hello, Semantic Kernel! | Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/semantic-kernel/hello-world/"&gt;https://devblogs.microsoft.com/semantic-kernel/hello-world/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel が公開された。&lt;/p&gt;
&lt;p&gt;Semantic Kernel は OpenAI や Azure OpenAI Service といった大規模言語モデル (LLM) の AI プロンプトをアプリケーションに組み込むための 軽量 SDK。現在 C# がサポートされ、Python がプレビューサポートとなっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/semantic-kernel"&gt;microsoft/semantic-kernel: Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-v2.5.108-neueccmessagepack-csharp"&gt;Release v2.5.108 · neuecc/MessagePack-CSharp&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases/tag/v2.5.108"&gt;https://github.com/neuecc/MessagePack-CSharp/releases/tag/v2.5.108&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MessagePack-CSharp v2.5.108 がリリースされた。&lt;/p&gt;
&lt;p&gt;v2.4.59 以降の変更点として nullable アノテーションの追加や .NET 5 のサポートの廃止、ジェネレーターのロールフォワード、その他さまざまな修正と改善が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases/tag/v2.5.94"&gt;Release v2.5.94 · neuecc/MessagePack-CSharp · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases/tag/v2.5.103"&gt;Release v2.5.103 · neuecc/MessagePack-CSharp · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="how-asyncawait-really-works-in-c.net-blog"&gt;How Async/Await Really Works in C# - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/how-async-await-really-works/"&gt;https://devblogs.microsoft.com/dotnet/how-async-await-really-works/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# の async/await がどのように動いているのかを解説している記事。&lt;/p&gt;
&lt;p&gt;APM やイベントベースでの非同期パターンから Task ベースへの流れ、Task と ValueTask、C# におけるコンパイル時のコードの展開とその動作の詳しい解説といったことが書かれている。&lt;/p&gt;
&lt;h3 id="release-release-v2.52.0-grpcgrpc-dotnet"&gt;Release Release v2.52.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.52.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.52.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet (Grpc.Net) v2.52 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは dotnet-grpc ツールが .NET 6 をターゲットとするようになったほか、様々な細かい不具合の修正と改善が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.52.0-pre1"&gt;Release Release v2.52.0-pre1 · grpc/grpc-dotnet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-v1.2.5-microsoftwindowsappsdk"&gt;Release v1.2.5 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.5"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.2.5 (1.2.230313.1) がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Composition のシャットダウン中のクラッシュの修正や画面がオフの場合でもアニメーションが継続する問題の修正、WebView2 でのマウスとタッチの入力の失敗の修正が含まれている。&lt;/p&gt;
&lt;h3 id="net-march-2023-updates.net-7.0.4.net-6.0.15.net-blog"&gt;.NET March 2023 Updates – .NET 7.0.4, .NET 6.0.15 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/march-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/march-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7.0.4 と .NET 6.0.15 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは細かい不具合の修正と改善が複数含まれている。&lt;/p&gt;
&lt;h3 id="announcing-polyglot-notebooks-multi-language-notebooks-in-visual-studio-code.net-blog"&gt;Announcing Polyglot Notebooks! Multi-language notebooks in Visual Studio Code - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-polyglot-notebooks-harness-the-power-of-multilanguage-notebooks-in-visual-studio-code/"&gt;https://devblogs.microsoft.com/dotnet/announcing-polyglot-notebooks-harness-the-power-of-multilanguage-notebooks-in-visual-studio-code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polyglot Notebooks (旧 .NET Interactive Notebooks) が Visual Studio Code 向け拡張として Marketplace で一般公開された。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-8-preview-2"&gt;.NET 8 Preview 2で追加された入力値検証について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/bb5cb32470ca8a"&gt;https://zenn.dev/tomokusaba/articles/bb5cb32470ca8a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 2 で追加された System.ComponentModel.DataAnnotations の検証属性の機能を紹介している。&lt;/p&gt;
&lt;h3 id="blazor-webassembly"&gt;Blazor WebAssemblyにおける入力値検証について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/9fd92c1716ca30"&gt;https://zenn.dev/tomokusaba/articles/9fd92c1716ca30&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor WebAssembly での入力値検証の実装方法について。&lt;/p&gt;
&lt;h3 id="wearedotnet"&gt;#WeAreDotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;tim.cadenbach/wearedotnet-d8ec96685c33"&gt;https://medium.com/&amp;#64;tim.cadenbach/wearedotnet-d8ec96685c33&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#WeAreDotnet というコミュニティーポータルについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.wearedotnet.io/"&gt;WeAreDotnet (Beta)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="getting-started-with-eventstoredb-c"&gt;Getting Started with EventStoreDb (C#)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;no1.melman10/getting-started-with-eventstoredb-c-13411ec08713"&gt;https://medium.com/&amp;#64;no1.melman10/getting-started-with-eventstoredb-c-13411ec08713&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EventStoreDB というイベントソーシング向けデータベースを使う方法の解説。&lt;/p&gt;
&lt;p&gt;なお EventStoreDB 自体も .NET (C#) で実装されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/EventStore/EventStore"&gt;EventStore/EventStore: The stream database optimised for event sourcing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="extending-visual-studio-codelens-functionality-part-ii"&gt;Extending Visual Studio CodeLens Functionality - Part II&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codingwithcalvin.net/extending-visual-studio-codelens-functionality-part-ii/"&gt;https://codingwithcalvin.net/extending-visual-studio-codelens-functionality-part-ii/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の CodeLens を拡張方法の解説シリーズ。この記事では CodeLens のコールバックを実装する方法について解説している。&lt;/p&gt;
&lt;h3 id="c-c"&gt;忘れがちなカルチャー依存問題 | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/3/string-order/"&gt;https://ufcpp.net/blog/2023/3/string-order/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Globalization Invariant Mode を有効にした場合に文字列比較における Invariant, Ordinal の扱いと Order などでのパフォーマンスについて。&lt;/p&gt;
&lt;h3 id="xcopywinui3"&gt;XCopyでデプロイ可能なWinUI3のミニマムプロジェクトを作る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nin_neko/articles/ecb16042f04c01"&gt;https://zenn.dev/nin_neko/articles/ecb16042f04c01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;XCopy デプロイ (インストールせずファイルをコピーすれば動く形)のミニマムな WinUI 3 アプリケーションプロジェクトの作り方について。&lt;/p&gt;
&lt;h3 id="cesu-8-utf-16-qiita"&gt;CESU-8 から UTF-16 への変換 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/7shi/items/8eae6d909e1b82b35215"&gt;https://qiita.com/7shi/items/8eae6d909e1b82b35215&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CESU-8 (UTF-8 の変種) を UTF-16 に変換する方法について。&lt;/p&gt;
&lt;h3 id="unity-dots-support-in-rider-2023.1-the.net-tools-blog"&gt;Unity DOTS support in Rider 2023.1 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/16/unity-dots-support-in-rider-2023-1/"&gt;https://blog.jetbrains.com/dotnet/2023/03/16/unity-dots-support-in-rider-2023-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.1 で追加された Unity の DOTS サポートの紹介。&lt;/p&gt;
&lt;p&gt;DOTS 向けのテンプレートやコード生成などがサポートされている。&lt;/p&gt;
&lt;h3 id="help-us-investigate-a-new-welcome-experience-in-visual-studio-17.6-preview-2-visual-studio-blog"&gt;Help us investigate a new Welcome Experience in Visual Studio 17.6 Preview 2 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/welcome-experience/"&gt;https://devblogs.microsoft.com/visualstudio/welcome-experience/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 17.6 Preview 2 で導入された新しい Welcome ページについて。&lt;/p&gt;
&lt;p&gt;以前のスタートウィンドウ(既存のソリューションの選択や新しいプロジェクトの作成などを行うウィンドウ)に代わり導入された Welcome ページの紹介とそのフィードバックを求める案内。&lt;/p&gt;
&lt;h3 id="c-search-ad-entry-by-objectsid-using-novell-directory-ldap-nuget-package"&gt;C# - Search AD entry by ObjectSid using Novell Directory Ldap Nuget package&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/hbolajraf/c-search-ad-entry-by-objectsid-using-novell-directory-ldap-nuget-package-28il"&gt;https://dev.to/hbolajraf/c-search-ad-entry-by-objectsid-using-novell-directory-ldap-nuget-package-28il&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Novell.Directory.Ldap.NETStandard パッケージを使用して ObjectSid を元に Active Directory を検索する方法について。&lt;/p&gt;
&lt;h3 id="asp.net-core-try-server-sent-events"&gt;[ASP.NET Core] Try Server-Sent Events&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/masanori_msl/aspnet-core-try-server-sent-events-5db2"&gt;https://dev.to/masanori_msl/aspnet-core-try-server-sent-events-5db2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で Server-Sent Events を実現する方法について。&lt;/p&gt;
&lt;h3 id="building-a-video-calling-app-using-wpf-dyte"&gt;Building a Video Calling App Using WPF &amp;amp; Dyte&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dyte.io/blog/building-video-calling-app-using-wpf-dyte/"&gt;https://dyte.io/blog/building-video-calling-app-using-wpf-dyte/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dyte (ライブビデオ、ビデオカンファレンスを扱うサービス) を使用してビデオ通話を行う WPF アプリケーションを実装する方法について。&lt;/p&gt;
&lt;h3 id="net-qiita"&gt;.NETでのコンソールのバッファーとウィンドウについて - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/rougemeilland/items/10f4d94c9343fd8eb708"&gt;https://qiita.com/rougemeilland/items/10f4d94c9343fd8eb708&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET でのコンソールのバッファーとウィンドウの取り扱いについて。Console.Clear の挙動についても触れている。&lt;/p&gt;
&lt;h3 id="implementing-an-accessible-checkable-wpf-tree-view-engineeringmicrosoft"&gt;Implementing an accessible, checkable WPF Tree View - Engineering&amp;#64;Microsoft&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/engineering-at-microsoft/implementing-an-accessible-checkable-wpf-tree-view/"&gt;https://devblogs.microsoft.com/engineering-at-microsoft/implementing-an-accessible-checkable-wpf-tree-view/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Accessibility Insight チームが修正した WPF のチェックボックスを持つツリービューの実装について。&lt;/p&gt;
&lt;h3 id="working-with-git-in-jetbrains-rider"&gt;Working with Git in JetBrains Rider&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/working-with-git-in-jetbrains-rider/"&gt;https://andrewlock.net/working-with-git-in-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider での様々な Git 操作についての紹介。&lt;/p&gt;
&lt;h3 id="static-interface-members-generic-attributes-auto-default-structs-using-c-11-in-rider-and-resharper-the.net-tools-blog"&gt;Static Interface Members, Generic Attributes, Auto-Default Structs – Using C# 11 in Rider and ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/14/static-interface-members-generic-attributes-auto-default-structs-using-csharp-11-in-rider-and-resharper/"&gt;https://blog.jetbrains.com/dotnet/2023/03/14/static-interface-members-generic-attributes-auto-default-structs-using-csharp-11-in-rider-and-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider と ReSharper での C# 11 の Static abstract members in interfaces やジェネリック属性、struct の自動デフォルトといった新機能をサポートする機能の紹介。&lt;/p&gt;
&lt;h3 id="improving-the-spell-checker-visual-studio-blog"&gt;Improving the Spell Checker - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/improving-the-spell-checker/"&gt;https://devblogs.microsoft.com/visualstudio/improving-the-spell-checker/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 Preview 2 でのスペルチェッカーの改善についての紹介。&lt;/p&gt;
&lt;p&gt;プログラミング言語固有の辞書や除外辞書のエンコーディングの改善、特殊ケースでの検出の改善、スペルチェッカーのカスタマイズについてを紹介している。&lt;/p&gt;
&lt;h3 id="net-qiita-1"&gt;特定フォルダー以下にあるプロジェクトで参照しているライブラリの一覧を取得する(.NET) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/a6149a40d9c775a6665d"&gt;https://qiita.com/karuakun/items/a6149a40d9c775a6665d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;特定フォルダー以下にある .csproj から参照しているライブラリーの一覧を PowerShell で取得する方法について。&lt;/p&gt;
&lt;h3 id="cgoogle-qiita"&gt;C#からGoogleスプレッドシートを操作してみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tat_tt/items/b9757cc940338c7deeab"&gt;https://qiita.com/tat_tt/items/b9757cc940338c7deeab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# から Google スプレッドシートを操作するための手順とデータの読み取り例の解説。&lt;/p&gt;
&lt;h3 id="azure-functions-v3-to-v4.net-7.0"&gt;Azure Functions v3 to v4 (.NET 7.0)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tessecraft_r/articles/1d3f83025e0830"&gt;https://zenn.dev/tessecraft_r/articles/1d3f83025e0830&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で実装した Azure Functions を v3 から v4 へと移行する際に行ったことを解説している記事。&lt;/p&gt;
&lt;h3 id="reactiveproperty-v9.1"&gt;ReactiveProperty v9.1 をリリースしました&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/okazuki/articles/release-reactiveproperty-v9_1_0"&gt;https://zenn.dev/okazuki/articles/release-reactiveproperty-v9_1_0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReactiveProperty v9.1 の新機能についての紹介。コマンドへの拡張メソッドや &lt;code&gt;ReactivePropertiesValidator&lt;/code&gt; の改良といったポイントを解説している。&lt;/p&gt;
&lt;h3 id="c-11-pattern-matching-on-span-for-constant-string"&gt;C# 11- Pattern Matching On Span For Constant String&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.c-sharpcorner.com/blogs/c-sharp-11-pattern-matching-on-span-for-constant-string"&gt;https://www.c-sharpcorner.com/blogs/c-sharp-11-pattern-matching-on-span-for-constant-string&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ReadOnlySpan&amp;lt;char&amp;gt;&lt;/code&gt; にはリストパターンマッチが使用できることについて。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="dfedermreferencetrimmer-easily-identify-which-dependencies-can-be-removed-from-a.net-project"&gt;dfederm/ReferenceTrimmer: Easily identify which dependencies can be removed from a .NET project&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dfederm/ReferenceTrimmer"&gt;https://github.com/dfederm/ReferenceTrimmer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用していない依存関係を簡単に洗い出すための MSBuild タスクと Roslyn Analyzer。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dfederm.com/removing-unused-dependencies-with-referencetrimmer/"&gt;Removing unused dependencies with ReferenceTrimmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="azuredata-api-builder-data-api-builder-for-azure-databases-provides-modern-rest-and-graphql-endpoints-to-your-azure-databases"&gt;Azure/data-api-builder: Data API builder for Azure Databases provides modern REST and GraphQL endpoints to your Azure Databases.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Azure/data-api-builder"&gt;https://github.com/Azure/data-api-builder&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Database (CosmosDB, MySQL, PostgreSQL, SQL Database) に対する REST/GraphQL ゲートウェイサーバー。&lt;/p&gt;
&lt;p&gt;主に Azure Static Web Apps からデータベースにアクセスするために使用される。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://techcommunity.microsoft.com/t5/apps-on-azure-blog/announcing-database-connections-for-azure-static-web-apps-with/ba-p/3747831"&gt;Announcing Database connections for Azure Static Web Apps with Data API builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/azure/graphql-on-azure-part-12-graphql-as-a-service-3nd8"&gt;GraphQL on Azure: Part 12 - GraphQL as a Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="wilder-mindsminimalapidiscovery-a.net-core-library-to-support-registering-minimal-apis-in-a-sane-way"&gt;wilder-minds/MinimalApiDiscovery: A .NET Core Library to support registering Minimal APIs in a Sane Way&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/wilder-minds/MinimalApiDiscovery"&gt;https://github.com/wilder-minds/MinimalApiDiscovery&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Minimal API を小分け(グループ)にして自動登録できるようにするライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wildermuth.com/2023/02/22/minimal-api-discovery/"&gt;A Minimal API Discovery Tool for Large APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="jsakamotoblazingstory-the-clone-of-storybook-for-blazor-a-frontend-workshop-for-building-ui-components-and-pages-in-isolation"&gt;jsakamoto/BlazingStory: The clone of &amp;quot;Storybook&amp;quot; for Blazor, a frontend workshop for building UI components and pages in isolation.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jsakamoto/BlazingStory/"&gt;https://github.com/jsakamoto/BlazingStory/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UI コンポーネントカタログ Storybook のBlazor 向けのクローン。&lt;/p&gt;
&lt;!-- https://twitter.com/jsakamoto/status/1635746624759795713 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Today, I released the &amp;quot;Blazing Story&amp;quot; preview 1, the clone of &amp;quot;Storybook&amp;quot; for Blazor! 🎉&lt;a href="https://t.co/HbtUJlBbLG"&gt;https://t.co/HbtUJlBbLG&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Blazor?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Blazor&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Storybook?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Storybook&lt;/a&gt;&lt;br&gt;It is the first preview, will not be stable, and lacks many features, but an important milestone for me. &lt;a href="https://t.co/LF9kLvUuvz"&gt;pic.twitter.com/LF9kLvUuvz&lt;/a&gt;&lt;/p&gt;&amp;mdash; &amp;#64;jsakamoto (&amp;#64;jsakamoto) &lt;a href="https://twitter.com/jsakamoto/status/1635746624759795713?ref_src=twsrc%5Etfw"&gt;March 14, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="damianedwardsrazorslices-lightweight-razor-based-templates-for-asp.net-core-without-mvc-razor-pages-or-blazor"&gt;DamianEdwards/RazorSlices: Lightweight Razor-based templates for ASP.NET Core without MVC, Razor Pages, or Blazor.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/DamianEdwards/RazorSlices"&gt;https://github.com/DamianEdwards/RazorSlices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core MVC や Razor Pages なしに Razor ベースのテンプレートを使用するライブラリー。&lt;/p&gt;
&lt;p&gt;主に Minimal API のようなユースケースを想定したものとなっている。(ASP.NET Core MVC は使用しないが ASP.NET Core フレームワークには依存がある)&lt;/p&gt;
&lt;!-- https://twitter.com/DamianEdwards/status/1635404036118827008 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I released a new NuGet library that enables using Razor to produce templated responses from &lt;a href="https://twitter.com/hashtag/aspnetcore?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#aspnetcore&lt;/a&gt; Minimal APIs, middleware, etc. w/ a focus on performance &amp;amp; PAYG feature implementation.&lt;br&gt;&lt;br&gt;NuGet: &lt;a href="https://t.co/TJUfGKLAk0"&gt;https://t.co/TJUfGKLAk0&lt;/a&gt;&lt;br&gt;GitHub: &lt;a href="https://t.co/f7YIgJ1GyD"&gt;https://t.co/f7YIgJ1GyD&lt;/a&gt;&lt;/p&gt;&amp;mdash; hackyderm.io/&amp;#64;damianedwards 🦣 (&amp;#64;DamianEdwards) &lt;a href="https://twitter.com/DamianEdwards/status/1635404036118827008?ref_src=twsrc%5Etfw"&gt;March 13, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
</feed>