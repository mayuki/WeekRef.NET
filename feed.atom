<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>/</id>
	<title>WeekRef.NET</title>
	<author>
		<name>Mayuki Sawatari</name>
	</author>
	<link rel="self" href="/" />
	<rights>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</rights>
	<updated>2023-08-27T14:09:07Z</updated>
	<logo>/img/logo.png</logo>
	<subtitle>.NET 関連の情報をほぼ週刊配信</subtitle>
	<entry>
		<id>/2023/08/27/updates</id>
		<title>2023-08-27: grpc-dotnet v2.56.0, Windows Community Toolkit 8.0 Pre-release, ImageSharp.Drawing 1.0.0</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/08/27/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-08-27T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-release-v2.56.0-grpcgrpc-dotnet"&gt;Release Release v2.56.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.56.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.56.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet v2.56.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;DebuggerDisplay 等によるデバッグ時の体験の向上や細かい改善や不具合修正が含まれている。&lt;/p&gt;
&lt;h3 id="windows-community-toolkit-8.0-pre-release-ifdef-windows"&gt;Windows Community Toolkit 8.0 Pre-release - #ifdef Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/ifdef-windows/windows-community-toolkit-8-0-pre-release/"&gt;https://devblogs.microsoft.com/ifdef-windows/windows-community-toolkit-8-0-pre-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows Community Toolkit 8.0 のプレビュー版がリリースされた。&lt;/p&gt;
&lt;p&gt;WCT 8.0 では複数のプラットフォームを一つのコードベースに統合し、名前空間の統一などが行われている。コンポーネントは UWP, Windows App SDK および Uno Platform で動作する。&lt;/p&gt;
&lt;p&gt;記事では利用可能なパッケージや新規/既存プロジェクトでの利用方法についても紹介している。&lt;/p&gt;
&lt;h3 id="six-labors-announcing-imagesharp.drawing-1.0.0"&gt;Six Labors : Announcing ImageSharp.Drawing 1.0.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sixlabors.com/posts/announcing-imagesharp-drawing-100/"&gt;https://sixlabors.com/posts/announcing-imagesharp-drawing-100/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SixLabors.ImageSharp.Drawing 1.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このライブラリーはテキストレンダリングやパスや図形の描画といった高度な描画機能を ImageSharp を基盤として提供する。Linux のような環境での System.Drawing の代替手段として利用できる。&lt;/p&gt;
&lt;p&gt;このライブラリーのリリース v1.x は Apache 2.0 License となるが依存先である ImageSharp は v2.x 系(オープンソースではない) ではないことに注意が必要となる。&lt;/p&gt;
&lt;h3 id="the-first-set-of-bug-fixes-for-resharper-and-rider-2023.2-is-here-the.net-tools-blog"&gt;The First Set of Bug-fixes For ReSharper and Rider 2023.2 Is Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/08/24/2023-2-1-bugfix/"&gt;https://blog.jetbrains.com/dotnet/2023/08/24/2023-2-1-bugfix/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper および Rider 2023.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではフリーズやコード解析の問題など様々な不具合が修正されている。&lt;/p&gt;
&lt;h3 id="net-framework-august-2023-cumulative-update-preview.net-blog"&gt;.NET Framework August 2023 Cumulative Update Preview - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-august-2023-cumulative-update-preview/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-august-2023-cumulative-update-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework の2023年8月の累積アップデートのプレビューがリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは WPF、ランタイム、ASP.NET の不具合がいくつか修正されている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="a-twisted-tale-of-memory-optimization"&gt;A twisted tale of memory optimization&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/199969-A/a-twisted-tale-of-memory-optimization?Key=cb2fc684-6549-466c-9c4f-0bae8b5ef566"&gt;https://ayende.com/blog/199969-A/a-twisted-tale-of-memory-optimization?Key=cb2fc684-6549-466c-9c4f-0bae8b5ef566&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;char[]&lt;/code&gt; から UTF-8 バイト列を作る際のメモリー割り当てを最適化する際の落とし穴の話。&lt;/p&gt;
&lt;h3 id="microsoft.fast.components.fluentuidatagrid"&gt;Microsoft.Fast.Components.FluentUIのDataGridで表示しきれない項目を折り返し表示できるようにする&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/2468153bfe2d68"&gt;https://zenn.dev/tomokusaba/articles/2468153bfe2d68&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor 向けの FluentUI の FluentDataGrid コンポーネントでのカラム内に長い文字列を指定した際に表示が切れてしまう問題を回避する方法について。&lt;/p&gt;
&lt;h3 id="cedec-2023-c-2023-edition"&gt;CEDEC 2023 モダンハイパフォーマンスC# 2023 Edition&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/neuecc/cedec-2023-modanhaipahuomansuc-number-2023-edition"&gt;https://speakerdeck.com/neuecc/cedec-2023-modanhaipahuomansuc-number-2023-edition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;現代的な .NET でのハイパフォーマンスなコードを書く手法をシリアライザーの実装などを元に紹介しているスライド。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="055c0df858f44aafb4b017bb9c03c2e6" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="antdesignblazor"&gt;AntDesignBlazorを使用している場合のコンポーネントのテスト方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/artuer/articles/9245d21ac8a88c"&gt;https://zenn.dev/artuer/articles/9245d21ac8a88c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AntDesignBlazor を使用したコンポーネントに対するユニットテストを行う方法について。BUnit と AntDesignTestKit を使用してテストを記述できるようにする。&lt;/p&gt;
&lt;h3 id="maui-appiossimulator-qiita"&gt;MAUI AppをiOSの実機&amp;amp;Simulatorで実行するスクリプトを作った話 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/t0r/items/1e7a2e8923a8b47a3a12"&gt;https://qiita.com/t0r/items/1e7a2e8923a8b47a3a12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI アプリケーションを直接 iOS の実機とシミュレーターで実行するためのシェルスクリプトを作成したことについて。&lt;/p&gt;
&lt;h3 id="safely-use-secrets-in-http-requests-in-visual-studio-2022-visual-studio-blog"&gt;Safely use secrets in HTTP requests in Visual Studio 2022 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/safely-use-secrets-in-http-requests-in-visual-studio-2022/"&gt;https://devblogs.microsoft.com/visualstudio/safely-use-secrets-in-http-requests-in-visual-studio-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 の HTTP リクエストを送信する機能 (.http) を使用する際にシークレットを格納する方法について。&lt;/p&gt;
&lt;p&gt;環境設定として httpenv.json やユーザー固有の設定の httpenv.json.user のほか、機密情報をを ASP.NET Core ユーザーシークレットや Azure Key Vault からの取得、Windows DPAPI で暗号化するといった方法を紹介している。そのほか HTTP ファイルでの追加サポートされる新しい構文についても紹介している。&lt;/p&gt;
&lt;h3 id="simplifying-header-propagation-in-microservices-with-forwardedheadersmiddleware"&gt;Simplifying Header Propagation in Microservices with ForwardedHeadersMiddleware&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;asad99/simplifying-header-propagation-in-microservices-with-forwardedheadersmiddleware-2001fa6b4981"&gt;https://medium.com/&amp;#64;asad99/simplifying-header-propagation-in-microservices-with-forwardedheadersmiddleware-2001fa6b4981&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;クライアントから受信した HTTP ヘッダーをサービス間で伝搬させる方法について。記事では Microsoft.AspNetCore.HeaderPropagation NuGet パッケージを使用した方法を紹介している。&lt;/p&gt;
&lt;h3 id="simplified-code-refinement-and-debugging-with-github-copilot-chat-visual-studio-blog"&gt;Simplified Code Refinement and Debugging with GitHub Copilot Chat - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/simplified-code-refinement-and-debugging-with-github-copilot-chat/"&gt;https://devblogs.microsoft.com/visualstudio/simplified-code-refinement-and-debugging-with-github-copilot-chat/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Stduio での GitHub Copilot Chat を使用したデバッグとコード改善機能についての紹介。&lt;/p&gt;
&lt;p&gt;記事ではプロファイラーでの CPU 使用率の分析、例外時のヘルパー、デバッグ中の変数やコールスタックを参照した質問といった機能を紹介している。&lt;/p&gt;
&lt;h3 id="exploring-blazor-changes-in.net-8-capture-user-input-with-forms"&gt;Exploring Blazor Changes in .NET 8 - Capture User Input with Forms&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jonhilton.net/blazor-ssr-forms/"&gt;https://jonhilton.net/blazor-ssr-forms/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor (SSR) でのフォームのユーザー入力の取り扱いについての解説。&lt;/p&gt;
&lt;h3 id="how-to-install-jetbrains-rider-on-steam-deck-the.net-tools-blog"&gt;How to Install JetBrains Rider on Steam Deck | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/08/23/how-to-install-jetbrains-rider-on-steam-deck/"&gt;https://blog.jetbrains.com/dotnet/2023/08/23/how-to-install-jetbrains-rider-on-steam-deck/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Steam Deck (SteamOS) 上に Rider をインストールする方法について。&lt;/p&gt;
&lt;p&gt;記事では Rider のほか .NET や Unity をインストールして動かすところまで解説している。&lt;/p&gt;
&lt;h3 id="tales-from-the.net-migration-trenches-cataloging"&gt;Tales from the .NET Migration Trenches - Cataloging&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.jimmybogard.com/tales-from-the-net-migration-trenches-catalog/"&gt;https://www.jimmybogard.com/tales-from-the-net-migration-trenches-catalog/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework から .NET への移行を行うために既存のアプリケーションで対応が必要なもののカタログを作成することについて。&lt;/p&gt;
&lt;h3 id="asp.net-core-logging-using-serilog-and-azure"&gt;ASP.NET Core Logging using Serilog and Azure&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2023/08/21/asp-net-core-logging-using-serilog-and-azure/"&gt;https://damienbod.com/2023/08/21/asp-net-core-logging-using-serilog-and-azure/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で Serilog を使用して Application Insights や Azure App Service のログサービスにログを送信する方法について。&lt;/p&gt;
&lt;h3 id="dynamically-adapting-to-application-sizes"&gt;Dynamically Adapting To Application Sizes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://maoni0.medium.com/dynamically-adapting-to-application-sizes-2d72fcb6f1ea"&gt;https://maoni0.medium.com/dynamically-adapting-to-application-sizes-2d72fcb6f1ea&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で試験的に導入される Dynamic A daptation To Aapplication Sizes (DATA) と呼ばれる GC 機能についての解説。&lt;/p&gt;
&lt;h3 id="c-dev-kit-for-visual-studio-code-github-codespaces"&gt;C# Dev Kit for Visual Studio Code は GitHub Codespaces 上だと無料で使えてお得という話 - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20230825/1692937805"&gt;https://blog.shibayan.jp/entry/20230825/1692937805&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code 上で .NET 開発を行うための拡張 C# Dev Kit の利用には Visual Studio のライセンスが必要となるが GitHub Codespaces 上ではライセンスが含まれていることについて。&lt;/p&gt;
&lt;h3 id="azure-functions.net-isolated-worker-asp.net-core-integration"&gt;Azure Functions (.NET Isolated Worker) に追加された ASP.NET Core Integration を一通り試した - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20230823/1692768859"&gt;https://blog.shibayan.jp/entry/20230823/1692768859&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Functions の .NET isolated worker で利用できるようになった ASP.NET Core Integration について。&lt;/p&gt;
&lt;h3 id="new-in-visual-studio-compare-files-with-solution-explorer-visual-studio-blog"&gt;New in Visual Studio: Compare Files with Solution Explorer - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/new-in-visual-studio-compare-files-with-solution-explorer/"&gt;https://devblogs.microsoft.com/visualstudio/new-in-visual-studio-compare-files-with-solution-explorer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio のソリューションエクスプローラーからのファイル比較機能についての紹介。&lt;/p&gt;
&lt;h3 id="enum.tryparse-unexpected-behavior"&gt;Enum.TryParse unexpected behavior&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/64d479f1-823f-4fc7-a56a-2b1ff06dcf72"&gt;https://steven-giesel.com/blogPost/64d479f1-823f-4fc7-a56a-2b1ff06dcf72&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enum.TryParse は実際に値が定義されていない場合でも基底の型に合えば通ってしまうことについて。IsDefined で確認するといった必要がある。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="wcabusnes-sharp-a-nes-emulator-written-in-c"&gt;wcabus/nes-sharp: A NES emulator written in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/wcabus/nes-sharp"&gt;https://github.com/wcabus/nes-sharp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# で書かれた NES (ファミコン) エミュレーター。&lt;/p&gt;
&lt;!-- https://x.com/wesleycabus/status/1695072673087263168?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In case anyone wants to have a go at it, here&amp;#39;s the source code: &lt;a href="https://t.co/caHmFh72vC"&gt;https://t.co/caHmFh72vC&lt;/a&gt;&lt;/p&gt;&amp;mdash; Wesley Cabus (&amp;#64;WesleyCabus) &lt;a href="https://twitter.com/WesleyCabus/status/1695072673087263168?ref_src=twsrc%5Etfw"&gt;August 25, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;.NET 8 でのメトリクス関連の設定をログなどと同様に appsettings.json で行えるようにするという話。&lt;/p&gt;
&lt;!-- https://x.com/davidfowl/status/1695454305782837561?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Part of improving our metrics story in .NET 8 means we&amp;#39;re making it as first class as logging is. It&amp;#39;ll be possible to configure meters and instruments via configuration. &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/aspnetcore?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#aspnetcore&lt;/a&gt; &lt;a href="https://t.co/jgA2yt4Rtj"&gt;pic.twitter.com/jgA2yt4Rtj&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1695454305782837561?ref_src=twsrc%5Etfw"&gt;August 26, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;オブジェクトヘッダーは4バイトだが 64-bit の .NET ではアラインメントの都合、4バイトのパディングが含まれてもったいないという話。&lt;/p&gt;
&lt;!-- https://x.com/kookiz/status/1692931201550446891?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;It bothers me so much that on &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; on 64-bit, 4 bytes are wasted for *every class instance* because objects are aligned on a 8 bytes boundary and the header has a fixed size of 4 bytes. &lt;a href="https://t.co/kToB6rnABG"&gt;pic.twitter.com/kToB6rnABG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kevin Gosse (&amp;#64;KooKiz) &lt;a href="https://twitter.com/KooKiz/status/1692931201550446891?ref_src=twsrc%5Etfw"&gt;August 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="port-nativeaot-exception-handling-to-coreclr-by-janvorli-pull-request-88034-dotnetruntime"&gt;Port NativeAOT exception handling to CoreCLR by janvorli · Pull Request #88034 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/88034"&gt;https://github.com/dotnet/runtime/pull/88034&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NativeAOT の例外ハンドリング機構を CoreCLR へ移植するという PR。&lt;/p&gt;
&lt;p&gt;これにより例外処理が高速化されるが現時点ではいくつか制限があるため有効化するには環境変数を指定する必要がある。また、32-bit 版 Windows は複雑さのためサポートされないとのこと。&lt;/p&gt;
&lt;h3 id="coreclr-risc-v-architecture-port-issue-84834-dotnetruntime-github"&gt;CoreCLR RISC-V architecture port · Issue #84834 · dotnet/runtime · GitHub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/84834"&gt;https://github.com/dotnet/runtime/issues/84834&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RISC-V アーキテクチャーへのポーティングの Issue。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/08/20/updates</id>
		<title>2023-08-20: .NET 8 Preview 7, Visual Studio 2022 version 17.7, .NET 7.0.10 &amp; .NET 6.0.21, Moq Privacy issues</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/08/20/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-08-20T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-8-preview-7.net-blog"&gt;Announcing .NET 8 Preview 7 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-7/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-7/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-nuget-6.7-keeping-you-secure-the-nuget-blog"&gt;Announcing NuGet 6.7 – Keeping You Secure - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/"&gt;https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-framework-august-2023-security-and-quality-rollup-updates.net-blog"&gt;.NET Framework August 2023 Security and Quality Rollup Updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-august-2023-security-and-quality-rollup-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-august-2023-security-and-quality-rollup-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.7-now-available-visual-studio-blog"&gt;Visual Studio 2022 – 17.7 Now Available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing.net-maui-in.net-8-preview-7-keyboard-accelerators.net-blog"&gt;Announcing .NET MAUI in .NET 8 Preview 7: Keyboard Accelerators - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-7/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-7/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-7.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 7 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-7/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-7/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-august-2023-updates.net-7.0.10.net-6.0.21.net-blog"&gt;.NET August 2023 Updates – .NET 7.0.10, .NET 6.0.21 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/august-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/august-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.8-preview-1-has-arrived-visual-studio-blog"&gt;Visual Studio 2022 17.8 Preview 1 has arrived! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-8-preview-1-has-arrived/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-8-preview-1-has-arrived/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="privacy-issues-with-sponsorlink-starting-from-version-4.20-issue-1372-moqmoq"&gt;Privacy issues with SponsorLink, starting from version 4.20 · Issue #1372 · moq/moq&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/moq/moq/issues/1372"&gt;https://github.com/moq/moq/issues/1372&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cazzulino.com/sponsorlink-feedback.html"&gt;SponsorLink: feedback and moving forward&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="a-cheat-sheet-to-migrate-from-moq-to-nsubstitute"&gt;A cheat sheet to migrate from Moq to NSubstitute&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://timdeschryver.dev/blog/a-cheat-sheet-to-migrate-from-moq-to-nsubstitute#method-invoked-with-any-arguments"&gt;https://timdeschryver.dev/blog/a-cheat-sheet-to-migrate-from-moq-to-nsubstitute#method-invoked-with-any-arguments&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cswin32"&gt;CsWin32 を別プロジェクトに分離する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shinta0806/articles/cswin32-separation"&gt;https://zenn.dev/shinta0806/articles/cswin32-separation&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="structured-asp.net-localization"&gt;Structured ASP.NET Localization&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/giannoudis/structured-aspnet-localization-35bo"&gt;https://dev.to/giannoudis/structured-aspnet-localization-35bo&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="hidden-workings-of-execution-context-in.net"&gt;Hidden Workings of Execution Context in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/net-under-the-hood/hidden-workings-of-execution-context-in-net-43b491726c65"&gt;https://medium.com/net-under-the-hood/hidden-workings-of-execution-context-in-net-43b491726c65&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="multi-branch-graph-available-for-general-audiences-visual-studio-blog"&gt;Multi-Branch Graph Available for General Audiences - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/multi-branch-graph-available-for-general-audiences/"&gt;https://devblogs.microsoft.com/visualstudio/multi-branch-graph-available-for-general-audiences/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="load-testing-http-api-on-c-with-nbomber"&gt;Load Testing HTTP API on C# with NBomber&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;kostash23lena/load-testing-http-api-on-c-with-nbomber-96939511bdab"&gt;https://medium.com/&amp;#64;kostash23lena/load-testing-http-api-on-c-with-nbomber-96939511bdab&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-debug-docker-and-docker-compose-solutions-with-jetbrains-rider-the.net-tools-blog"&gt;How To Debug Docker and Docker Compose Solutions with JetBrains Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/08/16/debugging-docker-and-docker-compose-solutions-with-jetbrains-rider/"&gt;https://blog.jetbrains.com/dotnet/2023/08/16/debugging-docker-and-docker-compose-solutions-with-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="vscodecomnisharp-qiita"&gt;VSCodeのC#拡張で、omnisharp使用を継続する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/c6b0873a37fe649f9ca6"&gt;https://qiita.com/skitoy4321/items/c6b0873a37fe649f9ca6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cspanbyteincrementalhash-qiita"&gt;【C#】Spanbyteを用いて少しずつハッシュ値計算（IncrementalHash） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mitsu_at3/items/438b4c4252947b467ef2"&gt;https://qiita.com/mitsu_at3/items/438b4c4252947b467ef2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="keyed-service-dependency-injection-container-support-exploring-the.net-8-preview-part-6"&gt;Keyed service dependency injection container support: Exploring the .NET 8 preview - Part 6&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-keyed-services-dependency-injection-support/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-keyed-services-dependency-injection-support/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="my-favorite-features-in-visual-studio-17.7-visual-studio-blog"&gt;My favorite features in Visual Studio 17.7 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/my-favorite-features-in-visual-studio-17-7/"&gt;https://devblogs.microsoft.com/visualstudio/my-favorite-features-in-visual-studio-17-7/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.7-performance-enhancements-visual-studio-blog"&gt;Visual Studio 2022 – 17.7 Performance Enhancements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-performance-enhancements/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-performance-enhancements/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-di-qiita"&gt;C# 汎用ホストのDIにカスタムロガーを組み込む - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mxProject/items/41f75c057c855c49efd0"&gt;https://qiita.com/mxProject/items/41f75c057c855c49efd0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8-blazor-server-blazor-server"&gt;.NET 8 で Blazor Server をする方法 (消えた Blazor Server テンプレート)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/blazor-server-on-net8-pre6"&gt;https://zenn.dev/microsoft/articles/blazor-server-on-net8-pre6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="collecting-memory-dumps-for.net-core-on-kubernetes"&gt;Collecting memory dumps for .NET Core on Kubernetes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cezarypiatek.github.io/post/memory-dump-on-kubernetes/"&gt;https://cezarypiatek.github.io/post/memory-dump-on-kubernetes/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="tales-from-the.net-migration-trenches-intro"&gt;Tales from the .NET Migration Trenches - Intro&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.jimmybogard.com/tales-from-the-net-migration-trenches/"&gt;https://www.jimmybogard.com/tales-from-the-net-migration-trenches/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-the-new-ihostedlifecycleservice-interface-in.net-8-steve-gordon-code-with-steve"&gt;Introducing the new IHostedLifecycleService Interface in .NET 8 - Steve Gordon - Code with Steve&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.stevejgordon.co.uk/introducing-the-new-ihostedlifecycleservice-interface-in-dotnet-8"&gt;https://www.stevejgordon.co.uk/introducing-the-new-ihostedlifecycleservice-interface-in-dotnet-8&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8-interceptors"&gt;.NET 8 Interceptors&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/dotnet-8-interceptors"&gt;https://khalidabuhakmeh.com/dotnet-8-interceptors&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c8.0substring-qiita"&gt;【C#8.0】Substringの代わりにインデクサの範囲指定で文字列抽出する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/YouKnow/items/93b4b978ecb113616fae"&gt;https://qiita.com/YouKnow/items/93b4b978ecb113616fae&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="does-c-always-have-boxing-with-string-concatenation-and-interpo"&gt;Does C# always have boxing with string concatenation and interpo…&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://pvs-studio.com/en/blog/posts/csharp/1060/"&gt;https://pvs-studio.com/en/blog/posts/csharp/1060/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="lets-co-create-your-voice-matters-visual-studio-blog"&gt;Let's Co-Create! Your Voice Matters - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/lets-co-create-your-voice-matters/"&gt;https://devblogs.microsoft.com/visualstudio/lets-co-create-your-voice-matters/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-migrate-from-moq-to-nsubstitute"&gt;How to migrate from Moq to NSubstitute&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://itnext.io/how-to-migrate-from-moq-to-nsubstitute-cdb6a80404d"&gt;https://itnext.io/how-to-migrate-from-moq-to-nsubstitute-cdb6a80404d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="suppressgctransition"&gt;SuppressGCTransition&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minidump.net/suppressgctransition-b9a8a774edbd"&gt;https://minidump.net/suppressgctransition-b9a8a774edbd&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="immutablearrayt"&gt;ImmutableArray&amp;lt;T&amp;gt;の内部配列を参照して高速化&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/benutomo/articles/54083312afca95"&gt;https://zenn.dev/benutomo/articles/54083312afca95&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2022-v17.8-previews-new-intellitest-visual-studio-magazine"&gt;Visual Studio 2022 v17.8 Previews New IntelliTest -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/articles/2023/08/14/intellitest-preview.aspx?m=1"&gt;https://visualstudiomagazine.com/articles/2023/08/14/intellitest-preview.aspx?m=1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="moq-nsubstitute"&gt;Moq から NSubstitute へ移行する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/masakura/articles/9b97948a11b40d"&gt;https://zenn.dev/masakura/articles/9b97948a11b40d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8-blazor-server-blazor-server-1"&gt;.NET 8 で Blazor Server をする方法 (消えた Blazor Server テンプレート)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/blazor-server-on-net8-pre6?redirected=1"&gt;https://zenn.dev/microsoft/articles/blazor-server-on-net8-pre6?redirected=1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="system.text.jsonbase64"&gt;System.Text.Jsonでは改行入りのBase64文字列に対応していない&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimat/articles/3d319d50b3f0c3"&gt;https://zenn.dev/shimat/articles/3d319d50b3f0c3&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-august-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | August 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/08/07/net-annotated-monthly-august-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/08/07/net-annotated-monthly-august-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="polyfills-in.net-to-ease-multi-targeting-gerald-barre"&gt;Polyfills in .NET to ease multi-targeting - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/polyfills-in-dotnet-to-ease-multi-targeting.htm"&gt;https://www.meziantou.net/polyfills-in-dotnet-to-ease-multi-targeting.htm&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-benchmark-different.net-versions"&gt;How to benchmark different .NET versions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/59cfb6f8-8b87-4707-a99e-e372541b696a"&gt;https://steven-giesel.com/blogPost/59cfb6f8-8b87-4707-a99e-e372541b696a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net.gcdump-internals"&gt;.NET .gcdump Internals&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/net-gcdump-internals-fcce5d327be7"&gt;https://chnasarre.medium.com/net-gcdump-internals-fcce5d327be7&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cstruct-annulus-games"&gt;【C#】構造体(struct)を完全に理解する - Annulus Games&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://annulusgames.com/blog/understanding-struct/"&gt;https://annulusgames.com/blog/understanding-struct/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="giannoudistimeperiodlibrary-extensive-time-period-calculations-and-individual-calendar-periods"&gt;Giannoudis/TimePeriodLibrary: Extensive time period calculations and individual calendar periods.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Giannoudis/TimePeriodLibrary"&gt;https://github.com/Giannoudis/TimePeriodLibrary&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codeproject.com/Articles/168662/Time-Period-Library-for-NET"&gt;Time Period Library for .NET&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="powerrule-powerrule-gitlab"&gt;PowerRule / PowerRule · GitLab&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/power-rule/power-rule"&gt;https://gitlab.com/power-rule/power-rule&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/masakura/articles/9253061846d90c"&gt;PowerRule で複雑なルールを書く&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="le-nnmemento-a-simple-client-side-state-management-container-for-blazor.net-includes-redoundo-and-reduxdevtools-support"&gt;le-nn/memento: A simple client-side state management container for Blazor/.NET includes redo/undo and ReduxDevTools support..&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/le-nn/memento"&gt;https://github.com/le-nn/memento&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/remrem/articles/0768982b3cdc92"&gt;BlazorでもReduxDevToolsでデバッグできるようにしてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/remrem/articles/32ee38e79f4cf0"&gt;Blazor向けにコンポーネント間で状態を共有する状態管理ライブラリを作った&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="asp.net-core-in-action-third-edition-is-now-in-print"&gt;ASP.NET Core in Action, Third Edition is now in print&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/asp-dotnet-core-in-action-third-edition-is-now-in-print/"&gt;https://andrewlock.net/asp-dotnet-core-in-action-third-edition-is-now-in-print/&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/08/06/updates</id>
		<title>2023-08-06: ILSpy 8.1, Unity extension for Visual Studio Code, Rider &amp; ReSharper 2023.2</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/08/06/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-08-06T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-ilspy-8.1-icsharpcodeilspy"&gt;Release ILSpy 8.1 · icsharpcode/ILSpy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/icsharpcode/ILSpy/releases/tag/v8.1"&gt;https://github.com/icsharpcode/ILSpy/releases/tag/v8.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ILSpy 8.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは C# 11 のいくつかの記法への対応や様々な修正が含まれている。&lt;/p&gt;
&lt;h3 id="announcing-the-unity-extension-for-visual-studio-code-visual-studio-blog"&gt;Announcing the Unity extension for Visual Studio Code - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/announcing-the-unity-extension-for-visual-studio-code/"&gt;https://devblogs.microsoft.com/visualstudio/announcing-the-unity-extension-for-visual-studio-code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code 向けの Unity 拡張がプレビュー公開された。&lt;/p&gt;
&lt;p&gt;この拡張は C# Dev Kit を元に構築され、コード編集に AI 支援や Roslyn の Analyzer といった機能の利用や Unity でのゲームのデバッグをサポートする。記事では Unity での使用方法についても紹介している。&lt;/p&gt;
&lt;p&gt;またこの拡張は C# Dev Kit と同様のライセンスモデルで提供され Visual Studio の Community ライセンスまたはサブスクリプションが必要となる。&lt;/p&gt;
&lt;h3 id="rider-2023.2-better-c-support-uxui-enhancements-ai-powered-features-and-more-the-jetbrains-blog"&gt;Rider 2023.2: Better C# Support, UX/UI Enhancements, AI-Powered Features, and More | The JetBrains Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/08/02/rider-2023-2-release/"&gt;https://blog.jetbrains.com/dotnet/2023/08/02/rider-2023-2-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.2 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C# のアップデート&lt;/li&gt;
&lt;li&gt;UI/UX の改善
&lt;ul&gt;
&lt;li&gt;ビルドツールウィンドウの改善&lt;/li&gt;
&lt;li&gt;既定の外観が新しい UI となる&lt;/li&gt;
&lt;li&gt;カスタマイズと合理化
&lt;ul&gt;
&lt;li&gt;プロジェクトヘッダー、メインツールバーカスタマイズ、Run の構成のピン止め&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AI 支援 (限定アクセス)&lt;/li&gt;
&lt;li&gt;バージョンコントロール
&lt;ul&gt;
&lt;li&gt;GitLab 統合&lt;/li&gt;
&lt;li&gt;バックグラウンドコミットチェック&lt;/li&gt;
&lt;li&gt;行のコミットのオプション&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;パフォーマンス向上
&lt;ul&gt;
&lt;li&gt;キャッシュデータの削減 (I/O の削減)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ゲーム開発
&lt;ul&gt;
&lt;li&gt;Unity
&lt;ul&gt;
&lt;li&gt;AI 支援、ShaderLab サポート、Unity DOTS サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unreal Engine
&lt;ul&gt;
&lt;li&gt;ブループリントインデックス改善、ホットリロードとライブコーディング、Perforce サポート改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET SDK
&lt;ul&gt;
&lt;li&gt;Source Generator テンプレートと Source Generator の再起動&lt;/li&gt;
&lt;li&gt;Docker fast モード&lt;/li&gt;
&lt;li&gt;.NET MAUI ホットリロード&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="resharper-2023.2-more-c-c-20-and-c-23-features-the-ability-to-create-and-navigate-through-unit-tests-predictive-debugger-mode-and-more-the-jetbrains-blog"&gt;ReSharper 2023.2: More C#, C++ 20, And C++ 23 Features, the Ability To Create And Navigate Through Unit Tests, Predictive Debugger Mode, And More | The JetBrains Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/08/02/resharper-2023-2-release/"&gt;https://blog.jetbrains.com/dotnet/2023/08/02/resharper-2023-2-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.2 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C# のアップデート&lt;/li&gt;
&lt;li&gt;C++ のアップデート&lt;/li&gt;
&lt;li&gt;パフォーマンス向上
&lt;ul&gt;
&lt;li&gt;ソリューション読み込み時間の短縮&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ユニットテストの作成とナビゲーション&lt;/li&gt;
&lt;li&gt;AI 支援 (限定アクセス)&lt;/li&gt;
&lt;li&gt;Predictive Debugger (ベータ)&lt;/li&gt;
&lt;li&gt;デコンパイラーでのアセンブリーの差分&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-conf-2023-celebrating-the-release-of.net-8-save-the-date.net-blog"&gt;.NET Conf 2023 - Celebrating the Release of .NET 8! - Save the Date! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-conf-2023-celebrating-the-release-of-dotnet-8-save-the-date/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-conf-2023-celebrating-the-release-of-dotnet-8-save-the-date/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2023 についてのアナウンス。&lt;/p&gt;
&lt;p&gt;.NET Conf 2023 は11月14日から16日までの3日間で、.NET 8 のリリースをはじめとして様々なセッションが行われる。&lt;/p&gt;
&lt;h3 id="the-microsoft-author-signing-certificate-will-be-updated-as-soon-as-august-14th-2023-the-nuget-blog"&gt;The Microsoft author-signing certificate will be updated as soon as August 14th, 2023 - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"&gt;https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft がリリースする NuGet パッケージの署名に使用する証明書が8月14日以降に更新される。&lt;/p&gt;
&lt;p&gt;この対応で既存のパッケージが更新されることはなく、今後リリースされるパッケージの署名が新しい証明書で行われるようになる。&lt;/p&gt;
&lt;p&gt;NuGet のクライアントポリシーで信頼者許可リストを持ち、検証している場合に影響を受ける。&lt;/p&gt;
&lt;h3 id="dotcover-dotmemory-dotpeek-and-dottrace-2023.2-released-the-jetbrains-blog"&gt;dotCover, dotMemory, dotPeek, and dotTrace 2023.2 Released! | The JetBrains Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/08/02/2023-2-dottools-release/"&gt;https://blog.jetbrains.com/dotnet/2023/08/02/2023-2-dottools-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dotCover, dotMemory, dotPeek, dotTrace 2023.2 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dotMemory
&lt;ul&gt;
&lt;li&gt;Rider でのスナップショット解析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;dotTrace
&lt;ul&gt;
&lt;li&gt;サンプリング、トレース、行ごとのスナップショットのスレッド別のグループ化&lt;/li&gt;
&lt;li&gt;Linux と macOS での Source View ツールウィンドウ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;dotPeek
&lt;ul&gt;
&lt;li&gt;アセンブリーの比較&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;dotCover
&lt;ul&gt;
&lt;li&gt;バグ修正と安定性の向上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c-12-interceptors-an-insane-feature"&gt;C# 12 Interceptors ! An insane feature !&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/bugandfix/c-12-interceptors-an-insane-feature--517l"&gt;https://dev.to/bugandfix/c-12-interceptors-an-insane-feature--517l&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 でプレビューされている Interceptor を動かしてみるという記事。&lt;/p&gt;
&lt;h3 id="which-rdbms-has-the-fastest.net-bulk-insert-implementation"&gt;Which RDBMS has the fastest .NET Bulk Insert implementation?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://servicestack.net/posts/bulk-insert-performance"&gt;https://servicestack.net/posts/bulk-insert-performance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;様々な RDBMS とアーキテクチャーや OS でバルクインサートする際のパフォーマンスの比較。&lt;/p&gt;
&lt;h3 id="class-vs-struct-in-c-making-informed-choices-ndepend"&gt;Class vs Struct in C#: Making Informed Choices - NDepend&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/class-vs-struct-in-c-making-informed-choices/"&gt;https://blog.ndepend.com/class-vs-struct-in-c-making-informed-choices/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;クラスと構造体の利点と欠点をまとめてどちらを使えばいいのかについて。&lt;/p&gt;
&lt;h3 id="c-di-qiita"&gt;C# 汎用ホストのDIにデータベースプロバイダを組み込む - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mxProject/items/232ee4d0feb30a41a2f3"&gt;https://qiita.com/mxProject/items/232ee4d0feb30a41a2f3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generic Host のサービスにデータベースプロバイダー (ADO.NET) を組み込んで使えるようにする方法について。&lt;/p&gt;
&lt;h3 id="plugin-architecture-in-asp.net-core-how-to-master-it"&gt;Plugin Architecture in ASP.NET Core – How To Master It&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/devleader/plugin-architecture-in-aspnet-core-how-to-master-it-1824"&gt;https://dev.to/devleader/plugin-architecture-in-aspnet-core-how-to-master-it-1824&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションでプラグインアーキテクチャーを実現する方法について。&lt;/p&gt;
&lt;h3 id="keyed-services-in.net8s-dependency-injection"&gt;Keyed Services in .NET8's Dependency Injection&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/xelit3/keyed-services-in-net8s-dependency-injection-2gni"&gt;https://dev.to/xelit3/keyed-services-in-net8s-dependency-injection-2gni&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の M.E.DependencyInjection と ASP.NET Core でサポートされるキー付きサービスについて。&lt;/p&gt;
&lt;h3 id="leveraging-custom-postgresql-functions-in-efcore-a-guide-to-mapping-and-usage"&gt;Leveraging Custom PostgreSQL Functions in EFCore: A Guide to Mapping and Usage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gor-grigoryan.medium.com/leveraging-custom-postgresql-functions-in-efcore-a-guide-to-mapping-and-usage-53941b10fe89"&gt;https://gor-grigoryan.medium.com/leveraging-custom-postgresql-functions-in-efcore-a-guide-to-mapping-and-usage-53941b10fe89&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で PostgreSQL のカスタム関数をマッピングして使用する方法について。&lt;/p&gt;
&lt;h3 id="accelerating-your-testing-workflow-with-unit-test-creation-and-navigation-the-jetbrains-blog"&gt;Accelerating Your Testing Workflow with Unit Test Creation and Navigation | The JetBrains Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/08/01/accelerating-your-testing-workflow-with-unit-test-creation-and-navigation/"&gt;https://blog.jetbrains.com/dotnet/2023/08/01/accelerating-your-testing-workflow-with-unit-test-creation-and-navigation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper でのユニットテスト作成とナビゲーション機能についての紹介。コード間の移動や新しいユニットテストの作成などで利用できる機能を紹介している。&lt;/p&gt;
&lt;h3 id="visualstudio.extensibility-qiita"&gt;VisualStudio.Extensibilityを用いた拡張機能開発の導入 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mngreen/items/d712930b5894aa6ea17f"&gt;https://qiita.com/mngreen/items/d712930b5894aa6ea17f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の新しい拡張モデルである VisualStudio.Extensibility を使用して拡張実装の導入について。&lt;/p&gt;
&lt;h3 id="instrumenting-system.commandline-based.net-applications"&gt;Instrumenting System.CommandLine-based .NET applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/instrumenting-systemcommandline-based-net-applications-1p88"&gt;https://dev.to/asimmon/instrumenting-systemcommandline-based-net-applications-1p88&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;System.CommandLine を使用したアプリケーションでカスタムインストルメンテーションを組み込む方法について。&lt;/p&gt;
&lt;h3 id="datetime.maxvalue-qiita"&gt;DateTime.MaxValueの翻訳の誤り - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hiro_t/items/0a8e5ce1c1552366a8f4"&gt;https://qiita.com/hiro_t/items/0a8e5ce1c1552366a8f4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DateTime.MaxValue の日本語ドキュメントの説明の誤りについて。&lt;/p&gt;
&lt;h3 id="immutablearrayt-iteration-performance-in-c"&gt;ImmutableArray&amp;lt;T&amp;gt; iteration performance in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://antao-almada.medium.com/immutablearray-t-iteration-performance-in-c-99e490d4d352"&gt;https://antao-almada.medium.com/immutablearray-t-iteration-performance-in-c-99e490d4d352&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ImmutableArray&amp;lt;T&amp;gt;&lt;/code&gt; の列挙操作のパフォーマンスについて。 List や配列などとの比較。&lt;/p&gt;
&lt;h3 id="learn-resharper-postfix-and-source-templates"&gt;Learn Resharper PostFix and Source Templates&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/learn-resharper-postfix-and-source-templates-32lo"&gt;https://dev.to/karenpayneoregon/learn-resharper-postfix-and-source-templates-32lo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider で使用できる postfix 展開テンプレートの使い方と作り方について。&lt;/p&gt;
&lt;h3 id="generate-sitemaps-for-all-of-asp.net-core"&gt;Generate Sitemaps for All of ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/generate-sitemaps-for-all-of-aspnet-core"&gt;https://khalidabuhakmeh.com/generate-sitemaps-for-all-of-aspnet-core&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DotnetSitemapGenerator を使用した ASP.NET Core Web アプリケーションでのサイトマップ(XML)を生成する方法について。&lt;/p&gt;
&lt;h3 id="translating-exceptions-into-problem-details-responses"&gt;Translating Exceptions into Problem Details Responses&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://timdeschryver.dev/blog/translating-exceptions-into-problem-details-responses"&gt;https://timdeschryver.dev/blog/translating-exceptions-into-problem-details-responses&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で例外を Problem Details レスポンスに変換して返す方法について。&lt;/p&gt;
&lt;h3 id="net-8-timeprovider-and-unit-tests"&gt;.NET 8 TimeProvider and Unit Tests&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/dotnet-8-timeprovider-and-unit-tests"&gt;https://khalidabuhakmeh.com/dotnet-8-timeprovider-and-unit-tests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で導入される TimeProvider API とそれを使用したユニットテストの書き方について。&lt;/p&gt;
&lt;h3 id="unleashing-the-power-of.net-source-code-generators"&gt;Unleashing the Power of .NET Source Code Generators&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;bnayae/unleashing-the-power-of-net-source-code-generators-3115156df775"&gt;https://medium.com/&amp;#64;bnayae/unleashing-the-power-of-net-source-code-generators-3115156df775&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Generator を使用したライブラリーの紹介。記事では Refit, System.Text.Json, Dunet, Mapperly, Generator.Equals を紹介している。&lt;/p&gt;
&lt;h3 id="application-insights-code-optimizations-asp.net-core"&gt;Application Insights の Code Optimizations 機能を ASP.NET Core アプリケーションで試してみた - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20230805/1691227089"&gt;https://blog.shibayan.jp/entry/20230805/1691227089&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Application Insights の Code Optimizations を ASP.NET Core アプリケーションに適用する方法について。&lt;/p&gt;
&lt;p&gt;Code Optimizations ではアプリケーションのパフォーマンスの問題点について AI ベースで検出/提案するといったものとなっている。&lt;/p&gt;
&lt;h3 id="length-based-switch-dispatch-c-c"&gt;Length-based switch dispatch | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/8/lengthbasedswitch/"&gt;https://ufcpp.net/blog/2023/8/lengthbasedswitch/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文字列に対する switch の分岐が Roslyn 4.6 以降で新しい手法で分岐するようになったことについて。&lt;/p&gt;
&lt;h3 id="netwebsocket-castaneai"&gt;.NETのWebSocketと、切断の扱い - castaneaiのブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://castaneai.hatenablog.com/entry/closing-websocket-connection-in-dotnet"&gt;https://castaneai.hatenablog.com/entry/closing-websocket-connection-in-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET の WebSocket での切断処理について。CloseAsync、CloseOutputAsync、Dispose といったメソッドの違いについて。&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;[C#][備忘録]ビルド時に不要な言語フォルダが出力されないように設定する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/minoura_a/items/092b141bc6ecde5bbb24"&gt;https://qiita.com/minoura_a/items/092b141bc6ecde5bbb24&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ビルド時に不要な言語のローカライズリソースを含めないようにする方法について。&lt;/p&gt;
&lt;h3 id="azure-functions.net-6-nuget-jsakamoto"&gt;Azure Functions (.NET 6) のプロジェクトで、NuGet パッケージ参照のバージョンを上げたらエラー | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/29654451/"&gt;https://devadjust.exblog.jp/29654451/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Functions (.NET 6) のプロジェクトの NuGet パッケージをアップデートした際にエラーが発生したことについて。&lt;/p&gt;
&lt;p&gt;インプロセスモードで稼働している場合、 Azure Functions のランタイムでは Microsoft.Extensions.* の 6.0 を使用されているため、アプリケーションが依存しているパッケージで 7.0 にアップデートするとバージョンの不整合が発生することによる。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/07/30/updates</id>
		<title>2023-07-30: ReSharper &amp; Rider 2023.2 RC, Avalonia for Visual Studio Code, ODP.NET 23c Dev Release</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/07/30/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-07-30T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="resharper-2023.2-release-candidate-is-available-the.net-tools-blog"&gt;ReSharper 2023.2 Release Candidate Is Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/26/resharper-2023-2-rc/"&gt;https://blog.jetbrains.com/dotnet/2023/07/26/resharper-2023-2-rc/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.2-release-candidate-is-available-the.net-tools-blog"&gt;Rider 2023.2 Release Candidate Is Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/26/rider-2023-2-rc/"&gt;https://blog.jetbrains.com/dotnet/2023/07/26/rider-2023-2-rc/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="avalonia-for-visual-studio-code-early-access"&gt;Avalonia for Visual Studio Code (Early Access)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/avalonia/avalonia-for-visual-studio-code-early-access-34bh"&gt;https://dev.to/avalonia/avalonia-for-visual-studio-code-early-access-34bh&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-odp.net-23c-dev-release"&gt;Announcing ODP.NET 23c Dev Release&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;alex.keh/announcing-odp-net-23c-dev-release-fbd92861e466"&gt;https://medium.com/&amp;#64;alex.keh/announcing-odp-net-23c-dev-release-fbd92861e466&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="new-syntax-for-string-interpolation-in-f.net-blog"&gt;New syntax for string interpolation in F# - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/new-syntax-for-string-interpolation-in-fsharp/"&gt;https://devblogs.microsoft.com/dotnet/new-syntax-for-string-interpolation-in-fsharp/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-predictive-debugging-a-game-changing-look-into-the-future-the.net-tools-blog"&gt;Introducing Predictive Debugging: A Game-Changing Look into the Future | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/27/introducing-predictive-debugging-a-game-changing-look-into-the-future/"&gt;https://blog.jetbrains.com/dotnet/2023/07/27/introducing-predictive-debugging-a-game-changing-look-into-the-future/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-framework-july-2023-cumulative-update-preview.net-blog"&gt;.NET Framework July 2023 Cumulative Update Preview - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-july-2023-cumulative-update-preview/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-july-2023-cumulative-update-preview/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-2.2.7-mysql-netmysqlconnector"&gt;Release 2.2.7 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.2.7"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.2.7&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="avaloniauiandroid-qiita"&gt;AvaloniaUIでAndroidビルドする🚀 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tkhshiq/items/f3a363d24cbdf5bd2793"&gt;https://qiita.com/tkhshiq/items/f3a363d24cbdf5bd2793&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-set-global-setting-for-xunit-tests-event-driven.io"&gt;How to set global setting for XUnit tests - Event-Driven.io&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://event-driven.io/en/xunit_global_settings/"&gt;https://event-driven.io/en/xunit_global_settings/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="five-years-of-fuzzing.net-with-sharpfuzz"&gt;Five years of fuzzing .NET with SharpFuzz&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://mijailovic.net/2023/07/23/sharpfuzz-anniversary/"&gt;https://mijailovic.net/2023/07/23/sharpfuzz-anniversary/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="using-azure-web-pubsub-with-protobuf-subprotocol-in.net"&gt;Using Azure Web PubSub with Protobuf subprotocol in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/corcav/using-azure-web-pubsub-with-protobuf-subprotocol-in-net-58li"&gt;https://dev.to/corcav/using-azure-web-pubsub-with-protobuf-subprotocol-in-net-58li&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="new-features-or-bug-fixes-you-might-have-missed-in.net-8"&gt;7 New Features (or bug fixes🐛) You Might Have Missed in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/bytehide/7-new-features-or-bug-fixes-you-might-have-missed-in-net-8-4f11"&gt;https://dev.to/bytehide/7-new-features-or-bug-fixes-you-might-have-missed-in-net-8-4f11&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="subscribe-to-the-visual-studio-blog-via-email-visual-studio-blog"&gt;Subscribe to the Visual Studio Blog via email - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/subscribe-to-the-visual-studio-blog-via-email/"&gt;https://devblogs.microsoft.com/visualstudio/subscribe-to-the-visual-studio-blog-via-email/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="debugging.net-containers-with-visual-studio-code-docker-tools.net-blog"&gt;Debugging .NET Containers with Visual Studio Code Docker Tools - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/debugging-dotnet-containers-with-visual-studio-code-docker-tools/"&gt;https://devblogs.microsoft.com/dotnet/debugging-dotnet-containers-with-visual-studio-code-docker-tools/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rock-your-debugging-game-parallel-stack-window-tips-you-need-to-know-visual-studio-blog"&gt;Rock Your Debugging Game: Parallel Stack Window Tips You Need to Know! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/rock-your-debugging-game-parallel-stack-window-tips-you-need-to-know/"&gt;https://devblogs.microsoft.com/visualstudio/rock-your-debugging-game-parallel-stack-window-tips-you-need-to-know/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improvements-to-unity-shader-files-in-rider-2023.2-the.net-tools-blog"&gt;Improvements to Unity shader files in Rider 2023.2 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/25/improvements-to-unity-shader-files-in-rider-2023-2/"&gt;https://blog.jetbrains.com/dotnet/2023/07/25/improvements-to-unity-shader-files-in-rider-2023-2/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="replacing-method-calls-with-interceptors-exploring-the.net-8-preview-part-5"&gt;Replacing method calls with Interceptors: Exploring the .NET 8 preview - Part 5&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-changing-method-calls-with-interceptors/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-changing-method-calls-with-interceptors/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ga4-data-api-with.net"&gt;GA4 Data API with .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/chuac/ga4-data-api-with-net-1n00"&gt;https://dev.to/chuac/ga4-data-api-with-net-1n00&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="background-tasks-and-scheduled-jobs-in.net-meet-hangfire"&gt;Background Tasks and Scheduled Jobs in .NET? Meet Hangfire🔥&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/bytehide/background-tasks-and-scheduled-jobs-in-net-meet-hangfire-30pd"&gt;https://dev.to/bytehide/background-tasks-and-scheduled-jobs-in-net-meet-hangfire-30pd&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="enhancing-test-visualization-on-gitlab-with.net-projects"&gt;Enhancing Test Visualization on GitLab with .NET Projects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;dejandjenic/enhancing-test-visualization-on-gitlab-with-net-projects-47f65a90c19"&gt;https://medium.com/&amp;#64;dejandjenic/enhancing-test-visualization-on-gitlab-with-net-projects-47f65a90c19&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="turn-your-chromebook-into-a.net-developer-machine"&gt;Turn your Chromebook into a .Net developer machine!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/brunosilvadev/turn-your-chromebook-into-a-net-developer-machine-2bk6"&gt;https://dev.to/brunosilvadev/turn-your-chromebook-into-a-net-developer-machine-2bk6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-framework-4.8-to.net-6-migration"&gt;.NET Framework 4.8 to .NET 6 migration&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/f531dded-44af-4341-871c-d54875877900"&gt;https://steven-giesel.com/blogPost/f531dded-44af-4341-871c-d54875877900&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="log-formatters-in-c-bruno-sonnino"&gt;Log Formatters in C# - Bruno Sonnino&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.revolution.com.br/2023/07/17/log-formatters-in-c/"&gt;https://blog.revolution.com.br/2023/07/17/log-formatters-in-c/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-run-integration-tests-using-testcontainers-with-wsl"&gt;How to run integration tests using Testcontainers with WSL&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;NelsonBN/how-to-run-integration-tests-using-testcontainers-with-wsl-52c77a2acbbb"&gt;https://medium.com/&amp;#64;NelsonBN/how-to-run-integration-tests-using-testcontainers-with-wsl-52c77a2acbbb&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="using-session-and-localstorage-in-blazor-and-maui"&gt;Using Session- and LocalStorage in Blazor and MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;kxmliebl/using-session-and-localstorage-in-blazor-and-maui-b01fbb41d14c"&gt;https://medium.com/&amp;#64;kxmliebl/using-session-and-localstorage-in-blazor-and-maui-b01fbb41d14c&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharpyetanotherhttphandler-yetanotherhttphandler-brings-the-power-of-http2-and-grpc-to-unity-and.net-standard"&gt;Cysharp/YetAnotherHttpHandler: YetAnotherHttpHandler brings the power of HTTP/2 (and gRPC) to Unity and .NET Standard.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/YetAnotherHttpHandler"&gt;https://github.com/Cysharp/YetAnotherHttpHandler&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neue.cc/2023/07/28_yetanotherhttphandler.html"&gt;neue cc - Unity用のHTTP/2(gRPC) Client、YetAnotherHttpHandlerを公開しました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="matthewrdevunityuaal.maui-embedding-the-unity-game-engine-into.net-maui"&gt;matthewrdev/UnityUaal.Maui: Embedding the Unity game engine into .NET MAUI.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/matthewrdev/UnityUaal.Maui"&gt;https://github.com/matthewrdev/UnityUaal.Maui&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://twitter.com/matthewrdev/status/1684349416210337793?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Did you know, with some native binding trickery, you can embed &lt;a href="https://twitter.com/hashtag/unity3d?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#unity3d&lt;/a&gt; into your &lt;a href="https://twitter.com/hashtag/Dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Maui?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Maui&lt;/a&gt; app!&lt;br&gt;&lt;br&gt;This makes consuming 3D content and building AR/VR experiences way, waaaay easier.&lt;br&gt;&lt;br&gt;I&amp;#39;ve created an itty bitty sample on my Github here:&lt;a href="https://t.co/2Q3IClcVZE"&gt;https://t.co/2Q3IClcVZE&lt;/a&gt;&lt;br&gt;&lt;br&gt;Enjoy! 😙👌&lt;/p&gt;&amp;mdash; Matthew Robbins (&amp;#64;matthewrdev) &lt;a href="https://twitter.com/matthewrdev/status/1684349416210337793?ref_src=twsrc%5Etfw"&gt;July 26, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/mariohewardt/status/1684254752891346944?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;ProcDump 2.0 for Linux just released!&lt;br&gt;&lt;br&gt;Want to trigger core dumps based on .NET memory usage?&lt;br&gt;&lt;br&gt;-gcm allows you to specify per generation or heap (LOH and POH) thresholds.&lt;br&gt;&lt;br&gt;-gcgen allows you to create a dump at the start and end of a GC.&lt;a href="https://t.co/NbFzOYA0nu"&gt;https://t.co/NbFzOYA0nu&lt;/a&gt; &lt;a href="https://t.co/Q56v3k66yr"&gt;https://t.co/Q56v3k66yr&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Hewardt 🦆 (&amp;#64;MarioHewardt) &lt;a href="https://twitter.com/MarioHewardt/status/1684254752891346944?ref_src=twsrc%5Etfw"&gt;July 26, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://twitter.com/davidfowl/status/1683956501570879489?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET 8&amp;#39;s dependency injection container will support &amp;quot;keyed services&amp;quot;. A long-requested feature that has finally landed. This is useful when type alone isn&amp;#39;t enough to determine the right implementation. &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/6a4KowNSPu"&gt;pic.twitter.com/6a4KowNSPu&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1683956501570879489?ref_src=twsrc%5Etfw"&gt;July 25, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://twitter.com/mkristensen/status/1683909106783105025?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I like the idea of rendering XML doc comments inside Visual Studio to improve readability of code. What do you think? Vote and comment here: &lt;a href="https://t.co/wcVXmOWpzj"&gt;https://t.co/wcVXmOWpzj&lt;/a&gt; &lt;a href="https://t.co/pdE2e6iJQ7"&gt;pic.twitter.com/pdE2e6iJQ7&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1683909106783105025?ref_src=twsrc%5Etfw"&gt;July 25, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/07/23/updates</id>
		<title>2023-07-23: .NET Lambda Annotations Framework GA, Appwrite .NET SDK (Beta), NATS .NET Client v2 Alpha</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/07/23/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-07-23T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-lambda-annotations-framework-is-now-generally-available-amazon-web-services"&gt;.NET Lambda Annotations Framework is now generally available | Amazon Web Services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/jp/blogs/developer/net-lambda-annotations-framework/"&gt;https://aws.amazon.com/jp/blogs/developer/net-lambda-annotations-framework/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Lambda Annotations Framework が一般提供開始となった。&lt;/p&gt;
&lt;p&gt;.NET Lambda Annotations Framework は Source Generator をベースとした属性を設定することで AWS Lambda の関数を実装できるようにする仕組み。&lt;/p&gt;
&lt;h3 id="announcing-the-appwrite.net-sdk-beta-appwriteappwrite-discussion-5820"&gt;Announcing the Appwrite .NET SDK (Beta) 🚀 · appwrite/appwrite · Discussion #5820&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/appwrite/appwrite/discussions/5820"&gt;https://github.com/appwrite/appwrite/discussions/5820&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Appwrite (セルフホスト可能な BaaS) の .NET SDK が Beta リリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/appwrite/build-a-todo-api-with-net-and-appwrite-218d"&gt;Build A Todo API With .NET And Appwrite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="nats.net-client-v2-alpha-released-with-core-nats-support"&gt;NATS .NET Client v2 Alpha Released with Core NATS Support&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nats.io/blog/nats-dotnet-v2-alpha-release/"&gt;https://nats.io/blog/nats-dotnet-v2-alpha-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NATS の .NET 向けクライアント v2 のアルファー版がリリースされた。&lt;/p&gt;
&lt;p&gt;新しいバージョンは AlterNats をベースとしたものでモダンな .NET 機能を使用したハイパフォーマンスなライブラリーを目指すものとなっている。現バージョンでは Core NATS のサポートだけとなっているが、将来的には JetStream のサポートなども予定している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neue.cc/2023/07/20_nats_client_v2.html"&gt;neue cc - AlterNats は 公式の NATS .NET Client v2 に引き継がれました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="the-resharper-and-rider-2023.1.4-bug-fix-release-is-here-the.net-tools-blog"&gt;The ReSharper and Rider 2023.1.4 Bug-fix Release Is Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/18/rsrp-rd-2023-1-4-bugfix/"&gt;https://blog.jetbrains.com/dotnet/2023/07/18/rsrp-rd-2023-1-4-bugfix/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2023.1.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="rider-2023.2-eap-10-is-out-the.net-tools-blog"&gt;Rider 2023.2 EAP 10 Is Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/21/rider-2023-2-eap-10/"&gt;https://blog.jetbrains.com/dotnet/2023/07/21/rider-2023-2-eap-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.2 EAP 10 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは AI アシスタントのプラグインへの分離、Unreal 向けのライブコーディングとホットリロードのサポートが追加された。&lt;/p&gt;
&lt;h3 id="resharper-2023.2-eap-10-is-here-the.net-tools-blog"&gt;ReSharper 2023.2 EAP 10 Is Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/21/resharper-2023-2-eap-10/"&gt;https://blog.jetbrains.com/dotnet/2023/07/21/resharper-2023-2-eap-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.2 EAP 10 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは AI アシスタントがアンバンドルされ、dotUltimate の別製品としてインストールする形となった。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="introducing-a-powerful-new-extension-manager-visual-studio-blog"&gt;Introducing a powerful new Extension Manager - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-a-powerful-new-extension-manager/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-a-powerful-new-extension-manager/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 17.7 Preview 3 の新しい拡張マネージャーの紹介。&lt;/p&gt;
&lt;h3 id="reverse-engineering-existing-databases-with-entity-framework-core-the.net-tools-blog"&gt;Reverse Engineering Existing Databases with Entity Framework Core | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/20/reverse-engineering-existing-databases-with-entity-framework-core/"&gt;https://blog.jetbrains.com/dotnet/2023/07/20/reverse-engineering-existing-databases-with-entity-framework-core/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で既存のデータベースから定義を作る(スキャフォールディング)方法について。&lt;/p&gt;
&lt;h3 id="azure-openai-function-calling.net-sdk"&gt;Azure OpenAI に Function calling が来たので .NET SDK で動作確認してみた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet-sdk-openai-functioncalling"&gt;https://zenn.dev/microsoft/articles/dotnet-sdk-openai-functioncalling&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure.AI.OpenAI で Azure OpenAI Service の Function calling を試してみたことについて。&lt;/p&gt;
&lt;h3 id="response-compression-in-asp.net"&gt;Response Compression in ASP.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/fabriziobagala/response-compression-in-aspnet-8ba"&gt;https://dev.to/fabriziobagala/response-compression-in-aspnet-8ba&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のレスポンス圧縮について。&lt;/p&gt;
&lt;p&gt;有効化の設定方法のほか、カスタムな圧縮プロバイダーの実装についてなどについても触れている。&lt;/p&gt;
&lt;h3 id="semantic-kernel-ai"&gt;Semantic Kernel を使ってアプリ内に AI を組み込んでみた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/semantic-kernel-17"&gt;https://zenn.dev/microsoft/articles/semantic-kernel-17&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Web アプリケーションに Semantic Kernel を使用して AI を組み込むことについて。&lt;/p&gt;
&lt;h3 id="net-8-preview-6blazorwebapp"&gt;.NET 8 Preview 6の新しいBlazorWebAppテンプレート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/0eb9cdbb616d10"&gt;https://zenn.dev/tomokusaba/articles/0eb9cdbb616d10&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 6 での新しい Blazor Web アプリケーションのテンプレートの紹介。&lt;/p&gt;
&lt;h3 id="editorconfig-code-style-and-configuring-code-inspections-the.net-tools-blog"&gt;EditorConfig, Code Style, and Configuring Code Inspections | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/18/editorconfig-code-style-and-configuring-code-inspections/"&gt;https://blog.jetbrains.com/dotnet/2023/07/18/editorconfig-code-style-and-configuring-code-inspections/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EditorConfig による Rider と ReSharper でのコードスタイルやコードインスペクションの紹介。&lt;/p&gt;
&lt;h3 id="x-performance-with-simd-vectorized-code-in-c.net-xoofx"&gt;10x Performance with SIMD Vectorized Code in C#/.NET | xoofx&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://xoofx.com/blog/2023/07/09/10x-performance-with-simd-in-csharp-dotnet/"&gt;https://xoofx.com/blog/2023/07/09/10x-performance-with-simd-in-csharp-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SIMD でパフォーマンスを最適化して10倍の速度を出す方法についての解説。&lt;/p&gt;
&lt;p&gt;汎用 SIMD バージョンと CPU 固有の SIMD での最適化など。&lt;/p&gt;
&lt;h3 id="exploring-the-new-minimal-api-source-generator-exploring-the.net-8-preview-part-4"&gt;Exploring the new minimal API source generator: Exploring the .NET 8 preview - Part 4&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-exploring-the-new-minimal-api-source-generator/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-exploring-the-new-minimal-api-source-generator/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 プレビューでの ASP.NET Core Minimal API での Source Generator 対応とその仕組みについての解説。&lt;/p&gt;
&lt;h3 id="too-many-tabs-open-no-problem-visual-studio-blog"&gt;Too many tabs open? No problem! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/too-many-tabs-open-no-problem/"&gt;https://devblogs.microsoft.com/visualstudio/too-many-tabs-open-no-problem/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio で多くのタブを表示した際にスクロールできるようにする試みについて。&lt;/p&gt;
&lt;p&gt;現在拡張機能として提供され、フィードバックを受け付けている。&lt;/p&gt;
&lt;p&gt;-&lt;a href="https://marketplace.visualstudio.com/items?itemName=MadsKristensen.ScrollTabs"&gt;Scroll Tabs - Visual Studio Marketplace&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c"&gt;(C#) ジェネリック型制約違いのオーバーロード - ネコのために鐘は鳴る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ikorin2.hatenablog.jp/entry/2023/07/18/145555"&gt;https://ikorin2.hatenablog.jp/entry/2023/07/18/145555&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ジェネリック制約が異なるオーバーロードのメソッドを作るテクニックについて。&lt;/p&gt;
&lt;h3 id="controlling-my-ac-unit-with-nanoframework"&gt;Controlling My AC Unit With nanoFramework&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/mrcsharp/controlling-my-ac-unit-with-nanoframework-1a5k"&gt;https://dev.to/mrcsharp/controlling-my-ac-unit-with-nanoframework-1a5k&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;nanoFramework と ESP32 でエアコンをコントロールする試み。&lt;/p&gt;
&lt;h3 id="asp.net-core"&gt;明日から使える ASP.NET Core ロギング術！&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/nenonaninu/ming-ri-karashi-eru-asp-dot-net-core-rogingushu"&gt;https://speakerdeck.com/nenonaninu/ming-ri-karashi-eru-asp-dot-net-core-rogingushu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core のロギングについての解説。リクエストのトレースといったことについても紹介している。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="001c248c5efc4473accff9d8aac4bd40" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="microsoftsemantic-memory-index-and-query-any-data-using-llm-and-natural-language"&gt;microsoft/semantic-memory: Index and query any data using LLM and natural language.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/semantic-memory"&gt;https://github.com/microsoft/semantic-memory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel と連携するカスタムデータパイプラインによるインデックスの作成とクエリーを行うライブラリー。&lt;/p&gt;
&lt;h3 id="riokmapperly-a.net-source-generator-for-generating-object-mappings.no-runtime-reflection"&gt;riok/mapperly: A .NET source generator for generating object mappings. No runtime reflection.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/riok/mapperly"&gt;https://github.com/riok/mapperly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Generator ベースのオブジェクトのマッピング (データの移し替え) を行うライブラリー。&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;異なるプラットフォーム、OS 向けの NativeAOT を行えるようにする NuGet パッケージ。&lt;/p&gt;
&lt;!-- https://twitter.com/mstrehovsky/status/1681170442269364225?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;PublishAotCross: NuGet package to help you cross-compile .NET Native AOT apps to different OSes/architectures. Works on .NET 8 Preview 6+ &lt;a href="https://t.co/t7dya09n89"&gt;https://t.co/t7dya09n89&lt;/a&gt;&lt;/p&gt;&amp;mdash; Michal Strehovský (&amp;#64;MStrehovsky) &lt;a href="https://twitter.com/MStrehovsky/status/1681170442269364225?ref_src=twsrc%5Etfw"&gt;July 18, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Avalonia XPF (クロスプラットフォーム WPF 製品) の Private Preview の応募が開始。&lt;/p&gt;
&lt;!-- https://twitter.com/avaloniaui/status/1681189307023851520?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Thrilled to announce we&amp;#39;ve rolled out the first trials of Avalonia XPF! &lt;br&gt;&lt;br&gt;Ready to take your WPF app to new platforms? Join the journey and apply for a trial today. &lt;br&gt;&lt;br&gt;👉 &lt;a href="https://t.co/B8Q6ELEe35"&gt;https://t.co/B8Q6ELEe35&lt;/a&gt; &lt;a href="https://t.co/qy6d3ki9u5"&gt;pic.twitter.com/qy6d3ki9u5&lt;/a&gt;&lt;/p&gt;&amp;mdash; Avalonia UI (&amp;#64;AvaloniaUI) &lt;a href="https://twitter.com/AvaloniaUI/status/1681189307023851520?ref_src=twsrc%5Etfw"&gt;July 18, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio には固有のクリップボード履歴があるという話。&lt;/p&gt;
&lt;!-- https://twitter.com/hassanrezkhabib/status/1680748023729762304?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Did you know Visual Studio has it&amp;#39;s own clipboard history (keyboard buffer ring) where you can get values you copied before in your code? All you gotta do is to hit CTRL + SHIFT + V&lt;a href="https://twitter.com/hashtag/visualstudio?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#visualstudio&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/productivity?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#productivity&lt;/a&gt; &lt;a href="https://t.co/KU2gvvfux4"&gt;pic.twitter.com/KU2gvvfux4&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hassan Habib (&amp;#64;HassanRezkHabib) &lt;a href="https://twitter.com/HassanRezkHabib/status/1680748023729762304?ref_src=twsrc%5Etfw"&gt;July 17, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="tentative-c-12-feature-list-dotnetroslyn-discussion-69074"&gt;Tentative C# 12 feature list · dotnet/roslyn · Discussion #69074&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/roslyn/discussions/69074"&gt;https://github.com/dotnet/roslyn/discussions/69074&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;現時点での暫定的な C# 12 の機能リスト。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/07/16/updates</id>
		<title>2023-07-16: .NET 8 Preview 6, .NET 7.0.9 and 6.0.20, System.Web Adapters v1.2</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/07/16/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-07-16T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-8-preview-6.net-blog"&gt;Announcing .NET 8 Preview 6 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-6/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 6 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System.Text.Json の改善
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;JsonStringEnumConverter&amp;lt;TEnum&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JsonConverter.Type&lt;/li&gt;
&lt;li&gt;ストリームベースの ZipFile.CreateFromDirectory と ExtractToDirectory メソッドオーバーロード&lt;/li&gt;
&lt;li&gt;MetricCollector メトリクス API&lt;/li&gt;
&lt;li&gt;Options validation Source Generator&lt;/li&gt;
&lt;li&gt;機能強化のための LoggerMessageAttribute コンストラクターオーバーロードの拡張&lt;/li&gt;
&lt;li&gt;Configuration バインディング Source Generator の改善&lt;/li&gt;
&lt;li&gt;Source Generator による COM 相互運用&lt;/li&gt;
&lt;li&gt;HTTPS プロキシーサポート&lt;/li&gt;
&lt;li&gt;System.Security: SHA-3 サポート&lt;/li&gt;
&lt;li&gt;SDK: コンテナーの発行パフォーマンスと互換性&lt;/li&gt;
&lt;li&gt;WASM での HybridGlobalization モード&lt;/li&gt;
&lt;li&gt;iOS プラットフォームをターゲットとする NativeAOT のサポート&lt;/li&gt;
&lt;li&gt;CodeGen
&lt;ul&gt;
&lt;li&gt;JIT の改善&lt;/li&gt;
&lt;li&gt;AVX-512 サポート&lt;/li&gt;
&lt;li&gt;Arm64 の改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-maui-in.net-8-preview-6-hello-vs-code-vs-for-mac.net-blog"&gt;Announcing .NET MAUI in .NET 8 Preview 6: Hello VS Code &amp;amp; VS for Mac - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-6/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 6 での .NET MAUI のアップデートについて。&lt;/p&gt;
&lt;p&gt;このリリースでは Visual Studio Preview に加えて、Visual Studio Code 向けの拡張がプレビューリリースとなった。また Visual Studio for Mac においてもプレビュー機能として利用可能となった。&lt;/p&gt;
&lt;h3 id="announcing-the.net-maui-extension-for-visual-studio-code-visual-studio-blog"&gt;Announcing the .NET MAUI extension for Visual Studio Code - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/announcing-the-dotnet-maui-extension-for-visual-studio-code/"&gt;https://devblogs.microsoft.com/visualstudio/announcing-the-dotnet-maui-extension-for-visual-studio-code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code 向けの .NET MAUI 拡張がプレビューリリースされた。&lt;/p&gt;
&lt;p&gt;この拡張は Windows, macOS, Linux における .NET MAUI 開発で、異なるデバイスやエミュレーターといった任意のターゲットでの開発、デバッグのサポートを提供する。ライセンスは C# Dev Kit と同様に Visual Studio のライセンスとなる。&lt;/p&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-6.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 6 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-6/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 6 での ASP.NET Core のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;スタートアップデバッグ体験の向上&lt;/li&gt;
&lt;li&gt;Blazor
&lt;ul&gt;
&lt;li&gt;サーバーサイドレンダリングのフォームモデルバインディングと検証&lt;/li&gt;
&lt;li&gt;ページナビゲーションとフォームハンドリングの強化&lt;/li&gt;
&lt;li&gt;ストリーミングレンダリングでの既存の DOM 要素の維持&lt;/li&gt;
&lt;li&gt;呼び出し元でのコンポーネントレンダリングモードの指定&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly インタラクティブレンダリング&lt;/li&gt;
&lt;li&gt;セクションの改善&lt;/li&gt;
&lt;li&gt;Blazor コンポーネントへのクエリーストリングのカスケード&lt;/li&gt;
&lt;li&gt;サーバーインタラクティブ性の Blazor Web App テンプレートのオプション&lt;/li&gt;
&lt;li&gt;Blazor テンプレートの統合&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Metrics
&lt;ul&gt;
&lt;li&gt;ASP.NET Core アプリのテストメトリクス&lt;/li&gt;
&lt;li&gt;新規、改善、リネームされたカウンター&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API オーサリング
&lt;ul&gt;
&lt;li&gt;Minimal API での複雑なフォームバインディングサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;サーバーとミドルウェア
&lt;ul&gt;
&lt;li&gt;HTTP.sys カーネルレスポンスバッファリング&lt;/li&gt;
&lt;li&gt;Redis ベースの出力キャッシュ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-c-12-preview-features.net-blog"&gt;New C# 12 preview features - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/new-csharp-12-preview-features/"&gt;https://devblogs.microsoft.com/dotnet/new-csharp-12-preview-features/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新しい C# 12 のプレビュー機能の紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nameof&lt;/code&gt; によるインターフェースメンバーへのアクセス&lt;/li&gt;
&lt;li&gt;Inline arrays&lt;/li&gt;
&lt;li&gt;Interceptors
&lt;ul&gt;
&lt;li&gt;Source Generator 向けの既存のメソッド呼び出しに介入できるような仕組み&lt;/li&gt;
&lt;li&gt;実験的機能としての実装のため独自のスイッチによる有効化が必要&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-july-2023-updates.net-7.0.9.net-6.0.20.net-blog"&gt;.NET July 2023 Updates – .NET 7.0.9, .NET 6.0.20 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/july-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/july-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7.0.9 および 6.0.20 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかのセキュリティー修正と改善が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2023-33127 – .NET リモートコード実行の脆弱性
&lt;ul&gt;
&lt;li&gt;.NET 診断サーバーでの特権昇格とコード実行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2023-33170 – .NET セキュリティ機能のバイパスの脆弱性
&lt;ul&gt;
&lt;li&gt;ASP.NET Core でのアカウントロックアウト最大試行回数が更新されない問題&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-framework-july-2023-security-and-quality-rollup-updates.net-blog"&gt;.NET Framework July 2023 Security and Quality Rollup Updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-july-2023-security-and-quality-rollup-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-july-2023-security-and-quality-rollup-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework の2023年7月のセキュリティーと品質の累積アップデートがリリースされた。&lt;/p&gt;
&lt;h3 id="introducing-system.web-adapters-v1.2-with-new-apis-and-scenarios.net-blog"&gt;Introducing System.Web Adapters v1.2 with new APIs and scenarios - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/systemweb-adapters-1_2/"&gt;https://devblogs.microsoft.com/dotnet/systemweb-adapters-1_2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;System.Web Adapters v1.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは ASP.NET Core での HttpApplication を含む IHttpModule のサポートとエミュレーション、カスタムセッションキーシリアライザー、IHtmlString サポート、その他 API の追加が行われている。&lt;/p&gt;
&lt;p&gt;記事ではインクリメンタルに移行するためのガイダンスも紹介している。&lt;/p&gt;
&lt;h3 id="extended-c-support-in-resharper-and-rider-2023.2-eap-9-the.net-tools-blog"&gt;Extended C# Support in ReSharper and Rider 2023.2 EAP 9 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/14/rsrp-rider-2023-2-eap9/"&gt;https://blog.jetbrains.com/dotnet/2023/07/14/rsrp-rider-2023-2-eap9/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2023 EAP 9 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではプライマリーコンストラクターなど C# 12 プレビューサポートの向上、IAsyncDisposable のサポート、よりよい discard &lt;code&gt;_&lt;/code&gt; サポートといった改善が行われている。&lt;/p&gt;
&lt;h3 id="get-the-most-from-visual-studio-with-microsoft-dev-box-now-generally-available-visual-studio-blog"&gt;Get the most from Visual Studio with Microsoft Dev Box-now generally available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/get-the-most-from-visual-studio-with-microsoft-dev-box-now-generally-available/"&gt;https://devblogs.microsoft.com/visualstudio/get-the-most-from-visual-studio-with-microsoft-dev-box-now-generally-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Dev Box が一般提供開始となった。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="resharper-2023.2-eap-8-comparing-assemblies-in-resharper-and-dotpeek-plus-more-c-features-the.net-tools-blog"&gt;ReSharper 2023.2 EAP 8: Comparing Assemblies in ReSharper and dotPeek, Plus More C++ Features | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/10/resharper-2023-2-eap-8/"&gt;https://blog.jetbrains.com/dotnet/2023/07/10/resharper-2023-2-eap-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.2 EAP 8 での新機能の紹介。&lt;/p&gt;
&lt;p&gt;ReSharper および dotPeek でアセンブリーの比較差分を確認できる機能が追加された。&lt;/p&gt;
&lt;h3 id="integration-test-postgres-with-testcontainers-dotnet"&gt;Integration Test Postgres with testcontainers-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/kashifsoofi/integration-test-postgres-with-testcontainers-dotnet-1gkn"&gt;https://dev.to/kashifsoofi/integration-test-postgres-with-testcontainers-dotnet-1gkn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;testcontainers-dotnet で PostgreSQL を使用した統合テストを行う方法について。&lt;/p&gt;
&lt;h3 id="silverlight-just-wont-die-xaml-for-blazor-arrives-visual-studio-magazine"&gt;Silverlight Just Won't Die: 'XAML for Blazor' Arrives -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/articles/2023/07/13/xaml-blazor.aspx"&gt;https://visualstudiomagazine.com/articles/2023/07/13/xaml-blazor.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Userware が提供している Blazor で XAML を使用できるようにする XAML for Blazor についての紹介。&lt;/p&gt;
&lt;h3 id="how-to-prevent-the-screen-turn-off-after-a-while-in-blazor"&gt;How to prevent the screen turn off after a while in Blazor&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/this-is-learning/how-to-prevent-the-screen-turn-off-after-a-while-in-blazor-4b29"&gt;https://dev.to/this-is-learning/how-to-prevent-the-screen-turn-off-after-a-while-in-blazor-4b29&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor で Screen Wake Lock API を使用して画面のスリープを防ぐ方法について。&lt;/p&gt;
&lt;h3 id="how-small-is-the-smallest.net-hello-world-binary"&gt;How small is the smallest .NET Hello World binary?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.washi.dev/posts/tinysharp/"&gt;https://blog.washi.dev/posts/tinysharp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hello World を表示する .NET アプリケーションを極限まで小さくするという試み。&lt;/p&gt;
&lt;p&gt;記事では様々なテクニックを駆使して4.6KBの実行ファイルを最終的に834バイトまで縮めることに成功している。&lt;/p&gt;
&lt;h3 id="the-minimal-api-aot-compilation-template-exploring-the.net-8-preview-part-2"&gt;The minimal API AOT compilation template: Exploring the .NET 8 preview - Part 2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-the-minimal-api-aot-template/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-the-minimal-api-aot-template/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview の Minimal API 向け AOT のテンプレートの解説。&lt;/p&gt;
&lt;h3 id="i-finally-found-a-use-for-logging-in.net"&gt;I finally found a use for Logging in .NET!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://martinjt.me/2023/07/14/i-finally-found-a-use-for-logging-in-net/"&gt;https://martinjt.me/2023/07/14/i-finally-found-a-use-for-logging-in-net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry へのトレーシングの構成を間違えた際のエラーログを取得するための手法について。&lt;/p&gt;
&lt;p&gt;エクスポーターはバックグラウンドで動作するため、エラーが発生しても表には出てこないため EventListener でイベントを取得する。&lt;/p&gt;
&lt;h3 id="net-lambda-devio2023-developersio"&gt;「.NET + Lambda のパフォーマンスを最適化する方法」というテーマのビデオセッションで話しました #devio2023 | DevelopersIO&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.classmethod.jp/articles/devio2023-video-57-dotnet/"&gt;https://dev.classmethod.jp/articles/devio2023-video-57-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET を AWS Lambda で使用する際に NativeAOT を使用してコールドスタートのパフォーマンスを改善することについて。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="c04d1306e51a4d778f80728a57b0113b" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="exploring-blazor-changes-in.net-8-server-side-rendering-ssr"&gt;Exploring Blazor Changes in .NET 8 - Server Side Rendering (SSR)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jonhilton.net/blazor-ssr/"&gt;https://jonhilton.net/blazor-ssr/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 での Blazor の Server Side Rendering についての簡単な解説。&lt;/p&gt;
&lt;h3 id="what-does-azure-ad-renamed-microsoft-entra-id-mean-for.net-developers.net-blog"&gt;What does Azure AD renamed Microsoft Entra ID mean for .NET developers? - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/azure-ad-microsoft-entra/"&gt;https://devblogs.microsoft.com/dotnet/azure-ad-microsoft-entra/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Active Directory (Azure AD) が Entra ID にリブランドしたことによる .NET 開発者への影響について。&lt;/p&gt;
&lt;p&gt;ライブラリーや URL といったものは変更されないため既存のコードに対しての影響はないとしている。&lt;/p&gt;
&lt;h3 id="debug-source-generators-in-jetbrains-rider-the.net-tools-blog"&gt;Debug Source Generators in JetBrains Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/13/debug-source-generators-in-jetbrains-rider/"&gt;https://blog.jetbrains.com/dotnet/2023/07/13/debug-source-generators-in-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider での Source Generator のデバッグについての紹介。&lt;/p&gt;
&lt;p&gt;記事では Source Generator で生成されたコードのデバッグや Source Generator 自体のデバッグ、Roslyn テンプレートについて触れている。&lt;/p&gt;
&lt;h3 id="titlebars-and-themes-a-winui-adventure"&gt;Titlebars and Themes: A WinUI Adventure&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://inthehand.com/2023/07/11/titlebars-and-themes-a-winui-adventure/"&gt;https://inthehand.com/2023/07/11/titlebars-and-themes-a-winui-adventure/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinUI でのタイトルバーのウィンドウボタンとタスクバープレビューでのアイコンが Windows の見た目に合わせるための Tips。&lt;/p&gt;
&lt;h3 id="cilogger"&gt;C#の単体テストにおいてILoggerのログをテスト出力に表示する方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jtechjapan/articles/d10e9e9c0d5bbe"&gt;https://zenn.dev/jtechjapan/articles/d10e9e9c0d5bbe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ユニットテストで Microsoft.Extensions.Logging の ILogger を経由してテスト出力にする方法について。&lt;/p&gt;
&lt;p&gt;記事では MartinCostello.Logging.XUnit パッケージを使用する方法を紹介している。&lt;/p&gt;
&lt;h3 id="dottrace-comes-to-benchmarkdotnet-the.net-tools-blog"&gt;dotTrace comes to BenchmarkDotNet | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/11/dottrace-comes-to-benchmarkdotnet/"&gt;https://blog.jetbrains.com/dotnet/2023/07/11/dottrace-comes-to-benchmarkdotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BenchmarkDotNet 0.13.6 で導入された dotTrace の統合について。&lt;/p&gt;
&lt;p&gt;DotTraceDiagnoser を使用することでベンチマーク中のプロファイリングが可能となる。なおスナップショットを開くには dotTrace のライセンスが必要となる。&lt;/p&gt;
&lt;h3 id="comparing-webapplication.createbuilder-to-the-new-createslimbuilder-method-exploring-the.net-8-preview-part-3"&gt;Comparing WebApplication.CreateBuilder() to the new CreateSlimBuilder() method: Exploring the .NET 8 preview - Part 3&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-comparing-createbuilder-to-the-new-createslimbuilder-method/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-comparing-createbuilder-to-the-new-createslimbuilder-method/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core で導入される &lt;code&gt;WebApplication.CreateSlimBuilder&lt;/code&gt; について。&lt;/p&gt;
&lt;p&gt;AOT 向けに機能制限された構成で起動するためのビルダーについて詳しく説明している。&lt;/p&gt;
&lt;h3 id="milestone-2-million-downloads-for-videolan.net-nuget-packages"&gt;Milestone: 2 million downloads for VideoLAN .NET NuGet packages&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/mfkl/milestone-2-million-downloads-for-videolan-net-nuget-packages-k1e"&gt;https://dev.to/mfkl/milestone-2-million-downloads-for-videolan-net-nuget-packages-k1e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VideoLAN .NET NuGet パッケージアカウントの合計ダウンロード数が200万ダウンロードを超えたことと、今後の開発について。&lt;/p&gt;
&lt;p&gt;LibVLC 4 のサポート、Unity や Uno Platform、コマーシャルライセンスといった点に触れている。&lt;/p&gt;
&lt;h3 id="windows-visual-studio.net-2023.07-qiita"&gt;Windows と Visual Studio と .NET のサポート状況について (2023.07) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mmake/items/946aea0d9a195aa5e3d4"&gt;https://qiita.com/mmake/items/946aea0d9a195aa5e3d4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows と Visual Studio、.NET および .NET Framework のサポート期限と対応 OS の組み合わせのまとめ。&lt;/p&gt;
&lt;h3 id="cake-v3.1.0-released"&gt;Cake v3.1.0 released&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cakebuildnet.medium.com/cake-v3-1-0-released-c42728359d25"&gt;https://cakebuildnet.medium.com/cake-v3-1-0-released-c42728359d25&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cake v3.1.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの改善が含まれている。&lt;/p&gt;
&lt;h3 id="build-2023-windows-11-insider-preview-dev-drive"&gt;Build 2023 で発表されて Windows 11 Insider Preview で利用可能になった Dev Drive を試した - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20230710/1688920344"&gt;https://blog.shibayan.jp/entry/20230710/1688920344&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows 11 Insider Preview で利用可能となった開発向けのボリューム Dev Drive を試用してみたことについて。&lt;/p&gt;
&lt;p&gt;実際に .NET でビルドした結果や Copy-on-Write を活用する方法についても触れている。&lt;/p&gt;
&lt;h3 id="lets-learn.net-web-youtube"&gt;Let's Learn .NET - Web 開発 (日本語) - YouTube&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=YbYwWaJsbwM"&gt;https://www.youtube.com/watch?v=YbYwWaJsbwM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code を使用して HTML/CSS、ASP.NET Core Razor Pages といったもので .NET 開発を学ぶ動画。&lt;/p&gt;
&lt;!-- https://twitter.com/aspnet/status/1678569803554930689?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;ブラウザベース版の &lt;a href="https://twitter.com/hashtag/VSCode?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#VSCode&lt;/a&gt; を使用し、HTML/CSS でアクセス可能な Web ページを作成することで、Web 開発の基礎を学びます。 次に、&lt;a href="https://twitter.com/hashtag/ASPNETCore?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#ASPNETCore&lt;/a&gt; で &lt;a href="https://twitter.com/hashtag/Razor?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Razor&lt;/a&gt; を使用して最初の Web ページを構築します。 このライブ配信で、一緒に学びましょう！&lt;a href="https://t.co/1EmDERmDws"&gt;https://t.co/1EmDERmDws&lt;/a&gt; &lt;a href="https://t.co/oqhsAArEUR"&gt;pic.twitter.com/oqhsAArEUR&lt;/a&gt;&lt;/p&gt;&amp;mdash; The ASP.NET Team (&amp;#64;aspnet) &lt;a href="https://twitter.com/aspnet/status/1678569803554930689?ref_src=twsrc%5Etfw"&gt;July 11, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/YbYwWaJsbwM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="msbuild-editor-visual-studio-marketplace"&gt;MSBuild Editor - Visual Studio Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=mhutch.MSBuildEditor"&gt;https://marketplace.visualstudio.com/items?itemName=mhutch.MSBuildEditor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio で MSBuild ファイルを編集するための拡張。&lt;/p&gt;
&lt;!-- https://twitter.com/mjhutchinson/status/1679272936195194885?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;🎉 It&amp;#39;s been an 8-year labor of love but I finally published a preview of my open-source MSBuild Editor extension to the VS Marketplace! &lt;a href="https://t.co/FoT2IixJ5T"&gt;https://t.co/FoT2IixJ5T&lt;/a&gt;&lt;br&gt;&lt;br&gt;IntelliSense, Quick Info, validation, navigation, code fixes, and refactorings, all driven by a type system 😄 &lt;a href="https://t.co/dF7QxxUPyT"&gt;pic.twitter.com/dF7QxxUPyT&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mikayla H (&amp;#64;mjhutchinson) &lt;a href="https://twitter.com/mjhutchinson/status/1679272936195194885?ref_src=twsrc%5Etfw"&gt;July 12, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/davidfowl/status/1679223885256957952?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;OK here&amp;#39;s another performance challenge for ya&amp;#39;ll (yes I&amp;#39;m writing code on vacaton!). You get an array of messages (defined below) and it gets JSON serialized as a single base64 encoded, comma separated string. This is also on the hot path. How can we optimize this one? &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/vDm7gxhd03"&gt;https://t.co/vDm7gxhd03&lt;/a&gt; &lt;a href="https://t.co/4Gta4rumDn"&gt;pic.twitter.com/4Gta4rumDn&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1679223885256957952?ref_src=twsrc%5Etfw"&gt;July 12, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://twitter.com/ufcpp/status/1679133008882704384?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;&lt;a href="https://t.co/PZN8Xi5OGt"&gt;https://t.co/PZN8Xi5OGt&lt;/a&gt;&lt;br&gt;今週どこかで配信するか。&lt;br&gt;個人的にはどこにもアナウンスないけども UnsafeAccessor にときめいてる。&lt;/p&gt;&amp;mdash; ++C++; // 管理人: 岩永 (&amp;#64;ufcpp) &lt;a href="https://twitter.com/ufcpp/status/1679133008882704384?ref_src=twsrc%5Etfw"&gt;July 12, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://twitter.com/davidfowl/status/1678738294933159937?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Here&amp;#39;s some code that is on the hot path on your application and you want to optimize it. This is what a typical C# developer would write (actually copilot wrote this). It&amp;#39;s pretty clear, but suboptimal. How could you go about improving it? &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://t.co/NBFuhz27WG"&gt;pic.twitter.com/NBFuhz27WG&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1678738294933159937?ref_src=twsrc%5Etfw"&gt;July 11, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/07/09/updates</id>
		<title>2023-07-09: Avalonia UI v11, .NET Community Toolkit 8.2.1</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/07/09/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-07-09T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="avalonia-ui-welcome-to-the-new-era-of-app-development-introducing-avalonia-v11"&gt;Avalonia UI - Welcome to the New Era of App Development: Introducing Avalonia v11&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/Blog/welcome-to-the-new-era-of-app-development-introducing-avalonia-v11,a8907121-eae9-4a16-aca8-2432e1dac13a"&gt;https://avaloniaui.net/Blog/welcome-to-the-new-era-of-app-development-introducing-avalonia-v11,a8907121-eae9-4a16-aca8-2432e1dac13a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improved-source-generators-and-code-fixers-arrive-in.net-community-toolkit-8.2.1.net-blog"&gt;Improved Source Generators and Code Fixers Arrive in .NET Community Toolkit 8.2.1! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-the-dotnet-community-toolkit-821/"&gt;https://devblogs.microsoft.com/dotnet/announcing-the-dotnet-community-toolkit-821/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v12.1.0-jbogardmediatr"&gt;Release v12.1.0 · jbogard/MediatR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jbogard/MediatR/releases/tag/v12.1.0"&gt;https://github.com/jbogard/MediatR/releases/tag/v12.1.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.2-eap-7-introduces-a-predictive-debugger-and-other-updates-the.net-tools-blog"&gt;ReSharper 2023.2 EAP 7 Introduces a Predictive Debugger and Other Updates | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/03/resharper-2023-2-eap-7/"&gt;https://blog.jetbrains.com/dotnet/2023/07/03/resharper-2023-2-eap-7/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.2-eap-7-is-out-the.net-tools-blog"&gt;Rider 2023.2 EAP 7 Is Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/03/rider-2023-2-eap-7-is-out/"&gt;https://blog.jetbrains.com/dotnet/2023/07/03/rider-2023-2-eap-7-is-out/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improvements-to-the-caching-abstraction-in-asp.net-core.net-blog"&gt;Improvements to the Caching Abstraction in ASP.NET Core - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/caching-abstraction-improvements-in-aspnetcore/"&gt;https://devblogs.microsoft.com/dotnet/caching-abstraction-improvements-in-aspnetcore/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-release-v2.55.0-grpcgrpc-dotnet"&gt;Release Release v2.55.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.55.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.55.0&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="improved-f-hints-in-visual-studio.net-blog"&gt;Improved F# hints in Visual Studio - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/improved-fsharp-hints-in-visual-studio/"&gt;https://devblogs.microsoft.com/dotnet/improved-fsharp-hints-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="moq-techniques-how-to-pick-the-best-syntax-when-configuring-your-mocks"&gt;Moq Techniques: How to Pick the Best Syntax when Configuring Your Mocks&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/ant_f_dev/moq-techniques-how-to-pick-the-best-syntax-when-configuring-your-mocks-3aa1"&gt;https://dev.to/ant_f_dev/moq-techniques-how-to-pick-the-best-syntax-when-configuring-your-mocks-3aa1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-july-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | July 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/05/net-annotated-monthly-july-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/07/05/net-annotated-monthly-july-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="share-your-thoughts-about-game-development-for-the-chance-to-win-a-prize-the-jetbrains-blog"&gt;Share Your Thoughts About Game Development for the Chance to Win a Prize | The JetBrains Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/2023/07/04/share-your-thoughts-about-game-development-for-the-chance-to-win-a-prize/"&gt;https://blog.jetbrains.com/2023/07/04/share-your-thoughts-about-game-development-for-the-chance-to-win-a-prize/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="examining-suspicious-code-fragments-in-aws-sdk-for.net"&gt;Examining suspicious code fragments in AWS SDK for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/_sergvasiliev_/examining-suspicious-code-fragments-in-aws-sdk-for-net-2p9l"&gt;https://dev.to/_sergvasiliev_/examining-suspicious-code-fragments-in-aws-sdk-for-net-2p9l&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="crafting-beautiful-interactive-console-apps-with-system.commandline-and-spectre.console"&gt;Crafting beautiful interactive console apps with System.CommandLine and Spectre.Console&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/crafting-beautiful-interactive-console-apps-with-systemcommandline-and-spectreconsole-c6f"&gt;https://dev.to/asimmon/crafting-beautiful-interactive-console-apps-with-systemcommandline-and-spectreconsole-c6f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="http-client-tools-everywhere-the.net-tools-blog"&gt;HTTP Client Tools Everywhere! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/07/04/http-client-tools-everywhere/"&gt;https://blog.jetbrains.com/dotnet/2023/07/04/http-client-tools-everywhere/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-nullmodelbinder-qiita"&gt;ASP.NET Core で配列プロパティへのバインドがnullになる問題を解決するModelBinderの作成 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jun1s/items/f432ae774cb737d58edf"&gt;https://qiita.com/jun1s/items/f432ae774cb737d58edf&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the-minimal-api-aot-compilation-template-exploring-the.net-8-preview-part-2"&gt;The minimal API AOT compilation template: Exploring the .NET 8 preview - Part 2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-the-minimal-api-aot-template/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-the-minimal-api-aot-template/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="timeprovider-and-itimer-writing-unit-tests-with-time-in.net-8-preview-4"&gt;TimeProvider and ITimer: Writing Unit Tests with Time in .NET 8 Preview 4&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/articles/dotnet-unit-tests-time-timezone/"&gt;https://www.infoq.com/articles/dotnet-unit-tests-time-timezone/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;[C#] キャッシング戦略とパフォーマンスプロファイリング - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/syantien/items/d4df7b58611223ae0d02"&gt;https://qiita.com/syantien/items/d4df7b58611223ae0d02&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="entityframework-toolsno-build-qiita"&gt;EntityFramework Toolsのno-buildオプション - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/c0b1b95dba5eecf8db38"&gt;https://qiita.com/karuakun/items/c0b1b95dba5eecf8db38&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="adding-a-readme-to-nuget-package-landing-pages"&gt;Adding a Readme to NuGet Package Landing Pages&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/adding-a-readme-to-nuget-package-landing-pages"&gt;https://khalidabuhakmeh.com/adding-a-readme-to-nuget-package-landing-pages&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="issue-employee-verifiable-credentials-using-entra-verified-id-and-asp.net-core"&gt;Issue Employee verifiable credentials using Entra Verified ID and ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2023/07/03/issue-employee-verifiable-credentials-using-entra-verified-id-and-asp-net-core/"&gt;https://damienbod.com/2023/07/03/issue-employee-verifiable-credentials-using-entra-verified-id-and-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="using-encryption-to-verify-a-license-key"&gt;Using encryption to verify a license key&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/199617-A/using-encryption-to-verify-a-license-key"&gt;https://ayende.com/blog/199617-A/using-encryption-to-verify-a-license-key&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="migrating-xamarin.android-xamarin.ios-applications-to.net-6"&gt;Migrating Xamarin.Android &amp;amp; Xamarin.iOS Applications to .NET 6&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ruby.verma10/migrating-xamarin-android-xamarin-ios-applications-to-net-6-f398ba74b992"&gt;https://medium.com/&amp;#64;ruby.verma10/migrating-xamarin-android-xamarin-ios-applications-to-net-6-f398ba74b992&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-at-oracle-cloudworld-2023"&gt;.NET at Oracle CloudWorld 2023&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/oracledevs/net-at-oracle-cloudworld-2023-fbecf93e911a"&gt;https://medium.com/oracledevs/net-at-oracle-cloudworld-2023-fbecf93e911a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="tmemorytspantref-qiita"&gt;T[]（配列）・MemoryT・SpanT・ポインタ・参照変数（ref）の使い分けと相互変換 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Funny_Silkie/items/ea21dd1e3d06d48ffdad"&gt;https://qiita.com/Funny_Silkie/items/ea21dd1e3d06d48ffdad&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="netmsiwixtoolset-v4-qiita"&gt;.NETでMSIインストーラーを操作する(wixtoolset v4) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/d2f7ba641cbd27566c67"&gt;https://qiita.com/skitoy4321/items/d2f7ba641cbd27566c67&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="casp.net-core-w3c-trace-context"&gt;【C#】ASP.NET Core と W3C Trace Context とお手軽ロギング。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/07/04/181843"&gt;https://blog.neno.dev/entry/2023/07/04/181843&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="neue-cc-magicphysx.net"&gt;neue cc - MagicPhysX - .NET用のクロスプラットフォーム物理エンジン&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2023/07/04_MagicPhysX.html"&gt;https://neue.cc/2023/07/04_MagicPhysX.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="funny-silkiecuilib-library-for.net-cui-application"&gt;Funny-Silkie/CuiLib: Library for .NET CUI application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Funny-Silkie/CuiLib"&gt;https://github.com/Funny-Silkie/CuiLib&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/Funny_Silkie/items/432763d0725bfa6dc743"&gt;C#のCUIアプリケーション用ライブラリ『CuiLib』 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miloszkrajewskik4os.streams-implementation-for-pooled-in-memory-streams-for.net"&gt;MiloszKrajewski/K4os.Streams: Implementation for pooled in-memory streams for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MiloszKrajewski/K4os.Streams"&gt;https://github.com/MiloszKrajewski/K4os.Streams&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://twitter.com/mrkrashan/status/1677045966631841792?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/dotnet?ref_src=twsrc%5Etfw"&gt;&amp;#64;dotnet&lt;/a&gt; &lt;br&gt;Low allocation, high performance, pooled in-memory streams for &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;br&gt;Faster than MemoryStream (a lot) and RecyclableMemoryStream (with caveats), YMMV.&lt;a href="https://t.co/I8fOjKq00s"&gt;https://t.co/I8fOjKq00s&lt;/a&gt;&lt;/p&gt;&amp;mdash; Milosz Krajewski (&amp;#64;MrKrashan) &lt;a href="https://twitter.com/MrKrashan/status/1677045966631841792?ref_src=twsrc%5Etfw"&gt;July 6, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="add-searchvaluesstring-by-mihazupan-pull-request-88394-dotnetruntime"&gt;Add SearchValuesstring by MihaZupan · Pull Request #88394 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/88394"&gt;https://github.com/dotnet/runtime/pull/88394&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/07/02/updates</id>
		<title>2023-07-02: ReSharper &amp; Rider 2023.2 EAP 6, MagicPhysX</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/07/02/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-07-02T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="ai-assistant-comes-to-resharper-the.net-tools-blog"&gt;AI Assistant Comes to ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/26/resharper-ai-assistant/"&gt;https://blog.jetbrains.com/dotnet/2023/06/26/resharper-ai-assistant/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.2 EAP 6 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは大規模言語モデルを活用した AI アシスタントが組み込まれた。これによりチャットによるコードの改善についての質問といったことが Visual Studio 上で行えるようになる。&lt;/p&gt;
&lt;p&gt;その他 C# サポート、LINQ のインレイヒント、dotTrace の Linux, macOS のソースビューなど。&lt;/p&gt;
&lt;h3 id="ai-assistant-comes-to-rider-the.net-tools-blog"&gt;AI Assistant Comes to Rider! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/26/rider-ai-assistant/"&gt;https://blog.jetbrains.com/dotnet/2023/06/26/rider-ai-assistant/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.2 EAP 6 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは大規模言語モデルを活用した AI アシスタントが組み込まれｔ。これによりチャット形式でのアシスト、コミットメッセージの生成、ファイル生成といった機能が提供される。&lt;/p&gt;
&lt;p&gt;その他 C# サポートの更新、新規ユーザーにおける新しい UI のデフォルト化、プロジェクトごとのカスタムカラー設定、アクセシビリティーの向上、Structure ビューのフィルターとソートの追加、Roslyn (Source Generator) に関する改善とテンプレートの追加、リモートデバッガーでの ARM32 サポートなど。&lt;/p&gt;
&lt;h3 id="cysharpmagicphysx.net-physx-5-binding-to-all-platformswin-osx-linux-for-3d-engine-deep-learning-dedicated-server-of-gaming"&gt;Cysharp/MagicPhysX: .NET PhysX 5 binding to all platforms(win, osx, linux) for 3D engine, deep learning, dedicated server of gaming.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/MagicPhysX"&gt;https://github.com/Cysharp/MagicPhysX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;物理エンジンの PhysX 5 の .NET バインディングライブラリーがリリースされた。&lt;/p&gt;
&lt;!-- https://twitter.com/neuecc/status/1674688540339499010?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;MagicPhysXという .NET で PhysX 5を動かすバインディングライブラリを公開しました！サーバーサイドで物理エンジンがないなら動かせばいいじゃない、という発想により、Rustとcsbindgenを経由することで持ち込みに成功しました！&lt;a href="https://t.co/AgRLtQY50a"&gt;https://t.co/AgRLtQY50a&lt;/a&gt;&lt;/p&gt;&amp;mdash; neuecc (&amp;#64;neuecc) &lt;a href="https://twitter.com/neuecc/status/1674688540339499010?ref_src=twsrc%5Etfw"&gt;June 30, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-8-sdk-preview-4-assemblyinformationalversion-jsakamoto"&gt;.NET 8 SDK Preview 4 から AssemblyInformationalVersion 属性に何かハッシュが付くようになった | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/29614447/?fbclid=IwAR0xwYcrAFtldsg6H1-jr9OHBo4zSBNIOA7sof4LTakIpqWyyzOpaVvdyco"&gt;https://devadjust.exblog.jp/29614447/?fbclid=IwAR0xwYcrAFtldsg6H1-jr9OHBo4zSBNIOA7sof4LTakIpqWyyzOpaVvdyco&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 4 の SDK でビルドしたアセンブリの AssemblyInformationVersion にソースコードのリビジョンがつくようになったことについて。&lt;/p&gt;
&lt;p&gt;記事ではリビジョンを付けないようにするための設定方法についても紹介している。&lt;/p&gt;
&lt;h3 id="implementing-websocket-client-and-server-on-asp.net-core-6.0-c"&gt;Implementing WebSocket Client and Server on ASP.NET Core 6.0 (C#)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/bina-nusantara-it-division/implementing-websocket-client-and-server-on-asp-net-core-6-0-c-4fbda11dbceb"&gt;https://medium.com/bina-nusantara-it-division/implementing-websocket-client-and-server-on-asp-net-core-6-0-c-4fbda11dbceb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で WebSocket のサーバーを実装し、クライアントと通信する実装の仕方について。&lt;/p&gt;
&lt;h3 id="c-semantic-kernel-qiita"&gt;C# で Semantic Kernel：複数プラグインを連携させる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/1fe094f4f1a0556045ae"&gt;https://qiita.com/fsdg-adachi_h/items/1fe094f4f1a0556045ae&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel で複数のプラグインを連携させる方法について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/875583d556552ff14d4d"&gt;C# で Semantic Kernel：AI で作曲する (複数プラグインを連携させる) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="elevating-c-code-quality-with-qodana-a-journey-towards-perfection-the.net-tools-blog"&gt;Elevating C# Code Quality with Qodana: A Journey Towards Perfection | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/29/elevating-csharp-code-quality-with-qodana-a-journey-towards-perfection/"&gt;https://blog.jetbrains.com/dotnet/2023/06/29/elevating-csharp-code-quality-with-qodana-a-journey-towards-perfection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# をコードを解析してレポートする Jetbrains Qodana の紹介。&lt;/p&gt;
&lt;h3 id="open-source-alternative-to-visual-studio-marketplace-avoids-decommission-visual-studio-magazine"&gt;Open Source Alternative to Visual Studio Marketplace Avoids Decommission -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/articles/2023/06/27/open-vsx-registry.aspx"&gt;https://visualstudiomagazine.com/articles/2023/06/27/open-vsx-registry.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Marketplace の代替となる Open VSX Registry について。&lt;/p&gt;
&lt;h3 id="microsoft-store-open-source-series-appservices-library-ifdef-windows"&gt;Microsoft Store Open Source Series — AppServices library - #ifdef Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/ifdef-windows/microsoft-store-open-source-series-appservices-library/"&gt;https://devblogs.microsoft.com/ifdef-windows/microsoft-store-open-source-series-appservices-library/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Store アプリにおいて利用している UWP と完全信頼 Win32 アプリで通信する AppService という仕組みとそれを活用するライブラリーを紹介している。&lt;/p&gt;
&lt;p&gt;記事では Community Kit Lab にはプロキシーを Source Generator で生成する仕組みを利用することについて触れている。&lt;/p&gt;
&lt;h3 id="using-the-new-configuration-binder-source-generator-exploring-the.net-8-preview-part-1"&gt;Using the new configuration binder source generator: Exploring the .NET 8 preview - Part 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-using-the-new-configuration-binder-source-generator/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-using-the-new-configuration-binder-source-generator/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 で導入された Microsoft.Extensions.Configuration の Source Generator ベースのバインダーについての解説。&lt;/p&gt;
&lt;p&gt;記事では導入方法と実際の仕組み、現時点での問題/制限について触れている。&lt;/p&gt;
&lt;h3 id="asp.net-coreantiforgeryjwt400-bad-request-qiita"&gt;ASP.NET Coreでクッキー認証+AntiForgery+JWTによるリモートサーバとの認証情報共有と400 Bad Request対策 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jun1s/items/903570264d1bfb62cf14"&gt;https://qiita.com/jun1s/items/903570264d1bfb62cf14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションで Cookie 認証かつ JWT を使用する構成で、AntiForgery を使用している場合に JWT のリフレッシュが発生すると AntiForgery トークンの検証失敗する問題についてと解決方法。&lt;/p&gt;
&lt;h3 id="how-to-use-runtimehelpers.isreferenceorcontainsreferences-to-micro-optimize-collections-gerald-barre"&gt;How to use RuntimeHelpers.IsReferenceOrContainsReferences to micro-optimize collections - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/how-to-use-runtimehelpers-isreferenceorcontainsreferences-to-micro-optimize-coll.htm"&gt;https://www.meziantou.net/how-to-use-runtimehelpers-isreferenceorcontainsreferences-to-micro-optimize-coll.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RuntimeHelpers.IsReferenceOrContainsReferences を使用したコレクションのマイクロ最適化について。&lt;/p&gt;
&lt;p&gt;例えば Pop するような場面で参照型は内部配列から参照を外す必要があるが、値型の場合に要素を削除せずインデックスを減らすだけにするといったテクニックがあり、その際に IsReferenceOrContainsReferences が役立つ。&lt;/p&gt;
&lt;h3 id="using-stringbuilder-to-replace-values"&gt;Using StringBuilder To Replace Values&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/using-stringbuilder-to-replace-values"&gt;https://khalidabuhakmeh.com/using-stringbuilder-to-replace-values&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StringBuilder を使用して文字列置換を行うことについて。&lt;/p&gt;
&lt;p&gt;StringBuilder を使用した場合、String の Replace で置換した場合よりもアロケーションを削減できる。&lt;/p&gt;
&lt;h3 id="system.diagnostics.process.getprocessesbyname-qiita"&gt;System.Diagnostics.Process.GetProcessesByNameのアロケーションに絶望した僕は、異世界で復讐することにした - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/gazf/items/085a93cabf10e745e227"&gt;https://qiita.com/gazf/items/085a93cabf10e745e227&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Process.GetProcessesByName をアロケーションの少ない形で再実装してみる試み。&lt;/p&gt;
&lt;h3 id="section-2"&gt;モジュール初期化子が呼ばれる順&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/6/init-order/"&gt;https://ufcpp.net/blog/2023/6/init-order/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;モジュール初期化子 (&lt;code&gt;ModuleInitializer&lt;/code&gt;) が複数ある場合の実行順序についての解説。&lt;/p&gt;
&lt;h3 id="writing-a.net-profiler-in-c-part-4"&gt;Writing a .NET profiler in C# — Part 4&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minidump.net/writing-a-net-profiler-in-c-part-4-c54df903b9ce"&gt;https://minidump.net/writing-a-net-profiler-in-c-part-4-c54df903b9ce&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# (NativeAOT) を使用して .NET プロファイラーを作成するシリーズの Part 4。&lt;/p&gt;
&lt;h3 id="swashbuckle.aspnetcore.cli-fileloadexception-xin9le.net"&gt;Swashbuckle.AspNetCore.Cli で FileLoadException が出る場合の対処 - xin9le.net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.xin9le.net/entry/2023/06/25/230203"&gt;https://blog.xin9le.net/entry/2023/06/25/230203&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swashbuckle.AspNetCore.Cli が Top-level Statements に対応していないため生成に失敗してしまう問題への対策。&lt;/p&gt;
&lt;p&gt;特別に呼び出される IHost を生成するメソッドを実装する方法について紹介している。&lt;/p&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;MessagePack-CSharp が個人のアカウントから Organization に移動したという話(と pre-release 版で Source Generator に対応した話)。&lt;/p&gt;
&lt;!-- https://twitter.com/neuecc/status/1674179032349306884?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;MessagePack for C#、neuecc配下から専用organizationに移行しました！なお直近のpre-release版ではついにSource Generator対応(Unityも対応済み！)しています。&lt;a href="https://t.co/E5XlxsMX9Z"&gt;https://t.co/E5XlxsMX9Z&lt;/a&gt;&lt;/p&gt;&amp;mdash; neuecc (&amp;#64;neuecc) &lt;a href="https://twitter.com/neuecc/status/1674179032349306884?ref_src=twsrc%5Etfw"&gt;June 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;.csproj で MapPath プロパティを設定することでスタックトレースに表示されるパスを変更できるという話。&lt;/p&gt;
&lt;!-- https://twitter.com/karenpaynemvp/status/1674152970668351488?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Did you know when logging exceptions you can remove the path to lines of code? &lt;a href="https://t.co/z2srKipRdf"&gt;pic.twitter.com/z2srKipRdf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Karen Payne MVP (&amp;#64;KarenPayneMVP) &lt;a href="https://twitter.com/KarenPayneMVP/status/1674152970668351488?ref_src=twsrc%5Etfw"&gt;June 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio 2022 17.7 Preview 3 に C# 12 の Inline Arrays がマージされた。&lt;/p&gt;
&lt;!-- https://twitter.com/jcouv/status/1673780113434091520?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We merged a preview C# 12 feature into VS 17.7 (preview 3): inline arrays.&lt;br&gt;&lt;br&gt;It provides a general-purpose and safe mechanism for declaring inline arrays within classes, structs, and interfaces using the `[InlineArray(size)]` attribute.&lt;a href="https://t.co/VxQNdB3pav"&gt;https://t.co/VxQNdB3pav&lt;/a&gt;&lt;/p&gt;&amp;mdash; Julien Couvreur (&amp;#64;jcouv) &lt;a href="https://twitter.com/jcouv/status/1673780113434091520?ref_src=twsrc%5Etfw"&gt;June 27, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/06/25/updates</id>
		<title>2023-06-25: grpc-dotnet v2.54.0, Microsoft Forms Service’s Journey to .NET 6, ReSharper &amp; Rider 2023.1.3</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/06/25/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-06-25T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="release-release-v2.54.0-grpcgrpc-dotnet"&gt;Release Release v2.54.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.54.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.54.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet (gRPC for .NET) v2.54.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは認証インターセプターでの CancellationToken のサポートをはじめいくつかの改善と不具合の修正が含まれている。&lt;/p&gt;
&lt;h3 id="microsoft-forms-services-journey-to.net-6.net-blog"&gt;Microsoft Forms Service’s Journey to .NET 6 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/microsoft-forms-services-journey-to-dotnet-6/"&gt;https://devblogs.microsoft.com/dotnet/microsoft-forms-services-journey-to-dotnet-6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Forms (アンケートを作成するサービス) のマイクロサービスを .NET 6 へ移行した事例について。&lt;/p&gt;
&lt;p&gt;Microsoft Forms は .NET Framework 4.7.2 の WebForms と Web API で構築されたマイクロサービスであったが、そのフロントエンド REST API とバックエンド REST API サービスを .NET 6 に移行したとのこと。&lt;/p&gt;
&lt;p&gt;記事では移行に向けたアプローチと導入の結果を紹介している。移行のアプローチとしては初めに HttpContext の排除、次に依存の更新とプロジェクトの netstandard2.0 や net472, net6.0 といったマルチターゲットビルドへの変更を行った。その際マルチターゲットビルドが増えることによる問題についても紹介している。導入の結果としても CPU 使用率とレスポンスのレイテンシーが大きく改善されたとのこと。&lt;/p&gt;
&lt;h3 id="resharper-and-rider-2023.1.3-another-set-of-bug-fixes-is-here-the.net-tools-blog"&gt;ReSharper and Rider 2023.1.3 – Another Set of Bug-fixes Is Here | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/23/rsrp-and-rd-2023-1-3-bug-fix/"&gt;https://blog.jetbrains.com/dotnet/2023/06/23/rsrp-and-rd-2023-1-3-bug-fix/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2023.1.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;ReSharper の Visual Studio でのパフォーマンス問題の修正、dotTrace と dotMemory のバグの修正、Rider のアップデータのクラッシュする問題やその他 IDE のバグの修正が含まれている。&lt;/p&gt;
&lt;h3 id="whats-new-in-npoi-2.6.1"&gt;What’s New in NPOI 2.6.1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://tonyqus.medium.com/whats-new-in-npoi-2-6-1-92b5f07c479c"&gt;https://tonyqus.medium.com/whats-new-in-npoi-2-6-1-92b5f07c479c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NPOI 2.6.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではエリアチャートやパイチャートのサポート追加をはじめとしていくつかの改善と不具合の修正が含まれている。&lt;/p&gt;
&lt;h3 id="get-ready-for-fsharpconf-2023.net-blog"&gt;Get ready for fsharpConf 2023! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/tune-in-for-fsharpconf-2023/"&gt;https://devblogs.microsoft.com/dotnet/tune-in-for-fsharpconf-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# のコミュニティーイベントの fsharpConf 2023 の紹介している記事。&lt;/p&gt;
&lt;p&gt;fsharpConf 2023 は6月26日に開催される F# のコミュニティーのバーチャルイベント。記事ではイベントのタイムテーブルを紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fsharpconf.com/"&gt;fsharpConf: The F# Community Virtual Conference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-the-new-t4-command-line-tool-for.net.net-blog"&gt;Introducing the New T4 Command-Line Tool for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/t4-command-line-tool-for-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/t4-command-line-tool-for-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 以降で利用可能となった .NET 向けの T4 のコマンドラインツールの紹介。&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 以降では .NET 6 で動作する新しいバージョンの T4 (Text Template) 実行のコマンドラインツールが同梱されるようになった。&lt;/p&gt;
&lt;p&gt;この新しいバージョンのツールは .NET 6 ランタイムで動作することで T4 のテンプレートからモダンな .NET のライブラリーを使用することができるようになる。現時点での制限として IDE から実行と MSBuild Task による実行はサポートされない。&lt;/p&gt;
&lt;p&gt;今後に向けてのフィードバックについても求めており、記事からリンクされたアンケートも用意されている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="cmstestfine-code-coverage-qiita"&gt;C#のMSTestでFine Code Coverageでカバレッジを計測する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/YoshijiGates/items/efc700574edbf8eb1ab2"&gt;https://qiita.com/YoshijiGates/items/efc700574edbf8eb1ab2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 Community でコードカバレッジを確認する方法について。&lt;/p&gt;
&lt;p&gt;記事では Fine Code Coverage 拡張機能を導入して確認する方法を紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=FortuneNgwenya.FineCodeCoverage2022"&gt;Fine Code Coverage - Visual Studio Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="how-to-build-a-flight-network-analysis-graph-based-asp.net-application-with-memgraph-c-and-d3.js"&gt;How to Build a Flight Network Analysis Graph-Based ASP.NET Application with Memgraph, C#, and D3.js&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/memgraph/how-to-build-a-flight-network-analysis-graph-based-asp-net-application-with-memgraph-c-and-d3-js-601d7e7a6bdb"&gt;https://medium.com/memgraph/how-to-build-a-flight-network-analysis-graph-based-asp-net-application-with-memgraph-c-and-d3-js-601d7e7a6bdb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Memgraph というインメモリのグラフ DB を使用し、ASP.NET アプリケーションで D3.js でビジュアライズするツールを構築するチュートリアル。&lt;/p&gt;
&lt;h3 id="c-chatgpt-api-ai-function-calling-qiita"&gt;C# で ChatGPT API： AI で作曲する (Function calling を使用) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/7b2e75fa916cd6d4d804"&gt;https://qiita.com/fsdg-adachi_h/items/7b2e75fa916cd6d4d804&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ChatGPT の API を活用し AI で作曲、 MIDI ファイルを作成する方法について。&lt;/p&gt;
&lt;p&gt;記事では ChatGPT の Function Calling を使用する形で実装している。&lt;/p&gt;
&lt;h3 id="parsing-websites-in-c-with-html-agility-pack-or-anglesharp"&gt;Parsing websites in C# with Html Agility Pack or AngleSharp&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/parsing-websites-in-c-with-html-agility-pack-or-anglesharp/"&gt;https://blog.elmah.io/parsing-websites-in-c-with-html-agility-pack-or-anglesharp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Html Agility Pack と AngleSharp を使用して Web サイトをスクレイピングする方法について。&lt;/p&gt;
&lt;h3 id="improved.net-debugging-experience-with-source-link-ndepend"&gt;Improved .NET Debugging Experience with Source Link - NDepend&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/improved-net-debugging-experience-with-source-link"&gt;https://blog.ndepend.com/improved-net-debugging-experience-with-source-link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Link による .NET のデバッグ体験の向上についての紹介。&lt;/p&gt;
&lt;h3 id="hash-signing-and-signature-validation-in-c-using-the-yubikey.net-sdk"&gt;Hash Signing and Signature Validation in C# Using the YubiKey .NET SDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;matt.heimlich/hash-signing-and-signature-validation-in-c-using-the-yubikey-net-sdk-dbaa227255dd"&gt;https://medium.com/&amp;#64;matt.heimlich/hash-signing-and-signature-validation-in-c-using-the-yubikey-net-sdk-dbaa227255dd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;YubiKey の .NET SDK を使用して YubiKey を使用したハッシュ署名と署名の検証を行う方法について。&lt;/p&gt;
&lt;h3 id="how-to-build-a-shared-library-in-java-and-call-it-from.net-code"&gt;How to Build a Shared Library in Java and Call it From .NET Code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;sixpeteunder/how-to-build-a-shared-library-in-java-and-call-it-from-dotnet-code-b47c22300456"&gt;https://medium.com/&amp;#64;sixpeteunder/how-to-build-a-shared-library-in-java-and-call-it-from-dotnet-code-b47c22300456&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET から共有ライブラリーとしてビルドされた Java のライブラリーを呼び出す方法について。&lt;/p&gt;
&lt;p&gt;記事では GraalVM でネイティブライブラリーにビルドされたものを C 言語によるラッパーを通して .NET から呼び出す形を紹介している。&lt;/p&gt;
&lt;h3 id="caws-lambdagithub-actions-qiita"&gt;C#で作成したAWS Lambdaの関数をGitHub Actionsで自動デプロイする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/shin4488/items/20660044f6c86cfdead2"&gt;https://qiita.com/shin4488/items/20660044f6c86cfdead2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET の AWS Lambda 関数を GitHub Actions からデプロイする方法について。&lt;/p&gt;
&lt;h3 id="ncmbcmauixamarin-sdk-qiita"&gt;NCMBのC#（MAUI/Xamarin） SDKがプッシュ通知の操作に対応しました - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/goofmint/items/585b63dcb6374382afb1"&gt;https://qiita.com/goofmint/items/585b63dcb6374382afb1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ニフクラ mobile backend (NCMB) のコミュニティーによる SDK でプッシュ通知の操作に対応したことと使い方について。&lt;/p&gt;
&lt;h3 id="xiao-esp32c3nanoframework-adc"&gt;XIAO ESP32C3で始めるnanoFramework &lt;sub&gt;ADC&lt;/sub&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/matsujirushi/articles/8bdbccd464d571"&gt;https://zenn.dev/matsujirushi/articles/8bdbccd464d571&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Seeed Studio XIAO ESP32C3 で nanoFramework を使用して ADC の値を読み取る方法について。&lt;/p&gt;
&lt;h3 id="xamarin.mac.net-7"&gt;Xamarin.Macに別れを告げ、.NET 7に移行した話&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/dogfortune/articles/51d1b2aa17be27"&gt;https://zenn.dev/dogfortune/articles/51d1b2aa17be27&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Xamarin.Mac から .NET 7 に移行作業でのポイントをいくつかまとめた記事。&lt;/p&gt;
&lt;h3 id="net-on-power-4-mariadbodbc-qiita"&gt;.NET on Power を動かしてみた話 #4 - MariaDBへODBCドライバを使用して接続 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Nakaji1106/items/429034b3707c65c4d6ff"&gt;https://qiita.com/Nakaji1106/items/429034b3707c65c4d6ff&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Power アーキテクチャーで .NET を動かし、MariaDB に ODBC ドライバーで接続してみたという記事。&lt;/p&gt;
&lt;h3 id="microsoft-store-qiita"&gt;アプリをMicrosoft Storeに提出してみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/dhq_boiler/items/781b2ef98ce26a090566"&gt;https://qiita.com/dhq_boiler/items/781b2ef98ce26a090566&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アプリケーションを Microsoft Store に提出し、公開されるまでの流れについての解説。&lt;/p&gt;
&lt;h3 id="reset-passwords-in-asp.net-core-using-delegated-permissions-and-microsoft-graph"&gt;Reset passwords in ASP.NET Core using delegated permissions and Microsoft Graph&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2023/06/19/reset-passwords-in-asp-net-core-using-delegated-permissions-and-microsoft-graph/"&gt;https://damienbod.com/2023/06/19/reset-passwords-in-asp-net-core-using-delegated-permissions-and-microsoft-graph/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションから Microsoft Graph を使用してユーザーのパスワードをリセットする方法について。&lt;/p&gt;
&lt;h3 id="getting-the.net-desktop-runtime-installed-with-a-custom-runtime-checker-and-installer"&gt;Getting the .NET Desktop Runtime Installed with a Custom Runtime Checker and Installer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2023/Jun/21/Creating-a-Runtime-Checker-and-Installer-for-a-NET-Core-WPF-Application"&gt;https://weblog.west-wind.com/posts/2023/Jun/21/Creating-a-Runtime-Checker-and-Installer-for-a-NET-Core-WPF-Application&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET ランタイムのインストール状況をチェックし、インストールするカスタムインストーラーについて。&lt;/p&gt;
&lt;p&gt;記事ではランタイムの配布について、自己完結型配布について、共有ランタイムについて、インストーラーの実装解説といった内容が解説されている。&lt;/p&gt;
&lt;h3 id="wsl2.net-sdk-kkamegawas-weblog"&gt;WSL2の .NET SDKが認識されない現象を修復する - kkamegawa's weblog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kkamegawa.hatenablog.jp/entry/2023/06/24/191525"&gt;https://kkamegawa.hatenablog.jp/entry/2023/06/24/191525&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WSL 2 で .NET SDK が正常に認識されなくなった場合のトラブルシューティングについて。&lt;/p&gt;
&lt;h3 id="validating-nested-dataannotation-ioptions-recursively-with-minivalidation"&gt;Validating nested DataAnnotation IOptions recursively with MiniValidation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/validating-nested-dataannotation-options-recursively-with-minivalidation/"&gt;https://andrewlock.net/validating-nested-dataannotation-options-recursively-with-minivalidation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IOptions の検証として標準の &lt;code&gt;ValidateDataAnnotations&lt;/code&gt; を使用した場合、ネストされた検証が行われない問題を回避する方法について。&lt;/p&gt;
&lt;p&gt;記事では MiniValidation を使用して検証する方法を紹介している。&lt;/p&gt;
&lt;h3 id="windowswixtoolsetv4-qiita"&gt;Windowsインストーラーを作れるwixtoolsetの概要(v4) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/194888be042e5c4c32ad"&gt;https://qiita.com/skitoy4321/items/194888be042e5c4c32ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WiX v4 についての概要をまとめた記事。WiX で使用されるファイルやビルド方法といったことを解説している。&lt;/p&gt;
&lt;h3 id="c-12.0-c-c"&gt;C# 12.0 の新機能 | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/study/csharp/cheatsheet/ap_ver12/"&gt;https://ufcpp.net/study/csharp/cheatsheet/ap_ver12/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 (現時点ではプレビュー) で導入される新機能の解説。&lt;/p&gt;
&lt;h3 id="net-c-c"&gt;.NET の文字列比較でカルチャー未指定を検知する | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/6/ca-specify-culture/"&gt;https://ufcpp.net/blog/2023/6/ca-specify-culture/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文字列比較でカルチャーが未指定の場合に警告/エラーとするようにして事前に気づけるようにする方法について。&lt;/p&gt;
&lt;p&gt;記事では .NET 5 で導入された NetAnalyzers と .editorconfig を使用してエラーにする手法を紹介している。&lt;/p&gt;
&lt;h3 id="announcing-create-a-pull-request-in-visual-studio-visual-studio-blog"&gt;Announcing Create a Pull Request in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/create-a-pull-request-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/create-a-pull-request-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.7 preview 2 で追加された Pull request の作成機能の紹介。&lt;/p&gt;
&lt;h3 id="how-to-detect-heap-allocations"&gt;How to detect heap allocations&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bartwullems.blogspot.com/2023/06/how-to-detect-heap-allocations.html"&gt;https://bartwullems.blogspot.com/2023/06/how-to-detect-heap-allocations.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ヒープアロケーションを検出する方法について。&lt;/p&gt;
&lt;p&gt;記事では Visual Studio のプロファイラーと ClrHeapAllocationAnalyzer を使用したコード上での検出を紹介している。&lt;/p&gt;
&lt;h3 id="treat-your.net-minimal-api-endpoint-as-the-application-layer"&gt;Treat your .NET Minimal API Endpoint as the application layer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://timdeschryver.dev/blog/treat-your-net-minimal-api-endpoint-as-the-application-layer"&gt;https://timdeschryver.dev/blog/treat-your-net-minimal-api-endpoint-as-the-application-layer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core の Minimal API をアーキテクチャー上のアプリケーション層としてあつかう構成について。&lt;/p&gt;
&lt;h3 id="how-does-list-work-under-the-hood-in.net"&gt;How does List work under the hood in .NET?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/06e2c8e8-0119-4e8d-9227-3cb922a8c916"&gt;https://steven-giesel.com/blogPost/06e2c8e8-0119-4e8d-9227-3cb922a8c916&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; の内部の実装についての簡単な解説。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Visual Studio 2022 17.6 では GC や CPU が高負荷な状況をテレメトリーで見るようになったという話。&lt;/p&gt;
&lt;p&gt;続くスレッドではどのような体制でどのように活用できているのかを説明している。&lt;/p&gt;
&lt;!-- https://twitter.com/davkean/status/1672295235026829312?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In Visual Studio 17.6, we rolled out new a couple of new telemetry systems that capture high-GC and high-CPU usage within Visual Studio. This supplements our existing crash, hang, freeze, thread pool &amp;amp; memory usage performance &amp;amp; reliability telemetry.&lt;/p&gt;&amp;mdash; David Kean (&amp;#64;davkean) &lt;a href="https://twitter.com/davkean/status/1672295235026829312?ref_src=twsrc%5Etfw"&gt;June 23, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/06/18/updates</id>
		<title>2023-06-18: .NET 8 Preview 5, Visual Studio 2022 17.7 Preview 2, Polly 8.0.0-alpha.1, .NET 7.0.7 &amp; 6.0.18</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/06/18/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-06-18T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-8-preview-5.net-blog"&gt;Announcing .NET 8 Preview 5 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-5/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 5 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SDK: メトリクス API の改善
&lt;ul&gt;
&lt;li&gt;Dependency Injection (DI) フレンドリーなメトリクス API&lt;/li&gt;
&lt;li&gt;タグ付きのメーターやインストルメントの作成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SDK: .NET SDK の一部となったソースリンク&lt;/li&gt;
&lt;li&gt;SDK: 新しい .NET ライブラリーのアナライザー&lt;/li&gt;
&lt;li&gt;SDK: Linux での self-contained ビルド&lt;/li&gt;
&lt;li&gt;SDK: self-contained の非デフォルト化&lt;/li&gt;
&lt;li&gt;Alpine ASP.NET Core Docker コンポジットイメージ
&lt;ul&gt;
&lt;li&gt;アセンブリーを単一のバイナリーにまとめる新しい形式(コンポジット)の Ready-to-Run で ASP.NET Core をコンパイルすることでサイズの削減などが行える半面、複数のバージョンを取り扱うことはできなくなる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ランタイムホストはデフォルトで RID グラフを使用せず、RID 固有のアセットを決定&lt;/li&gt;
&lt;li&gt;Codegen
&lt;ul&gt;
&lt;li&gt;Dynamic PGO のデフォルト化&lt;/li&gt;
&lt;li&gt;GC 型の ThreadStatic フィールドアクセスの最適化&lt;/li&gt;
&lt;li&gt;Arm64, AVX-512&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C# Dev Kit 拡張と VSCode での生産性の向上&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-17.7-preview-2-is-here-visual-studio-blog"&gt;Visual Studio 2022 17.7 Preview 2 is here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-preview-2-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-7-preview-2-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.7 Preview 2 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDE 生産性とパフォーマンス
&lt;ul&gt;
&lt;li&gt;ファイルの比較の改善&lt;/li&gt;
&lt;li&gt;Pull Request の作成&lt;/li&gt;
&lt;li&gt;複数ブランチグラフサポートの強化&lt;/li&gt;
&lt;li&gt;パラレルスタックのフィルタリング&lt;/li&gt;
&lt;li&gt;F5 の速度の改善&lt;/li&gt;
&lt;li&gt;編集速度の最適化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET 開発
&lt;ul&gt;
&lt;li&gt;外部 .NET コードの自動デコンパイル&lt;/li&gt;
&lt;li&gt;CPU 使用率の新しい自動インサイト&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;モダン C++ とゲーム開発
&lt;ul&gt;
&lt;li&gt;Build Insights for C++&lt;/li&gt;
&lt;li&gt;Unreal Engine Blueprint Find All References&lt;/li&gt;
&lt;li&gt;Doxygen オーバーロード解決の強化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ クロスプラットフォームと組み込み開発
&lt;ul&gt;
&lt;li&gt;リモートファイルのアップデート&lt;/li&gt;
&lt;li&gt;WSL 自動取得&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JavaScript と TypeScript 開発
&lt;ul&gt;
&lt;li&gt;React と Vue の Vite 新規プロジェクト作成サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;エンタープライズ管理
&lt;ul&gt;
&lt;li&gt;標準ユーザーによる Visual Studio のアップデートと更新&lt;/li&gt;
&lt;li&gt;インストーラーの「利用可能」タブへの管理者によるプライベートなレイアウト追加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-5.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 5 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-5/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 5 での ASP.NET Core のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ASP.NET Core デバッグ体験の向上
&lt;ul&gt;
&lt;li&gt;HttpContext, HttpRequest, HttpRequest, ClaimsPrincipal に DebuggerDisplay 属性がついた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;サーバーとミドルウェア
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IHttpSysRequestTimingFeature&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ITlsHandshakeFeature&lt;/code&gt; での SNI ホスト名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IExceptionHandler&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Blazor
&lt;ul&gt;
&lt;li&gt;新しい Blazor Web アプリプロジェクトテンプレート&lt;/li&gt;
&lt;li&gt;Blazor ルーターのエンドポイントルーティングとの統合&lt;/li&gt;
&lt;li&gt;Blazor サーバーの個別コンポーネントの対話の有効化&lt;/li&gt;
&lt;li&gt;Webcil パッケージの強化&lt;/li&gt;
&lt;li&gt;Blazor Content Security Policy (CSP) 互換性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API オーサリング
&lt;ul&gt;
&lt;li&gt;ジェネリック属性のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SignalR
&lt;ul&gt;
&lt;li&gt;SignalR シームレス再接続&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Native AOT
&lt;ul&gt;
&lt;li&gt;AsParameters とコンパイル時生成 Minimal APIs の自動メタデータ生成のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;認証と認可
&lt;ul&gt;
&lt;li&gt;ASP.NET Core SPA テンプレートの認証のアップデート&lt;/li&gt;
&lt;li&gt;AuthrizationBuilder の推奨使用方法に関する新しいアナライザー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-maui-in.net-8-preview-5.net-blog"&gt;Announcing .NET MAUI in .NET 8 Preview 5 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-5/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 5 での .NET MAUI のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iOS キーボードスクロール&lt;/li&gt;
&lt;li&gt;テストの強化&lt;/li&gt;
&lt;li&gt;パフォーマンスの改善&lt;/li&gt;
&lt;li&gt;バグ修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-8.0.0-alpha.1-app-vnextpolly-github"&gt;Release 8.0.0-alpha.1 · App-vNext/Polly · GitHub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.0.0-alpha.1"&gt;https://github.com/App-vNext/Polly/releases/tag/8.0.0-alpha.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polly 8.0.0-alpha.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;Polly v8 では API を大きく変更し、オーバーヘッドの少ない新しい API で構築される。このリリースはその最初のプレビューリリースとなる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/App-vNext/Polly/issues/1048"&gt;Polly v8 - Architectural changes · Issue #1048 · App-vNext/Polly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thepollyproject.org/2023/03/03/we-want-your-feedback-introducing-polly-v8/"&gt;We want your feedback! Introducing Polly v8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-framework-june-2023-security-and-quality-rollup.net-blog"&gt;.NET Framework June 2023 Security and Quality Rollup - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-june-2023-security-and-quality-rollup/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-june-2023-security-and-quality-rollup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework の2023年6月のセキュリティー修正と累積アップデートがリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは6つのセキュリティー修正と複数の不具合修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2023-24897: リモートコード実行 (MSDIA SDK による PDB が引き起こすヒープオーバーフロー)&lt;/li&gt;
&lt;li&gt;CVE-2023-29326: リモートコード実行 (WPF の BAML による特権昇格)&lt;/li&gt;
&lt;li&gt;CVE-2023-24895: リモートコード実行 (WPF XAML パーサーの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-24936: 特権昇格 (DataSet や DataTable の XML デシリアライズの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-24936: サービス拒否 (AIAのクライアント証明書取得プロセスの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-29330: サービス拒否 (X509Certificate2 ファイルのファイルハンドリングの脆弱性)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-june-2023-updates.net-7.0.7.net-6.0.18.net-blog"&gt;.NET June 2023 Updates – .NET 7.0.7, .NET 6.0.18 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/june-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/june-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7.0.7, 6.0.18 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは様々なセキュリティー修正といくつかの不具合修正や品質向上の修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2023-24895: リモートコード実行 (XAML Frame 要素のハンドリングの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-24897: リモートコード実行 (MSDIA SDK による PDB が引き起こすヒープオーバーフロー)&lt;/li&gt;
&lt;li&gt;CVE-2023-24936: 特権昇格 (DataSet や DataTable の XML デシリアライズの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-29330: サービス拒否 (X509Certificate2 ファイルのファイルハンドリングの脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-29337: NuGet クライアントリモートコード実行 (レースコンディションによるシンボリック攻撃可能な脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-32032: サービス拒否 (Tarファイルの展開の脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-33126: サービス拒否 (クラッシュとスタックトレースのシナリオ中の脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-33128: サービス拒否 (P/Invoke の Source Generator の生成コードのメモリ解放の脆弱性)&lt;/li&gt;
&lt;li&gt;CVE-2023-33135: サービス拒否 (.NET SDK のツール復元での特権昇格の脆弱性)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="introducing-creatorkit-servicestack"&gt;Introducing CreatorKit - ServiceStack&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://servicestack.net/posts/creatorkit"&gt;https://servicestack.net/posts/creatorkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で実装された Mailchimp のセルフホスト代替ソリューションとなる CreatorKit がリリースされた。&lt;/p&gt;
&lt;p&gt;メーリングリストやニュースレターの購読管理、カスタマイズ可能なメール送信といったことが行え、管理ダッシュボードも含めた一式のツールとなっている。&lt;/p&gt;
&lt;p&gt;ServiceStack に含まれる製品で、個人やオープンソースプロジェクトでは無料で利用できる。&lt;/p&gt;
&lt;h3 id="release-2.6.116-stackexchangestackexchange.redis"&gt;Release 2.6.116 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.116"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.116&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.6.116 がリリースされた。&lt;/p&gt;
&lt;p&gt;不具合の修正と Native AOT サポートのためのアップデートなどが含まれている。&lt;/p&gt;
&lt;h3 id="blazor-essentials-new-guide-tutorial-the.net-tools-blog"&gt;Blazor Essentials – New Guide Tutorial | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/13/blazor-essentials-new-guide-tutorial/"&gt;https://blog.jetbrains.com/dotnet/2023/06/13/blazor-essentials-new-guide-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による Blazor の入門ガイドコンテンツが公開となった。&lt;/p&gt;
&lt;p&gt;Blazor について、から、フォームの実装、JavaScript との相互運用、パブリッシュといった部分をカバーする。&lt;/p&gt;
&lt;h3 id="releasing.net-framework-4.8.1-to-the-release-preview-channel"&gt;Releasing .NET Framework 4.8.1 to the Release Preview Channel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blogs.windows.com/windows-insider/2023/06/13/releasing-net-framework-4-8-1-to-the-release-preview-channel/"&gt;https://blogs.windows.com/windows-insider/2023/06/13/releasing-net-framework-4-8-1-to-the-release-preview-channel/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework 4.8.1 が Windows Insider の Release Preview チャンネル向けにリリースされた。&lt;/p&gt;
&lt;p&gt;Windows 11 21H2, Windows 10 21H2, 22H2 の Insider Preview Release Preview チャンネルに配信される。&lt;/p&gt;
&lt;p&gt;.NET Framework 4.8.1 には Arm64 アーキテクチャー対応やアクセシビリティーをはじめとする改善の含まれている。&lt;/p&gt;
&lt;h3 id="rider-2023.2-eap-5-improved-support-for-c-better-performance-profiling-and-more.the.net-tools-blog"&gt;Rider 2023.2 EAP 5: Improved Support for C#, Better Performance Profiling, and More. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/16/rider-2023-2-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2023/06/16/rider-2023-2-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.2 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンではラムダのデフォルトパラメーターのサポート、Disposable のインスペクションの改善、ターミナルの WinPTY から ConPTY への移行、dotTrace のスレッドによるグループ化表示などが含まれている。&lt;/p&gt;
&lt;h3 id="resharper-2023.2-eap-5-improved-control-over-object-disposal-support-for-default-lambda-parameters-and-c23-standard-library-modules.the.net-tools-blog"&gt;ReSharper 2023.2 EAP 5: Improved Control Over Object Disposal, Support for Default Lambda Parameters, and C++23 Standard Library Modules. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/16/resharper-2023-2-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2023/06/16/resharper-2023-2-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.2 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンではラムダのデフォルトパラメーターのサポート、Disposable のインスペクションの改善、C++ での C++ 23 標準ライブラリーのサポート、dotTrace のスレッドによるグループ化表示などが含まれている。&lt;/p&gt;
&lt;h3 id="introducing-the-microsoft-store-channel-on-discord-ifdef-windows"&gt;Introducing the Microsoft Store channel on Discord - #ifdef Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/ifdef-windows/introducing-the-microsoft-store-channel-on-discord/"&gt;https://devblogs.microsoft.com/ifdef-windows/introducing-the-microsoft-store-channel-on-discord/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Discord に #microsoft-store チャンネルが開設された。&lt;/p&gt;
&lt;p&gt;このチャンネルは UWP コミュニティーサーバーにあり、Microsoft Store アプリやサイト、パートナーセンター、MSIX パッケージやインストーラに関するトピックについて話し合うことのできる。&lt;/p&gt;
&lt;p&gt;コミュニティーでのディスカッションや Microsoft のチームとの交流などが行えるとのこと。&lt;/p&gt;
&lt;h3 id="release-v1.0-windows-maps-introducing-the-maps-control-for-windows-communitytoolkitmaui"&gt;Release v1.0 Windows Maps: Introducing the Maps control for Windows · CommunityToolkit/Maui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/CommunityToolkit/Maui/releases/tag/1.0.0-maps"&gt;https://github.com/CommunityToolkit/Maui/releases/tag/1.0.0-maps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Community Toolkit で Windows 向けの Map コントロールがリリースされた。&lt;/p&gt;
&lt;p&gt;Windows はプラットフォームの機能としてマップを持たず .NET MAUI の Map コントロールがサポートされていないため、コミュニティー実装として Bing を WebView2 でホストする形の Map コントロールを提供する。&lt;/p&gt;
&lt;h3 id="public-preview-app-service-support-for.net-8-azure-updates-microsoft-azure"&gt;Public Preview: App Service support for .NET 8 | Azure updates | Microsoft Azure&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://azure.microsoft.com/en-us/updates/public-preview-app-service-support-for-net-8/"&gt;https://azure.microsoft.com/en-us/updates/public-preview-app-service-support-for-net-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure App Service で .NET 8 の早期アクセスについてのアナウンス。&lt;/p&gt;
&lt;p&gt;Azure App Service (Windows および Linux) での .NET 8 の早期アクセスによる利用が可能となる。&lt;/p&gt;
&lt;h3 id="configure-visual-studio-policies-using-microsoft-endpoint-manager-intune-visual-studio-blog"&gt;Configure Visual Studio policies using Microsoft Endpoint Manager (Intune) - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/configure-visual-studio-policies-using-microsoft-endpoint-manager-intune/"&gt;https://devblogs.microsoft.com/visualstudio/configure-visual-studio-policies-using-microsoft-endpoint-manager-intune/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Endpoint Manager (Intune) の設定カタログに Visual Studio のグローバルポリシーが追加された。&lt;/p&gt;
&lt;p&gt;これにより Intune から Visual Studio の構成オプションを展開するにあたり ADMX の手動アップロードが必要だったものが、Intune から直接管理できるようになる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="asp.net.net-framework-session-state-provider"&gt;ASP.NET (.NET Framework) 向けの各 Session State Provider が大規模アップデート - しばやん雑記&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.shibayan.jp/entry/20230618/1687080471"&gt;https://blog.shibayan.jp/entry/20230618/1687080471&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET (.NET Framework) 向けの Session State Provider の更新についてのまとめ。&lt;/p&gt;
&lt;p&gt;ASP.NET 向けの Session State Provider として SQL Server と Cosmos DB、Redis を使用するものがありそれぞれ今年に入って更新されたポイントについて詳しく解説している。&lt;/p&gt;
&lt;h3 id="vscode-c-aws-lambdaclambda-function-qiita"&gt;【VSCode, C#, AWS Lambda】C#で作成したLambda Functionをローカルで動作確認する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/shin4488/items/a01fdf54daf626cb8742"&gt;https://qiita.com/shin4488/items/a01fdf54daf626cb8742&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で実装した AWS Lambda のファンクションをローカルの Visual Studio Code で動作確認する方法について。&lt;/p&gt;
&lt;h3 id="running-large-language-models-locally-your-own-chatgpt-like-ai-in-c"&gt;Running Large Language Models locally – Your own ChatGPT-like AI in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/maartenba/running-large-language-models-locally-your-own-chatgpt-like-ai-in-c-jco"&gt;https://dev.to/maartenba/running-large-language-models-locally-your-own-chatgpt-like-ai-in-c-jco&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LLamaSharp を使用してローカルの環境で ChatGPT のような LLM による AI チャットを実装する方法について。&lt;/p&gt;
&lt;h3 id="compile-f-to-rust"&gt;Compile F# to Rust 🦀&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jkone27-3876.medium.com/compile-f-to-rust-22cf5aa9021"&gt;https://jkone27-3876.medium.com/compile-f-to-rust-22cf5aa9021&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# のコードを Rust に変換して実行する方法について。&lt;/p&gt;
&lt;p&gt;Fable を使用することで F# のコードを Rust のコードに変換して実行する方法を紹介している。&lt;/p&gt;
&lt;h3 id="implementing-dapr-state-management-in-asp.net-core-web-apis"&gt;Implementing Dapr State Management in ASP.NET Core Web APIs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/willvelida/implementing-dapr-state-management-in-aspnet-core-web-apis-42lk"&gt;https://dev.to/willvelida/implementing-dapr-state-management-in-aspnet-core-web-apis-42lk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dapr の状態管理を利用して ASP.NET Core Web API アプリケーションを実装する方法について。&lt;/p&gt;
&lt;h3 id="speed-up-your-app-search-engine-using-sonic"&gt;Speed up your app search engine using Sonic&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;jesielpadilha.ti/speed-up-your-app-search-engine-using-sonic-a4ae788c4d6a"&gt;https://medium.com/&amp;#64;jesielpadilha.ti/speed-up-your-app-search-engine-using-sonic-a4ae788c4d6a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;セルフホストの検索エンジン Sonic を使用して検索、追加などを実装する方法について。&lt;/p&gt;
&lt;h3 id="cchatgpt-api-2-readablestream-qiita"&gt;C#でChatGPT APIを触りたい 2 ~ ReadableStream ~ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/TellMin/items/9059423600a6897cef0c"&gt;https://qiita.com/TellMin/items/9059423600a6897cef0c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ChatGPT API のレスポンスをストリーム(単語単位で徐々に返答が返ってくる形式)で扱う方法について。&lt;/p&gt;
&lt;h3 id="how-to-implement-a-soft-delete-strategy-with-entity-framework-core-the.net-tools-blog"&gt;How to Implement a Soft Delete Strategy with Entity Framework Core | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/06/14/how-to-implement-a-soft-delete-strategy-with-entity-framework-core/"&gt;https://blog.jetbrains.com/dotnet/2023/06/14/how-to-implement-a-soft-delete-strategy-with-entity-framework-core/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で論理削除を実装する方法について。&lt;/p&gt;
&lt;p&gt;記事ではインターセプターによる削除処理のフック、自動的なクエリーフィルターといった手法を紹介している。&lt;/p&gt;
&lt;h3 id="bulkcopyc-sqlclient"&gt;食わず嫌いのBulkCopy（C＃ SqlClient実装例）&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/panda728/articles/55f45ba18cf29f"&gt;https://zenn.dev/panda728/articles/55f45ba18cf29f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SqlClient (SQL Server) での BulkCopy についての簡単な紹介。&lt;/p&gt;
&lt;h3 id="using-project-orleans-to-build-actor-based-solutions-on-the.net-platform"&gt;Using Project Orleans to Build Actor-Based Solutions on the .NET platform&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/articles/project-orleans-actor-based/"&gt;https://www.infoq.com/articles/project-orleans-actor-based/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Orleans についての紹介と実装、メリットについての紹介。&lt;/p&gt;
&lt;h3 id="asp.net-core-qiita"&gt;ASP.NET Core でローカルにシークレットをサクッと用意する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/higege-amdeker/items/f403cb10b4c8337a7980"&gt;https://qiita.com/higege-amdeker/items/f403cb10b4c8337a7980&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーション開発時にローカルでのみ保持するシークレットを取り扱うユーザーシークレットについて。&lt;/p&gt;
&lt;h3 id="supporting-legacy-browsers-and-samesite-cookies-without-useragent-sniffing-in-asp.net-core"&gt;Supporting legacy browsers and SameSite cookies without UserAgent sniffing in ASP.NET Core.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/supporting-legacy-browsers-and-samesite-cookies-without-useragent-sniffing-in-aspnetcore/"&gt;https://andrewlock.net/supporting-legacy-browsers-and-samesite-cookies-without-useragent-sniffing-in-aspnetcore/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;古いブラウザーで SameSite クッキーをユーザーエージェントによらずサポートするためのテクニック。&lt;/p&gt;
&lt;h3 id="asp.net-core-8-expose-timestamp-data-request-processing-with-ihttpsysrequesttimingfeature-when-using-http.sys"&gt;ASP.NET Core 8: Expose Timestamp data request processing with IHttpSysRequestTimingFeature when using HTTP.sys&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://anthonygiretti.com/2023/06/16/asp-net-core-8-expose-timestamp-data-request-processing-with-ihttpsysrequesttimingfeature-when-using-http-sys/"&gt;https://anthonygiretti.com/2023/06/16/asp-net-core-8-expose-timestamp-data-request-processing-with-ihttpsysrequesttimingfeature-when-using-http-sys/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core で追加された IHttpSysRequestTimingFeature を使用して HTTP.sys 環境下でリクエストのタイムスタンプを取得する方法について。&lt;/p&gt;
&lt;h3 id="kubernetes-mutating-admission-webhook-for-dotnet-monitor"&gt;Kubernetes mutating admission webhook for dotnet-monitor?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.poppastring.com/blog/kubernetes-mutating-admission-webhook-for-dotnetmonitor"&gt;https://www.poppastring.com/blog/kubernetes-mutating-admission-webhook-for-dotnetmonitor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dotnet-monitor を Kubernetes の admission webhook でサポートするかどうかフィードバックを求めている。&lt;/p&gt;
&lt;h3 id="c-valuetuple"&gt;(C#) ValueTuple のサイズとレイアウト - ネコのために鐘は鳴る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ikorin2.hatenablog.jp/entry/2023/06/14/184523"&gt;https://ikorin2.hatenablog.jp/entry/2023/06/14/184523&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ValueTuple のメモリー上のサイズとレイアウトについて。&lt;/p&gt;
&lt;p&gt;ValueTuple は &lt;code&gt;StructLayout(LayoutKind.Auto)&lt;/code&gt; が指定されているため、サイズとレイアウトは一定ではないことについて。&lt;/p&gt;
&lt;h3 id="installing-visual-studio-from-an-internal-website-visual-studio-blog"&gt;Installing Visual Studio from an Internal Website - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/installing-visual-studio-from-an-internal-website/"&gt;https://devblogs.microsoft.com/visualstudio/installing-visual-studio-from-an-internal-website/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;内部 Web サイトから Visual Studio をインストールする方法について。&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 以降ではイントラネットのサイトから Visual Studio のレイアウトを配布出来るようになったことについての解説。&lt;/p&gt;
&lt;h3 id="qt.net-hosting.net-code-in-a-qt-application-13"&gt;Qt/.NET — Hosting .NET code in a Qt application (1/3)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.qt.io/blog/qt/.net-hosting-.net-code-in-a-qt-application"&gt;https://www.qt.io/blog/qt/.net-hosting-.net-code-in-a-qt-application&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Qt アプリケーションで .NET をホストする方法について。&lt;/p&gt;
&lt;p&gt;記事では Qt/.NET を使用して .NET のコードをホストすることで Qt アプリケーションから .NET のコードを呼び出す方法やラッパーの実装方法について紹介している。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
</feed>