<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>/</id>
	<title>WeekRef.NET</title>
	<author>
		<name>Mayuki Sawatari</name>
	</author>
	<link rel="self" href="/" />
	<rights>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</rights>
	<updated>2023-04-15T10:04:04Z</updated>
	<logo>/img/logo.png</logo>
	<subtitle>.NET 関連の情報をほぼ週刊配信</subtitle>
	<entry>
		<id>/2023/04/15/updates</id>
		<title>2023-04-15: .NET 8 Preview 3, .NET 7.0.5 &amp; 6.0.16, Windows App SDK v1.3.0</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/04/15/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-04-15T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-8-preview-3.net-blog"&gt;Announcing .NET 8 Preview 3 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-3/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 がリリースされた。&lt;/p&gt;
&lt;p&gt;記事では次の機能や改善点について紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SDK
&lt;ul&gt;
&lt;li&gt;簡略化された出力先パス&lt;/li&gt;
&lt;li&gt;dotnet workload clean コマンド&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ランタイム
&lt;ul&gt;
&lt;li&gt;ValidateOptionsResultBuilder&lt;/li&gt;
&lt;li&gt;構成バインディングソースジェネレーター&lt;/li&gt;
&lt;li&gt;ネイティブコード生成の改善&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;コンテナー
&lt;ul&gt;
&lt;li&gt;複数のプラットフォームのイメージのビルド&lt;/li&gt;
&lt;li&gt;非 root ユーザー UID 値の環境変数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-3.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 3 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-3/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 での ASP.NET Core のアップデートについての紹介。&lt;/p&gt;
&lt;p&gt;このリリースでは ASP.NET Core の Native AOT でのサポートとサポート範囲/互換性、テンプレートなどについてをはじめとして、様々な新機能を紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Native AOT での ASP.NET Core サポート&lt;/li&gt;
&lt;li&gt;Blazor でのサーバーサイドレンダリング&lt;/li&gt;
&lt;li&gt;ASP.NET Core の外で Razor コンポーネントのレンダリング&lt;/li&gt;
&lt;li&gt;Blazor でのセクションのサポート&lt;/li&gt;
&lt;li&gt;Blazor Server の回線アクティビティのモニター&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly アプリケーションでの SIMD のデフォルト有効化&lt;/li&gt;
&lt;li&gt;リクエストタイムアウト&lt;/li&gt;
&lt;li&gt;ショートサーキットルート&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-maui-in.net-8-preview-3.net-blog"&gt;Announcing .NET MAUI in .NET 8 Preview 3 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-3/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-preview-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 3 での .NET MAUI のアップデートについての紹介。&lt;/p&gt;
&lt;p&gt;このリリースでは品質の向上やメモリー管理の改善などが行われている。&lt;/p&gt;
&lt;h3 id="check-out-new-c-12-preview-features.net-blog"&gt;Check out new C# 12 preview features! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/check-out-csharp-12-preview/"&gt;https://devblogs.microsoft.com/dotnet/check-out-csharp-12-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のプレビュー機能の紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非レコードなクラスと構造体でのプライマリーコンストラクター&lt;/li&gt;
&lt;li&gt;あらゆる型に対する using エイリアス&lt;/li&gt;
&lt;li&gt;ラムダ式のパラメーターのデフォルト値&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-april-2023-updates.net-7.0.5.net-6.0.16.net-blog"&gt;.NET April 2023 Updates – .NET 7.0.5, .NET 6.0.16 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/april-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/april-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7.0.5 および 6.0.16 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースにはセキュリティー修正は含まれず、不具合の修正や小さな改善が含まれている。&lt;/p&gt;
&lt;h3 id="v1.3.0-stable-channel-release-notes-for-the-windows-app-sdk-windows-apps"&gt;v1.3.0 - Stable channel release notes for the Windows App SDK - Windows apps&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-13"&gt;https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-13&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK v1.3.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは XAML Backdrop API (ウィンドウ背景への Mica の適用など)、アプリウィンドウにアクセスするための Window.AppWindow API などいくつかの新機能が導入されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3.0"&gt;Release v1.3.0 · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-2.3.0-beta-2-mysql-netmysqlconnector"&gt;Release 2.3.0 Beta 2 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.0-beta.2"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.0-beta.2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Async MySQL Connector 2.3.0 Beat 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは MariaDB でのメタデータスキップによるパフォーマンスの改善や MySqlDataReader のリサイクルなどの改善が含まれている。&lt;/p&gt;
&lt;h3 id="nuget.org-terms-of-service-update-on-unexpected-behavior-and-hate-speech-the-nuget-blog"&gt;NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/"&gt;https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet.org の利用規約のアップデートについて。&lt;/p&gt;
&lt;p&gt;利用規約が更新され、不正行為に関する二つのルールが追加された。一つはパッケージの説明や README にない予期しない動作(悪意あるバックドアなど)についてのルール、もう一つはヘイトスピーチについてのルールについて追加となっている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="debugging-native-memory-issues-in-a-c-application"&gt;Debugging native memory issues in a C# application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/199265-A/debugging-native-memory-issues-in-a-c-application"&gt;https://ayende.com/blog/199265-A/debugging-native-memory-issues-in-a-c-application&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# アプリケーションでアクセス違反でクラッシュする問題を調査した話。&lt;/p&gt;
&lt;p&gt;Avx2 でメモリーを読み取るときに無効なメモリーも読み取ってしまうことによって発生した問題。&lt;/p&gt;
&lt;h3 id="data-validation-with-fluent-validation-for-asp-net-core"&gt;Data validation with Fluent Validation for ASP NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/c-sharp-progarmming/data-validation-with-fluent-validation-for-asp-net-core-6613c71211f8"&gt;https://medium.com/c-sharp-progarmming/data-validation-with-fluent-validation-for-asp-net-core-6613c71211f8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で Fluent Validation を使用した入力検証の導入方法について。&lt;/p&gt;
&lt;h3 id="net-avaloniaui-1"&gt;.NET + AvaloniaUI 制作日誌①&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/jun_murakami/articles/87c79a3c622b6f"&gt;https://zenn.dev/jun_murakami/articles/87c79a3c622b6f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Avalonia UI v11 プレビューを使用しての変更点などのメモ。&lt;/p&gt;
&lt;h3 id="improving-visual-studio-performance-with-the-new-instrumentation-tool-visual-studio-blog"&gt;Improving Visual Studio performance with the new Instrumentation Tool - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/improving-visual-studio-performance-with-the-new-instrumentation-tool/"&gt;https://devblogs.microsoft.com/visualstudio/improving-visual-studio-performance-with-the-new-instrumentation-tool/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の新しいインストルメンテーションツールの紹介として Visual Studio のパフォーマンスを改善する記事。&lt;/p&gt;
&lt;h3 id="boost-your-integration-testing-for-rest-apis-with-snapshot-testing-in.net"&gt;📈 Boost Your Integration Testing for REST APIs with Snapshot Testing in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/kamilbaczek/boost-your-integration-testing-for-rest-apis-with-snapshot-testing-g2b"&gt;https://dev.to/kamilbaczek/boost-your-integration-testing-for-rest-apis-with-snapshot-testing-g2b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;データを比較して検証する Verify を使用してユニットテストを行う方法について。&lt;/p&gt;
&lt;h3 id="c11-generic-math"&gt;[C#11] Generic Mathで桁あふれしないように足し算を実装する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimat/articles/c4b5b05dcd85c7"&gt;https://zenn.dev/shimat/articles/c4b5b05dcd85c7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generic Math で独自の Vector 構造体を定義し、足し算を行うときに桁あふれしないような実装を行う。&lt;/p&gt;
&lt;h3 id="whats-new-in.net-8-discover-all.net-8-features"&gt;What’s New in .NET 8 🧐 ? Discover ALL .NET 8 Features⚡🚀&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/abp-community/whats-new-in-net-8-discover-all-net-8-features-bf98bc9cf68c"&gt;https://medium.com/abp-community/whats-new-in-net-8-discover-all-net-8-features-bf98bc9cf68c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の新機能や Random.GetItems など API を紹介している。&lt;/p&gt;
&lt;h3 id="looking-at-c-12-proposals-and-beyond"&gt;Looking at C# 12 Proposals and Beyond&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://michaelscodingspot.com/csharp-12-proposals/"&gt;https://michaelscodingspot.com/csharp-12-proposals/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 での提案やその先にある C# の機能を紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;プライマリーコンストラクター&lt;/li&gt;
&lt;li&gt;半自動プロパティー&lt;/li&gt;
&lt;li&gt;リストパターンマッチングの IEnumerable への拡張&lt;/li&gt;
&lt;li&gt;Pure Union と Discriminating Union&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="normalize-and-compare-urls-with-c"&gt;Normalize and compare URLs with C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/normalize-and-compare-urls-with-csharp/"&gt;https://blog.elmah.io/normalize-and-compare-urls-with-csharp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;URL に含まれる ID などをつぶして正規化して比較する方法について。&lt;/p&gt;
&lt;h3 id="externalfinalizer-adding-a-finalizer-to-3rd-party-objects"&gt;ExternalFinalizer: Adding a finalizer to 3rd party objects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ravendb.net/articles/externalfinalizer-adding-a-finalizer-to-3rd-party-objects"&gt;https://ravendb.net/articles/externalfinalizer-adding-a-finalizer-to-3rd-party-objects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ファイナライザーを持たないオブジェクトを外部からファイナライザーを使用して破棄するというテクニック。&lt;/p&gt;
&lt;h3 id="linq-on-steroids-with-simd"&gt;LINQ on steroids with SIMD&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://steven-giesel.com/blogPost/faf06188-bae9-484d-804d-a42d58d18cad"&gt;https://steven-giesel.com/blogPost/faf06188-bae9-484d-804d-a42d58d18cad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SIMD を使用して LINQ の高速化を試み、ライブラリーを実装したことについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/linkdotnet/LinqSIMDExtensions"&gt;linkdotnet/LinqSIMDExtensions: A LINQ-like extensions for C# that uses SIMD extensions to parallelize the operations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="the-journey-with-multi-tenancy-accesses-continues-with-some-issues"&gt;The Journey with multi-tenancy accesses continues with some issues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://danielwertheim.se/the-journey-with-multi-tenancy-accesses-continues-with-some-issues/"&gt;https://danielwertheim.se/the-journey-with-multi-tenancy-accesses-continues-with-some-issues/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;マルチテナントアクセスを行う際の実装と注意すべき取り扱いについて。&lt;/p&gt;
&lt;h3 id="working-with-nested-tasks"&gt;Working With Nested Tasks&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://itnext.io/working-with-nested-tasks-9acd700c0e86"&gt;https://itnext.io/working-with-nested-tasks-9acd700c0e86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ネストされた Task の挙動とその制御について。&lt;/p&gt;
&lt;h3 id="github"&gt;GitHub、ソフトウェア部品表の作成機能を無償公開--脆弱性管理を容易に&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://japan.zdnet.com/article/35202341/"&gt;https://japan.zdnet.com/article/35202341/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub で SBOM のエクスポートがサポートされたことについての紹介。&lt;/p&gt;
&lt;h3 id="wasm-wasi-wtf-webassembly-101-for.net-developers"&gt;WASM, WASI, WTF? WebAssembly 101 – for .NET developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/christianweyer/wasm-wasi-wtf-webassembly-101-for-net-developers"&gt;https://speakerdeck.com/christianweyer/wasm-wasi-wtf-webassembly-101-for-net-developers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 開発者向けの WebAssembly や WASI、Blazor の現状と今後についてのスライド。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="0a81aefc1f4448e4915fbbd52da14969" data-ratio="1.77725118483412" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="c"&gt;C#によるクライアント/サーバーの開発言語統一がもたらす高効率な開発体制 ～プリコネ！グランドマスターズ開発事例～&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/cygames/sabanokai-fa-yan-yu-tong-gamotarasugao-xiao-lu-nakai-fa-ti-zhi-purikone-gurandomasutazukai-fa-shi-li"&gt;https://speakerdeck.com/cygames/sabanokai-fa-yan-yu-tong-gamotarasugao-xiao-lu-nakai-fa-ti-zhi-purikone-gurandomasutazukai-fa-shi-li&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プリコネ!グランドマスターズでの C# を用いたクライアントとサーバーでの言語統一環境での開発事例についてのスライド。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="eb88699993234d21bab16eab3baafaf4" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="net-20234-connpass"&gt;.NETラボ 勉強会 2023年4月 - connpass&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnetlab.connpass.com/event/279139/"&gt;https://dotnetlab.connpass.com/event/279139/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Azure OpenAI Service 概要とサンプルアプリ等のご紹介&lt;/li&gt;
&lt;li&gt;Microsoft PowerToysを使ってみよう&lt;/li&gt;
&lt;li&gt;Windows 365 Frontline すべての働く人にクラウド PC を！&lt;/li&gt;
&lt;li&gt;Azure OpenAIサービスでChatGPTをC#で使ってみる&lt;/li&gt;
&lt;li&gt;モノレポなライブラリ群をCICDでデプロイした話&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="hololabinciwasmunity-unity-c-wrapper-of-iwasm"&gt;HoloLabInc/IwasmUnity: Unity C# wrapper of iwasm&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/HoloLabInc/IwasmUnity"&gt;https://github.com/HoloLabInc/IwasmUnity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unity 向けの WebAssembly Micro Runtime の iwasm のバインディング。&lt;/p&gt;
&lt;!-- https://twitter.com/ikorin24/status/1646773888767119361?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;Unity で Wasm を動かせる Unity C# 向けライブラリを作りました。iOS を含め、各種プラットフォームで動作できます。(Apple チップの Mac は私が所持していないため現状非対応)&lt;br&gt;UPM でインポート可能です&lt;a href="https://t.co/UchqnicsoE"&gt;https://t.co/UchqnicsoE&lt;/a&gt; &lt;a href="https://t.co/FT2UZwDxrJ"&gt;pic.twitter.com/FT2UZwDxrJ&lt;/a&gt;&lt;/p&gt;&amp;mdash; いこり (&amp;#64;ikorin24) &lt;a href="https://twitter.com/ikorin24/status/1646773888767119361?ref_src=twsrc%5Etfw"&gt;April 14, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;AVX-512 サポートの話。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1645390605818773505?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET 8.0 teaser: AVX-512 &lt;a href="https://t.co/Ch2Nl0a4do"&gt;https://t.co/Ch2Nl0a4do&lt;/a&gt; (PR is based on a huge work done by contributors from Intel, &lt;a href="https://twitter.com/tannergooding?ref_src=twsrc%5Etfw"&gt;&amp;#64;tannergooding&lt;/a&gt;, &lt;a href="https://twitter.com/BruceForstall?ref_src=twsrc%5Etfw"&gt;&amp;#64;BruceForstall&lt;/a&gt; and other members) &lt;a href="https://t.co/Z2dMvAwBS3"&gt;pic.twitter.com/Z2dMvAwBS3&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1645390605818773505?ref_src=twsrc%5Etfw"&gt;April 10, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;アラインの有無によるメモリーアクセスのパフォーマンスの差の話。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1646922981744992261?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Unaligned data access penalty 😒 &lt;a href="https://t.co/T5rIkkrUdQ"&gt;pic.twitter.com/T5rIkkrUdQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1646922981744992261?ref_src=twsrc%5Etfw"&gt;April 14, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;ネイティブビルドをしたコード (SeeSharpSnake) を 486 の MS-DOS で動かすという話。最終的にリアルな PC の上で動かしている。&lt;/p&gt;
&lt;!-- https://twitter.com/lukaaash/status/1644761881721044994?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;It actually works in DOSBox and in DOSBox-X&amp;#39;s 486 mode! I&amp;#39;ll try it on a real PC with 120Mhz AMD Am486 with 32MB of RAM, but that will have to wait until Tuesday because I keep the old machine in my office as a museum piece :-) &lt;a href="https://t.co/BkEx8kETVI"&gt;pic.twitter.com/BkEx8kETVI&lt;/a&gt;&lt;/p&gt;&amp;mdash; shakul (&amp;#64;lukaaash) &lt;a href="https://twitter.com/lukaaash/status/1644761881721044994?ref_src=twsrc%5Etfw"&gt;April 8, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/04/08/updates</id>
		<title>2023-04-08: WiX v4.0.0, ReSharper &amp; Rider 2023.1</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/04/08/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-04-08T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="wix-v4.0.0-release-notes-wix-toolset"&gt;WiX v4.0.0 | Release notes | WiX Toolset&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://wixtoolset.org/docs/releasenotes/#v4"&gt;https://wixtoolset.org/docs/releasenotes/#v4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WiX v4.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンでは ARM64 のサポートや NuGet によるツールの提供といった様々な改善が含まれている。&lt;/p&gt;
&lt;h3 id="resharper-2023.1-comes-with-enhanced-c-support-exciting-updates-for-c-and-more-the.net-tools-blog"&gt;ReSharper 2023.1 Comes With Enhanced C# Support, Exciting Updates for C++, and More! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/05/resharper-2023-1/"&gt;https://blog.jetbrains.com/dotnet/2023/04/05/resharper-2023-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではコレクションの複数回のルックアップを修正する QuickFix や null チェックパターンの Syntax style の導入、ショートカットやアップデートのダイアログの改善などが含まれている。&lt;/p&gt;
&lt;p&gt;またこのバージョンから Visual Studio 2010 および 2012 のサポートが廃止されている。&lt;/p&gt;
&lt;h3 id="dotcover-dotmemory-dotpeek-and-dottrace-2023.1-release-the.net-tools-blog"&gt;dotCover, dotMemory, dotPeek, and dotTrace 2023.1 Release! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/05/dottools-2023-1-release/"&gt;https://blog.jetbrains.com/dotnet/2023/04/05/dottools-2023-1-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dotCover, dotMemory, dotPeek, dotTrace 2023.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;dotTrace は Linux と macOS 向けのスタンドアローン版がベータとして利用できるようになったほか、様々な改善が行われている。&lt;/p&gt;
&lt;h3 id="improvements-to-auth-and-identity-in-asp.net-core-8.net-blog"&gt;Improvements to auth and identity in ASP.NET Core 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/improvements-auth-identity-aspnetcore-8/"&gt;https://devblogs.microsoft.com/dotnet/improvements-auth-identity-aspnetcore-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core における認証と ID 管理について。&lt;/p&gt;
&lt;p&gt;.NET 8 の SPA テンプレートからは IdentityServer への依存が削除されること、セルフホストの認証の改善点について触れている。&lt;/p&gt;
&lt;h3 id="asp.net-core-route-tooling-enhancements-in.net-8.net-blog"&gt;ASP.NET Core Route Tooling Enhancements in .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/aspnet-core-route-tooling-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/aspnet-core-route-tooling-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core のルーティングのツール強化について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ルートのシンタックスハイライト&lt;/li&gt;
&lt;li&gt;パラメーターとルート名の補完&lt;/li&gt;
&lt;li&gt;ルート制約の補完&lt;/li&gt;
&lt;li&gt;ルートの Analyzer と CodeFix&lt;/li&gt;
&lt;li&gt;Minimal APIs と Web API、Blazor のサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-ilspy-8.0-preview-4-icsharpcodeilspy"&gt;Release ILSpy 8.0 Preview 4 · icsharpcode/ILSpy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/icsharpcode/ILSpy/releases/tag/v8.0-preview4"&gt;https://github.com/icsharpcode/ILSpy/releases/tag/v8.0-preview4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ILSpy 8.0 Preview 4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではテーマの追加や様々な不具合の修正が行われている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="receive-and-test-incoming-webhooks-in-an-asp.net-core-minimal-api-a-comprehensive-guide"&gt;Receive and Test Incoming Webhooks in an ASP.NET Core Minimal API: A Comprehensive Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.christianfindlay.com/blog/asp-dotnet-core-minimal-webhooks"&gt;https://www.christianfindlay.com/blog/asp-dotnet-core-minimal-webhooks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core の Minimal API でリクエストを受信する Webhook の実装、テストを行う手順の解説。&lt;/p&gt;
&lt;h3 id="visual-studio-toolbox-debug-threads-tasks-with-parallel-stacks-visual-studio-blog"&gt;Visual Studio Toolbox: Debug Threads &amp;amp; Tasks with Parallel Stacks - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-toolbox-debug-threads-tasks-with-parallel-stacks/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-toolbox-debug-threads-tasks-with-parallel-stacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;スレッドと並列スタックのデバッグツールの紹介動画。&lt;/p&gt;
&lt;h3 id="how-to-create-a-nuget-package-for-both-desktop-and-mobile-development"&gt;How to Create a NuGet Package for Both Desktop and Mobile Development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/yushulx/how-to-create-a-nuget-package-for-both-desktop-and-mobile-development-5e61"&gt;https://dev.to/yushulx/how-to-create-a-nuget-package-for-both-desktop-and-mobile-development-5e61&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;デスクトップ向けに加えて Android や iOS 向けのバインディングライブラリーを含むような NuGet パッケージを作る方法について。&lt;/p&gt;
&lt;h3 id="c11-generic-mathopencvsaturate_cast"&gt;[C#11] Generic MathでOpenCVのsaturate_castを模す&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimat/articles/daab88eea9c41f"&gt;https://zenn.dev/shimat/articles/daab88eea9c41f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenCV の saturate_cast 関数のようなメソッドを Generic Math を使用して実装してみるという記事。&lt;/p&gt;
&lt;h3 id="cdotnet-user-jwts"&gt;【C#】dotnet user-jwts はいいぞ。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/04/07/165241"&gt;https://blog.neno.dev/entry/2023/04/07/165241&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core での開発時に JWT を使用する場合にローカル開発環境で使用できる JWT を簡単委に生成できる user-jwts ツールについての紹介。&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-april-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | April 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/04/06/net-annotated-monthly-april-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/04/06/net-annotated-monthly-april-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 関連情報まとめ4月号。&lt;/p&gt;
&lt;h3 id="arraypool-in-depth"&gt;ArrayPool in depth&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;epeshk/arraypool-t-ea90cb24b87f"&gt;https://medium.com/&amp;#64;epeshk/arraypool-t-ea90cb24b87f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ArrayPool の内部実装についての解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ikorin2.hatenablog.jp/entry/2020/07/25/113904"&gt;(C#) ArrayPool&lt;T&gt;.Shared 解体新書 - ネコのために鐘は鳴る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="improved-windows-broker-support-with-msal.net-microsoft-entra-identity-developer-blog"&gt;Improved Windows Broker Support with MSAL.NET | Microsoft Entra Identity Developer Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/identity/improved-windows-broker-support-with-msal-net/"&gt;https://devblogs.microsoft.com/identity/improved-windows-broker-support-with-msal-net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSAL.NET での Windows 環境における Broker サポートの向上について。&lt;/p&gt;
&lt;h3 id="csonarqube-qiita"&gt;C#でSonarQubeでカバレッジを表示する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/YoshijiGates/items/e1055e14c9960228726b"&gt;https://qiita.com/YoshijiGates/items/e1055e14c9960228726b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# プロジェクトのカバレッジを取得し SonarQube で確認できるようにする方法について。&lt;/p&gt;
&lt;h3 id="adding-client-side-validation-to-asp.net-core-without-jquery-or-unobtrusive-validation"&gt;Adding client-side validation to ASP.NET Core, without jQuery or unobtrusive validation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/adding-client-side-validation-to-aspnet-core-without-jquery-or-unobtrusive-validation/"&gt;https://andrewlock.net/adding-client-side-validation-to-aspnet-core-without-jquery-or-unobtrusive-validation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で jQuery や unobtrusive validation を使用せずクライアントサイド検証を追加する方法について。&lt;/p&gt;
&lt;p&gt;記事では npm の aspnet-client-validation パッケージを使用し、カスタマイズする方法などを紹介している。&lt;/p&gt;
&lt;h3 id="microsoft-llm-osssemantic-kernel-qiita"&gt;Microsoft が LLM をアプリ開発に統合するための OSS「Semantic Kernel」を発表 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nohanaga/items/430b59209b02c298ef2a"&gt;https://qiita.com/nohanaga/items/430b59209b02c298ef2a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アプリケーションに ChatGPT などの LLM を統合するためのフレームワークである Semantic Kernel についての解説。&lt;/p&gt;
&lt;h3 id="iterator-benchmarks-that-shocked-with-unexpected-results-dev-leader"&gt;Iterator Benchmarks That Shocked With Unexpected Results - Dev Leader&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.devleader.ca/2023/03/17/shocking-results-from-collection-and-iterator-benchmarks/"&gt;https://www.devleader.ca/2023/03/17/shocking-results-from-collection-and-iterator-benchmarks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;リストやイテレーターに対する LINQ のベンチマークをとったときに期待と異なる結果となって見落としていたことについての振り返り。&lt;/p&gt;
&lt;h3 id="citext7pdf-qiita"&gt;C#でiText7を使ってPDFファイルを分割・結合する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nekohei/items/9a2e8b1e9dfc922592ea"&gt;https://qiita.com/nekohei/items/9a2e8b1e9dfc922592ea&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iText 7 を使用して PDF ファイルを分割、結合する方法について。&lt;/p&gt;
&lt;h3 id="primary-constructors-with-c"&gt;Primary Constructors with C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://csharp.christiannagel.com/2023/03/28/primaryctors/"&gt;https://csharp.christiannagel.com/2023/03/28/primaryctors/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で導入予定のプライマリーコンストラクターについての解説。&lt;/p&gt;
&lt;h3 id="aws-lambda-web-adapter.net-web-apilambda"&gt;AWS Lambda Web Adapterで.NET WEB APIをLambdaで動かす&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/junnuj/articles/c2ba888670bc8e"&gt;https://zenn.dev/junnuj/articles/c2ba888670bc8e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lambda Web Adapter を使用してピュアな ASP.NET Core アプリケーションを Lambda で動かす方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="ufcppscribansourcegenerator"&gt;ufcpp/ScribanSourceGenerator&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ufcpp/ScribanSourceGenerator"&gt;https://github.com/ufcpp/ScribanSourceGenerator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scriban (テンプレートエンジン) を使用してソースコードを生成する ScribanSourceGenerator。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/thinva/items/6ae7e295dabe417645cf"&gt;[C#] ScribanSourceGenerator によるコンパイル時コード生成 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-marketplace-publisher-github-marketplace"&gt;Visual Studio Marketplace Publisher - GitHub Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/visual-studio-marketplace-publisher"&gt;https://github.com/marketplace/actions/visual-studio-marketplace-publisher&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Marketplace に発行する GitHub Action。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/calvinallen/introducing-the-visual-studio-marketplace-publisher-github-action-1nme"&gt;Introducing the “Visual Studio Marketplace Publisher” GitHub Action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-vsix-signer-github-marketplace"&gt;Visual Studio VSIX Signer - GitHub Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/visual-studio-vsix-signer"&gt;https://github.com/marketplace/actions/visual-studio-vsix-signer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio VSIX のサインを行う GitHub Action。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/calvinallen/introducing-the-visual-studio-vsix-signer-github-action-3iog"&gt;Introducing the ‘Visual Studio VSIX Signer’ GitHub Action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="drasticactionsdrastic.inappsettingskit"&gt;drasticactions/Drastic.InAppSettingsKit&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/Drastic.InAppSettingsKit"&gt;https://github.com/drasticactions/Drastic.InAppSettingsKit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iOS アプリケーション内の設定画面を作る InAppSettingsKit のバインディングライブラリー。&lt;/p&gt;
&lt;!-- https://twitter.com/drasticactions/status/1642778859992154114?s=20 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I needed to add a settings UI for my .NET iOS app, so I updated the original Xamarin binding for InAppSettingsKit. With it, you can generate a setting bundle and have it appear in Settings and in your app. It also works on Catalyst!&lt;a href="https://t.co/ZRwuMuaZg4"&gt;https://t.co/ZRwuMuaZg4&lt;/a&gt;. &lt;a href="https://t.co/5KK6cPn5MP"&gt;pic.twitter.com/5KK6cPn5MP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Drastic Actions (&amp;#64;drasticactions) &lt;a href="https://twitter.com/drasticactions/status/1642778859992154114?ref_src=twsrc%5Etfw"&gt;April 3, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Java と .NET のスタックトレースの違いについて。&lt;/p&gt;
&lt;!-- https://twitter.com/matarillo/status/1643864714466951168?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;例外から取り出せるスタックトレースがそもそも違っていルコとに注意。Javaの場合throwされた時点のコールスタックがキャプチャされてる。&lt;a href="https://t.co/WR7UuXBcOx"&gt;https://t.co/WR7UuXBcOx&lt;/a&gt; C# （というか.NET）では、throw地点からcatch地点の間の大域脱出情報になる。&lt;a href="https://t.co/ulm9nOxajv"&gt;https://t.co/ulm9nOxajv&lt;/a&gt; &lt;a href="https://t.co/6DAXPLEPmN"&gt;https://t.co/6DAXPLEPmN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kentaro Inomata (&amp;#64;matarillo) &lt;a href="https://twitter.com/matarillo/status/1643864714466951168?ref_src=twsrc%5Etfw"&gt;April 6, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;MFractor が Visual Studio for Mac v17.5 をサポート。&lt;/p&gt;
&lt;!-- https://twitter.com/matthewrdev/status/1642281174793068544?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I&amp;#39;ve just released v5.0 of MFractor for Visual Studio Mac... This *finally* includes full support for .NET MAUI.&lt;br&gt;&lt;br&gt;All of MFractors existing Xamarin.Forms tools now work in MAUI XAML files; code analysis, refactorings, navigation, tooltips etc.&lt;br&gt;&lt;br&gt;Release:&lt;a href="https://t.co/5EB9kwHR6X"&gt;https://t.co/5EB9kwHR6X&lt;/a&gt;&lt;/p&gt;&amp;mdash; Matthew Robbins (&amp;#64;matthewrdev) &lt;a href="https://twitter.com/matthewrdev/status/1642281174793068544?ref_src=twsrc%5Etfw"&gt;April 1, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="implement-iutf8spanformattable-on-datetime-datetimeoffset-dateonly-timeonly-timespan-char-rune-by-stephentoub-pull-request-84469-dotnetruntime"&gt;Implement IUtf8SpanFormattable on DateTime, DateTimeOffset, DateOnly, TimeOnly, TimeSpan, Char, Rune by stephentoub · Pull Request #84469 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/84469"&gt;https://github.com/dotnet/runtime/pull/84469&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DateTime などの値型に &lt;code&gt;IUtf8SpanFormattable&lt;/code&gt; を実装するという PR。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/04/02/updates</id>
		<title>2023-04-02: Visual Studio Code 1.77, StackExchange.Redis 2.6.104, Rider &amp; ReSharper 2023.1 Beta</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/04/02/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-04-02T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="visual-studio-code-march-2023"&gt;Visual Studio Code March 2023&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com/updates/v1_77"&gt;https://code.visualstudio.com/updates/v1_77&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-2.6.104-stackexchangestackexchange.redis"&gt;Release 2.6.104 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.104"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.6.104&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.1-beta-is-out-the.net-tools-blog"&gt;Rider 2023.1 Beta is Out | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/30/rider-2023-1-beta-is-out/"&gt;https://blog.jetbrains.com/dotnet/2023/03/30/rider-2023-1-beta-is-out/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.1-goes-beta-the.net-tools-blog"&gt;ReSharper 2023.1 Goes Beta | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/30/resharper-2023-1-beta/"&gt;https://blog.jetbrains.com/dotnet/2023/03/30/resharper-2023-1-beta/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="discover.net-7-sdk-containers-support-for-authentication-and-cross-architecture-builds.net-blog"&gt;Discover .NET 7 SDK Containers - Support for Authentication and Cross-architecture Builds - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/updates-to-container-support-in-the-dotnet-sdk/"&gt;https://devblogs.microsoft.com/dotnet/updates-to-container-support-in-the-dotnet-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c"&gt;C#の正規表現のチートシートの翻訳&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/boukichi/articles/d4ab6a06690868"&gt;https://zenn.dev/boukichi/articles/d4ab6a06690868&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="encrypt-and-decrypt-users-data-in-asp.net-core-identity-using-the-ilookupprotector-and-ilookupprotectorkeyring-interfaces"&gt;Encrypt and Decrypt users' data in ASP.NET Core Identity using the ILookupProtector and ILookupProtectorKeyRing interfaces&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/mohammedahmed/encrypt-and-decrypt-users-data-in-aspnet-core-identity-using-the-ilookupprotector-and-ilookupprotectorkeyring-interfaces-2gep"&gt;https://dev.to/mohammedahmed/encrypt-and-decrypt-users-data-in-aspnet-core-identity-using-the-ilookupprotector-and-ilookupprotectorkeyring-interfaces-2gep&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qiita"&gt;文字列検索アルゴリズムについて - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takayoshi1968/items/97f232cb7ab50b48131a"&gt;https://qiita.com/takayoshi1968/items/97f232cb7ab50b48131a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="sail-sharp-8-tips-to-optimize-and-secure-your.net-containers-for-kubernetes"&gt;Sail Sharp, 8 tips to optimize and secure your .NET containers for Kubernetes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;mabenoit/sail-sharp-8-tips-to-optimize-and-secure-your-net-containers-for-kubernetes-c68ba253844a"&gt;https://medium.com/&amp;#64;mabenoit/sail-sharp-8-tips-to-optimize-and-secure-your-net-containers-for-kubernetes-c68ba253844a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qiita-1"&gt;短時間フーリエ変換とその逆変換 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takayoshi1968/items/636372d464d02699ba4f"&gt;https://qiita.com/takayoshi1968/items/636372d464d02699ba4f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qiita-2"&gt;ローカルの開発用証明書を更新する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/alicial/items/f7ee1224037dcd10c932"&gt;https://qiita.com/alicial/items/f7ee1224037dcd10c932&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-get-the-client-ip-in-asp.net-core-even-behind-a-proxy"&gt;How to get the client IP in ASP.NET Core even behind a proxy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/how-to-get-the-client-ip-in-asp-net-core-even-behind-a-proxy/"&gt;https://blog.elmah.io/how-to-get-the-client-ip-in-asp-net-core-even-behind-a-proxy/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="chatgpt.net-slackbot"&gt;ChatGPT + .NET Slackbot&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blogg.blank.no/chatgpt-net-slackbot-cd9ec5664f23"&gt;https://blogg.blank.no/chatgpt-net-slackbot-cd9ec5664f23&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="kerberos-in-kubernetes"&gt;Kerberos in Kubernetes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/da1rren/escaping-kerberos-with-some-simple-kubernetes-tricks-3hal"&gt;https://dev.to/da1rren/escaping-kerberos-with-some-simple-kubernetes-tricks-3hal&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-il-viewer-and-low-level-c-the.net-tools-blog"&gt;ReSharper IL Viewer and Low-Level C# | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/30/resharper-il-viewer-and-low-level-csharp/"&gt;https://blog.jetbrains.com/dotnet/2023/03/30/resharper-il-viewer-and-low-level-csharp/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="chatgpt-api-c-qiita"&gt;ChatGPT API で C# でコマンドラインで会話する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/2675b596191e4fa2d0e3"&gt;https://qiita.com/fsdg-adachi_h/items/2675b596191e4fa2d0e3&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/1c61064fc46bc77beab4"&gt;ChatGPT API で C# でコマンドラインで会話する (複数とおしゃべり) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/7cb530b19d8647d840e6"&gt;ChatGPT API で C# でコマンドラインで会話する (機能切り出し) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/fsdg-adachi_h/items/8af59ab0a7a52724d064"&gt;ChatGPT API で C# でコマンドラインで会話する (人格を設定) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cthis"&gt;C#：構造体におけるthisのこと&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ruccho/articles/0042b9a9eeb6ed"&gt;https://zenn.dev/ruccho/articles/0042b9a9eeb6ed&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="simplifying-security-resource-based-authorization-in-asp.net-core"&gt;Simplifying Security: Resource-Based Authorization in ASP. NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;niteshsinghal85/simplifying-security-resource-based-authorization-in-asp-net-core-3f70486059d5"&gt;https://medium.com/&amp;#64;niteshsinghal85/simplifying-security-resource-based-authorization-in-asp-net-core-3f70486059d5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-pass-lambda-expression-to-where-linq-at-runtime"&gt;C#: Pass Lambda Expression to Where LINQ at Runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/kenakamu/c-pass-lambda-expression-to-where-linq-at-runtime-1ma4"&gt;https://dev.to/kenakamu/c-pass-lambda-expression-to-where-linq-at-runtime-1ma4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="webview2html"&gt;WebView2を使ってHTML帳票をプリンタから直接印刷する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/junnuj/articles/7fea619ba7e237"&gt;https://zenn.dev/junnuj/articles/7fea619ba7e237&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="vendor-agnostic-telemetry-using-opentelemetry-collector-in.net"&gt;Vendor-Agnostic Telemetry Using OpenTelemetry Collector in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code-maze.com/vendor-agnostic-telemetry-opentelemetry-collector-dotnet/"&gt;https://code-maze.com/vendor-agnostic-telemetry-opentelemetry-collector-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="attackers-are-starting-to-target.net-developers-with-malicious-code-nuget-packages-jfrog"&gt;Attackers are starting to target .NET developers with malicious-code NuGet packages | JFrog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jfrog.com/blog/attackers-are-starting-to-target-net-developers-with-malicious-code-nuget-packages/"&gt;https://jfrog.com/blog/attackers-are-starting-to-target-net-developers-with-malicious-code-nuget-packages/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="understanding-the.net-ecosystem-the-evolution-of.net-into.net-7"&gt;Understanding the .NET ecosystem: The evolution of .NET into .NET 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/understanding-the-dotnet-ecosystem-the-evolution-of-dotnet-into-dotnet-7/"&gt;https://andrewlock.net/understanding-the-dotnet-ecosystem-the-evolution-of-dotnet-into-dotnet-7/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ndepend-qiita"&gt;リファクタリングによる技術的負債の返済をNDependで可視化してみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/JHashimoto/items/1cde008689c0446be780"&gt;https://qiita.com/JHashimoto/items/1cde008689c0446be780&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ef-core-7-json-columns"&gt;EF Core 7: Json columns&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/ef-core-7-json-columns-2k1f"&gt;https://dev.to/karenpayneoregon/ef-core-7-json-columns-2k1f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rudderstack-introduction-and-implementation-using.net-core-7-web-api"&gt;Rudderstack Introduction and Implementation using .NET Core 7 Web API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;jaydeepvpatil225/rudderstack-introduction-and-implementation-using-net-core-7-web-api-d32fc486589a"&gt;https://medium.com/&amp;#64;jaydeepvpatil225/rudderstack-introduction-and-implementation-using-net-core-7-web-api-d32fc486589a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="sequential-guids-in-entity-framework-core-might-not-be-sequential"&gt;Sequential GUIDs in Entity Framework Core Might Not Be Sequential&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/connerphillis/sequential-guids-in-entity-framework-core-might-not-be-sequential-3408"&gt;https://dev.to/connerphillis/sequential-guids-in-entity-framework-core-might-not-be-sequential-3408&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-c"&gt;関数ポインター | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/study/csharp/interop/functionpointer/"&gt;https://ufcpp.net/study/csharp/interop/functionpointer/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-the-github-actions-extension-for-vs-code-the-github-blog"&gt;Announcing the GitHub Actions extension for VS Code | The GitHub Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.blog/2023-03-28-announcing-the-github-actions-extension-for-vs-code/"&gt;https://github.blog/2023-03-28-announcing-the-github-actions-extension-for-vs-code/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-selenium-webdriver-manager-jsakamoto"&gt;[.NET] Selenium に純正の WebDriver Manager が付属するようになった話 | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/29530356/"&gt;https://devadjust.exblog.jp/29530356/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-http2-grpc"&gt;C# と HTTP/2 と gRPC&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/nenonaninu/2-to-grpc"&gt;https://speakerdeck.com/nenonaninu/2-to-grpc&lt;/a&gt;&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="c9b998abaa804c76975da04414cfeab2" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="michalstrehovskysizoscope.net-tool-to-analyze-size-of-native-aot-binaries"&gt;MichalStrehovsky/sizoscope: .NET tool to analyze size of Native AOT binaries.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MichalStrehovsky/sizoscope"&gt;https://github.com/MichalStrehovsky/sizoscope&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://twitter.com/mstrehovsky/status/1641307198415585280?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;1/N I made a new tool! Ever wondered what contributes to the binary size of your .NET Native AOT executables? I now have a tool for you! 🧵 &lt;a href="https://t.co/cS9Qlgj0vN"&gt;pic.twitter.com/cS9Qlgj0vN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Michal Strehovský (&amp;#64;MStrehovsky) &lt;a href="https://twitter.com/MStrehovsky/status/1641307198415585280?ref_src=twsrc%5Etfw"&gt;March 30, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="microsoftnode-api-dotnet-implementation-of-node-api-for.net.it-can-be-used-to-create-node.js-plugins-in-c-and-other.net-languages.it-also-enables-use-of-c-and.net-for-direct-access-to-javascript-engines-or-frameworks-that-implement-node-api"&gt;microsoft/node-api-dotnet: Implementation of Node-API for .Net. It can be used to create Node.JS plugins in C# and other .Net languages. It also enables use of C# and .Net for direct access to JavaScript engines or frameworks that implement Node-API.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/node-api-dotnet"&gt;https://github.com/microsoft/node-api-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="drasticactionsdrastic.flipper-a-binding-of-flipper-for.net-ios-applications"&gt;drasticactions/Drastic.Flipper: A binding of Flipper for .NET iOS Applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/Drastic.Flipper"&gt;https://github.com/drasticactions/Drastic.Flipper&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/hassanrezkhabib/status/1640689844275003393?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Did you know that &lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;VisualStudio&lt;/a&gt;  allows you to create multiple files in one shot?&lt;br&gt;&lt;br&gt;Thanks &lt;a href="https://twitter.com/cjdutoit?ref_src=twsrc%5Etfw"&gt;&amp;#64;cjdutoit&lt;/a&gt; for the tip!&lt;a href="https://twitter.com/hashtag/visualstudio?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#visualstudio&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://t.co/4dByvAKk0q"&gt;pic.twitter.com/4dByvAKk0q&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hassan Habib (&amp;#64;HassanRezkHabib) &lt;a href="https://twitter.com/HassanRezkHabib/status/1640689844275003393?ref_src=twsrc%5Etfw"&gt;March 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="deadlock-when-using-trystartnogcregion-andor-gc.collect-issue-84096-dotnetruntime"&gt;Deadlock when using TryStartNoGCRegion and/or GC.Collect · Issue #84096 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/84096"&gt;https://github.com/dotnet/runtime/issues/84096&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/03/24/updates</id>
		<title>2023-03-24: .NET 5 to .NET 7 @ Bing, GitHub Copilot chat for Visual Studio 2022, Uno Platform 4.8.15</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/03/24/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-03-24T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-performance-delivers-again-for-bing-from.net-5-to.net-7.net-blog"&gt;.NET Performance Delivers Again for Bing, From .NET 5 to .NET 7 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-performance-delivers-again-for-bing-from-dotnet-5-to-dotnet-7/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-performance-delivers-again-for-bing-from-dotnet-5-to-dotnet-7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bing の中央ワークフローエンジンを .NET 5 から .NET 6, 7 へと更新した際の課題や効果について。&lt;/p&gt;
&lt;p&gt;.NET 5 から .NET 6 への移行は簡単に完了すると考えていたが、内部の HTTP 呼び出しで使用されていた誤ったペイロードを取りあつかえなくなる問題や、スピンカウントに関するバグによる可用性の低下といった問題に .NET 側が対応する必要があったがそれ以外では大きな書き換えもなく移行は行えたとのこと。&lt;/p&gt;
&lt;p&gt;また、起動時に事前の分析を元に JIT を意図的に発生させるよう暖気を行っていたが .NET 6 で JIT 効率が改善されたことで起動時間が劇的に改善された。&lt;/p&gt;
&lt;p&gt;.NET 7 への移行ではスレッドプールの動作の変更とリージョンベースの GC という大きな変更があったため、注意深くテストを行った結果 GC にかかる時間は24-30%近い改善を示し、GC の改善とスレッドプールの改善などにより95パーセンタイルレイテンシーは3-7%程度改善されたとのこと。&lt;/p&gt;
&lt;h3 id="github-copilot-chat-for-visual-studio-2022-visual-studio-blog"&gt;GitHub Copilot chat for Visual Studio 2022 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/github-copilot-chat-for-visual-studio-2022/"&gt;https://devblogs.microsoft.com/visualstudio/github-copilot-chat-for-visual-studio-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Copilot chat for Visual Studio 2022 の紹介。&lt;/p&gt;
&lt;p&gt;GitHub Copilot chat ではエディター上から直接 AI に対するチャットの質問文を入力できるようになり、Visual Studio 上のウィンドウで AI とチャットを行いコードに関する問題の改善などが行える。その他例外発生時に AI チャットで例外の内容を調べるといったこともできる。&lt;/p&gt;
&lt;p&gt;現在はプライベートプレビューに向けてウェイトリストの登録フォームが公開されている。&lt;/p&gt;
&lt;h3 id="release-4.8.15-unoplatformuno"&gt;Release 4.8.15 · unoplatform/uno&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/unoplatform/uno/releases/tag/4.8.15"&gt;https://github.com/unoplatform/uno/releases/tag/4.8.15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 4.8.15 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 8 Preview のサポート、スタートアップエクスペリエンスの改善、ThemeShadow for iOS/Catalyst/Android、Skia ターゲットでの影、パフォーマンスとメモリーの改善、その他さまざまな修正が含まれる。&lt;/p&gt;
&lt;h3 id="resharper-and-rider-2022.3.3-bug-fixes-have-landed-the.net-tools-blog"&gt;ReSharper and Rider 2022.3.3 Bug Fixes Have Landed | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/22/resharper-and-rider-2022-3-3-bug-fixes/"&gt;https://blog.jetbrains.com/dotnet/2023/03/22/resharper-and-rider-2022-3-3-bug-fixes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider 2022.3.3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの細かい不具合が修正されている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="how-to-perform-mutation-testing-in.net-and-c"&gt;How to perform mutation testing in .NET and C#?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;RebeldeCuantico/how-to-perform-mutation-testing-in-net-and-c-bd23a530341f"&gt;https://medium.com/&amp;#64;RebeldeCuantico/how-to-perform-mutation-testing-in-net-and-c-bd23a530341f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET / C# でミューテーションテストを行う方法について。記事では Stryker というツールを使用してテストを行う方法を解説している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stryker-mutator.io/"&gt;Stryker Mutator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="c.net-tools-with-system.commandline"&gt;C# .NET Tools with System.CommandLine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/c-net-tools-withsystemcommandline-2nc2"&gt;https://dev.to/karenpayneoregon/c-net-tools-withsystemcommandline-2nc2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;System.CommandLine を使用してコンソールアプリケーションを実装する簡単な紹介。&lt;/p&gt;
&lt;h3 id="asp.net-web-app-migration-to-azure-app-service-using-powershell-scripts"&gt;ASP. Net web app Migration to Azure App Service using PowerShell Scripts&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/apps-on-azure-blog/asp-net-web-app-migration-to-azure-app-service-using-powershell/ba-p/2814513"&gt;https://techcommunity.microsoft.com/t5/apps-on-azure-blog/asp-net-web-app-migration-to-azure-app-service-using-powershell/ba-p/2814513&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Web アプリケーション (.NET Framework) を Azure App Service に移行する PowerShell ツールの紹介。&lt;/p&gt;
&lt;h3 id="too-many-timers-in.net-gerald-barre"&gt;Too many timers in .NET? - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/too-many-timers-in-dotnet.htm"&gt;https://www.meziantou.net/too-many-timers-in-dotnet.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET に含まれる複数のタイマー (System.Threading.Timer, System.Threading.PeriodicTimer, System.Timers.Timer) の違いと使い方の紹介。&lt;/p&gt;
&lt;h3 id="scatter-plots-in-f-and-c-using-plotly.net"&gt;Scatter plots in F# and C# using Plotly.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fslab.org/blog/graph-gallery/scatter/csharp.html"&gt;https://fslab.org/blog/graph-gallery/scatter/csharp.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Plotly.NET を使用して散布図を表示する方法について。記事では Interactive (Juptyer Notebook) での使用例を紹介している。&lt;/p&gt;
&lt;h3 id="mastering-blazor-part-2-hot-reloading"&gt;Mastering Blazor - Part 2: Hot Reloading&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/florianrappl/mastering-blazor-part-2-hot-reloading-2b87"&gt;https://dev.to/florianrappl/mastering-blazor-part-2-hot-reloading-2b87&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor でのホットリロードについての解説。&lt;/p&gt;
&lt;p&gt;記事ではホットリロードはどのように使用し、どのような制限があるのか、そしてどのように動作しているのかを解説している。&lt;/p&gt;
&lt;h3 id="debugging-multiple.net-projects-in-vs-code"&gt;Debugging Multiple .NET Projects in VS Code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/this-is-learning/debugging-multiple-net-projects-in-vs-code-28kn"&gt;https://dev.to/this-is-learning/debugging-multiple-net-projects-in-vs-code-28kn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code で複数の .NET プロジェクトをまとめてデバッグ実行する方法について。&lt;/p&gt;
&lt;h3 id="remote-development-with-jetbrains-rider-the.net-tools-blog"&gt;Remote Development with JetBrains Rider | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/22/remote-development-with-jetbrains-rider/"&gt;https://blog.jetbrains.com/dotnet/2023/03/22/remote-development-with-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2022.2 でベータとしてサポートされたリモート開発についての紹介記事。&lt;/p&gt;
&lt;p&gt;記事ではどのようにして Rider を使用してリモート開発を始めるのか、どのようなことができるのかといったことを紹介している。&lt;/p&gt;
&lt;h3 id="secure-your.net-cloud-apps-with-rootless-linux-containers.net-blog"&gt;Secure your .NET cloud apps with rootless Linux Containers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/securing-containers-with-rootless/"&gt;https://devblogs.microsoft.com/dotnet/securing-containers-with-rootless/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で導入される rootless な Linux コンテナーイメージについて。&lt;/p&gt;
&lt;p&gt;rootless コンテナーイメージは一般ユーザーで動作することでセキュリティー面でのリスクを軽減することができる。.NET 8 ではコンテナーイメージにアプリケーション用のユーザーが含まれるようになる。&lt;/p&gt;
&lt;p&gt;記事では一般ユーザーで実行する方法やその際に必要な対応などを説明している。&lt;/p&gt;
&lt;h3 id="streamlining-your-debugging-process-with-breakpoint-groups-visual-studio-blog"&gt;Streamlining your Debugging process with Breakpoint Groups - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/streamlining-your-debugging-process-with-breakpoint-groups/"&gt;https://devblogs.microsoft.com/visualstudio/streamlining-your-debugging-process-with-breakpoint-groups/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6 Preview 2 で導入されたブレークポイントをグループ化する機能についての紹介。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-c-iotraspberrypi-l-qiita"&gt;Visual Studio 2022 C# でIOT（RaspberryPi でＬチカ） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/dail1015/items/aa8169c72598865f3bca"&gt;https://qiita.com/dail1015/items/aa8169c72598865f3bca&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Raspberry Pi 4 で .NET 7 を実行してLチカする方法について。&lt;/p&gt;
&lt;h3 id="why-is-resharper-suggesting-this-the.net-tools-blog"&gt;Why is ReSharper suggesting this? | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/20/why-is-resharper-suggesting-this/"&gt;https://blog.jetbrains.com/dotnet/2023/03/20/why-is-resharper-suggesting-this/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;Why is ReSharper suggesting this?&amp;quot; という ReSharper が何故その提案を行っているのかについてのヘルプを表示できる機能についての紹介。&lt;/p&gt;
&lt;h3 id="akka.net-v1.5-no-hocon-no-lighthouse-no-problem"&gt;Akka.NET v1.5: No Hocon, No Lighthouse, No Problem&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://petabridge.com/blog/akkadotnet-1.5-no-hocon-no-lighthouse-no-problem/"&gt;https://petabridge.com/blog/akkadotnet-1.5-no-hocon-no-lighthouse-no-problem/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Akka.NET 1.5 で追加された Akka.Hosting, Akka.Management, Akka.HealthCheck についての解説。&lt;/p&gt;
&lt;h3 id="create-a-portfolio-website-without-installing-any-tools.net-blog"&gt;Create a portfolio website without installing any tools - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/codespaces-template-blazor-portfolio-website/"&gt;https://devblogs.microsoft.com/dotnet/codespaces-template-blazor-portfolio-website/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Codespaces を使用して GitHub Pages や Azure Static Web Apps に Blazor WebAssembly のウェブサイトを作る方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="endeciphercoracle.raft-clusterize-your-functionality-and-build-your-own-replicated-state-machine-using-this-completely-extensible-implementation-of-the-raft-consensus-algorithm-in.net"&gt;endecipher/Coracle.Raft: Clusterize your functionality and build your own replicated state machine using this completely extensible implementation of the Raft consensus algorithm in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/endecipher/Coracle.Raft"&gt;https://github.com/endecipher/Coracle.Raft&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Raft コンセンサスアルゴリズムを使用したクラスターを実装するためのライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/&amp;#64;ayan.choudhury329/extensible-raft-consensus-algorithm-in-net-1db4ba13efa2"&gt;Extensible Raft Consensus algorithm in .NET | by Ayan Choudhury | Mar, 2023 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="stevesandersonmsdotnetisolator-a-library-for-running-isolated.net-runtimes-inside.net"&gt;SteveSandersonMS/DotNetIsolator: A library for running isolated .NET runtimes inside .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/SteveSandersonMS/DotNetIsolator"&gt;https://github.com/SteveSandersonMS/DotNetIsolator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET ランタイムの上で Wasm の .NET ランタイムをホストすることで隔離環境でコードを実行できるようにするという仕組みを提供するライブラリー。&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/5u1UaqkPZbg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id="drasticactionsdrastic.flex.net-binding-of-flex-an-in-app-debugging-and-exploration-tool-for-ios"&gt;drasticactions/Drastic.Flex: .NET Binding of FLEX, An in-app debugging and exploration tool for iOS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/Drastic.Flex"&gt;https://github.com/drasticactions/Drastic.Flex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iOS 向けのアプリ内開発ツールの Flex の .NET バインディング。&lt;/p&gt;
&lt;!-- https://twitter.com/drasticactions/status/1637324021103755264?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In my quest for more iOS Perf tools to help debug MAUI, I bound another iOS Library to .NET: Flex.&lt;br&gt;&lt;br&gt;Debug your iOS UI, networking features, and much much more, all from within your application!&lt;a href="https://t.co/Uciktm6mjv"&gt;https://t.co/Uciktm6mjv&lt;/a&gt; &lt;a href="https://t.co/iH9UZgicee"&gt;pic.twitter.com/iH9UZgicee&lt;/a&gt;&lt;/p&gt;&amp;mdash; Drastic Actions (&amp;#64;drasticactions) &lt;a href="https://twitter.com/drasticactions/status/1637324021103755264?ref_src=twsrc%5Etfw"&gt;March 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;.NET のデコンパイラーについての記事が2023年の情報で更新されている。&lt;/p&gt;
&lt;!-- https://twitter.com/ndepend/status/1635867251084521472?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET Decompilers Compared: A Comprehensive Guide &lt;a href="https://t.co/Rwr7458YqY"&gt;https://t.co/Rwr7458YqY&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/decompilation?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#decompilation&lt;/a&gt; &lt;a href="https://t.co/tviFpkPZzJ"&gt;pic.twitter.com/tviFpkPZzJ&lt;/a&gt;&lt;/p&gt;&amp;mdash; ndepend (&amp;#64;ndepend) &lt;a href="https://twitter.com/ndepend/status/1635867251084521472?ref_src=twsrc%5Etfw"&gt;March 15, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Rx.Async の最初のアルファーリリースが出たという話。&lt;/p&gt;
&lt;!-- https://twitter.com/howardvrooijen/status/1637018355243646977?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The first alpha release of Async Rx is available&lt;a href="https://t.co/SCq7RHRQeo"&gt;https://t.co/SCq7RHRQeo&lt;/a&gt; &lt;a href="https://t.co/Ta9GapjOgQ"&gt;pic.twitter.com/Ta9GapjOgQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Howard van Rooijen (&amp;#64;HowardvRooijen) &lt;a href="https://twitter.com/HowardvRooijen/status/1637018355243646977?ref_src=twsrc%5Etfw"&gt;March 18, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Span.CopyTo がアンロール可能になったという話。&lt;/p&gt;
&lt;!-- https://twitter.com/egorbo/status/1637807882979667973?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Span.CopyTo is now unrollable! &lt;a href="https://t.co/OLON4Xom92"&gt;https://t.co/OLON4Xom92&lt;/a&gt; it allows us to remove hacks like this one in Boolean.cs and have the same optimized codegen: &lt;a href="https://t.co/hf1voKUC4o"&gt;pic.twitter.com/hf1voKUC4o&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1637807882979667973?ref_src=twsrc%5Etfw"&gt;March 20, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="optimize-stackalloc-zeroing-via-blk-by-egorbo-pull-request-83255-dotnetruntime"&gt;Optimize stackalloc zeroing via BLK by EgorBo · Pull Request #83255 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/83255"&gt;https://github.com/dotnet/runtime/pull/83255&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-spa-templates-need-better-options-for-authentication-issue-42158-dotnetaspnetcore"&gt;ASP.NET Core SPA Templates Need Better Options for Authentication · Issue #42158 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/42158#issuecomment-1481742187"&gt;https://github.com/dotnet/aspnetcore/issues/42158#issuecomment-1481742187&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 での ASP.NET Core SPA テンプレートに関する変更点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;既存の Cookie ベースの認証を拡張し、SPA アプリケーションでのカスタマイズのサポート&lt;/li&gt;
&lt;li&gt;既存のアイデンティティのモダン化によるトークベースの認証のサポート&lt;/li&gt;
&lt;li&gt;SPA テンプレートから Duende IdentityServer の依存の削除&lt;/li&gt;
&lt;li&gt;ASP.NET Core の認証オプションの新しいドキュメントの作成&lt;/li&gt;
&lt;li&gt;認証ドキュメントへのテンプレートからのリンク&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/03/19/updates</id>
		<title>2023-03-19: .NET 8 Preview 2, Visual Studio 2022 v17.6 Preview 2, Semantic Kernel, MessagePack-CSharp v2.5.108</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/03/19/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-03-19T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-8-preview-2.net-blog"&gt;Announcing .NET 8 Preview 2 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは System.ComponentModel.DataAnnotations を拡張する属性の追加やリフレクションでの関数ポインターのサポートが追加された。&lt;/p&gt;
&lt;h3 id="ef-core-8-preview-2-lite-and-familiar.net-blog"&gt;EF Core 8 Preview 2: Lite and familiar - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 8 Preview 2 がリリースされた。&lt;/p&gt;
&lt;p&gt;記事ではこのリリースで利用できるようになった SQLite での JSON 列サポートと SQL Server/Azure SQL databases での HierarchyId サポートについて紹介している。&lt;/p&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-2.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 2 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-2/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 8 での ASP.NET Core のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blazor の QuickGrid サポート&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly での JIT (Jiterpreter) によるパフォーマンス向上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[FromBody]&lt;/code&gt; が複数指定されていることを検出する Analyzer&lt;/li&gt;
&lt;li&gt;より回復力のある統合のための &lt;code&gt;ProblemDetails&lt;/code&gt; の新 API&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ObjectPool&lt;/code&gt; での &lt;code&gt;IResettable&lt;/code&gt; インターフェース&lt;/li&gt;
&lt;li&gt;名前付きパイプのパフォーマンスの向上&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-v17.6-preview-2-is-now-available-visual-studio-blog"&gt;Visual Studio 2022 v17.6 Preview 2 is now available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-6-preview-2-is-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-6-preview-2-is-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6 Preview 2 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性のレベルアップ
&lt;ul&gt;
&lt;li&gt;ビルド中の Git ステージとコミット&lt;/li&gt;
&lt;li&gt;マージダイアログの改善&lt;/li&gt;
&lt;li&gt;ブレークポイントグループ&lt;/li&gt;
&lt;li&gt;C++ のインストルメンテーションプロファイリング&lt;/li&gt;
&lt;li&gt;WSL 上での .NET のプロファイラーライブグラフ&lt;/li&gt;
&lt;li&gt;C++ メンバー関数の作成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ゲーム開発の合理化
&lt;ul&gt;
&lt;li&gt;Unreal Engine コード解析&lt;/li&gt;
&lt;li&gt;Tim Jones による　HLSL ツール拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET モバイル開発
&lt;ul&gt;
&lt;li&gt;Android Manifest エディター&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;エンタープライズ管理
&lt;ul&gt;
&lt;li&gt;Visual Studio のレイアウトのイントラネットからのホストとデプロイ&lt;/li&gt;
&lt;li&gt;インストーラーでの利用可能なプロダクトの公開の制限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="hello-semantic-kernel-semantic-kernel"&gt;Hello, Semantic Kernel! | Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/semantic-kernel/hello-world/"&gt;https://devblogs.microsoft.com/semantic-kernel/hello-world/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Semantic Kernel が公開された。&lt;/p&gt;
&lt;p&gt;Semantic Kernel は OpenAI や Azure OpenAI Service といった大規模言語モデル (LLM) の AI プロンプトをアプリケーションに組み込むための 軽量 SDK。現在 C# がサポートされ、Python がプレビューサポートとなっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/semantic-kernel"&gt;microsoft/semantic-kernel: Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-v2.5.108-neueccmessagepack-csharp"&gt;Release v2.5.108 · neuecc/MessagePack-CSharp&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases/tag/v2.5.108"&gt;https://github.com/neuecc/MessagePack-CSharp/releases/tag/v2.5.108&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MessagePack-CSharp v2.5.108 がリリースされた。&lt;/p&gt;
&lt;p&gt;v2.4.59 以降の変更点として nullable アノテーションの追加や .NET 5 のサポートの廃止、ジェネレーターのロールフォワード、その他さまざまな修正と改善が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases/tag/v2.5.94"&gt;Release v2.5.94 · neuecc/MessagePack-CSharp · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases/tag/v2.5.103"&gt;Release v2.5.103 · neuecc/MessagePack-CSharp · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="how-asyncawait-really-works-in-c.net-blog"&gt;How Async/Await Really Works in C# - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/how-async-await-really-works/"&gt;https://devblogs.microsoft.com/dotnet/how-async-await-really-works/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# の async/await がどのように動いているのかを解説している記事。&lt;/p&gt;
&lt;p&gt;APM やイベントベースでの非同期パターンから Task ベースへの流れ、Task と ValueTask、C# におけるコンパイル時のコードの展開とその動作の詳しい解説といったことが書かれている。&lt;/p&gt;
&lt;h3 id="release-release-v2.52.0-grpcgrpc-dotnet"&gt;Release Release v2.52.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.52.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.52.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;grpc-dotnet (Grpc.Net) v2.52 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは dotnet-grpc ツールが .NET 6 をターゲットとするようになったほか、様々な細かい不具合の修正と改善が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.52.0-pre1"&gt;Release Release v2.52.0-pre1 · grpc/grpc-dotnet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-v1.2.5-microsoftwindowsappsdk"&gt;Release v1.2.5 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.5"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.2.5 (1.2.230313.1) がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Composition のシャットダウン中のクラッシュの修正や画面がオフの場合でもアニメーションが継続する問題の修正、WebView2 でのマウスとタッチの入力の失敗の修正が含まれている。&lt;/p&gt;
&lt;h3 id="net-march-2023-updates.net-7.0.4.net-6.0.15.net-blog"&gt;.NET March 2023 Updates – .NET 7.0.4, .NET 6.0.15 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/march-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/march-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7.0.4 と .NET 6.0.15 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは細かい不具合の修正と改善が複数含まれている。&lt;/p&gt;
&lt;h3 id="announcing-polyglot-notebooks-multi-language-notebooks-in-visual-studio-code.net-blog"&gt;Announcing Polyglot Notebooks! Multi-language notebooks in Visual Studio Code - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-polyglot-notebooks-harness-the-power-of-multilanguage-notebooks-in-visual-studio-code/"&gt;https://devblogs.microsoft.com/dotnet/announcing-polyglot-notebooks-harness-the-power-of-multilanguage-notebooks-in-visual-studio-code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polyglot Notebooks (旧 .NET Interactive Notebooks) が Visual Studio Code 向け拡張として Marketplace で一般公開された。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-8-preview-2"&gt;.NET 8 Preview 2で追加された入力値検証について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/bb5cb32470ca8a"&gt;https://zenn.dev/tomokusaba/articles/bb5cb32470ca8a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Preview 2 で追加された System.ComponentModel.DataAnnotations の検証属性の機能を紹介している。&lt;/p&gt;
&lt;h3 id="blazor-webassembly"&gt;Blazor WebAssemblyにおける入力値検証について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/9fd92c1716ca30"&gt;https://zenn.dev/tomokusaba/articles/9fd92c1716ca30&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor WebAssembly での入力値検証の実装方法について。&lt;/p&gt;
&lt;h3 id="wearedotnet"&gt;#WeAreDotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;tim.cadenbach/wearedotnet-d8ec96685c33"&gt;https://medium.com/&amp;#64;tim.cadenbach/wearedotnet-d8ec96685c33&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#WeAreDotnet というコミュニティーポータルについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.wearedotnet.io/"&gt;WeAreDotnet (Beta)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="getting-started-with-eventstoredb-c"&gt;Getting Started with EventStoreDb (C#)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;no1.melman10/getting-started-with-eventstoredb-c-13411ec08713"&gt;https://medium.com/&amp;#64;no1.melman10/getting-started-with-eventstoredb-c-13411ec08713&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EventStoreDB というイベントソーシング向けデータベースを使う方法の解説。&lt;/p&gt;
&lt;p&gt;なお EventStoreDB 自体も .NET (C#) で実装されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/EventStore/EventStore"&gt;EventStore/EventStore: The stream database optimised for event sourcing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="extending-visual-studio-codelens-functionality-part-ii"&gt;Extending Visual Studio CodeLens Functionality - Part II&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codingwithcalvin.net/extending-visual-studio-codelens-functionality-part-ii/"&gt;https://codingwithcalvin.net/extending-visual-studio-codelens-functionality-part-ii/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の CodeLens を拡張方法の解説シリーズ。この記事では CodeLens のコールバックを実装する方法について解説している。&lt;/p&gt;
&lt;h3 id="c-c"&gt;忘れがちなカルチャー依存問題 | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/3/string-order/"&gt;https://ufcpp.net/blog/2023/3/string-order/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Globalization Invariant Mode を有効にした場合に文字列比較における Invariant, Ordinal の扱いと Order などでのパフォーマンスについて。&lt;/p&gt;
&lt;h3 id="xcopywinui3"&gt;XCopyでデプロイ可能なWinUI3のミニマムプロジェクトを作る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nin_neko/articles/ecb16042f04c01"&gt;https://zenn.dev/nin_neko/articles/ecb16042f04c01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;XCopy デプロイ (インストールせずファイルをコピーすれば動く形)のミニマムな WinUI 3 アプリケーションプロジェクトの作り方について。&lt;/p&gt;
&lt;h3 id="cesu-8-utf-16-qiita"&gt;CESU-8 から UTF-16 への変換 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/7shi/items/8eae6d909e1b82b35215"&gt;https://qiita.com/7shi/items/8eae6d909e1b82b35215&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CESU-8 (UTF-8 の変種) を UTF-16 に変換する方法について。&lt;/p&gt;
&lt;h3 id="unity-dots-support-in-rider-2023.1-the.net-tools-blog"&gt;Unity DOTS support in Rider 2023.1 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/16/unity-dots-support-in-rider-2023-1/"&gt;https://blog.jetbrains.com/dotnet/2023/03/16/unity-dots-support-in-rider-2023-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.1 で追加された Unity の DOTS サポートの紹介。&lt;/p&gt;
&lt;p&gt;DOTS 向けのテンプレートやコード生成などがサポートされている。&lt;/p&gt;
&lt;h3 id="help-us-investigate-a-new-welcome-experience-in-visual-studio-17.6-preview-2-visual-studio-blog"&gt;Help us investigate a new Welcome Experience in Visual Studio 17.6 Preview 2 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/welcome-experience/"&gt;https://devblogs.microsoft.com/visualstudio/welcome-experience/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 17.6 Preview 2 で導入された新しい Welcome ページについて。&lt;/p&gt;
&lt;p&gt;以前のスタートウィンドウ(既存のソリューションの選択や新しいプロジェクトの作成などを行うウィンドウ)に代わり導入された Welcome ページの紹介とそのフィードバックを求める案内。&lt;/p&gt;
&lt;h3 id="c-search-ad-entry-by-objectsid-using-novell-directory-ldap-nuget-package"&gt;C# - Search AD entry by ObjectSid using Novell Directory Ldap Nuget package&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/hbolajraf/c-search-ad-entry-by-objectsid-using-novell-directory-ldap-nuget-package-28il"&gt;https://dev.to/hbolajraf/c-search-ad-entry-by-objectsid-using-novell-directory-ldap-nuget-package-28il&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Novell.Directory.Ldap.NETStandard パッケージを使用して ObjectSid を元に Active Directory を検索する方法について。&lt;/p&gt;
&lt;h3 id="asp.net-core-try-server-sent-events"&gt;[ASP.NET Core] Try Server-Sent Events&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/masanori_msl/aspnet-core-try-server-sent-events-5db2"&gt;https://dev.to/masanori_msl/aspnet-core-try-server-sent-events-5db2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core で Server-Sent Events を実現する方法について。&lt;/p&gt;
&lt;h3 id="building-a-video-calling-app-using-wpf-dyte"&gt;Building a Video Calling App Using WPF &amp;amp; Dyte&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dyte.io/blog/building-video-calling-app-using-wpf-dyte/"&gt;https://dyte.io/blog/building-video-calling-app-using-wpf-dyte/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dyte (ライブビデオ、ビデオカンファレンスを扱うサービス) を使用してビデオ通話を行う WPF アプリケーションを実装する方法について。&lt;/p&gt;
&lt;h3 id="net-qiita"&gt;.NETでのコンソールのバッファーとウィンドウについて - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/rougemeilland/items/10f4d94c9343fd8eb708"&gt;https://qiita.com/rougemeilland/items/10f4d94c9343fd8eb708&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET でのコンソールのバッファーとウィンドウの取り扱いについて。Console.Clear の挙動についても触れている。&lt;/p&gt;
&lt;h3 id="implementing-an-accessible-checkable-wpf-tree-view-engineeringmicrosoft"&gt;Implementing an accessible, checkable WPF Tree View - Engineering&amp;#64;Microsoft&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/engineering-at-microsoft/implementing-an-accessible-checkable-wpf-tree-view/"&gt;https://devblogs.microsoft.com/engineering-at-microsoft/implementing-an-accessible-checkable-wpf-tree-view/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Accessibility Insight チームが修正した WPF のチェックボックスを持つツリービューの実装について。&lt;/p&gt;
&lt;h3 id="working-with-git-in-jetbrains-rider"&gt;Working with Git in JetBrains Rider&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/working-with-git-in-jetbrains-rider/"&gt;https://andrewlock.net/working-with-git-in-jetbrains-rider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider での様々な Git 操作についての紹介。&lt;/p&gt;
&lt;h3 id="static-interface-members-generic-attributes-auto-default-structs-using-c-11-in-rider-and-resharper-the.net-tools-blog"&gt;Static Interface Members, Generic Attributes, Auto-Default Structs – Using C# 11 in Rider and ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/14/static-interface-members-generic-attributes-auto-default-structs-using-csharp-11-in-rider-and-resharper/"&gt;https://blog.jetbrains.com/dotnet/2023/03/14/static-interface-members-generic-attributes-auto-default-structs-using-csharp-11-in-rider-and-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider と ReSharper での C# 11 の Static abstract members in interfaces やジェネリック属性、struct の自動デフォルトといった新機能をサポートする機能の紹介。&lt;/p&gt;
&lt;h3 id="improving-the-spell-checker-visual-studio-blog"&gt;Improving the Spell Checker - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/improving-the-spell-checker/"&gt;https://devblogs.microsoft.com/visualstudio/improving-the-spell-checker/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.6 Preview 2 でのスペルチェッカーの改善についての紹介。&lt;/p&gt;
&lt;p&gt;プログラミング言語固有の辞書や除外辞書のエンコーディングの改善、特殊ケースでの検出の改善、スペルチェッカーのカスタマイズについてを紹介している。&lt;/p&gt;
&lt;h3 id="net-qiita-1"&gt;特定フォルダー以下にあるプロジェクトで参照しているライブラリの一覧を取得する(.NET) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/a6149a40d9c775a6665d"&gt;https://qiita.com/karuakun/items/a6149a40d9c775a6665d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;特定フォルダー以下にある .csproj から参照しているライブラリーの一覧を PowerShell で取得する方法について。&lt;/p&gt;
&lt;h3 id="cgoogle-qiita"&gt;C#からGoogleスプレッドシートを操作してみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tat_tt/items/b9757cc940338c7deeab"&gt;https://qiita.com/tat_tt/items/b9757cc940338c7deeab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# から Google スプレッドシートを操作するための手順とデータの読み取り例の解説。&lt;/p&gt;
&lt;h3 id="azure-functions-v3-to-v4.net-7.0"&gt;Azure Functions v3 to v4 (.NET 7.0)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tessecraft_r/articles/1d3f83025e0830"&gt;https://zenn.dev/tessecraft_r/articles/1d3f83025e0830&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で実装した Azure Functions を v3 から v4 へと移行する際に行ったことを解説している記事。&lt;/p&gt;
&lt;h3 id="reactiveproperty-v9.1"&gt;ReactiveProperty v9.1 をリリースしました&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/okazuki/articles/release-reactiveproperty-v9_1_0"&gt;https://zenn.dev/okazuki/articles/release-reactiveproperty-v9_1_0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReactiveProperty v9.1 の新機能についての紹介。コマンドへの拡張メソッドや &lt;code&gt;ReactivePropertiesValidator&lt;/code&gt; の改良といったポイントを解説している。&lt;/p&gt;
&lt;h3 id="c-11-pattern-matching-on-span-for-constant-string"&gt;C# 11- Pattern Matching On Span For Constant String&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.c-sharpcorner.com/blogs/c-sharp-11-pattern-matching-on-span-for-constant-string"&gt;https://www.c-sharpcorner.com/blogs/c-sharp-11-pattern-matching-on-span-for-constant-string&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ReadOnlySpan&amp;lt;char&amp;gt;&lt;/code&gt; にはリストパターンマッチが使用できることについて。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="dfedermreferencetrimmer-easily-identify-which-dependencies-can-be-removed-from-a.net-project"&gt;dfederm/ReferenceTrimmer: Easily identify which dependencies can be removed from a .NET project&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dfederm/ReferenceTrimmer"&gt;https://github.com/dfederm/ReferenceTrimmer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用していない依存関係を簡単に洗い出すための MSBuild タスクと Roslyn Analyzer。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dfederm.com/removing-unused-dependencies-with-referencetrimmer/"&gt;Removing unused dependencies with ReferenceTrimmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="azuredata-api-builder-data-api-builder-for-azure-databases-provides-modern-rest-and-graphql-endpoints-to-your-azure-databases"&gt;Azure/data-api-builder: Data API builder for Azure Databases provides modern REST and GraphQL endpoints to your Azure Databases.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Azure/data-api-builder"&gt;https://github.com/Azure/data-api-builder&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Database (CosmosDB, MySQL, PostgreSQL, SQL Database) に対する REST/GraphQL ゲートウェイサーバー。&lt;/p&gt;
&lt;p&gt;主に Azure Static Web Apps からデータベースにアクセスするために使用される。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://techcommunity.microsoft.com/t5/apps-on-azure-blog/announcing-database-connections-for-azure-static-web-apps-with/ba-p/3747831"&gt;Announcing Database connections for Azure Static Web Apps with Data API builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/azure/graphql-on-azure-part-12-graphql-as-a-service-3nd8"&gt;GraphQL on Azure: Part 12 - GraphQL as a Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="wilder-mindsminimalapidiscovery-a.net-core-library-to-support-registering-minimal-apis-in-a-sane-way"&gt;wilder-minds/MinimalApiDiscovery: A .NET Core Library to support registering Minimal APIs in a Sane Way&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/wilder-minds/MinimalApiDiscovery"&gt;https://github.com/wilder-minds/MinimalApiDiscovery&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Minimal API を小分け(グループ)にして自動登録できるようにするライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wildermuth.com/2023/02/22/minimal-api-discovery/"&gt;A Minimal API Discovery Tool for Large APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="jsakamotoblazingstory-the-clone-of-storybook-for-blazor-a-frontend-workshop-for-building-ui-components-and-pages-in-isolation"&gt;jsakamoto/BlazingStory: The clone of &amp;quot;Storybook&amp;quot; for Blazor, a frontend workshop for building UI components and pages in isolation.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jsakamoto/BlazingStory/"&gt;https://github.com/jsakamoto/BlazingStory/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UI コンポーネントカタログ Storybook のBlazor 向けのクローン。&lt;/p&gt;
&lt;!-- https://twitter.com/jsakamoto/status/1635746624759795713 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Today, I released the &amp;quot;Blazing Story&amp;quot; preview 1, the clone of &amp;quot;Storybook&amp;quot; for Blazor! 🎉&lt;a href="https://t.co/HbtUJlBbLG"&gt;https://t.co/HbtUJlBbLG&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Blazor?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Blazor&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Storybook?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Storybook&lt;/a&gt;&lt;br&gt;It is the first preview, will not be stable, and lacks many features, but an important milestone for me. &lt;a href="https://t.co/LF9kLvUuvz"&gt;pic.twitter.com/LF9kLvUuvz&lt;/a&gt;&lt;/p&gt;&amp;mdash; &amp;#64;jsakamoto (&amp;#64;jsakamoto) &lt;a href="https://twitter.com/jsakamoto/status/1635746624759795713?ref_src=twsrc%5Etfw"&gt;March 14, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="damianedwardsrazorslices-lightweight-razor-based-templates-for-asp.net-core-without-mvc-razor-pages-or-blazor"&gt;DamianEdwards/RazorSlices: Lightweight Razor-based templates for ASP.NET Core without MVC, Razor Pages, or Blazor.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/DamianEdwards/RazorSlices"&gt;https://github.com/DamianEdwards/RazorSlices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core MVC や Razor Pages なしに Razor ベースのテンプレートを使用するライブラリー。&lt;/p&gt;
&lt;p&gt;主に Minimal API のようなユースケースを想定したものとなっている。(ASP.NET Core MVC は使用しないが ASP.NET Core フレームワークには依存がある)&lt;/p&gt;
&lt;!-- https://twitter.com/DamianEdwards/status/1635404036118827008 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I released a new NuGet library that enables using Razor to produce templated responses from &lt;a href="https://twitter.com/hashtag/aspnetcore?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#aspnetcore&lt;/a&gt; Minimal APIs, middleware, etc. w/ a focus on performance &amp;amp; PAYG feature implementation.&lt;br&gt;&lt;br&gt;NuGet: &lt;a href="https://t.co/TJUfGKLAk0"&gt;https://t.co/TJUfGKLAk0&lt;/a&gt;&lt;br&gt;GitHub: &lt;a href="https://t.co/f7YIgJ1GyD"&gt;https://t.co/f7YIgJ1GyD&lt;/a&gt;&lt;/p&gt;&amp;mdash; hackyderm.io/&amp;#64;damianedwards 🦣 (&amp;#64;DamianEdwards) &lt;a href="https://twitter.com/DamianEdwards/status/1635404036118827008?ref_src=twsrc%5Etfw"&gt;March 13, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/03/12/updates</id>
		<title>2023-03-12: BlazorBindings.Maui v1.0, Autofac v7.0.0, Windows App SDK 1.3.0 Preview 1</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/03/12/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-03-12T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="blazorbindings.maui-v1.0"&gt;BlazorBindings.Maui v1.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/dreamescaper/blazorbindingsmaui-v10-50bo"&gt;https://dev.to/dreamescaper/blazorbindingsmaui-v10-50bo&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v7.0.0-autofacautofac"&gt;Release v7.0.0 · autofac/Autofac&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/autofac/Autofac/releases/tag/v7.0.0"&gt;https://github.com/autofac/Autofac/releases/tag/v7.0.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v1.3.0-preview1-microsoftwindowsappsdk"&gt;Release v1.3.0-preview1 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3.0-preview1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3.0-preview1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.1-eap-8-is-here-with-improved-support-for-c-and-c-the.net-tools-blog"&gt;ReSharper 2023.1 EAP 8 Is Here With Improved Support for C# and C++ | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/10/resharper-2023-1-eap-8/"&gt;https://blog.jetbrains.com/dotnet/2023/03/10/resharper-2023-1-eap-8/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.1-eap-8-is-here-with-improved-c-and-f-support-new-editor-features-and-fixes-for-unity-the.net-tools-blog"&gt;Rider 2023.1 EAP 8 Is Here With Improved C# and F# Support, New Editor Features and Fixes for Unity | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/10/rider-2023-1-eap-8/"&gt;https://blog.jetbrains.com/dotnet/2023/03/10/rider-2023-1-eap-8/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/06/rider-2023-1-eap-7/"&gt;Rider 2023.1 EAP 7 Comes With Support for Unity DOTS, a VCS Widget for Perforce, and More | The .NET Tools Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-13.0.3-jamesnknewtonsoft.json"&gt;Release 13.0.3 · JamesNK/Newtonsoft.Json&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/JamesNK/Newtonsoft.Json/releases/tag/13.0.3"&gt;https://github.com/JamesNK/Newtonsoft.Json/releases/tag/13.0.3&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c-c-c"&gt;C# での破壊的変更の今後の扱い(案) | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/3/csharp-breaking-change/"&gt;https://ufcpp.net/blog/2023/3/csharp-breaking-change/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="from-metadata-to-event-block-in-nettrace-format"&gt;From Metadata to Event block in nettrace format&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/from-metadata-to-event-block-in-nettrace-format-90763a186dd5"&gt;https://chnasarre.medium.com/from-metadata-to-event-block-in-nettrace-format-90763a186dd5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="creating-aws-cloudwatch-logs-using.net-console-application-a-step-by-step-guide"&gt;Creating AWS CloudWatch Logs using .NET Console Application: A Step-by-Step Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/dileepamabulage/creating-aws-cloudwatch-logs-using-net-console-application-a-step-by-step-guide-2a1m"&gt;https://dev.to/dileepamabulage/creating-aws-cloudwatch-logs-using-net-console-application-a-step-by-step-guide-2a1m&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="stable-diffusion-with-c"&gt;Stable Diffusion with C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://onnxruntime.ai/docs/tutorials/csharp/stable-diffusion-csharp.html"&gt;https://onnxruntime.ai/docs/tutorials/csharp/stable-diffusion-csharp.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dot-net-office-serilog-in-asp.net-core-7.0-structured-logging-using-serilog-in-asp.net-core-7.0"&gt;Dot Net Office : Serilog in ASP.NET Core 7.0 – Structured Logging using Serilog in ASP.NET Core 7.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.dotnetoffice.com/2023/03/serilog-in-aspnet-core-70-structured.html?m=1"&gt;https://www.dotnetoffice.com/2023/03/serilog-in-aspnet-core-70-structured.html?m=1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.5-performance-enhancements-visual-studio-blog"&gt;Visual Studio 2022 – 17.5 Performance Enhancements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-5-performance-enhancements/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-5-performance-enhancements/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="override-system.text.json.jsonserializer-error-message-in-asp.net-core"&gt;Override System.Text.Json.JsonSerializer error message in ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://mohsen.es/override-system-text-json-jsonserializer-error-message-in-asp-net-core-35374255dd9f"&gt;https://mohsen.es/override-system-text-json-jsonserializer-error-message-in-asp-net-core-35374255dd9f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-for-the-winforms-visual-basic-application-framework.net-blog"&gt;What's new for the WinForms Visual Basic Application Framework - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/update-to-winforms-vb-appframework/"&gt;https://devblogs.microsoft.com/dotnet/update-to-winforms-vb-appframework/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="generate-images-with-ai-using-stable-diffusion-c-and-onnx-runtime.net-blog"&gt;Generate images with AI using Stable Diffusion, C#, and ONNX Runtime - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/generate-ai-images-stable-diffusion-csharp-onnx-runtime/"&gt;https://devblogs.microsoft.com/dotnet/generate-ai-images-stable-diffusion-csharp-onnx-runtime/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="a-list-of-ai-powered-tools-for-c-developers"&gt;A list of AI powered tools for C# Developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/eekayonline/a-list-of-ai-powered-tools-for-c-developers-3p1k"&gt;https://dev.to/eekayonline/a-list-of-ai-powered-tools-for-c-developers-3p1k&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor"&gt;Blazorで名前を付けて保存ダイアログを表示して保存する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/artuer/articles/cc464956745483"&gt;https://zenn.dev/artuer/articles/cc464956745483&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-editform-qiita"&gt;Blazor の EditForm を含むアプリ開発（カスタムバリデーション込み） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/_gobo/items/4f3e3845a029ba43f919"&gt;https://qiita.com/_gobo/items/4f3e3845a029ba43f919&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="developing-accessible-apps-with-visual-studio-visual-studio-blog"&gt;Developing Accessible Apps with Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/developing-accessible-apps-with-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/developing-accessible-apps-with-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-maui-blazor-markdown"&gt;.NET MAUI Blazor で Markdown メモアプリを作った感想&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomori_k/articles/8ecac5a5920b59"&gt;https://zenn.dev/tomori_k/articles/8ecac5a5920b59&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-march-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | March 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/08/net-annotated-monthly-march-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/03/08/net-annotated-monthly-march-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cchatgpt-api-with-betalgo.openai.gpt3-qiita"&gt;C#でChatGPT APIを触りたい with Betalgo.OpenAI.GPT3 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/TellMin/items/7baaba35111fddeffe0c"&gt;https://qiita.com/TellMin/items/7baaba35111fddeffe0c&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="chatgpt-demos-for-blazor-and-other-projects-with-new-api-for-turbo-model-visual-studio-magazine"&gt;ChatGPT Demos for Blazor and Other Projects with New API for 'Turbo' Model -- Visual Studio Magazine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiomagazine.com/articles/2023/03/07/chatgpt-demos.aspx?m=1"&gt;https://visualstudiomagazine.com/articles/2023/03/07/chatgpt-demos.aspx?m=1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-web-api-configuration-validation-at-startup-using-fluentvalidation"&gt;.NET Web API configuration validation at startup using FluentValidation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;imardare/net-web-api-configuration-validation-at-startup-using-fluentvalidation-6d43ea75e828"&gt;https://medium.com/&amp;#64;imardare/net-web-api-configuration-validation-at-startup-using-fluentvalidation-6d43ea75e828&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="crosbridgejson"&gt;C#からrosbridgeにJSONを投げる遊び&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/husty/articles/a003dfc33af925"&gt;https://zenn.dev/husty/articles/a003dfc33af925&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;c#コンソールアプリケーションで標準エラー出力に色を付ける方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/rougemeilland/items/9f272db7e0252c2f48d3"&gt;https://qiita.com/rougemeilland/items/9f272db7e0252c2f48d3&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="neue-cc-csbindgen-cc"&gt;neue cc - csbindgen - C#のためのネイティブコード呼び出し自動生成、或いはC#からのネイティブコード呼び出しの現代的手法について&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2023/03/09-csbindgen.html"&gt;https://neue.cc/2023/03/09-csbindgen.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-march-2023-the.net-tools-blog-1"&gt;.NET Annotated Monthly | March 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/08/net-annotated-monthly-march-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/03/08/net-annotated-monthly-march-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="wpf"&gt;WPFで未処理の例外を処理するベストプラクティス&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2023-03-08-wpf-unhandled-exception"&gt;https://zenn.dev/nuits_jp/articles/2023-03-08-wpf-unhandled-exception&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="role-based-authorization-in-asp.net-core"&gt;Role-based Authorization in ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://coderethinked.com/role-based-authorization-in-asp-net-core/"&gt;https://coderethinked.com/role-based-authorization-in-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="validating-connection-strings-on.net-startup"&gt;Validating Connection Strings on .NET Startup&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/validating-connection-strings-on-dotnet-startup"&gt;https://khalidabuhakmeh.com/validating-connection-strings-on-dotnet-startup&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-the-reliable-web-app-pattern-for.net.net-blog"&gt;Introducing the Reliable Web App Pattern for .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-the-reliable-web-app-pattern/"&gt;https://devblogs.microsoft.com/dotnet/introducing-the-reliable-web-app-pattern/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="netazurekinectrealsense"&gt;.NETでAzureKinect・RealSenseを使う&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/husty/articles/a43118c0fe1d4a"&gt;https://zenn.dev/husty/articles/a43118c0fe1d4a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="winui3desktop-qiita"&gt;WinUI3Desktopの紹介・導入 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Yayoi-t/items/238476e8c9bdb59be775"&gt;https://qiita.com/Yayoi-t/items/238476e8c9bdb59be775&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-12-extensions-c-c"&gt;【C# 12 候補】 Extensions | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/3/extensions"&gt;https://ufcpp.net/blog/2023/3/extensions&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="mk3008carbunql-a-lightweight-library-for-parsing-and-building-select-queries.sql-can-be-rebuilt-dynamically"&gt;mk3008/Carbunql: A lightweight library for parsing and building select queries. SQL can be rebuilt dynamically.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mk3008/Carbunql"&gt;https://github.com/mk3008/Carbunql&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/mkmonaka/articles/3fa32fa16cccbc"&gt;Carbunqlを用いた動的SQLの生成&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/jcouv/status/1633227150777278466?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We merged a preview C# 12 feature into VS 17.6 (preview 3): alias any type.&lt;br&gt;This relaxes many restrictions on `using` aliases, allowing built-in types, tuple types, pointer types, array types, etc.&lt;br&gt;&lt;br&gt;For example: `using Point = (int x, int y);`&lt;a href="https://t.co/FbFG9KXACe"&gt;https://t.co/FbFG9KXACe&lt;/a&gt;&lt;/p&gt;&amp;mdash; Julien Couvreur (&amp;#64;jcouv) &lt;a href="https://twitter.com/jcouv/status/1633227150777278466?ref_src=twsrc%5Etfw"&gt;March 7, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="blazor-sections-api-proposal-issue-46937-dotnetaspnetcore"&gt;Blazor Sections API Proposal · Issue #46937 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/46937"&gt;https://github.com/dotnet/aspnetcore/issues/46937&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="designsnet8.0-browser-tfm.md-at-main-dotnetdesigns-github"&gt;designs/net8.0-browser-tfm.md at main · dotnet/designs · GitHub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/designs/blob/main/accepted/2023/net8.0-browser-tfm.md"&gt;https://github.com/dotnet/designs/blob/main/accepted/2023/net8.0-browser-tfm.md&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcement-razor-compiler-api-breaking-changes-issue-8399-dotnetrazor"&gt;Announcement: Razor Compiler API Breaking Changes · Issue #8399 · dotnet/razor&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/razor/issues/8399"&gt;https://github.com/dotnet/razor/issues/8399&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/03/03/updates</id>
		<title>2023-03-03: Visual Studio 2022 v17.6 Preview 1, C# for Godot 4.0, ImageSharp 3.0.0, Microsoft Teams' Permission Service migration to .NET 6</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/03/03/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-03-03T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="try-visual-studio-2022-v17.6-preview-1-visual-studio-blog"&gt;Try Visual Studio 2022 v17.6 Preview 1 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/try-visual-studio-2022-v17-6-preview-1/"&gt;https://devblogs.microsoft.com/visualstudio/try-visual-studio-2022-v17-6-preview-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.6 Preview 1 がリリースされた。&lt;/p&gt;
&lt;p&gt;記事ではこのリリースに含まれる次の新機能を紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDE のプロダクティビティ
&lt;ul&gt;
&lt;li&gt;ブレースのペアの色付け&lt;/li&gt;
&lt;li&gt;Git のラインステージングの unstage&lt;/li&gt;
&lt;li&gt;GitHub Issues 参照&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET
&lt;ul&gt;
&lt;li&gt;C# の IntelliCode による API 使用例 (GitHub 検索連携)&lt;/li&gt;
&lt;li&gt;.NET リモートデバッグ時のビジュアライザーサポート&lt;/li&gt;
&lt;li&gt;ARM64 デバイスでの .NET MAUI Tooling&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ (ゲーム)
&lt;ul&gt;
&lt;li&gt;Unreal Engine ログビューア&lt;/li&gt;
&lt;li&gt;コード分析統合 - Unreal Header Tool&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ (クロスプラットフォーム)
&lt;ul&gt;
&lt;li&gt;CMake デバッガー&lt;/li&gt;
&lt;li&gt;Unix 環境でのリモートファイルエクスプローラー&lt;/li&gt;
&lt;li&gt;組み込み STM32CubeIDE プロジェクトの C/C++ のインポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="whats-new-in-c-for-godot-4.0"&gt;What's new in C# for Godot 4.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://godotengine.org/article/whats-new-in-csharp-for-godot-4-0/"&gt;https://godotengine.org/article/whats-new-in-csharp-for-godot-4-0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ゲームエンジン Godot 4.0 での C# 関連の変更について。&lt;/p&gt;
&lt;p&gt;Godot 4.0 では多くの面で変更があり、特に大きい点として SDK が Mono から .NET SDK へと変更され、デスクトップ向けのランタイムが CoreCLR となった。モバイルプラットフォームは引き続き Mono ランタイムとなる。この変更で Mono モジュールは .NET モジュールと呼ばれるようになり、.NET 6 の様々な恩恵を受けることが可能となった。&lt;/p&gt;
&lt;p&gt;その他 Source Generator や整数、浮動少数点の型、型やメンバーの名前の .NET ガイドラインへの準拠、NuGet へのアセンブリーの公開など、多数の変更がある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://godotengine.org/article/godot-4-0-sets-sail/"&gt;Godot 4.0 sets sail: All aboard for new horizons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="six-labors-announcing-imagesharp-3.0.0"&gt;Six Labors : Announcing ImageSharp 3.0.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sixlabors.com/posts/announcing-imagesharp-300/"&gt;https://sixlabors.com/posts/announcing-imagesharp-300/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ImageSharp 3.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンでは様々な API の簡素化や最大14.4倍のパフォーマンスの向上といった改善が含まれている。 ターゲットフレームワークは .NET 6 となり、レガシーフレームワークのサポートが終了しているほか、新しい Six Labors Split ライセンスが採用される最初のバージョンとなっている。&lt;/p&gt;
&lt;h3 id="microsoft-teams-permission-service-migration-to.net-6.net-blog"&gt;Microsoft Teams' Permission Service migration to .NET 6 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/microsoft-teams-permission-service-migration-to-dotnet-6/"&gt;https://devblogs.microsoft.com/dotnet/microsoft-teams-permission-service-migration-to-dotnet-6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Teams の Permission Service を .NET 6 へ移行した事例紹介。&lt;/p&gt;
&lt;p&gt;Microsoft Teams のサービスの一つである Permission Service を .NET Framework 4.7.2 から .NET 6 へ移行した結果、100%のパフォーマンス向上とレイテンシーの 30-45% 程度の低減を実現できたとのこと。&lt;/p&gt;
&lt;p&gt;Permission Service はユーザーとテナントを評価して、プレゼンスの表示やユーザーの追加、チャットの開始、会議の作成といったことを行えるかどうかを決定する様々なケースにおいて利用されるバックエンドサービスであり、厳しいパフォーマンス要件が求められている。.NET 6 への移行前は .NET Framework 4.7.2 で Azure の Classic Cloud Services、API は OWIN/Katana で構築されていた。&lt;/p&gt;
&lt;p&gt;移行のプロセス、実行 (人数と期間や ServicePointManagerの非推奨化からの移行漏れ問題)、ロールアウト中に見られた洞察 (.NET 6 版のパフォーマンスが高く、多くのトラフィックをさばいた結果既存のものよりも使用率が高く見えた)、効果 (レイテンシーの改善)といったものを紹介している。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-version-17.5.1-visual-studio-2022-release-notes-microsoft-learn"&gt;Visual Studio 2022 version 17.5.1 | Visual Studio 2022 Release Notes | Microsoft Learn&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes#17.5.1"&gt;https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes#17.5.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.5.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは 17.5 (.NET SDK 7.0.200) での &lt;code&gt;dotnet pack&lt;/code&gt; の &lt;code&gt;--output&lt;/code&gt; オプションに関する問題に対する対応 (.NET SDK 7.0.201) やいくつかの修正が行われている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/ja-jp/dotnet/core/compatibility/sdk/7.0/solution-level-output-no-longer-valid"&gt;ソリューション レベルの &lt;code&gt;--output&lt;/code&gt; オプションがビルド関連コマンドで無効に - .NET | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="build-better-extensions-with-visualstudio.extensibility-preview-3-visual-studio-blog"&gt;Build Better Extensions with VisualStudio.Extensibility Preview 3! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-preview-3/"&gt;https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-preview-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の新しい拡張 API / SDK である VisualStudio.Extensibility の Preview 3 のアナウンス。&lt;/p&gt;
&lt;p&gt;このプレビューでは次の機能を利用/実装できるようになった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;デバッガービジュアライザー&lt;/li&gt;
&lt;li&gt;カスタムダイアログ&lt;/li&gt;
&lt;li&gt;プロジェクトシステムへの問い合わせ&lt;/li&gt;
&lt;li&gt;エディターマージンの拡張機能&lt;/li&gt;
&lt;li&gt;拡張機能の構成
&lt;ul&gt;
&lt;li&gt;属性を指定するモデルから型指定されたプロパティーへ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="join-us-for-hack-together-microsoft-graph-and.net.net-blog"&gt;Join us for Hack Together: Microsoft Graph and .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/hack-together-microsoft-graph-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/hack-together-microsoft-graph-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Graph と .NET を使用したアプリを作って賞品をもらえるというバーチャルハッカソン(キャンペーン)のアナウンス。&lt;/p&gt;
&lt;p&gt;3月1日から3月15日までの期間に Microsoft Graph と .NET を使用したアプリを提出することで Xbox 等の賞品の獲得のチャンスがあるとのこと。&lt;/p&gt;
&lt;h3 id="release-plotly.net-v4.0.0-plotlyplotly.net"&gt;Release Plotly.NET v4.0.0 · plotly/Plotly.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/plotly/Plotly.NET/releases/tag/4.0.0"&gt;https://github.com/plotly/Plotly.NET/releases/tag/4.0.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Plotly.NET v4.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかのチャートに渡すことのできるデータの改善や plotly.js への変更に追随している。&lt;/p&gt;
&lt;!-- https://twitter.com/kMutagene/status/1629154550241189888 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I just released &lt;a href="https://t.co/noP8ove3qQ"&gt;https://t.co/noP8ove3qQ&lt;/a&gt; 4.0 with a bunch of QOL improvements and fixes. My favorite new feature: plotting multicategory data (&lt;a href="https://t.co/dCg3cNKs68"&gt;https://t.co/dCg3cNKs68&lt;/a&gt;). Full release notes here: &lt;a href="https://t.co/Ufp5UY53GZ"&gt;https://t.co/Ufp5UY53GZ&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/fsharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#fsharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dataviz?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dataviz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kevin Schneider (&amp;#64;kMutagene) &lt;a href="https://twitter.com/kMutagene/status/1629154550241189888?ref_src=twsrc%5Etfw"&gt;February 24, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="pico-chess-start-a-new-game.net-speech-recognition-tutorial"&gt;&amp;quot;Pico Chess, start a new game&amp;quot;: .NET Speech Recognition Tutorial&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/picovoice/pico-chess-start-a-new-game-net-speech-recognition-tutorial-2jj1"&gt;https://dev.to/picovoice/pico-chess-start-a-new-game-net-speech-recognition-tutorial-2jj1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Picovoice の .NET SDK をテキストベースのチェスエンジン ChessCore に組み合わせて音声で操作できるようにする方法について。&lt;/p&gt;
&lt;h3 id="net-tools-for-interacting-with-web3"&gt;7 .NET Tools for Interacting with Web3&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/c-sharp-progarmming/7-net-tools-for-interacting-with-web3-96a921c86a21"&gt;https://medium.com/c-sharp-progarmming/7-net-tools-for-interacting-with-web3-96a921c86a21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で使用できるブロックチェーンのライブラリー7つ (Nethereum, CardanoSharp, BlockM3, Neo, Stratis, Blockfrost.io, Nethermind) を紹介している。&lt;/p&gt;
&lt;h3 id="sentence-similarity-in-ml.net-model-builder.net-blog"&gt;Sentence Similarity in ML.NET Model Builder - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/sentence-similarity-mlnet-model-builder/"&gt;https://devblogs.microsoft.com/dotnet/sentence-similarity-mlnet-model-builder/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET Model Builder で文の類似性を扱えるようになったことについて。&lt;/p&gt;
&lt;h3 id="customising-the-requestdelegate-with-filters-behind-the-scenes-of-minimal-apis-part-8"&gt;Customising the RequestDelegate with filters: Behind the scenes of minimal APIs - Part 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-8-customising-the-request-delegate-with-filters/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-8-customising-the-request-delegate-with-filters/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core の Minimal API の裏側で作られる RequestDelegate とフィルターによるカスタマイズがどのように処理されるかについての解説。&lt;/p&gt;
&lt;h3 id="data-loading-in-entity-framework"&gt;Data Loading in Entity Framework&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/grontis/data-loading-in-entity-framework-2foe"&gt;https://dev.to/grontis/data-loading-in-entity-framework-2foe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entify Framework Core で &lt;code&gt;Microsoft.EntityFrameworkCore.Proxies&lt;/code&gt; を使用して遅延読み込みをする方法について。&lt;/p&gt;
&lt;h3 id="net-c-ubuntu-gtk-gnome-hello-world-qiita"&gt;.NET C# で Ubuntu で GTK で GNOME ウインドウで Hello World する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hiroxpepe/items/bc4caa6b6c77f5ddf89a"&gt;https://qiita.com/hiroxpepe/items/bc4caa6b6c77f5ddf89a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 と GtkSharp (GTK) を組み合わせて Linux 上にウィンドウを表示してみる方法について。&lt;/p&gt;
&lt;h3 id="the-fastest-way-to-add-files-and-folders-visual-studio-blog"&gt;The fastest way to add files and folders - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/the-fastest-way-to-add-files-and-folders/"&gt;https://devblogs.microsoft.com/visualstudio/the-fastest-way-to-add-files-and-folders/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.5 で導入された新しいファイル追加のダイアログの紹介。&lt;/p&gt;
&lt;h3 id="introducing-f-inline-type-parameter-name-hints-in-visual-studio.net-blog"&gt;Introducing F# Inline Type &amp;amp; Parameter Name Hints in Visual Studio - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/fsharp-inline-hints-visual-studio/"&gt;https://devblogs.microsoft.com/dotnet/fsharp-inline-hints-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio で F# の型とパラメータ名のインラインヒントがサポートされたことについて。&lt;/p&gt;
&lt;p&gt;現在プレビュー機能として提供されているため使用するには設定から有効にする必要がある。&lt;/p&gt;
&lt;h3 id="net-cpu-dotnet-trace-jsakamoto"&gt;.NET アプリケーションで CPU 時間を使っている箇所を dotnet trace を使って計測する | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/29509340/"&gt;https://devadjust.exblog.jp/29509340/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dotnet-trace&lt;/code&gt; を使用して .NET アプリケーションの CPU 時間をプロファイリングする方法について。&lt;/p&gt;
&lt;h3 id="cdictionary2int-32768-32767"&gt;C#でDictionaryのキーに2つのintを使いたい場合の性能比較 (ただしキーの範囲は[-32768, 32767])&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/zubu/articles/f594afaa3b6051"&gt;https://zenn.dev/zubu/articles/f594afaa3b6051&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;二つの int から得られるハッシュコードとその衝突率による Dictionary の性能について。ValueTuple や HashCode を使用した方法などを比較している。&lt;/p&gt;
&lt;h3 id="cmath.net-numericsslrsimple-linear-regression-qiita"&gt;【C#】Math.NET Numericsで単純線形回帰分析（SLR:Simple Linear Regression） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/MonaiTakeshi/items/e36c6fc232230699ff03"&gt;https://qiita.com/MonaiTakeshi/items/e36c6fc232230699ff03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Math.NET Numerics を使用して単純線形回帰分析を行う方法について。&lt;/p&gt;
&lt;h3 id="cmath.net-numericsmlrmultiple-linear-regression-qiita"&gt;【C#】Math.NET Numericsで重回帰分析（MLR:Multiple Linear Regression） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/MonaiTakeshi/items/df0ce261a2ffcde71495"&gt;https://qiita.com/MonaiTakeshi/items/df0ce261a2ffcde71495&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Math.NET Numerics を使用して重回帰分析を行う方法について。&lt;/p&gt;
&lt;h3 id="raw-strings-utf-8-strings-and-multiline-interpolations-using-c-11-in-rider-and-resharper-the.net-tools-blog"&gt;Raw Strings, UTF-8 Strings, and Multiline Interpolations – Using C# 11 in Rider and ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/27/raw-strings-utf-8-strings-multiline-interpolations-using-csharp-11-in-rider-and-resharper/"&gt;https://blog.jetbrains.com/dotnet/2023/02/27/raw-strings-utf-8-strings-multiline-interpolations-using-csharp-11-in-rider-and-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 11 での生文字列と UTF-8 文字列、複数行の文字列補完とそれに対する Rider と ReSharper でのサポートについての紹介。&lt;/p&gt;
&lt;h3 id="c-var-with-a-reference-type-is-always-nullable"&gt;C# &amp;quot;var&amp;quot; with a Reference Type is Always Nullable&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jeremybytes.blogspot.com/2023/02/c-var-with-reference-types-is-always.html"&gt;https://jeremybytes.blogspot.com/2023/02/c-var-with-reference-types-is-always.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# の &lt;code&gt;var&lt;/code&gt; で定義した変数は null 許容参照型として扱われることについて。&lt;/p&gt;
&lt;h3 id="blazorserverip-qiita"&gt;BlazorServerでクライアントのIPアドレスを全ページで共有する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takaOG/items/375d67397ddc3dc77fc9"&gt;https://qiita.com/takaOG/items/375d67397ddc3dc77fc9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor Server でクライアントの IP アドレスを取得し、ページ間で共有する方法について。&lt;/p&gt;
&lt;h3 id="netgrpc"&gt;.NETでgRPCサーバー立ててみた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/au/books/7cec3e306916a5"&gt;https://zenn.dev/au/books/7cec3e306916a5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で gRPC サーバーを実装し、データベースへの書き込みや Interceptor の実装といったことを行う手順の解説。&lt;/p&gt;
&lt;h3 id="opentelemetry-dotnet"&gt;OpenTelemetry dotnetを触ってみた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/k_maru/articles/first_opentelemetry_dotnet"&gt;https://zenn.dev/k_maru/articles/first_opentelemetry_dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry で ASP.NET Core アプリケーションのトレースを取得して、表示する方法について。&lt;/p&gt;
&lt;p&gt;外部サービス呼び出しや Zipkin での表示といった方法も紹介している。&lt;/p&gt;
&lt;h3 id="the-blazor-navigationmanager-kristoffer-strubes-blog"&gt;The Blazor NavigationManager - Kristoffer Strube’s Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kristoffer-strube.dk/post/the-blazor-navigationmanager/"&gt;https://kristoffer-strube.dk/post/the-blazor-navigationmanager/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor の NavigationManager クラスの解説。&lt;/p&gt;
&lt;p&gt;.NET 7 以降に新たに追加された API &lt;code&gt;RegisterLocationChangingHandler&lt;/code&gt; についても解説している。&lt;/p&gt;
&lt;h3 id="write-a-high-quality-readme-for-nuget-packages-the-nuget-blog"&gt;Write a high-quality README for NuGet packages - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/"&gt;https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet パッケージの高品質な README を記述するためのガイド。&lt;/p&gt;
&lt;p&gt;NuGet.org で README を表示できるようになったことで重要性が増した README に何を書くべきか、テンプレート、グッドプラクティスといったものを紹介している。&lt;/p&gt;
&lt;h3 id="delegates"&gt;Delegates&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ericsink.com/native_aot/delegate_i32.html"&gt;https://ericsink.com/native_aot/delegate_i32.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NativeAOT でデリゲートを C から C# に渡して呼び出したりすることについて。&lt;/p&gt;
&lt;h3 id="math.netmemorypack-qiita"&gt;Math.NETのベクトルをMemoryPackでシリアライズする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/delicioustuna/items/6cd457bbfb40254663d2"&gt;https://qiita.com/delicioustuna/items/6cd457bbfb40254663d2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Math.NET の &lt;code&gt;Vector&amp;lt;T&amp;gt;&lt;/code&gt; を MemoryPack でシリアライズするための Formatter の実装について。&lt;/p&gt;
&lt;h3 id="github-copilot-in-visual-studio-2022-visual-studio-blog"&gt;GitHub Copilot in Visual Studio 2022 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/github-copilot-in-visual-studio-2022/"&gt;https://devblogs.microsoft.com/visualstudio/github-copilot-in-visual-studio-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 の GitHub Copilot の更新について紹介するビデオ。&lt;/p&gt;
&lt;h3 id="tddroslyndena-techcon-2023"&gt;TDDで作るRoslynアナライザー【DeNA TechCon 2023】&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/dena_tech/techcon2023-session03"&gt;https://speakerdeck.com/dena_tech/techcon2023-session03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Roslyn Analyzer のユニットテストでテストコードの記述を補助する Dena.CodeAnalysis.Testing を使用して開発する方法を解説しているセッションのスライド。&lt;/p&gt;
&lt;script defer class="speakerdeck-embed" data-id="ef5edbc56519476db6aa0d06b6f18c9c" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="optimizing-entity-framework-core-database-queries-with-dynamic-program-analysis-the.net-tools-blog"&gt;Optimizing Entity Framework Core Database Queries With Dynamic Program Analysis | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/03/02/optimizing-entity-framework-core-database-queries-with-dynamic-program-analysis/"&gt;https://blog.jetbrains.com/dotnet/2023/03/02/optimizing-entity-framework-core-database-queries-with-dynamic-program-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper と Rider のアプリケーションのパフォーマンスを自動的に解析する Dynamic Program Analysis (DPA) を使用して Entity Framework Core のデータベースクエリーを最適化する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharpcsbindgen-generate-c-ffi-from-rust-for-automatically-brings-native-code-and-c-native-library-to.net-and-unity"&gt;Cysharp/csbindgen: Generate C# FFI from Rust for automatically brings native code and C native library to .NET and Unity.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/csbindgen"&gt;https://github.com/Cysharp/csbindgen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C 言語のネイティブライブラリーを .NET に持ち込むためのバインディングを生成する Rust ライブラリー。&lt;/p&gt;
&lt;!-- https://twitter.com/neuecc/status/1630815378401263616 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;.NET / UnityにネイティブコードやCのライブラリを自動で持ち込むためのRustライブラリを作りました！CのヘッダやRustのexternからC#のDllImportを自動で生成します。また、Rustのbindgenやcc-rsなどを駆使することでCのビルド/リンクまでひとつなぎでやってくれます。&lt;a href="https://t.co/qWdSNpZbkr"&gt;https://t.co/qWdSNpZbkr&lt;/a&gt;&lt;/p&gt;&amp;mdash; neuecc (&amp;#64;neuecc) &lt;a href="https://twitter.com/neuecc/status/1630815378401263616?ref_src=twsrc%5Etfw"&gt;March 1, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Stack Overflow の構成の解説。&lt;/p&gt;
&lt;!-- https://twitter.com/sahnlam/status/1629713954225405952?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Stack Overflow is a multi-tenant monolithic application serving 2 billion monthly page views across 200 sites.&lt;br&gt;&lt;br&gt;Here are some amazing stats: &lt;a href="https://t.co/2ZKSu1JoCf"&gt;pic.twitter.com/2ZKSu1JoCf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sahn Lam (&amp;#64;sahnlam) &lt;a href="https://twitter.com/sahnlam/status/1629713954225405952?ref_src=twsrc%5Etfw"&gt;February 26, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Visual Studio 2022 version 17.5 から &lt;code&gt;.http&lt;/code&gt; ファイルを作成することで Visual Studio Code の REST Client のようなことができるようになったという話。&lt;/p&gt;
&lt;!-- https://twitter.com/Dave_DotNet/status/1628135023722303506 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Visual Studio 2022 17.5 has just been released and one of my favourite new features is the INTEGRATED HTTP CLIENT. &lt;br&gt;&lt;br&gt;It&amp;#39;s not a Postman killer yet but it so awesome to be able to both send and debug REST requests directly from within &lt;a href="https://twitter.com/hashtag/visualstudio?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#visualstudio&lt;/a&gt; ❤ ...&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/0QFbTFU0vD"&gt;pic.twitter.com/0QFbTFU0vD&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1628135023722303506?ref_src=twsrc%5Etfw"&gt;February 21, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Immutable と Frozen の違い。&lt;/p&gt;
&lt;!-- https://twitter.com/dave_dotnet/status/1629464212194959362?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Why use collections in the new System.Collections.Frozen namespace in .NET 8 versus the existing ones in System.Collections.Immutable? &lt;br&gt;&lt;br&gt;Good clarity on the differences from Stephen Toub on the MS blog the other day 👇 ...&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://t.co/yas9c5TcZ9"&gt;pic.twitter.com/yas9c5TcZ9&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1629464212194959362?ref_src=twsrc%5Etfw"&gt;February 25, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="wpfroadmap.md-at-main-dotnetwpf-github"&gt;wpf/roadmap.md at main · dotnet/wpf · GitHub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/wpf/blob/main/roadmap.md"&gt;https://github.com/dotnet/wpf/blob/main/roadmap.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF の2023年のロードマップ。Windows 11 のテーマ対応など。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/02/25/updates</id>
		<title>2023-02-25: Visual Studio 2022 17.5, .NET 8 Preview 1, .NET 7.0.3, .NET 6.0.14</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/02/25/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-02-25T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="visual-studio-2022-17.5-released-visual-studio-blog"&gt;Visual Studio 2022 - 17.5 Released - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-5-released/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-5-released/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing.net-8-preview-1.net-blog"&gt;Announcing .NET 8 Preview 1 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-1/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ef-core-8-preview-1-raw-lazy-and-on-time.net-blog"&gt;EF Core 8 Preview 1: Raw, lazy, and on-time - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-1/"&gt;https://devblogs.microsoft.com/dotnet/announcing-ef8-preview-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-preview-1.net-blog"&gt;ASP.NET Core updates in .NET 8 Preview 1 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-1/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-for-mac-17.5-is-now-available-visual-studio-blog"&gt;Visual Studio for Mac 17.5 is now available - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-for-mac-17-5-is-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-for-mac-17-5-is-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-february-2023-updates.net-7.0.3.net-6.0.14.net-blog"&gt;.NET February 2023 Updates – .NET 7.0.3, .NET 6.0.14 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/february-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/february-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improvements-to.net-framework-updates-for-windows-11-version-22h2.net-blog"&gt;Improvements to .NET Framework updates for Windows 11, version 22H2 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/improvements-to-net-framework-updates-for-windows-11-22h2/"&gt;https://devblogs.microsoft.com/dotnet/improvements-to-net-framework-updates-for-windows-11-22h2/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-framework-february-2023-security-and-quality-rollup-updates.net-blog"&gt;.NET Framework February 2023 Security and Quality Rollup Updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-february-2023-security-and-quality-rollup-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-february-2023-security-and-quality-rollup-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="upgrading-your.net-projects-with-visual-studio.net-blog"&gt;Upgrading your .NET projects with Visual Studio - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/upgrade-assistant-now-in-visual-studio/"&gt;https://devblogs.microsoft.com/dotnet/upgrade-assistant-now-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="updated-modern-code-generation-for-winforms-initializecomponent.net-blog"&gt;Updated Modern Code Generation for WinForm's InitializeComponent - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/winforms-codegen-update/"&gt;https://devblogs.microsoft.com/dotnet/winforms-codegen-update/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-2023.1-eap-6-new-ui-improvements-and-a-better-debugging-experience-the.net-tools-blog"&gt;Rider 2023.1 EAP 6: New UI Improvements and a Better Debugging Experience | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/24/rider-2023-1-eap-6/"&gt;https://blog.jetbrains.com/dotnet/2023/02/24/rider-2023-1-eap-6/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v1.2.4-microsoftwindowsappsdk"&gt;Release v1.2.4 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.4"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.2.4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v12.0.0-jbogardmediatr"&gt;Release v12.0.0 · jbogard/MediatR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jbogard/MediatR/releases/tag/v12.0.0"&gt;https://github.com/jbogard/MediatR/releases/tag/v12.0.0&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="maximizing-the-value-of-intellicode-with-api-usage-examples-real-world-code-examples-at-your-fingertips-visual-studio-blog"&gt;Maximizing the value of IntelliCode with API usage examples: Real-World Code Examples at Your Fingertips - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/intellicode-api-usage-examples/"&gt;https://devblogs.microsoft.com/visualstudio/intellicode-api-usage-examples/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="getting-started-with-dottrace-on-macos-and-linux-the.net-tools-blog"&gt;Getting Started With dotTrace On macOS And Linux | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/22/getting-started-with-dottrace-on-macos-and-linux/"&gt;https://blog.jetbrains.com/dotnet/2023/02/22/getting-started-with-dottrace-on-macos-and-linux/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="building-the-final-requestdelegate-behind-the-scenes-of-minimal-apis-part-7"&gt;Building the final RequestDelegate: Behind the scenes of minimal APIs - Part 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-7-building-the-final-requestdelegate/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-7-building-the-final-requestdelegate/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="list-and-span-pattern-matching-using-c-11-in-rider-and-resharper-the.net-tools-blog"&gt;List and Span Pattern Matching – Using C# 11 in Rider and ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/20/list-and-span-pattern-matching-using-csharp-11-in-rider-and-resharper/"&gt;https://blog.jetbrains.com/dotnet/2023/02/20/list-and-span-pattern-matching-using-csharp-11-in-rider-and-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazornpm-qiita"&gt;Blazorでnpmを使う - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/villhell/items/9993a132767b284ba2f6"&gt;https://qiita.com/villhell/items/9993a132767b284ba2f6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="migration-from.net-framework-mvc-to-blazor-webassembly"&gt;Migration from .Net Framework MVC to Blazor WebAssembly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://codingberry.com/migration-from-net-framework-mvc-to-blazor-webassembly-faf5937acd2a"&gt;https://codingberry.com/migration-from-net-framework-mvc-to-blazor-webassembly-faf5937acd2a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-united-solving-blazors-biggest-challenges"&gt;Blazor United - Solving Blazor's biggest challenges?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jonhilton.net/blazor-united/"&gt;https://jonhilton.net/blazor-united/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-vs-rust-vs-go.a-performance-benchmarking-in-kubernetes"&gt;C# vs Rust vs Go. A performance benchmarking in Kubernetes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/@shyamsundarb/c-vs-rust-vs-go-a-performance-benchmarking-in-kubernetes-c303b67b84b5"&gt;https://medium.com/@shyamsundarb/c-vs-rust-vs-go-a-performance-benchmarking-in-kubernetes-c303b67b84b5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c.netcloudwatch"&gt;C# .NETでCloudWatchログイベントをフィルタして取得する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/sbstani/articles/3c18a3a58e03b4"&gt;https://zenn.dev/sbstani/articles/3c18a3a58e03b4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="visual-studio-2022-can-now-always-update-on-close-visual-studio-blog"&gt;Visual Studio 2022 can now Always Update on Close! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-can-now-always-update-on-close/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-can-now-always-update-on-close/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="reference-github-issues-and-pull-requests-in-visual-studio-visual-studio-blog"&gt;Reference GitHub Issues and Pull Requests in Visual Studio - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/reference-github-issues-and-pull-requests-in-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/reference-github-issues-and-pull-requests-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="using.net-google-api-client-library-with-maui"&gt;Using .NET Google API client library with MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/@CORDEA/using-net-google-api-client-library-with-maui-11ae98e34a35"&gt;https://medium.com/@CORDEA/using-net-google-api-client-library-with-maui-11ae98e34a35&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-qiita"&gt;.NETで全角／半角・大文字／小文字を考慮した文字列比較 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/miswil/items/9e139202337ce881ca5f"&gt;https://qiita.com/miswil/items/9e139202337ce881ca5f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="exception-handling-in-asp.net-core-web-api-with-problem-details-service"&gt;Exception Handling in ASP.NET Core Web API with problem details service&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/@a.skuratovich/exception-handling-in-asp-net-core-web-api-with-problem-details-service-1f29de4116d4"&gt;https://medium.com/@a.skuratovich/exception-handling-in-asp-net-core-web-api-with-problem-details-service-1f29de4116d4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazor-webassembly-opencvsharp-qiita"&gt;Blazor WebAssembly + OpenCVSharpでブラウザ上で動作するカスタマバーコードリーダーを作成した(実装解説) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/EmEpsilon/items/1e8c38ba2c5ebb906607"&gt;https://qiita.com/EmEpsilon/items/1e8c38ba2c5ebb906607&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windows-1-rksoftware"&gt;まだまだ現役！ Windows フォームアプリの新機能を確認する (1) - rksoftware&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://rksoftware.hatenablog.com/entry/2023/02/18/160000"&gt;https://rksoftware.hatenablog.com/entry/2023/02/18/160000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="refactoring-huge-c-code-base-in-minutes"&gt;Refactoring huge C# code base in minutes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://laurentkempe.com/2023/02/20/refactoring-huge-csharp-code-base-in-minutes/"&gt;https://laurentkempe.com/2023/02/20/refactoring-huge-csharp-code-base-in-minutes/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="task-eventhandlers-the-little-secret-you-didnt-know-dev-leader"&gt;Task EventHandlers – The Little Secret You Didn’t Know - Dev Leader&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.devleader.ca/2023/02/18/task-eventhandlers-the-little-secret-you-didnt-know/"&gt;https://www.devleader.ca/2023/02/18/task-eventhandlers-the-little-secret-you-didnt-know/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="fast-console-io-on.net"&gt;Fast Console IO on .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/@epeshk/fast-console-io-on-net-6cb56a6db529"&gt;https://medium.com/@epeshk/fast-console-io-on-net-6cb56a6db529&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="console.readline"&gt;Console.ReadLine()を中断する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2023-02-18-cancelling-console-readline"&gt;https://zenn.dev/nuits_jp/articles/2023-02-18-cancelling-console-readline&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="getting-started-with-mongodb-atlas-and-azure-functions-using.net-and-c-mongodb"&gt;Getting Started with MongoDB Atlas and Azure Functions using .NET and C# | MongoDB&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/languages/csharp/getting-started-with-mongodb-atlas-and-azure-functions-using-net/"&gt;https://www.mongodb.com/developer/languages/csharp/getting-started-with-mongodb-atlas-and-azure-functions-using-net/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c"&gt;継承辺りのもしかしたらマイナーかもしれない C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/mishizaki1/c-256109925"&gt;https://www.slideshare.net/mishizaki1/c-256109925&lt;/a&gt;&lt;/p&gt;
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/key/JW8yVQsEVm3Yoo" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen=""&gt; &lt;/iframe&gt; &lt;div style="margin-bottom:5px"&gt; &lt;strong&gt; &lt;a href="/www.slideshare.net/mishizaki1/c-256109925" title="継承辺りのもしかしたらマイナーかもしれない C#" target="_blank"&gt;継承辺りのもしかしたらマイナーかもしれない C#&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href="/www.slideshare.net/mishizaki1" target="_blank"&gt;m ishizaki&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;h3 id="orleans"&gt;Orleans の概要と基本構成のデプロイまで | ドクセル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docswell.com/s/hiro128_777/K6YMNL-2023-02-19-170020#p20"&gt;https://www.docswell.com/s/hiro128_777/K6YMNL-2023-02-19-170020#p20&lt;/a&gt;&lt;/p&gt;
&lt;script async="" class="docswell-embed" src="https://www.docswell.com/assets/libs/docswell-embed/docswell-embed.min.js" data-src="https://www.docswell.com/slide/K6YMNL/embed" data-aspect="0.5625"&gt;&lt;/script&gt;&lt;div class="docswell-link"&gt;&lt;a href="https://www.docswell.com/s/hiro128_777/K6YMNL-2023-02-19-170020"&gt;Orleans の概要と基本構成のデプロイまで by @hiro128_777&lt;/a&gt;&lt;/div&gt;
&lt;h3 id="asp.net.net-framework-opentelemetry"&gt;ASP.NET (.NET Framework) 製アプリをリビルドせずにOpenTelemetryで計測しよう | ドクセル&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docswell.com/s/tanaka_733/KLLXRQ-2023-02-24-csharptokto-opentelemetry-dotnet-autoinstrumentation-aspnetdfx"&gt;https://www.docswell.com/s/tanaka_733/KLLXRQ-2023-02-24-csharptokto-opentelemetry-dotnet-autoinstrumentation-aspnetdfx&lt;/a&gt;&lt;/p&gt;
&lt;script async="" class="docswell-embed" src="https://www.docswell.com/assets/libs/docswell-embed/docswell-embed.min.js" data-src="https://www.docswell.com/slide/KLLXRQ/embed" data-aspect="0.5625"&gt;&lt;/script&gt;&lt;div class="docswell-link"&gt;&lt;a href="https://www.docswell.com/s/tanaka_733/KLLXRQ-2023-02-24-csharptokto-opentelemetry-dotnet-autoinstrumentation-aspnetdfx"&gt;ASP.NET (.NET Framework) 製アプリをリビルドせずにOpenTelemetryで計測しよう by @tanaka_733&lt;/a&gt;&lt;/div&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="using-system.text.json-annotated-objects-in-newtonsoft.json"&gt;Using System.Text.Json annotated objects in Newtonsoft.Json&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/cloudnimble/using-system-text-json-annotated-objects-in-newtonsoft-json-ca51d23605c1"&gt;https://medium.com/cloudnimble/using-system-text-json-annotated-objects-in-newtonsoft-json-ca51d23605c1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://twitter.com/jamesnk/status/1627309572087218177?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The &lt;a href="https://t.co/vykcBhgNKZ"&gt;https://t.co/vykcBhgNKZ&lt;/a&gt; Core HTTP/3 platform test has an impressive 6 conditions on it (conditions all need to pass before the test runs)&lt;br&gt;&lt;br&gt;Is this a &lt;a href="https://t.co/cvUPtEZhbS"&gt;https://t.co/cvUPtEZhbS&lt;/a&gt; record? &lt;a href="https://t.co/r7A7rvBAnD"&gt;pic.twitter.com/r7A7rvBAnD&lt;/a&gt;&lt;/p&gt;— James Newton-King ♔ (@JamesNK) &lt;a href="https://twitter.com/JamesNK/status/1627309572087218177?ref_src=twsrc%5Etfw"&gt;February 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="tracking-publish.net-assemblies-in-webcil-files-issue-80807-dotnetruntime"&gt;[tracking] Publish .NET assemblies in Webcil files · Issue #80807 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/80807"&gt;https://github.com/dotnet/runtime/issues/80807&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-in.net-8-preview-1-wip-issue-8133-dotnetcore"&gt;What's new in .NET 8 Preview 1 [WIP] · Issue #8133 · dotnet/core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/issues/8133"&gt;https://github.com/dotnet/core/issues/8133&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/02/18/updates</id>
		<title>2023-02-18: Avalonia XPF, Rider 2023.1 EAP 4, ReSharper 2023.1 EAP 5, Search By Target Framework on NuGet.org</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/02/18/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-02-18T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="avalonia-ui-xpf"&gt;Avalonia UI - XPF&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://avaloniaui.net/XPF"&gt;https://avaloniaui.net/XPF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux や macOS など Windows 以外の環境で既存の WPF アプリケーションを動かすためのクロスプラットフォーム商用ソリューション。&lt;/p&gt;
&lt;p&gt;.NET 6 向けの WPF アプリケーションを書き直すことなく Linux や macOS 上で動かすための互換ライブラリー。サードパーティーコンポーネントなどもサポートする。&lt;/p&gt;
&lt;p&gt;エンタープライズ向けのソリューションという位置づけのため Avalonia UI と異なり商用ライセンスのみの提供となる。OSS プロジェクトでは Avalonia UI などへの移行が推奨されている。&lt;/p&gt;
&lt;!-- https://twitter.com/avaloniaui/status/1625042505606615040?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Unleash the full potential of your existing WPF apps with our cross-platform UI framework, enabling WPF apps to run on macOS and Linux without requiring expensive and risky rewrites. &lt;br&gt;&lt;br&gt;Learn more and apply for the private beta: &lt;a href="https://t.co/B8Q6ELEe35"&gt;https://t.co/B8Q6ELEe35&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/wpf?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#wpf&lt;/a&gt; &lt;a href="https://t.co/lNdT0SEJEm"&gt;pic.twitter.com/lNdT0SEJEm&lt;/a&gt;&lt;/p&gt;&amp;mdash; Avalonia UI (&amp;#64;AvaloniaUI) &lt;a href="https://twitter.com/AvaloniaUI/status/1625042505606615040?ref_src=twsrc%5Etfw"&gt;February 13, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="rider-2023.1-eap-4-is-here-the.net-tools-blog"&gt;Rider 2023.1 EAP 4 Is Here! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/13/rider-2023-1-eap-4/"&gt;https://blog.jetbrains.com/dotnet/2023/02/13/rider-2023-1-eap-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.1 EAP 4 がリリースされた。&lt;/p&gt;
&lt;p&gt;IDE のズームのサポート、WASM アプリケーションのスタートアップのデバッグ、Astro サポートの追加、Angular サポートの向上、Vue テンプレートでの TypeScript サポートといった改善が含まれる。&lt;/p&gt;
&lt;h3 id="resharper-2023.1-eap-5-is-out-now-the.net-tools-blog"&gt;ReSharper 2023.1 EAP 5 Is Out Now! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/17/resharper-2023-1-eap-5/"&gt;https://blog.jetbrains.com/dotnet/2023/02/17/resharper-2023-1-eap-5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.1 EAP 5 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは非アクティブなプリプロセッサー分岐の再フォーマット、名前変更リファクタリングの改善、スタンドアローン dotTrace の macOS, Linux の x64 および ARM64 のサポート。&lt;/p&gt;
&lt;h3 id="introducing-search-by-target-framework-on-nuget.org"&gt;Introducing Search By Target Framework on NuGet.org&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/"&gt;https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet.org での検索でターゲットフレームワークによる絞り込みが可能となった。&lt;/p&gt;
&lt;p&gt;&amp;quot;.NET&amp;quot; を選択した場合は net5.0 から net7.0 までが対象となり、必要に応じて net7.0 などでも絞り込むことが可能。ただし、これはターゲットフレームワークでの絞り込みのため net7.0 を指定したときに .NET 7 ランタイムがサポートしているもの、という意味ではなくライブラリーの TargetFrameworks に含まれているかどうかであることに注意が必要。&lt;/p&gt;
&lt;h3 id="apple-m1-m2tm-mac-windows-11-microsoft"&gt;Apple® M1® および M2™ チップを搭載した Mac® コンピューターでWindows 11を使用するためのオプション - Microsoft サポート&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://support.microsoft.com/ja-jp/windows/apple-m1-%E3%81%8A%E3%82%88%E3%81%B3-m2-%E3%83%81%E3%83%83%E3%83%97%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F-mac-%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%A7windows-11%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3-cd15fd62-9b34-4b78-b0bc-121baa3c568c"&gt;https://support.microsoft.com/ja-jp/windows/apple-m1-%E3%81%8A%E3%82%88%E3%81%B3-m2-%E3%83%81%E3%83%83%E3%83%97%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F-mac-%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%A7windows-11%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3-cd15fd62-9b34-4b78-b0bc-121baa3c568c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Parallels Desktop for Mac での Arm 版 Windows 11 Pro および Enterprise の動作が Microsoft 公式に認められた。&lt;/p&gt;
&lt;p&gt;Nested Virtualization に依存する WSL や Windows Subsystem for Android、Windows Sandbox や仮想化ベースのセキュリティーはサポートされない。また32bit版 Arm アプリケーションの動作もサポートされない(これは Windows においても非推奨となる)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parallels.com/blogs/windows-11-arm-apple-m-series/"&gt;Run Windows 11 on Arm with Parallels Desktop for Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://twitter.com/parallels/status/1626282270356111362?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;IT leaders, the ultimate solution is here! 🎉 With &lt;a href="https://twitter.com/hashtag/ParallelsDesktop?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#ParallelsDesktop&lt;/a&gt; authorized by &lt;a href="https://twitter.com/Microsoft?ref_src=twsrc%5Etfw"&gt;&amp;#64;Microsoft&lt;/a&gt;, you can now confidently support users who need to run Arm versions of &lt;a href="https://twitter.com/Windows?ref_src=twsrc%5Etfw"&gt;&amp;#64;Windows&lt;/a&gt; 11 on their Mac with &lt;a href="https://twitter.com/Apple?ref_src=twsrc%5Etfw"&gt;&amp;#64;Apple&lt;/a&gt; silicon. Learn more: &lt;a href="https://t.co/UuTaj8zjGP"&gt;https://t.co/UuTaj8zjGP&lt;/a&gt; &lt;a href="https://t.co/O87LK8fOks"&gt;pic.twitter.com/O87LK8fOks&lt;/a&gt;&lt;/p&gt;&amp;mdash; Parallels (&amp;#64;parallels) &lt;a href="https://twitter.com/parallels/status/1626282270356111362?ref_src=twsrc%5Etfw"&gt;February 16, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="reactiveproperty-v9.0.0"&gt;ReactiveProperty v9.0.0 をリリースしました&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/reactiveproperty-v9-0-0"&gt;https://zenn.dev/microsoft/articles/reactiveproperty-v9-0-0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReactiveProperty v9.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;パフォーマンス向上と System.Reactive に依存せず開発できる範囲の拡大や ReactiveCommandSlim、ValidatableReactiveProperty&amp;lt;T&amp;gt; といったクラスが追加された。&lt;/p&gt;
&lt;h3 id="c"&gt;(C#) オブジェクトの破棄の可否を型で制限する - ネコのために鐘は鳴る&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ikorin2.hatenablog.jp/entry/2023/02/13/072121"&gt;https://ikorin2.hatenablog.jp/entry/2023/02/13/072121&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オブジェクトの破棄を明示できる型を作ることで、破棄の責任の所在を明らかにする方法について。&lt;/p&gt;
&lt;h3 id="net-7-pinvoke"&gt;[.NET 7] P/Invokeの落とし穴メモ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/shimat/articles/77c00c1f421a47"&gt;https://zenn.dev/shimat/articles/77c00c1f421a47&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;P/Invoke での裏側の処理による開放などの落とし穴について。&lt;/p&gt;
&lt;h3 id="c-12-params-spanparams-readonlyspan"&gt;【C# 12 候補】params Span、改め、params ReadOnlySpan&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/2/params-ros"&gt;https://ufcpp.net/blog/2023/2/params-ros&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で検討されている params (可変長引数) で配列以外を受ける仕様についての現状。&lt;/p&gt;
&lt;h3 id="omitting-async-await"&gt;Omitting async / await&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://guriysamarin.medium.com/omitting-async-await-723a04d8f56b"&gt;https://guriysamarin.medium.com/omitting-async-await-723a04d8f56b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;async/await を省略して Task を直接返すことが推奨されないことについて。&lt;/p&gt;
&lt;p&gt;スタックトレースの違いや AsyncLocal のリークなど。(ちなみに using による誤 Dispose という例もよくある)&lt;/p&gt;
&lt;h3 id="use-asp.net-core-and-react-with-vite.js"&gt;Use ASP.NET Core and React with Vite.js&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.codeinside.eu/2023/02/11/aspnet-core-react-with-vitejs/"&gt;https://blog.codeinside.eu/2023/02/11/aspnet-core-react-with-vitejs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core アプリケーションで React と Vite.js を使う方法について。&lt;/p&gt;
&lt;h3 id="cgettypebymetadataname-gettypesbymetadataname"&gt;【C#】GetTypeByMetadataName ではなく GetTypesByMetadataName を使った方が無難かもしれない。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/02/11/161723"&gt;https://blog.neno.dev/entry/2023/02/11/161723&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Roslyn で Compilation からメタデータ名で型を取得する際に &lt;code&gt;GetTypeByMetadataName&lt;/code&gt; で取得すると同名の方があった場合に期待通り取得できないので Roslyn 4.1 以降の &lt;code&gt;GetTypesByMetadataName&lt;/code&gt; を使用するほうがよいことについて。&lt;/p&gt;
&lt;h3 id="visual-studio-ai-assistance-a-developers-best-friend-visual-studio-blog"&gt;Visual Studio AI-Assistance: A Developer's Best Friend - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-ai-assistance-a-developers-best-friend/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-ai-assistance-a-developers-best-friend/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の IntelliCode が行っていることの紹介記事。&lt;/p&gt;
&lt;h3 id="determine-whether-two-date-ranges-overlap-in-c-code-maze"&gt;Determine Whether Two Date Ranges Overlap in C# - Code Maze&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code-maze.com/csharp-determine-whether-two-date-ranges-overlap/"&gt;https://code-maze.com/csharp-determine-whether-two-date-ranges-overlap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;二つの日付の範囲の重なり合いを比較する方法について。&lt;/p&gt;
&lt;h3 id="consul-in.net-a-service-mesh-solution-and-service-discovery-tool"&gt;Consul in .NET — A Service Mesh Solution And Service Discovery Tool&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;KeivanDamirchi/consul-in-net-a-service-mesh-solution-and-service-discovery-tool-eff18292c771"&gt;https://medium.com/&amp;#64;KeivanDamirchi/consul-in-net-a-service-mesh-solution-and-service-discovery-tool-eff18292c771&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET で HashiCorp Consul を使用してサービスメッシュとサービスディスカバリーを実装する方法について。&lt;/p&gt;
&lt;h3 id="tips-tricks-on-upgrading-xamarin.ios-xamarin.android-to.net-for-ios-android-xamarin-blog"&gt;Tips &amp;amp; Tricks on Upgrading Xamarin.iOS &amp;amp; Xamarin.Android to .NET for iOS &amp;amp; Android - Xamarin Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/xamarin/upgrade-xamarin-ios-android-to-dotnet6-dotnet7/"&gt;https://devblogs.microsoft.com/xamarin/upgrade-xamarin-ios-android-to-dotnet6-dotnet7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Xamarin.iOS および Xamarin.Android から .NET for iOS &amp;amp; Android (.NET MAUI ではなくネイティブバインディング) へアップグレードする際のヒント。&lt;/p&gt;
&lt;h3 id="what-is.net-and-why-should-you-choose-it.net-blog"&gt;What is .NET, and why should you choose it? - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/why-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/why-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET とは何か、なぜ選択すると良いのか、開発者向けの .NET ランタイムを中心として紹介している記事。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://andrewlock.net/thoughts-on-what-is-dotnet-and-why-should-you-choose-it/"&gt;Thoughts on 'What is .NET, and why should you choose it?'&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="nuget-qiita"&gt;NuGetパッケージのバージョン依存関係の解決ルール - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/ZiYuCai1984/items/dbb069f5ade08d242acb"&gt;https://qiita.com/ZiYuCai1984/items/dbb069f5ade08d242acb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet パッケージの参照時のバージョンの解決ルールについて。&lt;/p&gt;
&lt;h3 id="getting-started-entity-framework-core-7-json-support-the.net-tools-blog"&gt;Getting Started: Entity Framework Core 7 JSON Support | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/14/getting-started-entity-framework-core-7-json-support/"&gt;https://blog.jetbrains.com/dotnet/2023/02/14/getting-started-entity-framework-core-7-json-support/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 7 で追加された JSON サポートの利用方法について。&lt;/p&gt;
&lt;h3 id="accelerating-ef-core-with-compiled-queries"&gt;Accelerating EF Core with Compiled Queries&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://woodruff.dev/accelerating-ef-core-with-compiled-queries/"&gt;https://woodruff.dev/accelerating-ef-core-with-compiled-queries/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core のコンパイル済みクエリーについて。&lt;/p&gt;
&lt;h3 id="net-blazorradzen-qiita"&gt;.NET Blazor＋Radzen を使ってみた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tinymouse/items/01b1bc4a74429ddc0b17"&gt;https://qiita.com/tinymouse/items/01b1bc4a74429ddc0b17&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor 向けの UI コンポーネントライブラリー Radzen を使用する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;新しい Bing の AI チャットは SignalR を使用しているという話。&lt;/p&gt;
&lt;!-- https://twitter.com/davidfowl/status/1626097506286436352?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Got access to the new bing and I looked to see how they implemented the chat. It&amp;#39;s using &lt;a href="https://twitter.com/hashtag/signalr?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#signalr&lt;/a&gt; 😍😍😍 &lt;a href="https://t.co/nAyEndNMUq"&gt;pic.twitter.com/nAyEndNMUq&lt;/a&gt;&lt;/p&gt;&amp;mdash; hachyderm.io/&amp;#64;davidfowl (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1626097506286436352?ref_src=twsrc%5Etfw"&gt;February 16, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="blazor-united-issue-46636-dotnetaspnetcore"&gt;Blazor United · Issue #46636 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/46636"&gt;https://github.com/dotnet/aspnetcore/issues/46636&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 に向けて開発されている Blazor United の Issue。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/02/11/updates</id>
		<title>2023-02-11: .NET language strategy, Windows App SDK 1.3 Experimental-1, Rider EAP 日本語言語パック</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/02/11/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-02-11T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="update-to-the.net-language-strategy.net-blog"&gt;Update to the .NET language strategy - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/update-to-the-dotnet-language-strategy/"&gt;https://devblogs.microsoft.com/dotnet/update-to-the-dotnet-language-strategy/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET での言語に対する(Microsoftの)戦略のアップデートについて。&lt;/p&gt;
&lt;p&gt;.NET では現在主要な言語として C#、F#、Visual Basic の3つがあり、それぞれへの Microsoft の戦略に関してのドキュメントがアップデートされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/ja-jp/dotnet/fundamentals/languages"&gt;.NET マネージド言語の戦略 - .NET | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="version-1.3-experimental-1.3.0-experimental1-experimental-release-channel-for-the-windows-app-sdk-windows-apps-microsoft-learn"&gt;Version 1.3 Experimental (1.3.0-experimental1) | Experimental release channel for the Windows App SDK - Windows apps | Microsoft Learn&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/experimental-channel#version-13-experimental-130-experimental1"&gt;https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/experimental-channel#version-13-experimental-130-experimental1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.3 Experimental-1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは XAML Backdrop API (ウィンドウ背景への Mica の適用など)、アプリウィンドウにアクセスするための Window.AppWindow API などいくつかの新機能が導入されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.3-exp1"&gt;Release v1.3-experimental1 · microsoft/WindowsAppSDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rider-eap-the.net-tools-blog"&gt;Rider EAP 版で日本語言語パック対応を開始 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/ja/dotnet/2023/02/07/introducing-the-rider-localization-eap-for-japanese/"&gt;https://blog.jetbrains.com/ja/dotnet/2023/02/07/introducing-the-rider-localization-eap-for-japanese/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains Rider 2023.1 EAP3 で日本語および中国語、韓国語のローカライズを行う言語パックを利用できるようになった。&lt;/p&gt;
&lt;p&gt;一部のローカライズは現在進行中であり、フィードバックも IDE や YouTrack で受け付けているとのこと。また今後の目標に ReSharper のローカライズもあるとしている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/06/introducing-the-rider-localization-eap-for-chinese-japanese-and-korean/"&gt;Introducing the Rider Localization EAP for Chinese, Japanese, and Korean | The .NET Tools Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="resharper-ending-development-for-visual-studio-2010-and-2012-the.net-tools-blog"&gt;ReSharper Ending Development for Visual Studio 2010 and 2012 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/10/ending-development-for-vs-2010-2012/"&gt;https://blog.jetbrains.com/dotnet/2023/02/10/ending-development-for-vs-2010-2012/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.1 以降では Visual Studio 2010 および 2012 の積極的なサポートを終了するアナウンス。&lt;/p&gt;
&lt;p&gt;インストーラーの統合オプションは維持されるためすぐに利用できなくなるわけではないものの、機能の保証やサポート優先度が低くなる。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="qiita"&gt;画像分類アプリケーションを速攻で作っていく過程 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SoeAtsu/items/4d22493c5dc8367162db"&gt;https://qiita.com/SoeAtsu/items/4d22493c5dc8367162db&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF と ML.NET で画像を認識して分類するアプリケーションを作ってみるという記事。&lt;/p&gt;
&lt;h3 id="specflow-cucumber-in-c"&gt;SpecFlow — Cucumber in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://daniel-delimata.medium.com/specflow-cucumber-in-c-e642c63469b2"&gt;https://daniel-delimata.medium.com/specflow-cucumber-in-c-e642c63469b2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET における Cucumber である SpecFlow を使って、Web アプリケーションのテストを行う方法について。&lt;/p&gt;
&lt;h3 id="generating-the-response-writing-expression-for-requestdelegate-behind-the-scenes-of-minimal-apis-part-6"&gt;Generating the response writing expression for RequestDelegate: Behind the scenes of minimal APIs - Part 6&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-the-scenes-of-minimal-apis-6-generating-the-response-writing-expression/"&gt;https://andrewlock.net/behind-the-scenes-of-minimal-apis-6-generating-the-response-writing-expression/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Minimal API の裏側を開設するシリーズの RequestDelegate がレスポンスを出力する式 (Expression) を生成する流れについて。&lt;/p&gt;
&lt;h3 id="blazor"&gt;Blazor でバリデーション ロジックを部品化したい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/viewside-validation"&gt;https://zenn.dev/microsoft/articles/viewside-validation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor でのカスタム検証ロジックをコンポーネントの形にして部品化する方法について。&lt;/p&gt;
&lt;h3 id="blazorvalidationsummaryasp-validation-summary"&gt;BlazorのValidationSummaryでasp-validation-summaryのように表示エラーメッセージを絞り込みたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/blazor-validationsummary-tips"&gt;https://zenn.dev/microsoft/articles/blazor-validationsummary-tips&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ValidationSummary コンポーネントですべてのプロパティーではなく、特定のモデルに関するエラーのみ表示する方法について。&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-february-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | February 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/02/08/net-annotated-monthly-february-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/02/08/net-annotated-monthly-february-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による .NET 関連の2023年2月のまとめ記事。&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;C#サーバーでプロファイルを取る方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Shaula/items/177e8c16ec9b8b102c7a"&gt;https://qiita.com/Shaula/items/177e8c16ec9b8b102c7a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コンテナーなどサーバーで動作している .NET アプリケーションのトレースを dotnet-trace を使用して取得する方法について。&lt;/p&gt;
&lt;h3 id="netibm-idb-qiita"&gt;.NETでIBM iのDBをつついてみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/tom_m_m/items/9481e8b619463ab9c20f"&gt;https://qiita.com/tom_m_m/items/9481e8b619463ab9c20f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IBM i (ppc64le アーキテクチャー) で.NET アプリケーションから Db2 データベースに アクセスしてみたという記事。&lt;/p&gt;
&lt;h3 id="c-tip-do-not-use-nameof-to-give-constants-a-value-code4it"&gt;C# Tip: do NOT use nameof to give constants a value - Code4IT&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.code4it.dev/csharptips/do-not-use-nameof-for-constants"&gt;https://www.code4it.dev/csharptips/do-not-use-nameof-for-constants&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nameof&lt;/code&gt; で定数名を定数として使用してさらにそれをテーブル名などに使うと、うっかりコードを変更したときに壊れるのでお勧めしないという意見。&lt;/p&gt;
&lt;h3 id="generating-sample-data-with-bogus"&gt;Generating Sample Data with Bogus&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://wildermuth.com/2023/01/29/generating-sample-data-with-bogus/"&gt;https://wildermuth.com/2023/01/29/generating-sample-data-with-bogus/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bogus を使用してダミーデータを生成する方法について。&lt;/p&gt;
&lt;h3 id="async-void-how-to-tame-the-asynchronous-nightmare-dev-leader"&gt;async void – How to Tame the Asynchronous Nightmare - Dev Leader&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.devleader.ca/2023/01/27/async-void-how-to-tame-the-asynchronous-nightmare/"&gt;https://www.devleader.ca/2023/01/27/async-void-how-to-tame-the-asynchronous-nightmare/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;async void の問題とイベントハンドラーなどで使う際にも何とかして例外をキャッチするための方法について。&lt;/p&gt;
&lt;h3 id="must-follow-c-rules-no-exceptions"&gt;Must follow C rules, no exceptions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ericsink.com/native_aot/no_exceptions.html"&gt;https://ericsink.com/native_aot/no_exceptions.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NativeAOT でネイティブから呼び出されるメソッドでは例外を投げてはいけないということについて。&lt;/p&gt;
&lt;h3 id="use-visual-studio-dev-tunnels-to-handle-twilio-webhooks"&gt;Use Visual Studio dev tunnels to handle Twilio Webhooks&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/twilio/use-visual-studio-dev-tunnels-to-handle-twilio-webhooks-58dc"&gt;https://dev.to/twilio/use-visual-studio-dev-tunnels-to-handle-twilio-webhooks-58dc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio の dev tunnel を使用して Twilio の Webhook を処理する手順について。&lt;/p&gt;
&lt;h3 id="the-cost-of-timing-out"&gt;The cost of timing out&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ayende.com/blog/198977-B/the-cost-of-timing-out"&gt;https://ayende.com/blog/198977-B/the-cost-of-timing-out&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;同時実行数の多いような環境ではタイムアウトのために CancellationToken.CancelAfter を呼び出すことで Timer のセットが大量に発生してしまうことについて。&lt;/p&gt;
&lt;p&gt;RavenDB では定期的なタイマーを持ってまとめて処理する方法をとることでコストを下げるようにしている。&lt;/p&gt;
&lt;h3 id="without-blazor-webassembly-develop-a-web-site-that-compiles-and-runs-c-code-on-browser"&gt;Without Blazor WebAssembly, develop a web site that compiles and runs C# code on browser&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://yangzhongke8.medium.com/without-blazor-webassembly-develop-a-web-site-that-compiles-and-runs-c-code-on-browser-c381873f6d03"&gt;https://yangzhongke8.medium.com/without-blazor-webassembly-develop-a-web-site-that-compiles-and-runs-c-code-on-browser-c381873f6d03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor WebAssembly の Blazor 部分を使用せず WebAssembly でビルドした C# のコードを JavaScript から呼び出す方法について。&lt;/p&gt;
&lt;h3 id="performance-testing-sync-over-async-scenarios"&gt;Performance Testing Sync-Over-Async Scenarios&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://wapplegate.com/performance-testing/"&gt;https://wapplegate.com/performance-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;非同期メソッドを同期的に待機する、いわゆる Sync-over-Async のパフォーマンスについて。&lt;/p&gt;
&lt;p&gt;いくつかのコードシナリオとそれに対する並列リクエスト数によるレイテンシーや RPS といった結果をまとめている。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="drasticactionsmauifeed-a-cross-platform.net-feed-reader"&gt;drasticactions/MauiFeed: A cross-platform .NET Feed Reader&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/drasticactions/MauiFeed"&gt;https://github.com/drasticactions/MauiFeed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI で実装されたフィードリーダー。&lt;/p&gt;
&lt;p&gt;Windows 向けのビルドが Microsoft Store からインストール可能となっている。&lt;/p&gt;
&lt;!-- https://twitter.com/drasticactions/status/1623316613457125376?s=12&amp;t=gS3pxRchPWdyS6cXghIATQ --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;MauiFeedはMicrosoft Storeにて無料でリリースしました！🎉🎉🎉&lt;a href="https://t.co/VyPvvwY12X"&gt;https://t.co/VyPvvwY12X&lt;/a&gt; &lt;a href="https://t.co/OXGW4ZdG9N"&gt;pic.twitter.com/OXGW4ZdG9N&lt;/a&gt;&lt;/p&gt;&amp;mdash; Drastic Actions (&amp;#64;drasticactions) &lt;a href="https://twitter.com/drasticactions/status/1623316613457125376?ref_src=twsrc%5Etfw"&gt;February 8, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="forneverxaml-math-a-collection-of.net-libraries-for-rendering-mathematical-formulae-using-the-latex-typesetting-style-for-the-wpf-and-avalonia-xaml-based-frameworks"&gt;ForNeVeR/xaml-math: A collection of .NET libraries for rendering mathematical formulae using the LaTeX typesetting style, for the WPF and Avalonia XAML-based frameworks&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ForNeVeR/xaml-math"&gt;https://github.com/ForNeVeR/xaml-math&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF と Avalonia で使用できる LaTeX スタイルの数式表示を行うライブラリー。&lt;/p&gt;
&lt;!-- https://twitter.com/fvnever/status/1622750145958887424?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I&amp;#39;m not usually cross-posting from Mastodon these days, but this is big news.&lt;br&gt;&lt;br&gt;I have just released the version 1.0.0 of XAML-Math, a &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; library for &lt;a href="https://twitter.com/hashtag/TeXLaTeX?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#TeXLaTeX&lt;/a&gt; formula rendering in &lt;a href="https://twitter.com/hashtag/WPF?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#WPF&lt;/a&gt; and &lt;a href="https://twitter.com/hashtag/Avalonia?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Avalonia&lt;/a&gt;.&lt;a href="https://t.co/ZkJ7Dkbmoz"&gt;https://t.co/ZkJ7Dkbmoz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dr. Friedrich von Never (&amp;#64;fvnever) &lt;a href="https://twitter.com/fvnever/status/1622750145958887424?ref_src=twsrc%5Etfw"&gt;February 7, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="legoasyncapi.net-the-asyncapi.net-sdk-contains-a-useful-object-model-for-asyncapi-documents-in.net"&gt;LEGO/AsyncAPI.NET: The AsyncAPI.NET SDK contains a useful object model for AsyncAPI documents in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/LEGO/AsyncAPI.NET/"&gt;https://github.com/LEGO/AsyncAPI.NET/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AsyncAPI (OpenAPI のイベント駆動 API 版) のドキュメントを読み込むためのライブラリー。&lt;/p&gt;
&lt;!-- https://twitter.com/legoengineering/status/1623255496030388227?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Exciting news! 🚀 Our &lt;a href="https://t.co/xbstInJQkL"&gt;https://t.co/xbstInJQkL&lt;/a&gt; project has just gone &lt;a href="https://twitter.com/hashtag/opensource?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#opensource&lt;/a&gt;. The library seeks to become the standard in how to read and write &lt;a href="https://twitter.com/hashtag/asyncapi?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#asyncapi&lt;/a&gt; specifications, within the dotnet ecosystem.&lt;br&gt;Get started today and join the community over at &lt;a href="https://t.co/fd19qxVcaB"&gt;https://t.co/fd19qxVcaB&lt;/a&gt;&lt;/p&gt;&amp;mdash; LEGO Engineering (&amp;#64;LEGOEngineering) &lt;a href="https://twitter.com/LEGOEngineering/status/1623255496030388227?ref_src=twsrc%5Etfw"&gt;February 8, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="wip-asp.net-core-roadmap-for.net-8-issue-44984-dotnetaspnetcore"&gt;[WIP] ASP.NET Core Roadmap for .NET 8 · Issue #44984 · dotnet/aspnetcore&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore/issues/44984"&gt;https://github.com/dotnet/aspnetcore/issues/44984&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core のロードマップ的な Issue。&lt;/p&gt;
&lt;h3 id="excessive-allocations-in-httpcontent.readasbytearrayasync-issue-81628-dotnetruntime"&gt;Excessive allocations in HttpContent.ReadAsByteArrayAsync · Issue #81628 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/issues/81628"&gt;https://github.com/dotnet/runtime/issues/81628&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HttpContent.ReadAsByteArrayAsync()&lt;/code&gt; は &lt;code&gt;HttpClient.GetByteArrayAsync()&lt;/code&gt; に比べて4倍アロケーションがあって多すぎではないかという話。&lt;/p&gt;
&lt;p&gt;そもそも &lt;code&gt;HttpContent.ReadAsByteArrayAsync()&lt;/code&gt; は何度も読み込めるようにする都合バッファリングしたりコピーしたりが発生しているので、現状それを避けるのであれば Stream で読みだすべき、など。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
</feed>