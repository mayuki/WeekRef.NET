<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>/</id>
	<title>WeekRef.NET</title>
	<author>
		<name>Mayuki Sawatari</name>
	</author>
	<link rel="self" href="/" />
	<rights>Copyright © Mayuki Sawatari &lt;mayuki@misuzilla.org&gt;</rights>
	<updated>2023-12-13T07:01:54Z</updated>
	<logo>/img/logo.png</logo>
	<subtitle>.NET 関連の情報をほぼ週刊配信</subtitle>
	<entry>
		<id>/2023/12/13/updates</id>
		<title>2023-12-13: Rider and ReSharper 2023.3, BenchmarkDotNet v0.13.11, StackExchange.Redis 2.7.10, WindowsAppSDK 1.5-experimental1</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/12/13/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-12-13T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="rider-2023.3-support-for.net-8-sdk-the-latest-from-c-12-performance-enhancements-predictive-debugging-and-more-ai-powered-features.the.net-tools-blog"&gt;Rider 2023.3: Support for .NET 8 SDK, the Latest From C# 12, Performance Enhancements, Predictive Debugging, and More AI-powered Features. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/12/07/rider-2023-3-release/"&gt;https://blog.jetbrains.com/dotnet/2023/12/07/rider-2023-3-release/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.3-support-for-c-12-performance-enhancements-and-more-ai-powered-features-the.net-tools-blog"&gt;ReSharper 2023.3: Support For C# 12, Performance Enhancements, and More AI-Powered Features | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/12/07/resharper-2023-3-release/"&gt;https://blog.jetbrains.com/dotnet/2023/12/07/resharper-2023-3-release/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dotcover-dotmemory-dotpeek-and-dottrace-2023.3-release-the.net-tools-blog"&gt;dotCover, dotMemory, dotPeek, and dotTrace 2023.3 Release | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/12/07/dotcover-dotmemory-dotpeek-and-dottrace-2023-3-release/"&gt;https://blog.jetbrains.com/dotnet/2023/12/07/dotcover-dotmemory-dotpeek-and-dottrace-2023-3-release/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="benchmarkdotnet-v0.13.11-dotnetbenchmarkdotnet-discussion-2479"&gt;BenchmarkDotNet v0.13.11 · dotnet/BenchmarkDotNet · Discussion #2479&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/BenchmarkDotNet/discussions/2479"&gt;https://github.com/dotnet/BenchmarkDotNet/discussions/2479&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-2.7.10-stackexchangestackexchange.redis"&gt;Release 2.7.10 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.10"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.10&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v8.0.1-npgsqlnpgsql"&gt;Release v8.0.1 · npgsql/npgsql&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/npgsql/npgsql/releases/tag/v8.0.1"&gt;https://github.com/npgsql/npgsql/releases/tag/v8.0.1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-11.0.6-avaloniauiavalonia"&gt;Release 11.0.6 · AvaloniaUI/Avalonia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.6"&gt;https://github.com/AvaloniaUI/Avalonia/releases/tag/11.0.6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v1.5-experimental1-microsoftwindowsappsdk"&gt;Release v1.5-experimental1 · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5-exp1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.5-exp1&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/microsoft-ui-xaml/releases/tag/winui3/release/1.5-experimental1"&gt;Release WinUI 3 in WinAppSDK 1.5-experimental1 · microsoft/microsoft-ui-xaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/experimental-channel#version-15-experimental-150-experimental1"&gt;Experimental release channel for the Windows App SDK - Windows apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-8-networking-improvements.net-blog"&gt;.NET 8 Networking Improvements - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-8-networking-improvements/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-8-networking-improvements/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="extending-webassembly-to-the-cloud-with.net.net-blog"&gt;Extending WebAssembly to the Cloud with .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/extending-web-assembly-to-the-cloud/"&gt;https://devblogs.microsoft.com/dotnet/extending-web-assembly-to-the-cloud/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-conf-2023-recap-celebrating-community-innovation-and-the-launch-of.net-8.net-blog"&gt;.NET Conf 2023 Recap - Celebrating Community, Innovation, and the Launch of .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-conf-2023-recap-videos-slides-demos-and-more/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-conf-2023-recap-videos-slides-demos-and-more/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="qodana-for.net-8-is-almost-ready-try-the-eap-and-let-us-know-what-you-think-the-qodana-blog"&gt;Qodana for .NET 8 is almost ready! Try the EAP and let us know what you think | The Qodana Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/qodana/2023/12/qodana-for-net-8-is-almost-ready-try-the-eap-and-let-us-know-what-you-think/"&gt;https://blog.jetbrains.com/qodana/2023/12/qodana-for-net-8-is-almost-ready-try-the-eap-and-let-us-know-what-you-think/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="c-advent-calendar-2023"&gt;C# Advent Calendar 2023&lt;/h2&gt;
&lt;h3 id="net-8blazorwebapppwa-qiita"&gt;[.NET 8]素のBlazorWebAppにチョイ足しでPWAを作る - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nr_ck/items/f22c24c0583309577a5e"&gt;https://qiita.com/nr_ck/items/f22c24c0583309577a5e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c12.0.net8.0utf8"&gt;C#12.0 .NET8.0における、Utf8文字列の作り方とパフォーマンス – 技探&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gitan.dev/?p=320"&gt;https://gitan.dev/?p=320&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mvvminotifypropertychanged-qiita"&gt;MVVMで、INotifyPropertyChangedを簡潔に使う。コードスニペット付き。 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hiro_t/items/556868bc6d1f5fd53a6f"&gt;https://qiita.com/hiro_t/items/556868bc6d1f5fd53a6f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c"&gt;自作キーボードをちょっとだけ便利にするツールをC#で書いた話&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.alglab.net/archives/csharp-prkkeymap/"&gt;https://blog.alglab.net/archives/csharp-prkkeymap/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-sdk-8.0publishtrimmed-qiita"&gt;.NET SDK 8.0でPublishTrimmedしようとすると失敗する場合がある話 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/skitoy4321/items/c6ae2b58245b6874ec35"&gt;https://qiita.com/skitoy4321/items/c6ae2b58245b6874ec35&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="http-server-c-qiita"&gt;簡易HTTP Serverを作ってみた (C#編) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/t0r/items/ef2fa3ae15af592e8674"&gt;https://qiita.com/t0r/items/ef2fa3ae15af592e8674&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="if-c-qiita"&gt;迷路みたいなif文が秒で綺麗になる魔法 [C#, タプル, パターンマッチング] - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hysui/items/ea0b00788f98cbb15980"&gt;https://qiita.com/hysui/items/ea0b00788f98cbb15980&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cunsafe-annulus-games"&gt;【C#】unsafeコードを書いてみよう - Annulus Games&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://annulusgames.com/blog/unsafe/"&gt;https://annulusgames.com/blog/unsafe/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="stacktrace-qiita"&gt;例外はStackTraceを記録するとき、遡りながら追記していく - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/up-hash/items/47feaf9dbd94763431d7"&gt;https://qiita.com/up-hash/items/47feaf9dbd94763431d7&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita"&gt;最新のC#をチーム全員で書くための取り組み - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/wipiano/items/7fbf5d61d68f29fdbd36"&gt;https://qiita.com/wipiano/items/7fbf5d61d68f29fdbd36&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita-1"&gt;C#でインラインアセンブラをする - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/up-hash/items/8e9e18c55d23686b2eb1"&gt;https://qiita.com/up-hash/items/8e9e18c55d23686b2eb1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="microsoft.extensions.configuration.jsonprefix"&gt;Microsoft.Extensions.Configuration.Jsonで読み込んだ設定値にPrefixを付与する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/guil/articles/dfdcba6a7f4636"&gt;https://zenn.dev/guil/articles/dfdcba6a7f4636&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="const-qiita"&gt;再代入不可能なconst変数風味（小ネタ） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/up-hash/items/8eb07cdace041896e3e8"&gt;https://qiita.com/up-hash/items/8eb07cdace041896e3e8&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-qiita-2"&gt;【C#】抽象クラスとインターフェースを併用する理由を考えた - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/seiya2130/items/6c639efadbfcb279e4ed"&gt;https://qiita.com/seiya2130/items/6c639efadbfcb279e4ed&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="exceldnaasyncawait-qiita"&gt;ExcelDNAで、async/awaitを利用する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hiro_t/items/f37256a59946c6c0faa7"&gt;https://qiita.com/hiro_t/items/f37256a59946c6c0faa7&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cdefaultinterpolatedstringhandler-stringbuilder"&gt;【C#】DefaultInterpolatedStringHandler を StringBuilder 的に使う - てくメモ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aneuf.hatenablog.com/entry/2023/12/12/000000"&gt;https://aneuf.hatenablog.com/entry/2023/12/12/000000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cboostdotnext-qiita"&gt;C#のBoost、DotNextライブラリ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/up-hash/items/059975d06347b81087de"&gt;https://qiita.com/up-hash/items/059975d06347b81087de&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="roslyn-api-qiita"&gt;Roslyn API を使ってみよう！概要編 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/lx-sasabo/items/d3791b305d85bb686ae4"&gt;https://qiita.com/lx-sasabo/items/d3791b305d85bb686ae4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c-timeprovider.net8-qiita"&gt;C# TimeProvider の利用について (.NET8) - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/sh1ch/items/936945705d0c7a4ab655"&gt;https://qiita.com/sh1ch/items/936945705d0c7a4ab655&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ispanformattable-qiita"&gt;ISpanFormattableを使おう - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Shaula/items/563ef337ae578ceebede"&gt;https://qiita.com/Shaula/items/563ef337ae578ceebede&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="creating-zip-files-in-azure-blob-storage"&gt;Creating Zip Files in Azure Blob Storage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://markheath.net/post/create-zip-files-in-blob-storage"&gt;https://markheath.net/post/create-zip-files-in-blob-storage&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="blazorbecanvas-qiita"&gt;[Blazor]BECanvasで描画処理 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/onsen_koichi/items/a0d9a88254eec34c1afc"&gt;https://qiita.com/onsen_koichi/items/a0d9a88254eec34c1afc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-framework-c-qiita"&gt;.NET Framework でも C# の最新機能を使う - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/diontools/items/2d5625419bb4f43da1a5"&gt;https://qiita.com/diontools/items/2d5625419bb4f43da1a5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="vscode.net-maui-qiita"&gt;VSCodeで.NET MAUIの開発環境構築 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/aqua_ix/items/ba9533d60633abe4c850"&gt;https://qiita.com/aqua_ix/items/ba9533d60633abe4c850&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="c.lab.srt"&gt;【C#】合成音声ソフトのタイミング情報ファイル(.lab)から字幕ファイル(.srt)をつくる&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/inuinu/articles/07ea814ca573c1"&gt;https://zenn.dev/inuinu/articles/07ea814ca573c1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="skiasharp-qiita"&gt;SkiaSharpを使用しての地図描画 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/ingen084/items/8c4492bfb3cc50129507"&gt;https://qiita.com/ingen084/items/8c4492bfb3cc50129507&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-conf-japan-2023.net-ai"&gt;.NET Conf Japan 2023「.NET + AI」補足記事&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/chomado/articles/231219-dot-net-conf"&gt;https://zenn.dev/chomado/articles/231219-dot-net-conf&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-native-aot-explained-ndepend-blog"&gt;.NET Native AOT Explained - NDepend Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.ndepend.com/net-native-aot-explained/"&gt;https://blog.ndepend.com/net-native-aot-explained/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="semantic-kernel-rc-3"&gt;Semantic Kernel (RC-3 版) ハローワールドを日本語で動かす&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/chomado/articles/231207-semantic-kernel-rc3"&gt;https://zenn.dev/chomado/articles/231207-semantic-kernel-rc3&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="snykc.net-qiita"&gt;Snykでこんなに脆弱性検出できちゃうのかい（C# / .NET 編） - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/akid3020/items/df2fed5ecfd1ec9e4d33"&gt;https://qiita.com/akid3020/items/df2fed5ecfd1ec9e4d33&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="learn.net-8-with-new-beginner-videos.net-blog"&gt;Learn .NET 8 with New Beginner Videos - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/learn-dotnet8-beginner-videos/"&gt;https://devblogs.microsoft.com/dotnet/learn-dotnet8-beginner-videos/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windows.data.pdfuwp"&gt;Windows.Data.Pdfを非UWP環境で使う&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2023-12-06-use-windows-data-pdf-out-of-uwp"&gt;https://zenn.dev/nuits_jp/articles/2023-12-06-use-windows-data-pdf-out-of-uwp&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="netpdfjpeg"&gt;.NETでPDF⇒JPEG変換をベンチマークしてみた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2023-12-06-pdf-to-jpeg-benchmarks"&gt;https://zenn.dev/nuits_jp/articles/2023-12-06-pdf-to-jpeg-benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ridersource-generator-qiita"&gt;RiderでSource Generatorを使用したツールを作成するフローを紹介 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/Tanakancolle/items/b12c48e0cf0fe78af2ad"&gt;https://qiita.com/Tanakancolle/items/b12c48e0cf0fe78af2ad&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="optimizing.net-solution-architecture-for-faster-compilation-through-project-decoupling"&gt;Optimizing .NET solution architecture for faster compilation through project decoupling&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/optimizing-net-solution-architecture-for-faster-compilation-through-project-decoupling-5eg6"&gt;https://dev.to/asimmon/optimizing-net-solution-architecture-for-faster-compilation-through-project-decoupling-5eg6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8mvvmblazor-web-app-qiita"&gt;[.NET 8]MVVMで作るBlazor Web App - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nr_ck/items/6faa86c5e381fb96c67a"&gt;https://qiita.com/nr_ck/items/6faa86c5e381fb96c67a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="enriching-logs-with-tagprovider-and-ilogenricher"&gt;Enriching logs with [TagProvider] and ILogEnricher&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/customising-the-new-telemetry-logging-source-generator/"&gt;https://andrewlock.net/customising-the-new-telemetry-logging-source-generator/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-aspire"&gt;.NET Aspire&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://henriquesd.medium.com/net-aspire-296e24b952c0"&gt;https://henriquesd.medium.com/net-aspire-296e24b952c0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="scroll-to-expand-document-tabs-visual-studio-blog"&gt;Scroll to expand document tabs - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/scroll-to-expand-document-tabs/"&gt;https://devblogs.microsoft.com/visualstudio/scroll-to-expand-document-tabs/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="another-look-into-the-future-with-riders-predictive-debugger-the.net-tools-blog"&gt;Another Look into the Future with Rider's Predictive Debugger | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/12/04/another-look-into-the-future-with-riders-predictive-debugger/"&gt;https://blog.jetbrains.com/dotnet/2023/12/04/another-look-into-the-future-with-riders-predictive-debugger/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="global-error-handling-in-asp.net-core-8"&gt;Global Error Handling in ASP.NET Core 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/milanjovanovictech/global-error-handling-in-aspnet-core-8-2mki"&gt;https://dev.to/milanjovanovictech/global-error-handling-in-aspnet-core-8-2mki&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net8application-insightstraceinformation-qiita"&gt;.NET8のApplication InsightsでTrace/Informationログをタイムラインに出す方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hydrangeas/items/bca8ecc5d5cb0f14a37c"&gt;https://qiita.com/hydrangeas/items/bca8ecc5d5cb0f14a37c&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dependency-injection-using-keyed-services-is-finally-in-asp.net"&gt;Dependency Injection using keyed services is finally in ASP.NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/dependency-injection-using-keyed-services-is-finally-in-asp-net/"&gt;https://blog.elmah.io/dependency-injection-using-keyed-services-is-finally-in-asp-net/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how.net-8.0-boosted-json-schema-performance-by-20-endjin"&gt;How .NET 8.0 boosted JSON Schema performance by 20% | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.endjin.com/blog/2023/12/how-dotnet-8-boosted-json-schema-performance-by-20-percent-for-free"&gt;https://www.endjin.com/blog/2023/12/how-dotnet-8-boosted-json-schema-performance-by-20-percent-for-free&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="adding-environment-vars-to.net-aspire-services"&gt;Adding environment vars to .NET Aspire services&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://timheuer.com/blog/add-environment-variables-to-aspire-services/"&gt;https://timheuer.com/blog/add-environment-variables-to-aspire-services/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-make-libraries-compatible-with-native-aot.net-blog"&gt;How to make libraries compatible with native AOT - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/creating-aot-compatible-libraries/"&gt;https://devblogs.microsoft.com/dotnet/creating-aot-compatible-libraries/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="e"&gt;\e (エスケープ文字のエスケープ シーケンス)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/12/escape-escape/"&gt;https://ufcpp.net/blog/2023/12/escape-escape/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="testing-typesense-search-with-testcontainers-and.net"&gt;Testing Typesense search with Testcontainers and .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/testing-typesense-search-with-testcontainers-and-dotnet"&gt;https://khalidabuhakmeh.com/testing-typesense-search-with-testcontainers-and-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="building-a-bare-metal-bootable-game-for-raspberry-pi-in-c"&gt;Building a bare-metal bootable game for Raspberry Pi in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://migeel.sk/blog/2023/12/08/building-bare-metal-bootable-game-for-raspberry-pi-in-csharp/"&gt;https://migeel.sk/blog/2023/12/08/building-bare-metal-bootable-game-for-raspberry-pi-in-csharp/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="pre-commit-hooks-with-husky.net-build-format-and-test-your.net-application-before-a-git-commit"&gt;Pre-commit hooks with Husky.NET - build, format, and test your .NET application before a Git commit&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/bellonedavide/pre-commit-hooks-with-huskynet-build-format-and-test-your-net-application-before-a-git-commit-3cbd"&gt;https://dev.to/bellonedavide/pre-commit-hooks-with-huskynet-build-format-and-test-your-net-application-before-a-git-commit-3cbd&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="redacting-sensitive-data-in-logs-with-microsoft.extensions.compliance.redaction"&gt;Redacting sensitive data in logs with Microsoft.Extensions.Compliance.Redaction&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/redacting-sensitive-data-with-microsoft-extensions-compliance/"&gt;https://andrewlock.net/redacting-sensitive-data-with-microsoft-extensions-compliance/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-native-aot-hardware-intrinsics"&gt;.NET Native AOT で Hardware Intrinsics を使用する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/naminodarie/articles/dotnet_native_aot_i"&gt;https://zenn.dev/naminodarie/articles/dotnet_native_aot_i&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-december-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | December 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/12/11/net-annotated-monthly-december-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/12/11/net-annotated-monthly-december-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="github-actions-visual-studio-marketplace"&gt;GitHub Actions - Visual Studio Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=TimHeuer.GitHubActionsVS"&gt;https://marketplace.visualstudio.com/items?itemName=TimHeuer.GitHubActionsVS&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://x.com/timheuer/status/1731011137389695140?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Just a reminder that if you are a &lt;a href="https://twitter.com/VisualStudio?ref_src=twsrc%5Etfw"&gt;&amp;#64;VisualStudio&lt;/a&gt; user and work with GitHub Actions, you can trigger and observe workflow runs, add/edit secrets from VS with this extension: &lt;a href="https://t.co/OQpQufn97d"&gt;https://t.co/OQpQufn97d&lt;/a&gt; &lt;a href="https://t.co/0dbImYj580"&gt;pic.twitter.com/0dbImYj580&lt;/a&gt;&lt;/p&gt;&amp;mdash; Tim (&amp;#64;timheuer) &lt;a href="https://twitter.com/timheuer/status/1731011137389695140?ref_src=twsrc%5Etfw"&gt;December 2, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/aaronontheweb/status/1731500517816201611?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Hacking on .NET 8&amp;#39;s QUIC APIs and using &lt;a href="https://twitter.com/AkkaDotNET?ref_src=twsrc%5Etfw"&gt;&amp;#64;AkkaDotNET&lt;/a&gt; to build some custom protocol servers here: &lt;a href="https://t.co/9xk1jAGsIz"&gt;https://t.co/9xk1jAGsIz&lt;/a&gt;&lt;br&gt;&lt;br&gt;Hope to have a reactive &amp;quot;hello world&amp;quot; echo server done by the end of the week - left a set of questions I&amp;#39;m wrestling with in the README&lt;/p&gt;&amp;mdash; Aaron Stannard (&amp;#64;Aaronontheweb) &lt;a href="https://twitter.com/Aaronontheweb/status/1731500517816201611?ref_src=twsrc%5Etfw"&gt;December 4, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/12/06/updates</id>
		<title>2023-12-06: C# Advent Calendar, NUnit 4.0.1, ML.NET 3.0</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/12/06/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-12-06T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="c-advent-calendar-2023-qiita"&gt;C#のカレンダー | Advent Calendar 2023 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/advent-calendar/2023/csharplang"&gt;https://qiita.com/advent-calendar/2023/csharplang&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023 年の C# Advent Calendar が現在進行中。&lt;/p&gt;
&lt;h3 id="nunit-4.0.1-framework-release-nunit-docs"&gt;NUnit 4.0.1 | Framework Release | NUnit Docs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://docs.nunit.org/articles/nunit/release-notes/framework.html#nunit-401---december-2-2023"&gt;https://docs.nunit.org/articles/nunit/release-notes/framework.html#nunit-401---december-2-2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NUnit 4.0.0/4.0.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;TestCaseSource の非同期対応、.NET 6 ターゲット対応、テストのキャンセル(CancelAfter) など多くの改善や修正が含まれている他、.NET Framework 3.5, 4.0, 4.5, .NET Core 2.1 といったターゲットの削除も行われている。&lt;/p&gt;
&lt;h3 id="announcing-ml.net-3.0.net-blog"&gt;Announcing ML.NET 3.0 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-ml-net-3-0/"&gt;https://devblogs.microsoft.com/dotnet/announcing-ml-net-3-0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET 3.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは物体検出 API、質問応答(QA)と固有表現抽出(NER)、Intel oneDAL ハードウェアトレーニングアクセラレーション、AutoML の改善、DataFrame のアップデート、Tensor プリミティブの統合などが含まれる。&lt;/p&gt;
&lt;h3 id="release-v2.5.140-messagepack-csharpmessagepack-csharp"&gt;Release v2.5.140 · MessagePack-CSharp/MessagePack-CSharp&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/MessagePack-CSharp/MessagePack-CSharp/releases/tag/v2.5.140"&gt;https://github.com/MessagePack-CSharp/MessagePack-CSharp/releases/tag/v2.5.140&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MessagePack v2.5.140 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Mono ランタイムでの不具合の対応などが含まれている。&lt;/p&gt;
&lt;h3 id="the-developer-ecosystem-in-2023-key-trends-for-c-the.net-tools-blog"&gt;The Developer Ecosystem in 2023: Key Trends for C# | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/30/the-developer-ecosystem-in-2023-key-trends-for-csharp/"&gt;https://blog.jetbrains.com/dotnet/2023/11/30/the-developer-ecosystem-in-2023-key-trends-for-csharp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains による C# 開発者のエコシステムのトレンド調査結果。&lt;/p&gt;
&lt;p&gt;ASP.NET Core で利用している機能、C# バージョン、開発対象、IDE やエディタ、プラグインの使用状況など。&lt;/p&gt;
&lt;h3 id="the-resharper-2023.3-release-candidate-is-now-available-the.net-tools-blog"&gt;The ReSharper 2023.3 Release Candidate Is Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/29/the-resharper-2023-3-rc/"&gt;https://blog.jetbrains.com/dotnet/2023/11/29/the-resharper-2023-3-rc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.3 Release Candidate がリリースされた。&lt;/p&gt;
&lt;p&gt;AI アシスタントの強化、C# 12 のサポート、Entity Framework 関連の調査とダイアグラム、UI の改善、Razor のフォーマットエンジンの刷新、ユニットテストの AI 生成、新しい文法およびスペルチェッカーなど。&lt;/p&gt;
&lt;h3 id="the-rider-2023.3-release-candidate-is-now-available-the.net-tools-blog"&gt;The Rider 2023.3 Release Candidate Is Now Available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/29/the-rider-2023-3-rc/"&gt;https://blog.jetbrains.com/dotnet/2023/11/29/the-rider-2023-3-rc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.3 Release Candidate がリリースされた。&lt;/p&gt;
&lt;p&gt;AI アシスタントの強化、C# 12 および F# 8 を含む .NET 8 SDK のサポート、複数プロジェクトのスタートアップの改善、型の依存関係ダイアグラム、予測デバッグ、ユニットテストの AI 生成など様々な新機能を含む。&lt;/p&gt;
&lt;h3 id="six-labors-announcing-imagesharp-3.1.0"&gt;Six Labors : Announcing ImageSharp 3.1.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sixlabors.com/posts/announcing-imagesharp-310/"&gt;https://sixlabors.com/posts/announcing-imagesharp-310/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ImageSharp 3.1.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではアニメーション WebP や PNG のサポート、Quite Ok (Qoi) のサポート、デコーダーの信頼性の向上、各種パフォーマンスの向上。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="blazor-web-app-oauth-asp.net-core-8.0"&gt;Blazor Web App でOAuth認証を最小規模で使う (ASP.NET Core 8.0)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tetr4lab/articles/1946ec08aec508"&gt;https://zenn.dev/tetr4lab/articles/1946ec08aec508&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor Web App で Google OAuth 認証を実装する方法について。&lt;/p&gt;
&lt;h3 id="bitmapsourcebitmap"&gt;BitmapSourceからBitmapへ変換するベストプラクティス&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2023-12-03-convert-bitmapsource-to-bitmap"&gt;https://zenn.dev/nuits_jp/articles/2023-12-03-convert-bitmapsource-to-bitmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WPF において BitmapSource から Bitmap へ変換する方法として良い方法の紹介。&lt;/p&gt;
&lt;h3 id="mac.net-maui-ios-iphone-qiita"&gt;【Mac不要】.NET MAUI 製 iOS アプリを iPhone に手軽にデバッグ配備する手順 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kami_teru/items/b2a6bd77f7c836ae3d1e"&gt;https://qiita.com/kami_teru/items/b2a6bd77f7c836ae3d1e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows のみで Visual Studio から .NET MAUI 製の iOS アプリを iPhone 等の実機でデバッグ実行する方法について。&lt;/p&gt;
&lt;h3 id="net8blazor-wasmasp.net-core-hosted"&gt;.Net8のBlazor WASMでASP.Net Core Hostedの構成を作る方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/vigilanteyu/articles/d7a47dff63e8e2"&gt;https://zenn.dev/vigilanteyu/articles/d7a47dff63e8e2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 まであった Blazor WebAssembly の ASP.NET Core Hosted 相当の構成を .NET 8 でも実現する方法について。&lt;/p&gt;
&lt;h3 id="visual-basic-2023-qiita"&gt;Visual Basic 2023年振り返り - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/yaju/items/97c7d6ae94a303bdbb5b"&gt;https://qiita.com/yaju/items/97c7d6ae94a303bdbb5b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今年の Visual Basic .NET を含めた Visual Basic に関するトピックのまとめ。&lt;/p&gt;
&lt;h3 id="storing-local-data-in-a.net-maui-blazor-hybrid-app-using-indexeddb-part-1"&gt;Storing local data in a .NET MAUI Blazor Hybrid App using IndexedDB - Part 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/icebeam7/storing-local-data-in-a-net-maui-blazor-hybrid-app-using-indexeddb-part-1-3hn2"&gt;https://dev.to/icebeam7/storing-local-data-in-a-net-maui-blazor-hybrid-app-using-indexeddb-part-1-3hn2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI Blazor Hybrid アプリで IndexedDB を使用してローカルデータを保存する方法について。&lt;/p&gt;
&lt;h3 id="imagemagickimagesharpsystem.drawing"&gt;ImageMagickとImageSharpとSystem.Drawingの性能評価してみた&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nuits_jp/articles/2023-12-01-imagemagic-imagesharp-benchmarks"&gt;https://zenn.dev/nuits_jp/articles/2023-12-01-imagemagic-imagesharp-benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;画像を操作するライブラリーの Magick.NET (ImageMagick) と ImageSharp と System.Drawing の性能の比較。
記事ではデコード、クロップ、二値化の処理を .NET Framework と .NET 8 で比較している。&lt;/p&gt;
&lt;h3 id="how.net-8.0-boosted-ais.net-performance-by-27-endjin"&gt;How .NET 8.0 boosted AIS.NET performance by 27% | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/blog/2023/11/how-dotnet-8-boosted-ais-dotnet-performance-by-27-percent-for-free"&gt;https://endjin.com/blog/2023/11/how-dotnet-8-boosted-ais-dotnet-performance-by-27-percent-for-free&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AIS デコーダー (AIS は船舶の無線メッセージ) を解析するライブラリーである AIS.NET を .NET 8 で実行した場合にパフォーマンスが大きく改善されたことについて。&lt;/p&gt;
&lt;h3 id="my-favorite-features-in-visual-studio-17.8-visual-studio-blog"&gt;My favorite features in Visual Studio 17.8 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/my-favorite-features-in-visual-studio-17-8/"&gt;https://devblogs.microsoft.com/visualstudio/my-favorite-features-in-visual-studio-17-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mads Kristensen 氏のおすすめする Visual Studio 2022 version 17.8 の新機能の紹介。&lt;/p&gt;
&lt;p&gt;記事では大文字小文字を維持したままの検索と置換、リッチな Pull request 体験といった機能を紹介している。&lt;/p&gt;
&lt;h3 id="behind-logproperties-and-the-new-telemetry-logging-source-generator"&gt;Behind [LogProperties] and the new telemetry logging source generator&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/behind-logproperties-and-the-new-telemetry-logging-source-generator/"&gt;https://andrewlock.net/behind-logproperties-and-the-new-telemetry-logging-source-generator/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 と共に提供された  Microsoft.Extensions.Telemetry.Abstractions にふくまれる、ログにプロパティーの値を残す &lt;code&gt;LogProperties&lt;/code&gt; 属性についての解説。&lt;/p&gt;
&lt;h3 id="alllinq-qiita"&gt;【Allって】LINQ、この場合どうなる？【空配列は？】 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/RyotaMurohoshi/items/bf45f4e7d52e6aad8ef7"&gt;https://qiita.com/RyotaMurohoshi/items/bf45f4e7d52e6aad8ef7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# Advent Calendar 2023 の1日目の記事。LINQ の All を空の配列に対して実行した場合の結果や、同点となる要素がある場合の OrderBy の結果などのコーナーケースを解説。&lt;/p&gt;
&lt;h3 id="vscode-c"&gt;VSCode で C# のブロック&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aquasoftware.net/blog/?p=1975"&gt;https://aquasoftware.net/blog/?p=1975&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# Advent Calendar 2023 の2日目の記事。C# のコードフォーマット設定でブレースの前後の開業を設定する方法について。&lt;/p&gt;
&lt;h3 id="the-rise-of-c-markup-for-cross-platform-development"&gt;The Rise of C# Markup for Cross Platform Development&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/the-rise-of-c-markup-for-cross-platform-development/"&gt;https://platform.uno/blog/the-rise-of-c-markup-for-cross-platform-development/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform の C# での UI 記述方法である C# マークアップについての紹介。&lt;/p&gt;
&lt;h3 id="hot-reload-for-c-dev-kit"&gt;Hot Reload for C# Dev Kit&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.poppastring.com/blog/hot-reload-for-c-dev-kit"&gt;https://www.poppastring.com/blog/hot-reload-for-c-dev-kit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code の拡張 C# Dev Kit で実験的機能の Hot Reload を有効にする方法について。&lt;/p&gt;
&lt;h3 id="omnisharp-vim-ide0001-qiita"&gt;OmniSharp-Vim で IDE0001 などのコードスタイルの分析結果を表示する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/lx-sasabo/items/4ceb7be5e2721e4e52f8"&gt;https://qiita.com/lx-sasabo/items/4ceb7be5e2721e4e52f8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OmniSharp-Vim で Analyzer 等のコード解析結果を表示する方法について。&lt;/p&gt;
&lt;h3 id="net-8-blazor-ssr-javascript"&gt;.NET 8 の Blazor の静的 サーバー レンダリング (SSR) で JavaScript を使う方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-jsinterop"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-jsinterop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor で静的サーバーレンダリング (SSR) を使用した際にカスタムな JavaScript を実装、実行する方法について。&lt;/p&gt;
&lt;h3 id="net-httpclient-timeout-jsakamoto"&gt;.NET の HttpClient の Timeout は何の時間切れを指しているのか | &amp;#64;jsakamoto&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devadjust.exblog.jp/29756261/"&gt;https://devadjust.exblog.jp/29756261/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HttpClient に設定できる Timeout が実際にはどのように作用するのかについての解説。&lt;/p&gt;
&lt;h3 id="embedding-a-minimal-asp.net-web-server-into-a-desktop-application"&gt;Embedding a minimal ASP.NET Web Server into a Desktop Application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2023/Nov/27/Embed-a-minimal-ASPNET-Web-Server-into-a-Desktop-Application"&gt;https://weblog.west-wind.com/posts/2023/Nov/27/Embed-a-minimal-ASPNET-Web-Server-into-a-Desktop-Application&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;デスクトップアプリケーションに最小の ASP.NET Core サーバーを組み込む方法について。&lt;/p&gt;
&lt;h3 id="cfaketimeprovider-fakelogger"&gt;【C#】FakeTimeProvider と FakeLogger を試す - てくメモ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aneuf.hatenablog.com/entry/2023/11/27/210000"&gt;https://aneuf.hatenablog.com/entry/2023/11/27/210000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で導入された &lt;code&gt;ITimeProvider&lt;/code&gt; の Fake 実装となる &lt;code&gt;FakeTimeProvider&lt;/code&gt; と新たに導入された &lt;code&gt;ILogger&lt;/code&gt; の Fake 実装となる &lt;code&gt;FakeLogger&lt;/code&gt; についての紹介。&lt;/p&gt;
&lt;h3 id="c-collectionbuilder"&gt;【C#】コレクション式 ： 独自型でコレクション式を使ってみる (CollectionBuilder 属性) - てくメモ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aneuf.hatenablog.com/entry/2023/11/24/210000"&gt;https://aneuf.hatenablog.com/entry/2023/11/24/210000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のコレクション式を独自型で実現する &lt;code&gt;CollectionBuilderAttribute&lt;/code&gt; とそれを使用した実装方法について。&lt;/p&gt;
&lt;h3 id="cdependency-injection-annulus-games"&gt;【C#】Dependency Injection(依存性の注入)とは - Annulus Games&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://annulusgames.com/blog/dependency-injection/"&gt;https://annulusgames.com/blog/dependency-injection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dependency Injection についての解説。サービスロケーターとその問題点、 DI コンテナーとして Microsoft.Extensions.DependencyInjection を例にした各種例、.NET/Unity 向けの M.E.DI 以外の DI コンテナーの紹介など。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="thomhurstmodularpipelines-write-your-pipelines-in-c"&gt;thomhurst/ModularPipelines: Write your pipelines in C# !&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/thomhurst/ModularPipelines"&gt;https://github.com/thomhurst/ModularPipelines&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;モジュールを組み合わせて何らかの処理/作業をパイプラインを作るフレームワーク。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/&amp;#64;thomhurst/write-your-pipelines-in-c-using-modularpipelines-226de1a24bb7"&gt;Write your pipelines in C# using ModularPipelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="nenonaninuaspnetcore.signalr.opentelemetry-this-is-an-instrumentation-library-which-instruments-asp.net-core-signalr-and-collect-metrics-and-traces-about-signalr-hub-method-invocations"&gt;nenoNaninu/AspNetCore.SignalR.OpenTelemetry: This is an Instrumentation Library, which instruments ASP.NET Core SignalR and collect metrics and traces about SignalR hub method invocations.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/nenoNaninu/AspNetCore.SignalR.OpenTelemetry"&gt;https://github.com/nenoNaninu/AspNetCore.SignalR.OpenTelemetry&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SignalR のメトリックを OpenTelemtry に流すためのライブラリー。&lt;/p&gt;
&lt;!-- https://x.com/nenomake/status/1730229080455303389?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;OpenTelemetry を SignalR でも有効活用するためのライブラリをリリースしました！とりあえずトレースだけはできるようにしたのですが、順次いろいろなメトリクス計測できるようにアップデートしていきます...!&lt;a href="https://t.co/C11Q0fcox2"&gt;https://t.co/C11Q0fcox2&lt;/a&gt;&lt;/p&gt;&amp;mdash; 何縫ねの。 (&amp;#64;nenoMake) &lt;a href="https://twitter.com/nenoMake/status/1730229080455303389?ref_src=twsrc%5Etfw"&gt;November 30, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="debug-output-filter-visual-studio-marketplace"&gt;Debug Output Filter - Visual Studio Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GrantDavies.NiahTextFilter2022"&gt;https://marketplace.visualstudio.com/items?itemName=GrantDavies.NiahTextFilter2022&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;デバッグ出力の履歴やフィルタリングを行える Visual Studio 拡張。&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Avalonia XPF (Avalonia によるクロスプラットフォーム WPF 互換キット) を使って PerfView をブラウザーで動かせた、という話。&lt;/p&gt;
&lt;!-- https://twitter.com/AvaloniaUI/status/1729403695392059887 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Many of you have been curious about Avalonia XPF in the browser. &lt;br&gt;&lt;br&gt;Good news! We&amp;#39;re on track for private previews next year. 🌟 &lt;br&gt;&lt;br&gt;For now, enjoy this sneak peek: Microsoft&amp;#39;s PerfView running in the browser!  🚀 &lt;a href="https://t.co/5KmSOMfJ9j"&gt;pic.twitter.com/5KmSOMfJ9j&lt;/a&gt;&lt;/p&gt;&amp;mdash; Avalonia UI (&amp;#64;AvaloniaUI) &lt;a href="https://twitter.com/AvaloniaUI/status/1729403695392059887?ref_src=twsrc%5Etfw"&gt;November 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;空のクラスやインターフェースを定義する際に &lt;code&gt;;&lt;/code&gt; でボディーなしで宣言できて便利という話。&lt;/p&gt;
&lt;!-- https://x.com/sergiopedri/status/1730233715345826173?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;There&amp;#39;s a small new little feature in C# 12 that I think most didn&amp;#39;t notice. You can now declare empty class, record and interface types without specifying a body at all, just with a semicolon token. It&amp;#39;s not even called out in the docs, I should go update them 😄&lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/Vsjxld9lZt"&gt;pic.twitter.com/Vsjxld9lZt&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sergio Pedri (&amp;#64;SergioPedri) &lt;a href="https://twitter.com/SergioPedri/status/1730233715345826173?ref_src=twsrc%5Etfw"&gt;November 30, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;プロファイリングする際に、アプリを起動時にはプロファイリングを一時停止するという機能について。&lt;/p&gt;
&lt;!-- https://x.com/vs_debugger/status/1730647909279166974?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;🛠️ Introducing the &amp;quot;start-pause&amp;quot; feature in application profiling—launch your app without immediate data collection for seamless game development experiences! 🎮 Resume data collection with a click. Compatible with both native and managed projects.&lt;a href="https://twitter.com/hashtag/vsdebuggertip?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#vsdebuggertip&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/VS2022?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#VS2022&lt;/a&gt; 17.9 P1 &lt;a href="https://t.co/Py6LqdMqMv"&gt;pic.twitter.com/Py6LqdMqMv&lt;/a&gt;&lt;/p&gt;&amp;mdash; Visual Studio Debugger (&amp;#64;VS_Debugger) &lt;a href="https://twitter.com/VS_Debugger/status/1730647909279166974?ref_src=twsrc%5Etfw"&gt;December 1, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Ghidra のスクリプトで Native AOT の String 検索ができるようにしたという話。&lt;/p&gt;
&lt;!-- https://x.com/washi_dev/status/1725270583011688726?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Ever tried &lt;a href="https://twitter.com/hashtag/reversing?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#reversing&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; binaries compiled with &lt;a href="https://twitter.com/hashtag/nativeaot?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#nativeaot&lt;/a&gt;? I decided to publish some of my (hacky) &lt;a href="https://twitter.com/hashtag/ghidra?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#ghidra&lt;/a&gt; scripts that may help you out with mundane tasks like finding strings.&lt;br&gt;&lt;br&gt;👉&lt;a href="https://t.co/BRU8EyeTq0"&gt;https://t.co/BRU8EyeTq0&lt;/a&gt;&lt;br&gt;&lt;br&gt;The scripts could probably use some work but at least it&amp;#39;s a start😃 &lt;a href="https://t.co/QrSWnu5Tgw"&gt;pic.twitter.com/QrSWnu5Tgw&lt;/a&gt;&lt;/p&gt;&amp;mdash; Washi (&amp;#64;washi_dev) &lt;a href="https://twitter.com/washi_dev/status/1725270583011688726?ref_src=twsrc%5Etfw"&gt;November 16, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;PolySharp で C# 12 の新しい polyfill が利用できるようになったという話。&lt;/p&gt;
&lt;!-- https://x.com/sergiopedri/status/1729878697824698514?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Just released a new version of PolySharp w/ new polyfills to make it super easy to leverage C# 12 features downlevel! Just enable C# 12 in your .NET Standard, .NET Framework, UWP, etc. project and have fun with all the new cool features! 🎉&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt;&lt;a href="https://t.co/ZuhYzUgip0"&gt;https://t.co/ZuhYzUgip0&lt;/a&gt; &lt;a href="https://t.co/A1emi4WLUM"&gt;pic.twitter.com/A1emi4WLUM&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sergio Pedri (&amp;#64;SergioPedri) &lt;a href="https://twitter.com/SergioPedri/status/1729878697824698514?ref_src=twsrc%5Etfw"&gt;November 29, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;code&gt;[InlineArray]&lt;/code&gt; の最大値は 1MB&lt;/p&gt;
&lt;!-- https://x.com/hypeartistmusic/status/1728123597968011688?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;TIL: Overall size of a structure marked b&lt;br&gt;with [InlineArray] is limited to 1mb&lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/DgChywaCzq"&gt;pic.twitter.com/DgChywaCzq&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hypeartist (&amp;#64;hypeartistmusic) &lt;a href="https://twitter.com/hypeartistmusic/status/1728123597968011688?ref_src=twsrc%5Etfw"&gt;November 24, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="api-proposal-introduce-new-memory-cache-library-issue-4766-dotnetextensions"&gt;[API Proposal]: Introduce new memory cache library · Issue #4766 · dotnet/extensions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/extensions/issues/4766"&gt;https://github.com/dotnet/extensions/issues/4766&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RCache というメモリー効率の良い新しいメモリーキャッシュを導入したいという提案。&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/11/26/updates</id>
		<title>2023-11-26: Cake v4.0.0, NATS.Net v2.0.0, Npgsql 8.0</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/11/26/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-11-26T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="cake-v4.0.0-released"&gt;Cake v4.0.0 released&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cakebuildnet.medium.com/cake-v4-0-0-released-475ce3ddd987"&gt;https://cakebuildnet.medium.com/cake-v4-0-0-released-475ce3ddd987&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cake v4.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンでは C# 12 および .NET 8 のサポート、ファイル API の強化などが含まれている。&lt;/p&gt;
&lt;h3 id="release-nats.net-v2.0.0-nats-ionats.net.v2"&gt;Release NATS.Net v2.0.0 · nats-io/nats.net.v2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/nats-io/nats.net.v2/releases/tag/v2.0.0"&gt;https://github.com/nats-io/nats.net.v2/releases/tag/v2.0.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NATS.Net v2.0.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;NATS の .NET クライアントライブラリーで v2.0.0 から AlterNats をベースとしたモダンな実装となった。このバージョンではコアとなる NATS コマンドのサポート、JetStream のサポート、NATS Service API サポート、Native AOT サポートなどが含まれている。&lt;/p&gt;
&lt;h3 id="npgsql-8.0-release-notes-npgsql-documentation"&gt;Npgsql 8.0 Release Notes | Npgsql Documentation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.npgsql.org/doc/release-notes/8.0.html"&gt;https://www.npgsql.org/doc/release-notes/8.0.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Npgsql 8.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このバージョンでは Native AOT および Trimming のサポート、Metrics API による OpenTelemetry メトリクスのサポート、キー付きサービスとしての登録といった新機能が含まれている。その他、いくつかの破壊的変更が含まれている。&lt;/p&gt;
&lt;p&gt;バージョン 8.0 が .NET Framework (.NET Standard 2.0) をサポートする最後のバージョンとなり 9.0 からはサポートされなくなるとのこと。&lt;/p&gt;
&lt;h3 id="announcing.net-chiseled-containers.net-blog"&gt;Announcing .NET Chiseled Containers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-chiseled-containers/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-chiseled-containers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Chiseled Containers のリリースアナウンス。&lt;/p&gt;
&lt;p&gt;Chiseled イメージは Ubuntu のリリースした最小限のコンポーネントを含むコンテナーイメージであり、それを元に .NET のランタイムを含めたものをリリースした。&lt;/p&gt;
&lt;p&gt;記事では Chiseled での容量や依存関係、脆弱性対応といった部分でのメリット、Distroless を採用する場合との違いなどについて説明している。&lt;/p&gt;
&lt;h3 id="announcing-nuget.exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure-the-nuget-blog"&gt;Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/"&gt;https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet.exe と NuGet クライアント SDK パッケージのサポートポリシーについて。&lt;/p&gt;
&lt;p&gt;記事では NuGet.exe と NuGet クライアント SDK の今後のサポートについて説明している。原則として更新は現行バージョンおよび Visual Studio と .NET SDK の LTS サポートにのみ提供され、脆弱なバージョンの NuGet は tools.json から削除され、パッケージは非推奨となる。&lt;/p&gt;
&lt;h3 id="visual-studio-2022-17.8-performance-enhancements-visual-studio-blog"&gt;Visual Studio 2022 – 17.8 Performance Enhancements - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-8-performance-enhancements/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-8-performance-enhancements/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 version 17.8 でのパフォーマンス改善についての解説。&lt;/p&gt;
&lt;p&gt;記事ではファイルを開く際の応答性の改善、Razor/Blazor での応答性の向上、F5 (デバッグ実行) の速度向上、Unreal Engine C++ での IntelliSense の最適化、非 SDK スタイル .NET プロジェクトのビルドの最適化について紹介している。&lt;/p&gt;
&lt;h3 id="hosted-image-runners-for-azure-pipelines-and-github-actions-have-now-completed-rollout-to-include.net-8-sdk-latest-and-visual-studio-17.8-windows-latest"&gt;Hosted image runners for Azure Pipelines and GitHub Actions have now completed rollout to include .NET 8 SDK (*-latest) and Visual Studio 17.8 (windows-latest)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2204-Readme.md"&gt;https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2204-Readme.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Pipelines および GitHub Actions のランナーイメージに .NET 8 SDK と Visual Studio 2022 17.8 (Windows) が含まれるようになった。&lt;/p&gt;
&lt;!-- https://x.com/timheuer/status/1727006190306287773?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;📢 Hosted image runners for Azure Pipelines and GitHub Actions have now completed rollout to include .NET 8 SDK (*-latest) and Visual Studio 17.8 (windows-latest) &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;a href="https://t.co/UCazh39yYa"&gt;https://t.co/UCazh39yYa&lt;/a&gt;&lt;a href="https://t.co/827aQSwqkt"&gt;https://t.co/827aQSwqkt&lt;/a&gt;&lt;/p&gt;&amp;mdash; Tim (&amp;#64;timheuer) &lt;a href="https://twitter.com/timheuer/status/1727006190306287773?ref_src=twsrc%5Etfw"&gt;November 21, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="servicestack-v8"&gt;ServiceStack v8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://docs.servicestack.net/releases/v8_00"&gt;https://docs.servicestack.net/releases/v8_00&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ServiceStack v8 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは Blazor や認証など様々なプロジェクトのテンプレートが更新されたほか、PHP のための End-to-End 型付き API サポートなど様々な改善が含まれている。&lt;/p&gt;
&lt;!-- https://x.com/servicestack/status/1726603790453989682?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;ServiceStack v8 is here!&lt;br&gt;&lt;br&gt;✅ All packages with .net8.0 builds&lt;br&gt;✅ All Project Templates upgraded to .NET 8&lt;br&gt; - GH Actions now use .NET 8 Docker containers&lt;br&gt;✅New Tailwind Blazor, Razor Pages &amp;amp; MVC Templates&lt;br&gt;✅Switch to ASP .NET Identity Auth &amp;amp; EF&lt;br&gt;lots more!&lt;a href="https://t.co/yCgbel7FDq"&gt;https://t.co/yCgbel7FDq&lt;/a&gt; &lt;a href="https://t.co/xHFaRiO1wN"&gt;pic.twitter.com/xHFaRiO1wN&lt;/a&gt;&lt;/p&gt;&amp;mdash; ServiceStack (&amp;#64;ServiceStack) &lt;a href="https://twitter.com/ServiceStack/status/1726603790453989682?ref_src=twsrc%5Etfw"&gt;November 20, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="release-2.1.0-microsoftreverse-proxy"&gt;Release 2.1.0 · microsoft/reverse-proxy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/reverse-proxy/releases/tag/v2.1.0"&gt;https://github.com/microsoft/reverse-proxy/releases/tag/v2.1.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yarp 2.1.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合の修正や改善が含まれている。&lt;/p&gt;
&lt;h3 id="the-end-of-the-tye-experiment-issue-1622-dotnettye"&gt;The end of the Tye Experiment · Issue #1622 · dotnet/tye&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/tye/issues/1622"&gt;https://github.com/dotnet/tye/issues/1622&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ローカルでのマイクロサービス開発ツールを目標としていた Tye は .NET Aspire が公開されたことによりアーカイブされることとなった。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="tannergooding-tannergoodingdotnet.social"&gt;tannergooding (&amp;#64;tannergooding&amp;#64;dotnet.social)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnet.social/&amp;#64;tannergooding/111423937700237917"&gt;https://dotnet.social/&amp;#64;tannergooding/111423937700237917&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET の Hardware Intrinsics の簡単な歴史とデモなど。&lt;/p&gt;
&lt;h3 id="primary-constructors-using-c-12-in-rider-and-resharper-the.net-tools-blog"&gt;Primary Constructors – Using C# 12 in Rider and ReSharper | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/23/primary-constructors-using-csharp-12-in-rider-and-resharper/"&gt;https://blog.jetbrains.com/dotnet/2023/11/23/primary-constructors-using-csharp-12-in-rider-and-resharper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider と ReSharper での C# 12 のプライマリーコンストラクターの対応についての紹介。&lt;/p&gt;
&lt;p&gt;どのような変換/簡素化に対応しているか、二重キャプチャ警告について、パラメータの強調表示、コードスタイルなど。&lt;/p&gt;
&lt;h3 id="building-arm64-docker-images-with.net-8-a-quick-solution"&gt;Building Arm64 Docker Images with .NET 8: A Quick Solution&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/medialesson/building-arm64-docker-images-with-net-8-a-quick-solution-5491a94eb507"&gt;https://medium.com/medialesson/building-arm64-docker-images-with-net-8-a-quick-solution-5491a94eb507&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Arm64 の Docker イメージを作成するにあたり &lt;code&gt;FROM&lt;/code&gt; で &lt;code&gt;--platform=$BUILDPLATFORM&lt;/code&gt; を指定しておくことでビルド時にプラットフォームを決定できる。&lt;/p&gt;
&lt;h3 id="net-8-blazor-interactivewebassembly"&gt;.NET 8 の Blazor で InteractiveWebAssembly でプリレンダリングをなるべく避けたい&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasmloading"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-wasmloading&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor で InteractiveWebAssembly を使用しつつ、可能な限りプリレンダリングをする範囲を小さくする方法について。&lt;/p&gt;
&lt;h3 id="set-up-github-codespaces-for-a.net-8-application"&gt;Set up GitHub Codespaces for a .NET 8 application&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/this-is-learning/set-up-github-codespaces-for-a-net-8-application-5999"&gt;https://dev.to/this-is-learning/set-up-github-codespaces-for-a-net-8-application-5999&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 のアプリケーションのための GitHub Codespaces 環境の作り方について。&lt;/p&gt;
&lt;h3 id="new-minimal-apis-features-in-asp.net-core-8.0"&gt;New Minimal APIs features in ASP.NET Core 8.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/abp-community/new-minimal-apis-features-in-asp-net-core-8-0-683d8a79b18d"&gt;https://medium.com/abp-community/new-minimal-apis-features-in-asp-net-core-8-0-683d8a79b18d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core の Minimal APIs の新機能の簡単な紹介。&lt;/p&gt;
&lt;h3 id="visualize-entity-framework-relationships-and-additional-query-analysis-in-resharper-2023.3-the.net-tools-blog"&gt;Visualize Entity Framework Relationships and Additional Query Analysis in ReSharper 2023.3 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/20/visualize-entity-framework-relationships-and-additional-query-analysis-in-resharper-2023-3/"&gt;https://blog.jetbrains.com/dotnet/2023/11/20/visualize-entity-framework-relationships-and-additional-query-analysis-in-resharper-2023-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.3 の Entity Framework に関するビジュアライズとクエリーの解析についての紹介。&lt;/p&gt;
&lt;p&gt;エンティティ関連図の生成や長さ制限の指定されていない文字列の検査、SQL に変換できないメソッド呼び出しの検出など。&lt;/p&gt;
&lt;h3 id="modernizing-reactive-extensions-for.net-endjin"&gt;Modernizing Reactive Extensions for .NET | endjin&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://endjin.com/what-we-think/talks/modernizing-reactive-extensions-for-dotnet"&gt;https://endjin.com/what-we-think/talks/modernizing-reactive-extensions-for-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rx.NET の昔から今までの流れと、その中で行ってきたモダナイズのための作業などについて。&lt;/p&gt;
&lt;h3 id="a-failed-experiment-with-interceptors-in-c-12-and.net-8"&gt;A failed experiment with interceptors in C# 12 and .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/a-failed-experiment-with-interceptors-in-csharp-12-and-dotnet-8/"&gt;https://andrewlock.net/a-failed-experiment-with-interceptors-in-csharp-12-and-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 のプレビュー機能である Interceptor を Enum と拡張メソッドで使用しようとしたところ Roslyn の不具合にひかかったことについて。&lt;/p&gt;
&lt;h3 id="community-feedback-building-17.8-17.9-preview-1-visual-studio-blog"&gt;Community Feedback Building 17.8 &amp;amp; 17.9 Preview 1 - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/community-feedback-building-17-8-17-9-preview-1/"&gt;https://devblogs.microsoft.com/visualstudio/community-feedback-building-17-8-17-9-preview-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio のコミュニティーからのフィードバックによる新機能の紹介やコメントを求めている提案の紹介、フィードバックの送り方などについて。&lt;/p&gt;
&lt;h3 id="improvements-changes-in-android-resource-generation-in.net-8.net-blog"&gt;Improvements &amp;amp; Changes in Android resource generation in .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/android-resource-designer-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/android-resource-designer-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で新たに導入された Android のリソースにアクセスするための仕組みについての解説。&lt;/p&gt;
&lt;p&gt;新たに導入された仕組みでは起動時間の削減や Trimer フレンドリーとなったことによるサイズの削減といった恩恵を得られる&lt;/p&gt;
&lt;h3 id="create-a-pull-request-with-summary-difference-view-available-in-ga-visual-studio-blog"&gt;Create a Pull Request with Summary Difference View Available in GA - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/create-a-pull-request/"&gt;https://devblogs.microsoft.com/visualstudio/create-a-pull-request/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.9 Preview 1 で実装された IDE からの Pull request 作成機能の紹介。&lt;/p&gt;
&lt;h3 id="fake-it-til-you-make-it.to-production.net-blog"&gt;Fake It Til You Make It...To Production - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/fake-it-til-you-make-it-to-production/"&gt;https://devblogs.microsoft.com/dotnet/fake-it-til-you-make-it-to-production/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で導入されたフェイクを実現するためのクラス(FakeLogger, MetricCollector, ITimeProvider) などを紹介している。&lt;/p&gt;
&lt;h3 id="net-night-party-connpass"&gt;.NET Night Party&amp;#64;品川 - connpass&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://msdevjp.connpass.com/event/303250/"&gt;https://msdevjp.connpass.com/event/303250/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2023 Recap Japan の後に行われるオフラインイベント。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mktoevents.com/Microsoft+Event/415522/157-GQE-382"&gt;.NET Conf 2023 Recap Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="producerconsumer-pipelines-with-system.threading.channels"&gt;Producer/consumer pipelines with System.Threading.Channels&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.maartenballiauw.be/post/2020/08/26/producer-consumer-pipelines-with-system-threading-channels.html"&gt;https://blog.maartenballiauw.be/post/2020/08/26/producer-consumer-pipelines-with-system-threading-channels.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;System.Threading.Channels の簡単な解説と Open.ChannelExtensions を使用した簡単なパイプラインの構築方法について。&lt;/p&gt;
&lt;h3 id="net-8-whats-new-for-authentication-and-authorization"&gt;.NET 8: What's New for Authentication and Authorization&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://auth0.com/blog/whats-new-dotnet8-authentication-authorization/"&gt;https://auth0.com/blog/whats-new-dotnet8-authentication-authorization/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Identity API によるトークンベースの認証についての解説。&lt;/p&gt;
&lt;h3 id="net-8-blazor"&gt;.NET 8 での Blazor のエラーハンドリングの注意点&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-errorhandling"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-errorhandling&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ErrorBoundary は異なる実行方式をまたいでハンドリングできない問題について。&lt;/p&gt;
&lt;h3 id="path.getdirectoryname-overload-xin9le.net"&gt;Path.GetDirectoryName() は overload によって挙動が異なる - xin9le.net&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.xin9le.net/entry/2023/11/20/212653"&gt;https://blog.xin9le.net/entry/2023/11/20/212653&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Path.GetDirectoryName メソッドはオーバーロードによってパスの区切り文字の正規化の有無が異なることについて。&lt;/p&gt;
&lt;h3 id="native-aot-compilation-in.net-8"&gt;Native AOT Compilation in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/abp-community/native-aot-compilation-in-net-8-3c9b80a77f06"&gt;https://medium.com/abp-community/native-aot-compilation-in-net-8-3c9b80a77f06&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 での Native AOT に関する変更と有効化方法、結果などを簡単に紹介。&lt;/p&gt;
&lt;h3 id="c-12-qiita"&gt;C# 12 新機能メモ - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/habakino094/items/57dca2d0c49c9c02395a"&gt;https://qiita.com/habakino094/items/57dca2d0c49c9c02395a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 の新機能の簡単な紹介。プライマリーコンストラクター、コレクション式、任意の型の別名指定、ラムダパラメータの規定値について。&lt;/p&gt;
&lt;h3 id="blazor-html.fluent-ui-blazor-on.net-8"&gt;Blazor で HTML を書きたくないよぉ…(Fluent UI Blazor 編 on .NET 8)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-fluentui"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-fluentui&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fluent UI Blazor の組み込み方、使い方について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="keithwillvestpocket"&gt;keithwill/VestPocket&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/keithwill/VestPocket"&gt;https://github.com/keithwill/VestPocket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AOT 向けのファイルベースでのシンプルなデータストレージ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://khalidabuhakmeh.com/vestpocket-file-based-data-storage-for-aot-dotnet-applications"&gt;VestPocket: File-based Data Storage for AOT .NET Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="jonpsmithefcore.schemacompare-library-to-compare-ef-cores-model-of-the-database-against-a-databases-schema"&gt;JonPSmith/EfCore.SchemaCompare: Library to compare EF Core's Model of the database against a database's schema.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/JonPSmith/EfCore.SchemaCompare"&gt;https://github.com/JonPSmith/EfCore.SchemaCompare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core のモデルをベースとしたスキーマの比較ライブラリー。&lt;/p&gt;
&lt;h3 id="debug-output-filter-visual-studio-marketplace"&gt;Debug Output Filter - Visual Studio Marketplace&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GrantDavies.NiahTextFilter2022"&gt;https://marketplace.visualstudio.com/items?itemName=GrantDavies.NiahTextFilter2022&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;デバッグ出力をフィルターしたり履歴を確認できたりする Visual Studio 拡張。&lt;/p&gt;
&lt;!-- https://x.com/mkristensen/status/1726721505193803802?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;This extension keeps a history of builds and debug sessions, and lets you filter the output window data in a super powerful way. I&amp;#39;m a fan!&lt;a href="https://t.co/dbttKBa1Vw"&gt;https://t.co/dbttKBa1Vw&lt;/a&gt; &lt;a href="https://t.co/LIqwUdiFMm"&gt;pic.twitter.com/LIqwUdiFMm&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mads Kristensen (&amp;#64;mkristensen) &lt;a href="https://twitter.com/mkristensen/status/1726721505193803802?ref_src=twsrc%5Etfw"&gt;November 20, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Win2D 1.27.1 と Windows App SDK 1.1.1 がリリースされた話。&lt;/p&gt;
&lt;!-- https://x.com/sergiopedri/status/1727279008243482663?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;We just released Win2D 1.27.1 (UWP) and 1.1.1 (WinAppSDK) with support for .NET 8! These releases switch to using the portable RID schema for native binaries and include some bug fixes (eg. the interop header now builds correctly). Try it out! 🚀&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;a href="https://t.co/zoOe2CcUaT"&gt;https://t.co/zoOe2CcUaT&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sergio Pedri (&amp;#64;SergioPedri) &lt;a href="https://twitter.com/SergioPedri/status/1727279008243482663?ref_src=twsrc%5Etfw"&gt;November 22, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Service Discovery (Microsoft.Extensions.ServiceDiscovery) が .NET 8 で利用可能となったという話(Aspire は不要)。&lt;/p&gt;
&lt;!-- https://x.com/david_whitney/status/1726948359523758347?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Really happy that the new Service Discovery APIs in .NET8 are usable stand-alone, and outside of Aspire.&lt;br&gt;&lt;br&gt;Here&amp;#39;s a console app, using service discovery, to call a nodejs API that &amp;quot;just works&amp;quot;.&lt;a href="https://t.co/VrXIn2rGHA"&gt;https://t.co/VrXIn2rGHA&lt;/a&gt; &lt;a href="https://t.co/J0alXGlJFE"&gt;pic.twitter.com/J0alXGlJFE&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Whitney (&amp;#64;david_whitney) &lt;a href="https://twitter.com/david_whitney/status/1726948359523758347?ref_src=twsrc%5Etfw"&gt;November 21, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;code&gt;ConcurrentDictionary&amp;lt;K,V&amp;gt;.Count&lt;/code&gt; はロックするのでパフォーマンスで不利となるので空かどうかを判断したいだけであれば IsEmpty を使用すべきという話。&lt;/p&gt;
&lt;!-- https://x.com/steplyakov/status/1727016474211176784?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Just a friendly reminder that using `ConcurrentDictionary&amp;lt;K,V&amp;gt;.Count` to check for emptiness is not the right way, since the property would acquire all the locks of the world! Just use `.IsEmpty` property instead!&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/performnace?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#performnace&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/tips?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#tips&lt;/a&gt; &lt;a href="https://t.co/ZJbe79wgq4"&gt;pic.twitter.com/ZJbe79wgq4&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sergiy Teplyakov 🇺🇦 🇺🇸 (&amp;#64;STeplyakov) &lt;a href="https://twitter.com/STeplyakov/status/1727016474211176784?ref_src=twsrc%5Etfw"&gt;November 21, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;セッションで GC の動きをビジュアライズしてデモするためのツールを作っているという話。&lt;/p&gt;
&lt;!-- https://x.com/kookiz/status/1726262030418481643?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In preparation for my talk at &lt;a href="https://twitter.com/update_conf?ref_src=twsrc%5Etfw"&gt;&amp;#64;update_conf&lt;/a&gt;, I&amp;#39;ve prepared a tool to visualize the activity of the GC. It was initially meant as a gimmick, but it turns out to be a good way to understand some GC mechanisms.&lt;br&gt;&lt;br&gt;For instance, here you can see the effect of… &lt;a href="https://t.co/Iebli6VHFl"&gt;pic.twitter.com/Iebli6VHFl&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kevin Gosse (&amp;#64;KooKiz) &lt;a href="https://twitter.com/KooKiz/status/1726262030418481643?ref_src=twsrc%5Etfw"&gt;November 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/11/19/updates</id>
		<title>2023-11-19: .NET 8, .NET Aspire</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/11/19/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-11-19T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="announcing.net-8.net-blog"&gt;Announcing .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-8"&gt;What's new in .NET 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-asp-net-core-in-dotnet-8/"&gt;Announcing ASP.NET Core in .NET 8 - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-csharp-12/"&gt;Announcing C# 12 - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8/"&gt;Announcing .NET MAUI in .NET 8 - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-ef8/"&gt;Entity Framework Core 8 (EF8) is available today - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-fsharp-8/"&gt;Announcing F# 8 - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/"&gt;Announcing NuGet 6.8 - Maintaining Security with Ease - The NuGet Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-17.8-now-available-visual-studio-blog"&gt;Visual Studio 17.8 now available! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-17-8-now-available/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-17-8-now-available/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing.net-aspire-simplifying-cloud-native-development-with.net-8.net-blog"&gt;Introducing .NET Aspire: Simplifying Cloud-Native Development with .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-dotnet-aspire-simplifying-cloud-native-development-with-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/introducing-dotnet-aspire-simplifying-cloud-native-development-with-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/aspire/"&gt;.NET Aspire documentation (Preview)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/aspire/"&gt;dotnet/aspire: .NET Aspire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-framework-november-2023-security-and-quality-rollup.net-blog"&gt;.NET Framework November 2023 Security and Quality Rollup - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-november-2023-security-and-quality-rollup/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-november-2023-security-and-quality-rollup/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-november-2023-updates.net-7.0.14.net-6.0.25.net-blog"&gt;.NET November 2023 Updates – .NET 7.0.14, .NET 6.0.25 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/november-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/november-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-visual-studio-17.9-preview-1-is-here-visual-studio-blog"&gt;Introducing Visual Studio 17.9 - Preview 1 is Here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the-visual-studio-ui-refresh-preview-is-here-visual-studio-blog"&gt;The Visual Studio UI Refresh Preview is here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/the-visual-studio-ui-refresh-preview-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/the-visual-studio-ui-refresh-preview-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="linqpad-8"&gt;LINQPad 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.linqpad.net/LINQPad8.aspx"&gt;https://www.linqpad.net/LINQPad8.aspx&lt;/a&gt;&lt;/p&gt;
&lt;!-- https://x.com/linqpad/status/1724762440330793436?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;LINQPad 8 for &lt;a href="https://twitter.com/dotnet?ref_src=twsrc%5Etfw"&gt;&amp;#64;dotnet&lt;/a&gt; 8 is now RTM! &lt;a href="https://t.co/PLjf98TJgW"&gt;https://t.co/PLjf98TJgW&lt;/a&gt;&lt;/p&gt;&amp;mdash; LINQPad·Joe Albahari (&amp;#64;linqpad) &lt;a href="https://twitter.com/linqpad/status/1724762440330793436?ref_src=twsrc%5Etfw"&gt;November 15, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="release-2.3.1-mysql-netmysqlconnector"&gt;Release 2.3.1 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.1"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.1&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.0"&gt;Release 2.3.0 · mysql-net/MySqlConnector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-windows-app-sdk-1.4.3-1.4.231115000-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.4.3 (1.4.231115000) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.3"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.3&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/microsoft-ui-xaml/releases/tag/winui3/release/1.4.3"&gt;Release WinUI 3 in WinAppSDK 1.4.3 · microsoft/microsoft-ui-xaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-8.2.0-app-vnextpolly"&gt;Release 8.2.0 · App-vNext/Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.2.0"&gt;https://github.com/App-vNext/Polly/releases/tag/8.2.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-4.10.0-openiddictopeniddict-core"&gt;Release 4.10.0 · openiddict/openiddict-core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/openiddict/openiddict-core/releases/tag/4.10.0"&gt;https://github.com/openiddict/openiddict-core/releases/tag/4.10.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="introducing-v1.0.0-beta6-for-the.net-semantic-kernel-sdk-semantic-kernel"&gt;Introducing v1.0.0 Beta6 for the .NET Semantic Kernel SDK | Semantic Kernel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/semantic-kernel/introducing-v1-0-0-beta6-for-the-net-semantic-kernel-sdk/"&gt;https://devblogs.microsoft.com/semantic-kernel/introducing-v1-0-0-beta6-for-the-net-semantic-kernel-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="announcing-the-monogame-foundation-news-community-monogame"&gt;Announcing the MonoGame Foundation - News - Community | MonoGame&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://community.monogame.net/t/announcing-the-monogame-foundation/19809"&gt;https://community.monogame.net/t/announcing-the-monogame-foundation/19809&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="net-conf2023"&gt;.NET Conf2023 おすすめ動画まとめ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/tomokusaba/articles/3dd75339210ddc"&gt;https://zenn.dev/tomokusaba/articles/3dd75339210ddc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8-asp.net-core-metrics"&gt;.NET 8 — ASP.NET Core Metrics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/abp-community/net-8-asp-net-core-metrics-e69c908e583b"&gt;https://medium.com/abp-community/net-8-asp-net-core-metrics-e69c908e583b&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="automatically-analyze-asp.net-core-performance-with-dynamic-program-analysis-the.net-tools-blog"&gt;Automatically Analyze ASP.NET Core Performance With Dynamic Program Analysis | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/14/automatically-analyze-asp-net-core-performance-with-dynamic-program-analysis/"&gt;https://blog.jetbrains.com/dotnet/2023/11/14/automatically-analyze-asp-net-core-performance-with-dynamic-program-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="optimizing-c-code-analysis-for-quicker.net-compilation"&gt;Optimizing C# code analysis for quicker .NET compilation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/asimmon/optimizing-c-code-analysis-for-quicker-net-compilation-4e3d"&gt;https://dev.to/asimmon/optimizing-c-code-analysis-for-quicker-net-compilation-4e3d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="configureawait-in.net-8"&gt;ConfigureAwait in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.stephencleary.com/2023/11/configureawait-in-net-8.html"&gt;https://blog.stephencleary.com/2023/11/configureawait-in-net-8.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-8-asp.net-core-blazor"&gt;.NET 8 の ASP.NET Core Blazor 新機能オーバービュー&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-overview"&gt;https://zenn.dev/microsoft/articles/aspnetcore-blazor-dotnet8-overview&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="calling-rust-from-c-and-back-again-part-1-aaron-schlesingers-personal-site"&gt;Calling Rust from C#, and back again: Part 1 - Aaron Schlesinger's Personal Site&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ecomaz.net/blog/csharp-rust/"&gt;https://ecomaz.net/blog/csharp-rust/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ecomaz.net/blog/csharp-rust-2/"&gt;Calling Rust from C#, and back again: Part 2 - Aaron Schlesinger's Personal Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="net-8linq-qiita"&gt;.NET 8でLINQに追加されたメソッド - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/RyotaMurohoshi/items/aa57e96a01c6627ec08d"&gt;https://qiita.com/RyotaMurohoshi/items/aa57e96a01c6627ec08d&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-for-the-microsoft-fluent-ui-blazor-components-version-4.0.0"&gt;What's new for the Microsoft Fluent UI Blazor components version 4.0.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://baaijte.net/blog/microsoft-fluentui-aspnetcore.components-4/"&gt;https://baaijte.net/blog/microsoft-fluentui-aspnetcore.components-4/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-and-c-versions-812-update"&gt;.NET and C# Versions - 8/12 Update&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://nietras.com/2023/11/14/dotnet-and-csharp-versions/"&gt;https://nietras.com/2023/11/14/dotnet-and-csharp-versions/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="authentication-with-multiple-identity-providers-in-asp.net-core"&gt;Authentication with multiple identity providers in ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://damienbod.com/2023/11/13/authentication-with-multiple-identity-providers-in-asp-net-core/"&gt;https://damienbod.com/2023/11/13/authentication-with-multiple-identity-providers-in-asp-net-core/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="more-sqlite-encryption-in.net"&gt;More SQLite Encryption in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.bricelam.net/2023/11/10/more-sqlite-encryption.html"&gt;https://www.bricelam.net/2023/11/10/more-sqlite-encryption.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="superjmndotnetpackaging-easier-packaging-for.net"&gt;SuperJMN/DotnetPackaging: Easier packaging for .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/SuperJMN/DotnetPackaging"&gt;https://github.com/SuperJMN/DotnetPackaging&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="microsoftdev-proxy-dev-proxy-is-a-command-line-tool-that-simulates-real-world-behaviors-of-http-apis-including-microsoft-graph-locally"&gt;microsoft/dev-proxy: Dev Proxy is a command line tool that simulates real world behaviors of HTTP APIs, including Microsoft Graph, locally.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/dev-proxy"&gt;https://github.com/microsoft/dev-proxy&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dotnetconf2023digitalswag-at-main-dotnet-presentationsdotnetconf"&gt;dotNETConf/2023/DigitalSWAG at main · dotnet-presentations/dotNETConf&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet-presentations/dotNETConf/tree/main/2023/DigitalSWAG"&gt;https://github.com/dotnet-presentations/dotNETConf/tree/main/2023/DigitalSWAG&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/higenekotech/status/1724641578109776215?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;.Net 8.0でWinUI&lt;br&gt;既存のプロジェクトの.netターゲットを8.0にするとビルドエラーが出るのでUseRidGraphを追加することで無事に動作することが確認できました&lt;br&gt;&lt;br&gt;参考&lt;a href="https://t.co/ZLlFr8kM5g"&gt;https://t.co/ZLlFr8kM5g&lt;/a&gt; &lt;a href="https://t.co/zYFyOZhSXi"&gt;pic.twitter.com/zYFyOZhSXi&lt;/a&gt;&lt;/p&gt;&amp;mdash; ひげねこ&amp;#64;技 (&amp;#64;HigenekoTech) &lt;a href="https://twitter.com/HigenekoTech/status/1724641578109776215?ref_src=twsrc%5Etfw"&gt;November 15, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/skitoy4321/status/1724577626235523483?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;コンソールアプリでbroken pipeが起こった場合、Marshal.GetLastWin32ErrorかMarshal.GetLastPInvokeErrorで検知してねとのこと(0x10043てなんだ?)。&lt;a href="https://t.co/DSczV3NQI8"&gt;https://t.co/DSczV3NQI8&lt;/a&gt;&lt;/p&gt;&amp;mdash; skitoy4321 (&amp;#64;skitoy4321) &lt;a href="https://twitter.com/skitoy4321/status/1724577626235523483?ref_src=twsrc%5Etfw"&gt;November 14, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/marcgravell/status/1724473162094505999?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;With .NET 8 released, I&amp;#39;ve also just released v1 of Dapper.AOT / Dapper.Advisor&lt;br&gt;&lt;br&gt;Love Dapper, but not a fan of runtime ref-emit, and/or want to deploy with AOT? Today may be your lucky day!&lt;br&gt;&lt;br&gt;I need to write up a *lot* of new feature notes, but for today:&lt;a href="https://t.co/UlwqKM1aaN"&gt;https://t.co/UlwqKM1aaN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Marc Gravell (&amp;#64;marcgravell) &lt;a href="https://twitter.com/marcgravell/status/1724473162094505999?ref_src=twsrc%5Etfw"&gt;November 14, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/socketnorm/status/1722853028435538060?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Now .NET 8 is done &lt;a href="https://twitter.com/davidfowl?ref_src=twsrc%5Etfw"&gt;&amp;#64;davidfowl&lt;/a&gt;, AWS .NET SDK updated with new .NET 8 target with AOT trimming support. &lt;br&gt;&lt;br&gt;Blog post on the AOT trimming support to follow once we get some more .NET 8 updates for our Lambda tooling. &lt;a href="https://t.co/wZqNTGttML"&gt;https://t.co/wZqNTGttML&lt;/a&gt; &lt;a href="https://t.co/2t7EVvKl2F"&gt;pic.twitter.com/2t7EVvKl2F&lt;/a&gt;&lt;/p&gt;&amp;mdash; Norm Johanson (&amp;#64;socketnorm) &lt;a href="https://twitter.com/socketnorm/status/1722853028435538060?ref_src=twsrc%5Etfw"&gt;November 10, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/debugprivilege/status/1723679401466880039?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I&amp;#39;ve worked over the weekend on a write-up on how to analyze ProxyShell in a memory dump. Write-up contains different .NET debugging techniques that is applicable to other Exchange CVEs as well, including two mem dumps of w3wp.exe - All WinDbg ofc ;-) &lt;a href="https://t.co/S4s4KN1OK2"&gt;https://t.co/S4s4KN1OK2&lt;/a&gt;&lt;/p&gt;&amp;mdash; DebugPrivilege (&amp;#64;DebugPrivilege) &lt;a href="https://twitter.com/DebugPrivilege/status/1723679401466880039?ref_src=twsrc%5Etfw"&gt;November 12, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="api-diff-between.net-7-and.net-8-by-carlossanlop-pull-request-8921-dotnetcore"&gt;API diff between .NET 7 and .NET 8 by carlossanlop · Pull Request #8921 · dotnet/core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/core/pull/8921"&gt;https://github.com/dotnet/core/pull/8921&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="improve-performance-of-biginteger.multiplylarge-small-by-kzrnm-pull-request-92208-dotnetruntime"&gt;Improve performance of BigInteger.Multiply(large, small) by kzrnm · Pull Request #92208 · dotnet/runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/pull/92208"&gt;https://github.com/dotnet/runtime/pull/92208&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/11/12/updates</id>
		<title>2023-11-12: The convenience of System.IO, ILSpy 8.2, .NET MAUI Community Toolkit v6.1.0</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/11/12/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-11-12T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="the-convenience-of-system.io.net-blog"&gt;The convenience of System.IO - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-convenience-of-system-io/"&gt;https://devblogs.microsoft.com/dotnet/the-convenience-of-system-io/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="whats-new-with-identity-in.net-8.net-blog"&gt;What's new with identity in .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/whats-new-with-identity-in-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/whats-new-with-identity-in-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-ilspy-8.2-icsharpcodeilspy"&gt;Release ILSpy 8.2 · icsharpcode/ILSpy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/icsharpcode/ILSpy/releases/tag/v8.2"&gt;https://github.com/icsharpcode/ILSpy/releases/tag/v8.2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-v6.1.0-a-new-release-popped-up-communitytoolkitmaui"&gt;Release v6.1.0: A New Release Popped Up! · CommunityToolkit/Maui&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/CommunityToolkit/Maui/releases/tag/6.1.0"&gt;https://github.com/CommunityToolkit/Maui/releases/tag/6.1.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-release-v2.59.0-grpcgrpc-dotnet"&gt;Release Release v2.59.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.59.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.59.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-2.3.0-beta-4-mysql-netmysqlconnector"&gt;Release 2.3.0 Beta 4 · mysql-net/MySqlConnector&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.0-beta.4"&gt;https://github.com/mysql-net/MySqlConnector/releases/tag/2.3.0-beta.4&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="release-microsoft.ui.xaml-v2.8.6-microsoftmicrosoft-ui-xaml"&gt;Release Microsoft.UI.Xaml v2.8.6 · microsoft/microsoft-ui-xaml&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/microsoft-ui-xaml/releases/tag/v2.8.6"&gt;https://github.com/microsoft/microsoft-ui-xaml/releases/tag/v2.8.6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="more-bug-fixes-resharper-2023.2.3-and-rider-2023.2.3-are-out-the.net-tools-blog"&gt;More Bug Fixes: ReSharper 2023.2.3 and Rider 2023.2.3 Are Out! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/03/resharper-rider-2023-2-3/"&gt;https://blog.jetbrains.com/dotnet/2023/11/03/resharper-rider-2023-2-3/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="c"&gt;【C#】固定長配列をリフレクションで操作する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/ruccho/articles/c000525edfaffe"&gt;https://zenn.dev/ruccho/articles/c000525edfaffe&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="reading-json-and-binary-data-from-multipartform-data-sections-in-asp.net-core"&gt;Reading JSON and binary data from multipart/form-data sections in ASP.NET Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/reading-json-and-binary-data-from-multipart-form-data-sections-in-aspnetcore/"&gt;https://andrewlock.net/reading-json-and-binary-data-from-multipart-form-data-sections-in-aspnetcore/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-annotated-monthly-november-2023-the.net-tools-blog"&gt;.NET Annotated Monthly | November 2023 | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/09/net-annotated-monthly-november-2023/"&gt;https://blog.jetbrains.com/dotnet/2023/11/09/net-annotated-monthly-november-2023/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="section-2"&gt;いまさらはしごだか対応&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/panda728/articles/1846b923cfab6a"&gt;https://zenn.dev/panda728/articles/1846b923cfab6a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.3-eap-6-code-analysis-performance-improvements-support-for-c-12-interceptors-and-much-more.the.net-tools-blog"&gt;ReSharper 2023.3 EAP 6: Code Analysis Performance Improvements, Support for C# 12 Interceptors, and Much More. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/08/resharper-2023-3-eap-6/"&gt;https://blog.jetbrains.com/dotnet/2023/11/08/resharper-2023-3-eap-6/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="moonsharp-running-lua-scripts-in.net"&gt;MoonSharp - Running Lua Scripts in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/moonsharp-running-lua-scripts-in-dotnet"&gt;https://khalidabuhakmeh.com/moonsharp-running-lua-scripts-in-dotnet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-dig-into-the-clr"&gt;How to dig into the CLR&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/how-to-dig-into-the-clr-bd67d884f8da"&gt;https://chnasarre.medium.com/how-to-dig-into-the-clr-bd67d884f8da&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-jetbrains-rider-implemented.net-webassembly-debugging-the.net-tools-blog"&gt;How JetBrains Rider Implemented .NET WebAssembly Debugging | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/11/07/how-jetbrains-rider-implemented-net-webassembly-debugging/"&gt;https://blog.jetbrains.com/dotnet/2023/11/07/how-jetbrains-rider-implemented-net-webassembly-debugging/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="configureawait-in.net-8"&gt;ConfigureAwait in .NET 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.stephencleary.com/2023/11/configureawait-in-net-8.html"&gt;https://blog.stephencleary.com/2023/11/configureawait-in-net-8.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="exploring-object-layouts-to-kill-a-mocking-bug"&gt;Exploring Object Layouts - To kill a mocking bug&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://vannevel.net/posts/exploring-object-layouts/"&gt;https://vannevel.net/posts/exploring-object-layouts/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-httpclient-extensibility-support-for-unix-domain-sockets-named-pipes"&gt;.NET HttpClient extensibility: Support for Unix Domain Sockets &amp;amp; Named Pipes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;madhus.bsg/net-httpclient-extensibility-support-for-unix-domain-sockets-named-pipes-abe3c66ffb6e"&gt;https://medium.com/&amp;#64;madhus.bsg/net-httpclient-extensibility-support-for-unix-domain-sockets-named-pipes-abe3c66ffb6e&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="czero-byte-reads"&gt;【C#】zero-byte reads という最適化とピン留めについて。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/11/11/215353"&gt;https://blog.neno.dev/entry/2023/11/11/215353&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="native-aot-with-asp.net-core-overview"&gt;Native AOT with ASP.NET Core - Overview&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.thinktecture.com/en/net/native-aot-with-asp-net-core-overview/"&gt;https://www.thinktecture.com/en/net/native-aot-with-asp-net-core-overview/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-conf-2023-recap-japan.net-microsoft-event"&gt;.NET Conf 2023 Recap Japan ～ 最新の.NETを学ぶ | Microsoft Event&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://mktoevents.com/Microsoft+Event/415522/157-GQE-382"&gt;https://mktoevents.com/Microsoft+Event/415522/157-GQE-382&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-conf-2023-sendai-connpass"&gt;.NET Conf 2023 Sendai - connpass&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minamimachi.connpass.com/event/298198/"&gt;https://minamimachi.connpass.com/event/298198/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-3"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="microsoftinshellisense-ide-style-command-line-auto-complete"&gt;microsoft/inshellisense: IDE style command line auto complete&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/inshellisense"&gt;https://github.com/microsoft/inshellisense&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mikihiro-tnormalizejapaneseaddressesnet.net"&gt;mikihiro-t/NormalizeJapaneseAddressesNET: オープンソースの住所正規化ライブラリ。 .NET版&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mikihiro-t/NormalizeJapaneseAddressesNET"&gt;https://github.com/mikihiro-t/NormalizeJapaneseAddressesNET&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/hiro_t/items/8884e817bd40642c63e8"&gt;オープンソースの住所正規化ライブラリ NormalizeJapaneseAddresses .NET版 公開 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-4"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-5"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/terrajobst/status/1722011787053424825?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In case you missed it: &lt;a href="https://t.co/BCOvhYeb4v"&gt;https://t.co/BCOvhYeb4v&lt;/a&gt;&lt;/p&gt;&amp;mdash; Immo Landwerth (&amp;#64;terrajobst) &lt;a href="https://twitter.com/terrajobst/status/1722011787053424825?ref_src=twsrc%5Etfw"&gt;November 7, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/ufcpp/status/1720646144139911476?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;&lt;a href="https://t.co/f5l6qzs6XQ"&gt;https://t.co/f5l6qzs6XQ&lt;/a&gt;&lt;br&gt;16年ぶりにページ更新(追記・部分書き換え)すると、ずいぶん文体変わっててどうしようってなった。&lt;/p&gt;&amp;mdash; ++C++; // 管理人: 岩永 (&amp;#64;ufcpp) &lt;a href="https://twitter.com/ufcpp/status/1720646144139911476?ref_src=twsrc%5Etfw"&gt;November 4, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/11/03/updates</id>
		<title>2023-11-03: Uno Platform 5.0, StackExchange.Redis 2.7.4, Polly 8.1.0, BenchmarkDotNet v0.13.10</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/11/03/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-11-03T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="five-is-for-5x-productivity.announcing-uno-platform-5.0"&gt;Five is for 5X productivity. Announcing Uno Platform 5.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platform.uno/blog/uno-platform-5-0/"&gt;https://platform.uno/blog/uno-platform-5-0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uno Platform 5.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは C# Markup (XAML に代わる Fluent スタイルの UI 記述)、Figma to C# Markup プラグイン、改善されたホットリロード、MVUX (Model-View-Update eXtended) の改善、Xamarin および .NET 6 のサポート削除など様々な改善や変更が含まれている。&lt;/p&gt;
&lt;h3 id="release-2.7.4-stackexchangestackexchange.redis"&gt;Release 2.7.4 · StackExchange/StackExchange.Redis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.4"&gt;https://github.com/StackExchange/StackExchange.Redis/releases/tag/2.7.4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackExchange.Redis 2.7.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは RESP3 プロトコルのサポートが追加されている。RESP3 では結果の形式に一部違いがあるため利用にはコードや接続文字列で明示的に指定する必要があり、直接コマンドを扱っている場合などには対応が必要となる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackexchange.github.io/StackExchange.Redis/Resp3"&gt;RESP3 and StackExchange.Redis | StackExchange.Redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-8.1.0-app-vnextpolly"&gt;Release 8.1.0 · App-vNext/Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.1.0"&gt;https://github.com/App-vNext/Polly/releases/tag/8.1.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polly 8.1.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは AOT での互換性の向上、ResilienceContextPool の DI からの設定といった改善が行われている。&lt;/p&gt;
&lt;h3 id="benchmarkdotnet-v0.13.10-dotnetbenchmarkdotnet-discussion-2457"&gt;BenchmarkDotNet v0.13.10 · dotnet/BenchmarkDotNet · Discussion #2457&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/BenchmarkDotNet/discussions/2457"&gt;https://github.com/dotnet/BenchmarkDotNet/discussions/2457&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BenchmarkDotNet v0.13.10 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは .NET 9 のサポートが追加されている。&lt;/p&gt;
&lt;!-- https://x.com/benchmarkdotnet/status/1719756228140642323?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;BenchmarkDotNet v0.13.10 has been released!&lt;br&gt;&lt;br&gt;While .NET 8 is still on the way, we already provide the initial support of .NET 9!&lt;a href="https://t.co/PB0q3xJ8SN"&gt;https://t.co/PB0q3xJ8SN&lt;/a&gt;&lt;/p&gt;&amp;mdash; BenchmarkDotNet (&amp;#64;BenchmarkDotNet) &lt;a href="https://twitter.com/BenchmarkDotNet/status/1719756228140642323?ref_src=twsrc%5Etfw"&gt;November 1, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="net-8-performance-improvements-in.net-maui.net-blog"&gt;.NET 8 Performance Improvements in .NET MAUI - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-8-performance-improvements-in-dotnet-maui/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-8-performance-improvements-in-dotnet-maui/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 での .NET MAUI のパフォーマンス改善について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新機能&lt;/li&gt;
&lt;li&gt;ビルド、インナーループパフォーマンス&lt;/li&gt;
&lt;li&gt;パフォーマンスやアプリサイズの改善&lt;/li&gt;
&lt;li&gt;メモリーリーク&lt;/li&gt;
&lt;li&gt;ツールとドキュメント&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-winui-3-in-winappsdk-1.4.2-microsoftmicrosoft-ui-xaml-github"&gt;Release WinUI 3 in WinAppSDK 1.4.2 · microsoft/microsoft-ui-xaml · GitHub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/microsoft-ui-xaml/releases/tag/winui3/release/1.4.2"&gt;https://github.com/microsoft/microsoft-ui-xaml/releases/tag/winui3/release/1.4.2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.4.2 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースは主にクラッシュなど不具合等の修正が行われている。&lt;a href="https://github.com/microsoft/microsoft-ui-xaml/tree/winui3/release/1.4.2"&gt;ソースコードも利用可能となっている&lt;/a&gt;。&lt;/p&gt;
&lt;!-- https://x.com/windowsui/status/1716906247054880931?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Today, WinAppSDK has completed the trifecta: Ship File Explorer on WinAppSDK/WinUI3, release the same libraries for all applications to use, and now the source for that WinUI 3 release is available!&lt;a href="https://t.co/P1nCqMfbWY"&gt;https://t.co/P1nCqMfbWY&lt;/a&gt; &lt;a href="https://t.co/LrPGXOSHkC"&gt;pic.twitter.com/LrPGXOSHkC&lt;/a&gt;&lt;/p&gt;&amp;mdash; Windows UI (&amp;#64;WindowsUI) &lt;a href="https://twitter.com/WindowsUI/status/1716906247054880931?ref_src=twsrc%5Etfw"&gt;October 24, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="release-diagnostics-release-v8.0.452401-dotnetdiagnostics"&gt;Release Diagnostics Release - v8.0.452401 · dotnet/diagnostics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/diagnostics/releases/tag/v8.0.452401"&gt;https://github.com/dotnet/diagnostics/releases/tag/v8.0.452401&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 診断ツール 8.0.452401 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは dotnet-monitor と counters の統合や dotnet-dump/SOS のいくつかの改善などが含まれている。&lt;/p&gt;
&lt;h3 id="net-framework-october-2023-cumulative-update-preview.net-blog"&gt;.NET Framework October 2023 Cumulative Update Preview - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/net-framework-october-2023-cumulative-update-preview/"&gt;https://devblogs.microsoft.com/dotnet/net-framework-october-2023-cumulative-update-preview/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework 2023年10月の累積アップデートのプレビューリリース。&lt;/p&gt;
&lt;p&gt;このリリースでは XAML/XPS の解析時に関する問題の修正が含まれている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="microsoft-ignite-2023-is-around-the-corner-nov-14-17-visual-studio-blog"&gt;Microsoft Ignite 2023 is around the corner! (Nov 14-17) - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/microsoft-ignite-2023-is-around-the-corner-nov-14-17/"&gt;https://devblogs.microsoft.com/visualstudio/microsoft-ignite-2023-is-around-the-corner-nov-14-17/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Ignite 2023 (11月14日から17日まで) とそのイベントでの Visual Studio に関するセッションについての紹介。&lt;/p&gt;
&lt;h3 id="copy-on-write-in-win32-api-early-access-engineeringmicrosoft"&gt;Copy-on-Write in Win32 API Early Access - Engineering&amp;#64;Microsoft&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/engineering-at-microsoft/copy-on-write-in-win32-api-early-access/"&gt;https://devblogs.microsoft.com/engineering-at-microsoft/copy-on-write-in-win32-api-early-access/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows 11 Insider Canary Channel で CopyFile API が ReFS (DevDrive) で Copy-on-Write に対応したことについて。&lt;/p&gt;
&lt;p&gt;これによりビルドエンジンやツールといったものを CoW のために対応する必要がなくなる。&lt;/p&gt;
&lt;h3 id="a-new-f-compiler-feature-graph-based-type-checking.net-blog"&gt;A new F# compiler feature: graph-based type-checking - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/a-new-fsharp-compiler-feature-graphbased-typechecking/"&gt;https://devblogs.microsoft.com/dotnet/a-new-fsharp-compiler-feature-graphbased-typechecking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# コンパイラーでの新しいグラフベースでの型チェックの仕組みについて。&lt;/p&gt;
&lt;h3 id="trying-out-mongodb-with-ef-core-using-testcontainers.net-blog"&gt;Trying out MongoDB with EF Core using Testcontainers - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/efcore-mongodb/"&gt;https://devblogs.microsoft.com/dotnet/efcore-mongodb/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Testcontainers を使用して Entity Framework Core でサポートされた MongoDB の操作を試してみる方法について。&lt;/p&gt;
&lt;h3 id="omnisharp-vim-fzf-qiita"&gt;OmniSharp-Vim と fzf を連携させる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/lx-sasabo/items/b2226eb3594a2acaeafb"&gt;https://qiita.com/lx-sasabo/items/b2226eb3594a2acaeafb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vim で C# を記述するための OmniSharp-Vim と fzf を連携させて Find Usages を実現する方法について。&lt;/p&gt;
&lt;h3 id="entity-framework-core"&gt;Entity Framework Coreで特定の具象型に依存せずオブジェクトを保存・復元する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/oyasumi731/articles/4a9e30385d0736"&gt;https://zenn.dev/oyasumi731/articles/4a9e30385d0736&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core で抽象型と継承を使用したマッピングを行う方法 (able-Per-Hierarchy (TPH) パターン) について。&lt;/p&gt;
&lt;h3 id="caes"&gt;【C#】AES を使用した暗号化と復号の手順&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/nekojoker/articles/670824eeaa1ba8"&gt;https://zenn.dev/nekojoker/articles/670824eeaa1ba8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AES でデータを暗号化と復号する実践的な手順についての解説。&lt;/p&gt;
&lt;h3 id="avoiding-flaky-tests-with-timeprovider-and-itimer-exploring-the.net-8-preview-part-12"&gt;Avoiding flaky tests with TimeProvider and ITimer: Exploring the .NET 8 preview - Part 12&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-avoiding-flaky-tests-with-timeprovider-and-itimer/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-avoiding-flaky-tests-with-timeprovider-and-itimer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で導入される時刻とタイマーの抽象化である &lt;code&gt;TimeProvider&lt;/code&gt; と &lt;code&gt;ITimer&lt;/code&gt; を使用方法とそれによりユニットテストを安定的に行えるようにすることについて。&lt;/p&gt;
&lt;h3 id="developers-guide-to-generate.net-api-client-with-kiota"&gt;Developers’ Guide to Generate .NET API Client with Kiota&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;ismailozcelik/developers-guide-to-generate-net-api-client-with-kiota-29ef9ec3ba87"&gt;https://medium.com/&amp;#64;ismailozcelik/developers-guide-to-generate-net-api-client-with-kiota-29ef9ec3ba87&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenAPI で定義された REST API のクライアントを生成する Kiota を使用する方法について。&lt;/p&gt;
&lt;h3 id="organizing-asp.net-core-minimal-apis"&gt;Organizing ASP.NET Core Minimal APIs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.tessferrandez.com/blog/2023/10/31/organizing-minimal-apis.html"&gt;https://www.tessferrandez.com/blog/2023/10/31/organizing-minimal-apis.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core Minimal APIs で API を定義、実装する際のコードを整理する手法の紹介。拡張メソッドによる集約や MapGroup でのグルーピングなど。&lt;/p&gt;
&lt;h3 id="net-8-makes-you-faster.everyday"&gt;.NET 8 makes you faster. Everyday.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/medialesson/net-8-makes-you-faster-everyday-233f9740379d"&gt;https://medium.com/medialesson/net-8-makes-you-faster-everyday-233f9740379d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 とそれ以前でのいくつかの基本的なクラスでのパフォーマンスの比較。&lt;/p&gt;
&lt;h3 id="porting-unity-to-coreclr-unity-blog"&gt;Porting Unity to CoreCLR | Unity Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.unity.com/engine-platform/porting-unity-to-coreclr"&gt;https://blog.unity.com/engine-platform/porting-unity-to-coreclr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unity の CoreCLR への移植についての解説。記事では Unity を CoreCLR での GC で動かすために行っていることについて解説している。&lt;/p&gt;
&lt;h3 id="global-endpoint-filters-with-asp.net-core-minimal-apis"&gt;Global Endpoint Filters with ASP.NET Core Minimal APIs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/global-endpoint-filters-with-aspnet-core-minimal-apis"&gt;https://khalidabuhakmeh.com/global-endpoint-filters-with-aspnet-core-minimal-apis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.MapGroup(string.Empty)&lt;/code&gt; で空のグループを作成し、それに対してエンドポイントフィルターを指定することでグローバルなフィルターとして定義できるというテクニックの紹介。&lt;/p&gt;
&lt;h3 id="net-8-dynamic-pgo"&gt;.NET 8 で既定で有効になった Dynamic PGO について - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/10/29/131336"&gt;https://blog.neno.dev/entry/2023/10/29/131336&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で規定で有効となった Dynamic PGO について、PGO の仕組みやその最適化に至るまでの挙動といった部分の解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/nenonaninu/dot-net-8-deji-ding-deyou-xiao-ninatuta-dynamic-pgo-nituite"&gt;.NET 8 で既定で有効になった Dynamic PGO について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script defer class="speakerdeck-embed" data-id="5bf674425e6d44e38a4a840766497eea" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="whats-new-in-f-8"&gt;What’s new in F# 8&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://amplifying-fsharp.github.io/files/sessions/amplify-fsharp-october-2023.pdf"&gt;https://amplifying-fsharp.github.io/files/sessions/amplify-fsharp-october-2023.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;F# 8 での変更点についてのまとめスライド。&lt;/p&gt;
&lt;h3 id="how-to-use-testcontainers-with.net-unit-tests-the.net-tools-blog"&gt;How to use Testcontainers with .NET Unit Tests | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/10/24/how-to-use-testcontainers-with-dotnet-unit-tests/"&gt;https://blog.jetbrains.com/dotnet/2023/10/24/how-to-use-testcontainers-with-dotnet-unit-tests/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Testcontainers を使用してコンテナーで一時的なデータベースを使用したユニットテストを記述する方法について。&lt;/p&gt;
&lt;p&gt;記事ではコレクションごとやクラスごとにコンテナーを使う方法や ASP.NET Core アプリケーションのテストなどについても触れている。&lt;/p&gt;
&lt;h3 id="short-circuit-routing-in.net-8-exploring-the.net-8-preview-part-11"&gt;Short-circuit routing in .NET 8: Exploring the .NET 8 preview - Part 11&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-short-circuit-routing/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-short-circuit-routing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の ASP.NET Core で導入されたショートサーキットルーティングについての解説。&lt;/p&gt;
&lt;p&gt;ショートサーキットルーティングはエンドポイントの処理に関してミドルウェアをスキップできる仕組み。&lt;/p&gt;
&lt;h3 id="c-c"&gt;コレクション式 | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/study/csharp/datatype/collection-expression/"&gt;https://ufcpp.net/study/csharp/datatype/collection-expression/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 で導入されるコレクション式についての解説。&lt;/p&gt;
&lt;h3 id="net6-tlstrue-amazon-documentdb-qiita"&gt;.NET6 から TLS=true で Amazon DocumentDB に接続する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/ishiyama0530/items/0c5dd19ab4df548c2c5f"&gt;https://qiita.com/ishiyama0530/items/0c5dd19ab4df548c2c5f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 6 のコンテナーから Amazon DocumentDB に TLS を有効にして接続する際に証明書の問題が発生する県について。&lt;/p&gt;
&lt;h3 id="net-8-blazor-addcascadingvalue"&gt;.NET 8 の Blazor の新機能 「AddCascadingValue メソッド」&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/microsoft/articles/dotnet8-blazor-01"&gt;https://zenn.dev/microsoft/articles/dotnet8-blazor-01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Blazor に追加された AddCascadingValue について。カスケードされる値を提供する方法としてコンポーネントからではなくサービスに登録する方法が提供される。&lt;/p&gt;
&lt;h3 id="rider-2023.3-eap-4-improved-experience-for-running-multiple-projects-type-dependency-diagrams-and-more-the.net-tools-blog"&gt;Rider 2023.3 EAP 4: Improved Experience for Running Multiple Projects, Type Dependency Diagrams, and More | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/10/23/rider-2023-3-eap-4/"&gt;https://blog.jetbrains.com/dotnet/2023/10/23/rider-2023-3-eap-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.3 EAP 4 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは複数のプロジェクトの実行やソリューションフィルターの保存、型の依存ダイアグラム、Central Package Management でのコード補完、パフォーマンスプロファイリングの改善といったものが含まれている。&lt;/p&gt;
&lt;h3 id="neue-cc-rust-csbindgenc-x-rust-ffi"&gt;neue cc - 他言語がメインの場合のRustの活用法 - csbindgenによるC# x Rust FFI実践事例&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://neue.cc/2023/10/23_rusttokyo.html"&gt;https://neue.cc/2023/10/23_rusttokyo.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust の C# バインディングライブラリー csbindgen での経験をもとにした Rust の活用方法についてのセッションとそのフォローアップ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/neuecc/ta-yan-yu-gameinnochang-he-norustnohuo-yong-fa-csbindgenniyoruc-number-x-rust-ffishi-jian-shi-li"&gt;他言語がメインの場合のRustの活用法 - csbindgenによるC# x Rust FFI実践事例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script defer class="speakerdeck-embed" data-id="fca414aeffb9486ab2f738466df6da02" data-ratio="1.7777777777777777" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;h3 id="using-fluentscheduler-with-c"&gt;Using FluentScheduler with C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/using-fluentscheduler-with-c-29ck"&gt;https://dev.to/karenpayneoregon/using-fluentscheduler-with-c-29ck&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="jsakamototoolbelt.blazor.viewtransition-a-router-component-and-a-service-that-makes-your-blazor-apps-have-pretty-animated-transition-effects-between-pages-with-the-view-transitions-api"&gt;jsakamoto/Toolbelt.Blazor.ViewTransition: A router component and a service that makes your Blazor apps have pretty animated transition effects between pages with the View Transitions API.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/jsakamoto/Toolbelt.Blazor.ViewTransition"&gt;https://github.com/jsakamoto/Toolbelt.Blazor.ViewTransition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazor 上でページ間トランジションを提供する Router コンポーネント。&lt;/p&gt;
&lt;!-- https://x.com/jsakamoto/status/1718257011740312011?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;The &amp;quot;Blazor View Transion&amp;quot; was rolled out!🎉&lt;a href="https://t.co/vZwC7ZnBNj"&gt;https://t.co/vZwC7ZnBNj&lt;/a&gt;&lt;br&gt;This package includes a router component and a service both make your Blazor apps have pretty animated transition effects between pages with the View Transitions API!🚀&lt;br&gt;Live Demo:&lt;a href="https://t.co/JQh5hIYE3S"&gt;https://t.co/JQh5hIYE3S&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Blazor?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Blazor&lt;/a&gt; &lt;a href="https://t.co/JnbPSCDJAg"&gt;pic.twitter.com/JnbPSCDJAg&lt;/a&gt;&lt;/p&gt;&amp;mdash; &amp;#64;jsakamoto (&amp;#64;jsakamoto) &lt;a href="https://twitter.com/jsakamoto/status/1718257011740312011?ref_src=twsrc%5Etfw"&gt;October 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="net-conf-calendar"&gt;.NET Conf Calendar&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dotnetconf-calendar.azurewebsites.net/"&gt;https://dotnetconf-calendar.azurewebsites.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2023 のスケジュールを iCalender 形式で提供するサイト。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devadjust.exblog.jp/29731751/"&gt;.NET Conf 2023 のセッションスケジュールを iCal 形式で公開するようにした件 | &amp;#64;jsakamoto&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/ericlippert/status/1717203249898619248?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;That is: &lt;a href="https://t.co/7AhmBgwsie"&gt;pic.twitter.com/7AhmBgwsie&lt;/a&gt;&lt;/p&gt;&amp;mdash; Eric Lippert (&amp;#64;ericlippert&amp;#64;hachyderm.io) (&amp;#64;ericlippert) &lt;a href="https://twitter.com/ericlippert/status/1717203249898619248?ref_src=twsrc%5Etfw"&gt;October 25, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/dotnetonaws/status/1714672688369701286?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;At AWS re:Invent, you’ll find sessions for the .NET developer on everything from artificial intelligence (AI) to serverless to modernization. In this post, learn about the .NET sessions at re:Invent 2023 and opportunities to network.&lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/AWS?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#AWS&lt;/a&gt;&lt;a href="https://t.co/XKi8i9kzmP"&gt;https://t.co/XKi8i9kzmP&lt;/a&gt;&lt;/p&gt;&amp;mdash; .NET on AWS (&amp;#64;dotnetonAWS) &lt;a href="https://twitter.com/dotnetonAWS/status/1714672688369701286?ref_src=twsrc%5Etfw"&gt;October 18, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/kstrubeg/status/1716101506200433073?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Released version 0.2.0 of Blazor.SVGEditor today. This version brings support for pinch-and-zoom on touch devices. The Blazor Web Audio Playground demo and Blazor Graph Editor depend on this package, so they now also support this.&lt;a href="https://twitter.com/hashtag/blazor?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#blazor&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt;&lt;br&gt;Project: &lt;a href="https://t.co/Dg9GSE8GHt"&gt;https://t.co/Dg9GSE8GHt&lt;/a&gt; &lt;a href="https://t.co/dFED5fDsr5"&gt;pic.twitter.com/dFED5fDsr5&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kristoffer Strube (&amp;#64;KStrubeG) &lt;a href="https://twitter.com/KStrubeG/status/1716101506200433073?ref_src=twsrc%5Etfw"&gt;October 22, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/10/22/updates</id>
		<title>2023-10-22: .NET 7.0.12 &amp; 6.0.23, .NET 8 Release Candidate 2, VMMap v3.4</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/10/22/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-10-22T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="net-october-2023-updates.net-7.0.12.net-6.0.23.net-blog"&gt;.NET October 2023 Updates – .NET 7.0.12, .NET 6.0.23 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/october-2023-updates/"&gt;https://devblogs.microsoft.com/dotnet/october-2023-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 7 および 6 の2023年10月のアップデートがリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合修正や改善のほか3つのセキュリティー修正が含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2023-44487 – .NET Denial of Service Vulnerability
&lt;ul&gt;
&lt;li&gt;ASP.NET Core Kestrel Web サーバーに対する悪意あるクライアントによって細工された HTTP/2 リクエストをひきおこされるサービス拒否の脆弱性&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/announcements/issues/277"&gt;Microsoft Security Advisory CVE-2023-44487: .NET Denial of Service Vulnerability · Issue #277 · dotnet/announcements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2023-38171 – .NET Denial of Service Vulnerability
&lt;ul&gt;
&lt;li&gt;MsQuic.dll における null ポインターよるサービス拒否の脆弱性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2023-36435 – .NET Denial of Service Vulnerability
&lt;ul&gt;
&lt;li&gt;MsQuic.dll におけるメモリーリークよるサービス拒否の脆弱性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-8-release-candidate-2.net-blog"&gt;Announcing .NET 8 Release Candidate 2 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-rc2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-rc2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Release Candidate 2 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NET ライブラリーのパッケージ README&lt;/li&gt;
&lt;li&gt;MSBuild+ シンプル CLI ベースのプロジェクト評価&lt;/li&gt;
&lt;li&gt;SDK コンテナー発行: tar.gz アーカイブに発行&lt;/li&gt;
&lt;li&gt;.NET のための Tensor Primitives の導入&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asp.net-core-updates-in.net-8-release-candidate-2.net-blog"&gt;ASP.NET Core updates in .NET 8 Release Candidate 2 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-rc-2/"&gt;https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-rc-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Release Candidate 2 での ASP.NET Core のアップデートについて。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;サーバーとミドルウェア
&lt;ul&gt;
&lt;li&gt;HTTP ロギング拡張性&lt;/li&gt;
&lt;li&gt;IdentityModel 7x へのアップデート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API オーサリング
&lt;ul&gt;
&lt;li&gt;新しいフォームバインディングによるフォームファイルのサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SignalR
&lt;ul&gt;
&lt;li&gt;TypeScript クライアントのステートフルな再接続サポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Blazor
&lt;ul&gt;
&lt;li&gt;Blazor Web Apps のグローバルなインタラクティブ性&lt;/li&gt;
&lt;li&gt;Blazor WebAssembly テンプレートアップデート&lt;/li&gt;
&lt;li&gt;ファイルスコープ &amp;#64;rendermode Razor ディレクティブ&lt;/li&gt;
&lt;li&gt;強化されたナビゲーションとフォームハンドリングの改善&lt;/li&gt;
&lt;li&gt;インタラクティブなサーバーコンポーネントがなくなった際の回線切断&lt;/li&gt;
&lt;li&gt;フォームモデルバインディングの改善&lt;/li&gt;
&lt;li&gt;カスケーディングパラメータとして HttpContext へのアクセス&lt;/li&gt;
&lt;li&gt;Blazor Web App での永続コンポーネント&lt;/li&gt;
&lt;li&gt;コンポーネントへのキー付きサービスの注入
ｰ ダイアログキャンセル及びクローズイベントのサポート&lt;/li&gt;
&lt;li&gt;エラーページサポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Identity
&lt;ul&gt;
&lt;li&gt;Blazor identity UI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Single page apps (SPA)
&lt;ul&gt;
&lt;li&gt;コマンドラインからの新しい SPA テンプレートの実行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ef-core-8-release-candidate-2-smaller-features-in-ef8.net-blog"&gt;EF Core 8 Release Candidate 2: Smaller features in EF8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-ef8-rc2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-ef8-rc2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core 8 Release Candidate 2 のリリースと EF Core 8 の新機能の紹介。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;センチネル値とデータベースのデフォルト&lt;/li&gt;
&lt;li&gt;より良い ExecuteUpdate と ExecuteDelete&lt;/li&gt;
&lt;li&gt;より良い &lt;code&gt;IN&lt;/code&gt; クエリーの使用&lt;/li&gt;
&lt;li&gt;SQL Azure/SQL Server での数値による rowversion&lt;/li&gt;
&lt;li&gt;括弧の排除&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="announcing.net-maui-in.net-8-release-candidate-2-more-quality.net-blog"&gt;Announcing .NET MAUI in .NET 8 Release Candidate 2: More Quality - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-rc-2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-dotnet-maui-in-dotnet-8-rc-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Release Candidate 2 での .NET MAUI のアップデートについて。&lt;/p&gt;
&lt;p&gt;記事ではこのリリースでの品質向上についての紹介に加えて、.NET 7 向けの .NET MAUI service release 8 のリリースと Xcode 15 および Android 14 の対応についても触れている。&lt;/p&gt;
&lt;h3 id="net-framework-october-2023-security-and-quality-rollup-updates.net-blog"&gt;.NET Framework October 2023 Security and Quality Rollup Updates - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-october-2023-security-and-quality-rollup-updates/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-october-2023-security-and-quality-rollup-updates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework の2023年10月のセキュリティー修正と累積アップデートがリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースには新しいセキュリティー修正は含まれず、いくつかの不具合修正が含まれている。&lt;/p&gt;
&lt;h3 id="vmmap-v3.4-microsoft-community-hub"&gt;VMMap v3.4 - Microsoft Community Hub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/sysinternals-blog/vmmap-v3-4/ba-p/3958601"&gt;https://techcommunity.microsoft.com/t5/sysinternals-blog/vmmap-v3-4/ba-p/3958601&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VMMap v3.4 がリリースされた。&lt;/p&gt;
&lt;p&gt;VMMap は Windows 上でのメモリー分析ツール。このリリースで .NET 6 から 8 までもサポートされた。&lt;/p&gt;
&lt;!-- https://x.com/sysinternals/status/1714731087119675416?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;VMMap v3.4 is now live and adds support for .NET 6 and higher, including .NET 8 preview.&lt;br&gt;&lt;br&gt;Get the tools at &lt;a href="https://t.co/zlch58GEpK"&gt;https://t.co/zlch58GEpK&lt;/a&gt;.&lt;br&gt;&lt;br&gt;See what&amp;#39;s new on the Sysinternals Blog: &lt;a href="https://t.co/JteXD0okBk"&gt;https://t.co/JteXD0okBk&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sysinternals (&amp;#64;Sysinternals) &lt;a href="https://twitter.com/Sysinternals/status/1714731087119675416?ref_src=twsrc%5Etfw"&gt;October 18, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="performance-improvements-in-asp.net-core-8.net-blog"&gt;Performance Improvements in ASP.NET Core 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/performance-improvements-in-aspnet-core-8/"&gt;https://devblogs.microsoft.com/dotnet/performance-improvements-in-aspnet-core-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 Release Candidate 2 での ASP.NET Core のパフォーマンス改善について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Server
&lt;ul&gt;
&lt;li&gt;Kestrel&lt;/li&gt;
&lt;li&gt;HTTP.sys&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Native AOT&lt;/li&gt;
&lt;li&gt;Request Delegate Generator&lt;/li&gt;
&lt;li&gt;Runtime APIs
&lt;ul&gt;
&lt;li&gt;SearchValues&lt;/li&gt;
&lt;li&gt;Spans&lt;/li&gt;
&lt;li&gt;FrozenDictionary&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Other
&lt;ul&gt;
&lt;li&gt;Regex&lt;/li&gt;
&lt;li&gt;Analyzer&lt;/li&gt;
&lt;li&gt;StringBuilder&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="visual-studio-2022-17.8-preview-3-is-here-visual-studio-blog"&gt;Visual Studio 2022 17.8 Preview 3 is here! - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-8-preview-3-is-here/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-8-preview-3-is-here/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.8 Preview 3 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生産性
&lt;ul&gt;
&lt;li&gt;Visual Studio アップデート通知&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C++ Game Dev
&lt;ul&gt;
&lt;li&gt;Unreal Engine マクロ指定子サジェスト&lt;/li&gt;
&lt;li&gt;構造化診断&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SQL Server Data Tools の MDS 3.0 から MDS 5.0 へのアップグレード&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="overhauled-f-code-fixes-in-visual-studio.net-blog"&gt;Overhauled F# code fixes in Visual Studio - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/overhauled-fsharp-code-fixes-in-visual-studio/"&gt;https://devblogs.microsoft.com/dotnet/overhauled-fsharp-code-fixes-in-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio での F# コード修正に関する改善について。&lt;/p&gt;
&lt;h3 id="net-conf-2023-agenda"&gt;.NET Conf 2023 agenda&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.dotnetconf.net/agenda"&gt;https://www.dotnetconf.net/agenda&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2023 のタイムスケジュール/セッションリストが公開された。&lt;/p&gt;
&lt;!-- https://x.com/dave_dotnet/status/1711432833594532083?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;.NET Conf 2023 agenda released  ⬇&lt;a href="https://t.co/9xZEV2KzG2"&gt;https://t.co/9xZEV2KzG2&lt;/a&gt;&lt;br&gt;&lt;br&gt;So many amazing sessions scheduled, but what talks are you most looking forward to? &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/IdIdYYr9BN"&gt;pic.twitter.com/IdIdYYr9BN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Callan | dotnet (&amp;#64;Dave_DotNet) &lt;a href="https://twitter.com/Dave_DotNet/status/1711432833594532083?ref_src=twsrc%5Etfw"&gt;October 9, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="release-release-v2.58.0-grpcgrpc-dotnet"&gt;Release Release v2.58.0 · grpc/grpc-dotnet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/grpc/grpc-dotnet/releases/tag/v2.58.0"&gt;https://github.com/grpc/grpc-dotnet/releases/tag/v2.58.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gRPC (grpc-dotnet) v2.58.0 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合修正やデバッグに関する改善、いくつかのプロジェクトから .NET Standard 1.5 の削除などが行われている。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="building-3d-applications-and-content-with.net-maui-and-evergine.net-blog"&gt;Building 3D Applications and Content with .NET MAUI and Evergine - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-maui-3d-app-with-evergine/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-maui-3d-app-with-evergine/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET MAUI と Evergine を組み合わせて .NET MAUI のアプリケーション上に 3D をホストできることについての紹介。&lt;/p&gt;
&lt;h3 id="mutation-testing-with-stryker-in.net-projects"&gt;Mutation Testing with Stryker in .NET Projects&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;hamed.shirbandi/mutation-testing-with-stryker-in-net-projects-ff1f05ddce8f"&gt;https://medium.com/&amp;#64;hamed.shirbandi/mutation-testing-with-stryker-in-net-projects-ff1f05ddce8f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stryker を使用して .NET プロジェクトでミューテーションテストを行う方法について。&lt;/p&gt;
&lt;h3 id="pre-commit-hooks-with-husky.net-build-format-and-test-your.net-application-before-a-git-commit"&gt;Pre-commit hooks with Husky.NET - build, format, and test your .NET application before a Git commit&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.code4it.dev/blog/husky-dotnet-precommit-hooks/"&gt;https://www.code4it.dev/blog/husky-dotnet-precommit-hooks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Husky.NET を使用して Git のコミットフックを使ってビルドやテスト、フォーマットなどを行う方法についての紹介。&lt;/p&gt;
&lt;h3 id="mixing-c-and-rust-interop"&gt;Mixing C# and Rust - Interop&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_0_3_2.html"&gt;https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_0_3_2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust の .NET をターゲットとするバックエンドを開発するシリーズ。この記事では Rust から .NET を呼び出す方法について実装、検討していることに触れている。&lt;/p&gt;
&lt;h3 id="memory-alignment-of-doubles-in-c"&gt;Memory alignment of doubles in C#&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://minidump.net/memory-alignment-of-doubles-in-c-1d13e3ce741"&gt;https://minidump.net/memory-alignment-of-doubles-in-c-1d13e3ce741&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET での Double (64bit 浮動小数点) 配列メモリーアライメントについて深く調査している。&lt;/p&gt;
&lt;h3 id="ef-coreutcjst"&gt;EF CoreにおいてUTCで保存した日時をJSTに変換して表示する方法&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/hat_kotap/articles/785960b233e5f0"&gt;https://zenn.dev/hat_kotap/articles/785960b233e5f0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core と PostgreSQL でデータベース上に日時を UTC で保存して、表示時に JST として表示する方法について。&lt;/p&gt;
&lt;h3 id="rider-2023.3-eap-3-improvements-to-global-usings-support-and-more.the.net-tools-blog"&gt;Rider 2023.3 EAP 3: Improvements To Global Usings Support, and More. | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/10/17/rider-2023-3-eap-3/"&gt;https://blog.jetbrains.com/dotnet/2023/10/17/rider-2023-3-eap-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rider 2023.3 EAP 3 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは global usings のサポートの改善、rootless コンテナーのサポート、HTTP クライアントでの強化された JSON リクエストボディーの補完、URL パス参照の自動コード補完、AI アシスタントプラグインのアップデートなどが含まれている。&lt;/p&gt;
&lt;h3 id="updates-to-docker-images-in.net-8-exploring-the.net-8-preview-part-10"&gt;Updates to Docker images in .NET 8: Exploring the .NET 8 preview - Part 10&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-updates-to-docker-images-in-dotnet-8/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-updates-to-docker-images-in-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 でアップデートされた Docker イメージについての詳しい解説。&lt;/p&gt;
&lt;h3 id="razorslices-razor-views-with-asp.net-core-minimal-apis"&gt;RazorSlices - Razor Views with ASP.NET Core Minimal APIs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://khalidabuhakmeh.com/razorslices-razor-views-with-aspnet-core-minimal-apis"&gt;https://khalidabuhakmeh.com/razorslices-razor-views-with-aspnet-core-minimal-apis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASP.NET Core MVC や Razor Pages に依存せず Razor を Minimal APIs で使用できる RazorSlices の紹介。&lt;/p&gt;
&lt;h3 id="view-visual-studio-activity-logs-better"&gt;View Visual Studio activity logs better&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/view-visual-studio-activity-logs-better-2id8"&gt;https://dev.to/karenpayneoregon/view-visual-studio-activity-logs-better-2id8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 自体のアクティビティログの取得と表示方法について。&lt;/p&gt;
&lt;h3 id="improving-asp.net-core-dependency-injection-with-scrutor"&gt;Improving ASP.NET Core Dependency Injection With Scrutor&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/milanjovanovictech/improving-aspnet-core-dependency-injection-with-scrutor-48e3"&gt;https://dev.to/milanjovanovictech/improving-aspnet-core-dependency-injection-with-scrutor-48e3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.DependencyInjection を拡張する Scrutor を使用して ASP.NET Core の Dependency Injection を扱う方法について。&lt;/p&gt;
&lt;h3 id="visual-studio-innovations-at.net-conf-2023-save-the-date-visual-studio-blog"&gt;Visual Studio Innovations at .NET Conf 2023: Save The Date - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-innovations-at-net-conf-2023-save-the-date/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-innovations-at-net-conf-2023-save-the-date/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Conf 2023 での Visual Studio に関する紹介があるという案内。&lt;/p&gt;
&lt;h3 id="c-13-c-c"&gt;C# 13 向けトリアージ | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/blog/2023/10/triage2023/"&gt;https://ufcpp.net/blog/2023/10/triage2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近行われた C# 13 に向けたトリアージについて。&lt;/p&gt;
&lt;h3 id="rendering-blazor-components-to-a-string-exploring-the.net-8-preview-part-9"&gt;Rendering Blazor components to a string: Exploring the .NET 8 preview - Part 9&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/exploring-the-dotnet-8-preview-rendering-blazor-components-to-a-string/"&gt;https://andrewlock.net/exploring-the-dotnet-8-preview-rendering-blazor-components-to-a-string/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 で追加された HtmlRenderer を使用して Blazor コンポーネントを文字列としてレンダリングする方法について。&lt;/p&gt;
&lt;h3 id="msft_vsinstance-class-removed-from-wmi-catalog-after-update-to-preview-3-vs-2022-17.8"&gt;MSFT_VSInstance class removed from WMI catalog after update to Preview 3 (VS 2022 17.8)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://developercommunity.visualstudio.com/t/MSFT_VSInstance-class-removed-from-WMI-c/10489629#T-N10491300"&gt;https://developercommunity.visualstudio.com/t/MSFT_VSInstance-class-removed-from-WMI-c/10489629#T-N10491300&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 17.8 Preview 3 で MSFT_VSInstance が WMI カタログから削除されたことについて。引き続き利用するには名前空間の指定が必要となっている。&lt;/p&gt;
&lt;!-- https://x.com/skitoy4321/status/1714857655154651192?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;オアーッ&lt;br&gt;ヤローッ&lt;br&gt;(VS17.8かららしい)&lt;a href="https://t.co/RXzeK0Kbx6"&gt;https://t.co/RXzeK0Kbx6&lt;/a&gt;&lt;a href="https://t.co/UtmhjU5vtq"&gt;https://t.co/UtmhjU5vtq&lt;/a&gt;&lt;/p&gt;&amp;mdash; skitoy4321 (&amp;#64;skitoy4321) &lt;a href="https://twitter.com/skitoy4321/status/1714857655154651192?ref_src=twsrc%5Etfw"&gt;October 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="wrathmark-an-interesting-compute-workload-part-1"&gt;Wrathmark: An Interesting Compute Workload (Part 1)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ricomariani.medium.com/wrathmark-an-interesting-compute-workload-part-1-47d61e0bea43"&gt;https://ricomariani.medium.com/wrathmark-an-interesting-compute-workload-part-1-47d61e0bea43&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ネイティブと .NET の JIT の性能についてのバージョンごとの比較など。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ricomariani.medium.com/wrathmark-an-interesting-compute-workload-part-2-bac27c7f0c7d"&gt;Wrathmark: An Interesting Compute Workload (Part 2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://x.com/ricomariani/status/1714685740846927921?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I did a two-part analysis of a heavy compute workload in many .NET flavors vs. Native.  .NET 8 did really well...&lt;br&gt;&lt;br&gt;See below:&lt;a href="https://t.co/lMepyhk5bG"&gt;https://t.co/lMepyhk5bG&lt;/a&gt;&lt;a href="https://t.co/IcQkXPQQcA"&gt;https://t.co/IcQkXPQQcA&lt;/a&gt;&lt;/p&gt;&amp;mdash; Rico Mariani (&amp;#64;ricomariani) &lt;a href="https://twitter.com/ricomariani/status/1714685740846927921?ref_src=twsrc%5Etfw"&gt;October 18, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="microsoftvs-dapr-view-manage-and-diagnose-dapr-services-within-visual-studio"&gt;microsoft/vs-dapr: View, manage, and diagnose Dapr services within Visual Studio.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/vs-dapr"&gt;https://github.com/microsoft/vs-dapr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio で Dapr をサポート (表示や管理、診断) するための拡張。&lt;/p&gt;
&lt;p&gt;開発中のため、現時点では Visual Studio Marketplace からの配布は行われていない。&lt;/p&gt;
&lt;h3 id="cysharputf8stringinterpolation-successor-of-zstring-utf8-based-zero-allocation-high-peformance-string-interpolation-and-stringbuilder"&gt;Cysharp/Utf8StringInterpolation: Successor of ZString; UTF8 based zero allocation high-peformance String Interpolation and StringBuilder.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/Utf8StringInterpolation"&gt;https://github.com/Cysharp/Utf8StringInterpolation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主に文字列補完式を使用して UTF-8 文字列をパフォーマンス上効果的に生成するためのライブラリー。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neue.cc/2023/10/13_Utf8StringInterpolation.html"&gt;neue cc - UTF8文字列生成を最適化するライブラリ Utf8StringInterpolation を公開しました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- https://x.com/neuecc/status/1711911200274153689?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;ZStringの後継として、「Utf8StringInterpolation」をリリースしました！文字列補間($&amp;quot;{foo}&amp;quot;)からコンパイル時に分解された値断片を元に、UTF8バッファに直接書き込み、使いやすさとパフォーマンスを両立しました。.NET 8では IUtf8SpanFormattable に対応で更に性能アップ！&lt;a href="https://t.co/FhkK0jIsHZ"&gt;https://t.co/FhkK0jIsHZ&lt;/a&gt; &lt;a href="https://t.co/1srJN40Ujc"&gt;pic.twitter.com/1srJN40Ujc&lt;/a&gt;&lt;/p&gt;&amp;mdash; neuecc (&amp;#64;neuecc) &lt;a href="https://twitter.com/neuecc/status/1711911200274153689?ref_src=twsrc%5Etfw"&gt;October 11, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/chnasarre/status/1710940207950733496?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Are you using &lt;a href="https://twitter.com/maoni0?ref_src=twsrc%5Etfw"&gt;&amp;#64;maoni0&lt;/a&gt;&amp;#39;s dotnet-gcmon?&lt;br&gt;It seems that you get more features with the standalone application (including call stacks for induced GCs and AllocationTick on Windows)&lt;a href="https://twitter.com/hashtag/progc2?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#progc2&lt;/a&gt; &lt;a href="https://twitter.com/konradkokosa?ref_src=twsrc%5Etfw"&gt;&amp;#64;konradkokosa&lt;/a&gt; &lt;a href="https://twitter.com/KooKiz?ref_src=twsrc%5Etfw"&gt;&amp;#64;KooKiz&lt;/a&gt; &lt;a href="https://t.co/m6EWSvAziF"&gt;pic.twitter.com/m6EWSvAziF&lt;/a&gt;&lt;/p&gt;&amp;mdash; Christophe Nasarre (&amp;#64;chnasarre) &lt;a href="https://twitter.com/chnasarre/status/1710940207950733496?ref_src=twsrc%5Etfw"&gt;October 8, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/10/08/updates</id>
		<title>2023-10-08: C# Dev Kit GA, Evergine expands to iOS with Metal API</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/10/08/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-10-08T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="c-dev-kit-now-generally-available.net-blog"&gt;C# Dev Kit - Now Generally Available - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/csharp-dev-kit-now-generally-available/"&gt;https://devblogs.microsoft.com/dotnet/csharp-dev-kit-now-generally-available/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# Dev Kit が Generally Available (一般公開) となった。&lt;/p&gt;
&lt;p&gt;C# Dev Kit は Visual Studio Code で C# 開発を行うための拡張機能。Visual Studio に含まれているソリューションエクスプローラーやテストエクスプローラーといった機能を Visual Studio Code に持ち込むことで今までの C# 開発拡張以上の機能を提供する。Windows だけでなく Linux, macOS での利用もサポートされる。&lt;/p&gt;
&lt;p&gt;この拡張の利用には Visual Studio サブスクリプション (Community 含む) のライセンスが必要となる。&lt;/p&gt;
&lt;h3 id="arm64-performance-improvements-in.net-8.net-blog"&gt;Arm64 Performance Improvements in .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/this-arm64-performance-in-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/this-arm64-performance-in-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 での Arm64 向けパフォーマンス改善についての解説。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;条件的選択&lt;/li&gt;
&lt;li&gt;条件付き比較&lt;/li&gt;
&lt;li&gt;条件付きインクリメント、否定、反転&lt;/li&gt;
&lt;li&gt;VectorTableLookup と VectorTableLookupExtension&lt;/li&gt;
&lt;li&gt;連続するレジスタ割り当て&lt;/li&gt;
&lt;li&gt;のぞき穴的最適化
&lt;ul&gt;
&lt;li&gt;連続する &lt;code&gt;ldr&lt;/code&gt; および &lt;code&gt;str&lt;/code&gt; の &lt;code&gt;ldp&lt;/code&gt; および &lt;code&gt;stp&lt;/code&gt; への置換&lt;/li&gt;
&lt;li&gt;SIMD レジスターでの &lt;code&gt;ldp&lt;/code&gt;/&lt;code&gt;stp&lt;/code&gt; の使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;str wzr&lt;/code&gt; ペアの &lt;code&gt;str xzr&lt;/code&gt; への置換&lt;/li&gt;
&lt;li&gt;load の &lt;code&gt;mov&lt;/code&gt; での置換&lt;/li&gt;
&lt;li&gt;mul + neg -&amp;gt; mneg のコンバート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;コード品質の改善
&lt;ul&gt;
&lt;li&gt;より高速な Vector128/Vector64 比較&lt;/li&gt;
&lt;li&gt;vector == Vector128&amp;lt;&amp;gt;.Zero の改善&lt;/li&gt;
&lt;li&gt;Memmove のアンロール&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;スループットの改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="the-convenience-of-system.text.json.net-blog"&gt;The convenience of System.Text.Json - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-convenience-of-system-text-json/"&gt;https://devblogs.microsoft.com/dotnet/the-convenience-of-system-text-json/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;System.Text.Json の利便性についての解説。&lt;/p&gt;
&lt;p&gt;記事では JSON.NET も含めて一般的に使用される API (シリアライザー、リーダーライター) をモデルにパフォーマンスと使用方法を紹介している。&lt;/p&gt;
&lt;h3 id="announcing-new-release-evergine-september-23-evergine"&gt;Announcing New Release! | Evergine September 23 - Evergine&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://evergine.com/evergine-release-september-2023/"&gt;https://evergine.com/evergine-release-september-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Evergine の2023年9月版がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは iOS と Metal、.NET MAUI のサポートをはじめ、モーフィングアニメーションシステムや XRV フレームワークの新しいモジュールの導入、パフォーマンス改善といったものが含まれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://evergine.com/ios-metal-api/"&gt;Evergine expands to iOS with Metal API - Evergine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="decimal-qiita"&gt;Decimalの少数の表示 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/hiro_t/items/b83af07c232ce677cae3"&gt;https://qiita.com/hiro_t/items/b83af07c232ce677cae3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Decimal の文字列フォーマット時の少数部分の指定の比較。&lt;/p&gt;
&lt;h3 id="memory-mapped-files-and-overlaid-structs"&gt;Memory-Mapped Files and Overlaid Structs&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html"&gt;https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;メモリマップトファイル上のデータを構造体として参照する方法について。&lt;/p&gt;
&lt;h3 id="how-microsoft-empowers-developers-with-disabilities-celebrating-ndeam-visual-studio-blog"&gt;How Microsoft Empowers Developers with Disabilities: Celebrating NDEAM - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/celebrating-ndeam-vs-code-visual-studio/"&gt;https://devblogs.microsoft.com/visualstudio/celebrating-ndeam-vs-code-visual-studio/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NDEAM (National Disability Employment Awareness Month) を祝い、Microsoft が行ってきた障害を持つ開発者に対する支援についての紹介。&lt;/p&gt;
&lt;h3 id="godotc"&gt;GodotのC#プロジェクトを複数プロジェクトに分けて管理するには？&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/numani/articles/godot-split-project"&gt;https://zenn.dev/numani/articles/godot-split-project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Godot で C# プロジェクトを作成し、クラスライブラリープロジェクトにあるクラスをアタッチすることができない問題について。&lt;/p&gt;
&lt;h3 id="netgdb-qiita"&gt;.NETプロジェクトをgdbデバッグする方法 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/daredeshow/items/aa2b80e4463266ac3cb0"&gt;https://qiita.com/daredeshow/items/aa2b80e4463266ac3cb0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux 環境上で .NET アプリケーションが SEGV でのクラッシュする際に gdb でデバッグする方法について。&lt;/p&gt;
&lt;h3 id="can-you-use-the.net-8-identity-api-endpoints-with-identityserver"&gt;Can you use the .NET 8 Identity API endpoints with IdentityServer?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/can-you-use-the-dotnet-8-identity-api-endpoints-with-identityserver/"&gt;https://andrewlock.net/can-you-use-the-dotnet-8-identity-api-endpoints-with-identityserver/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Identity API と IdentityServer の関連と仕組みについて、IdentityServer テンプレートから .NET 8 Identity API エンドポイントへの置き換えについて。&lt;/p&gt;
&lt;h3 id="resharper-2023.2-brings-predictive-debugger"&gt;Resharper 2023.2 Brings Predictive Debugger&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.infoq.com/news/2023/10/resharper-predictive-debugger/"&gt;https://www.infoq.com/news/2023/10/resharper-predictive-debugger/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReSharper 2023.2 の Predictive Debugger (予測デバッグ) の紹介。&lt;/p&gt;
&lt;h3 id="the.net-conf-student-zone-is-back.net-blog"&gt;The .NET Conf Student Zone is Back! - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-dotnet-conf-student-zone-is-back/"&gt;https://devblogs.microsoft.com/dotnet/the-dotnet-conf-student-zone-is-back/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023年の .NET Conf Student Zone の開催について。&lt;/p&gt;
&lt;p&gt;.NET Conf Student Zone は初心者/学習者向けのセッションイベント。イベントは11月13日に開催される。&lt;/p&gt;
&lt;h3 id="recordings-from-jetbrains.net-day-online-23-are-available-the.net-tools-blog"&gt;Recordings from JetBrains .NET Day Online ’23 are available | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/10/02/recordings-jetbrains-dotnet-day-online-23/"&gt;https://blog.jetbrains.com/dotnet/2023/10/02/recordings-jetbrains-dotnet-day-online-23/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JetBrains .NET Day Online のレコーディングが公開となった。.NET に関連した10のセッションのレコーディングが公開されている。&lt;/p&gt;
&lt;h3 id="github-actions-runner-deep-dive-registration-and-setup"&gt;GitHub Actions Runner Deep Dive: Registration and Setup&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/cwprogram/github-actions-runner-deep-dive-registration-and-setup-1ojb"&gt;https://dev.to/cwprogram/github-actions-runner-deep-dive-registration-and-setup-1ojb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Actions の Runner のソースコードを読み解いていく記事。記事ではランナーの登録や開始部分について解説している。&lt;/p&gt;
&lt;h3 id="iasyncenumerable-qiita"&gt;IAsyncEnumerable を理解する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/TsuyoshiUshio&amp;#64;github/items/c4b9929d88d1cd8cabb1"&gt;https://qiita.com/TsuyoshiUshio&amp;#64;github/items/c4b9929d88d1cd8cabb1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IAsyncEnumerable の利用方法とユースケースについての簡単な解説。&lt;/p&gt;
&lt;h3 id="rolling-forward-to-major-versions-in.net"&gt;Rolling Forward to Major Versions in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://weblog.west-wind.com/posts/2023/Oct/02/Rolling-Forward-to-Major-Versions-in-NET"&gt;https://weblog.west-wind.com/posts/2023/Oct/02/Rolling-Forward-to-Major-Versions-in-NET&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アプリケーションを実行するランタイムのバージョンのロールフォワード (.NET 7でビルドしたアプリケーションを .NET 8 で動かすなど) の設定方法について。&lt;/p&gt;
&lt;h3 id="using-http2-with-asp.net-core-traefikkubernetescontainer-example"&gt;Using http/2 with ASP.NET Core - Traefik/Kubernetes/container example&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://josef.codes/using-http2-with-asp-net-core-traefik-kubernetes-container-example/"&gt;https://josef.codes/using-http2-with-asp-net-core-traefik-kubernetes-container-example/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kubernetes 上の ASP.NET Core アプリケーションで HTTP/2 を TLS ありでリッスンするための構成について。&lt;/p&gt;
&lt;h3 id="tales-from-the.net-migration-trenches-our-first-views"&gt;Tales from the .NET Migration Trenches - Our First Views&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.jimmybogard.com/tales-from-the-net-migration-trenches-our-first-views/"&gt;https://www.jimmybogard.com/tales-from-the-net-migration-trenches-our-first-views/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Framework から .NET へのマイグレーションの隙間シリーズ。ビューの移行時のバンドル処理など。&lt;/p&gt;
&lt;h3 id="multiple-result-sets-for-sql-server-c-including-dapper"&gt;Multiple Result Sets for SQL-Server (C#) including Dapper&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/karenpayneoregon/multiple-result-sets-for-sql-server-c-including-dapper-1fpa"&gt;https://dev.to/karenpayneoregon/multiple-result-sets-for-sql-server-c-including-dapper-1fpa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dapper 等で SQL Server から複数の結果セットを受け取る方法について。&lt;/p&gt;
&lt;h3 id="c-tip-improve-memory-allocation-by-initializing-collection-size"&gt;C# Tip: Improve memory allocation by initializing collection size&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.code4it.dev/csharptips/initialize-collection-size/"&gt;https://www.code4it.dev/csharptips/initialize-collection-size/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;List や HashSet の初期サイズを設定することによるメモリーアロケーションの違いについて。&lt;/p&gt;
&lt;h3 id="crap-the-application-is-randomly-crashing"&gt;Crap: the application is randomly crashing!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chnasarre.medium.com/crap-the-application-is-randomly-crashing-b105a6a5a7e8"&gt;https://chnasarre.medium.com/crap-the-application-is-randomly-crashing-b105a6a5a7e8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Datadog プロファイラーの例をもとにした、アプリケーションがクラッシュした際の WinDbg を利用した調査方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="net-multi-platform-app-ui.net-maui-docs-whats-new-for-september-2023.net-maui"&gt;.NET Multi-platform App UI (.NET MAUI) docs: What's new for September 2023 - .NET MAUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/dotnet/maui/whats-new/dotnet-docs-maui-mod0"&gt;https://learn.microsoft.com/en-us/dotnet/maui/whats-new/dotnet-docs-maui-mod0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023年9月の .NET MAUI の最新情報のドキュメント。Xamarin.Forms からの移行ドキュメント含んでいる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://visualstudiomagazine.com/articles/2023/10/06/net-maui-docs.aspx"&gt;New .NET MAUI Docs Detail How to Migrate from Xamarin.Forms -- Visual Studio Magazine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;Stride (ゲームエンジン) に関連した情報をまとめたリポジトリの紹介。&lt;/p&gt;
&lt;!-- https://x.com/stridedotnet/status/1708525831864139906?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;💡 Unlock the full potential of &lt;a href="https://twitter.com/hashtag/StrideEngine?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#StrideEngine&lt;/a&gt;!&lt;br&gt;&lt;br&gt;😎 &amp;quot;Awesome Stride&amp;quot; is your gateway to a world of knowledge, featuring tutorials, examples, and more.&lt;br&gt;&lt;br&gt;🎡 Embrace the Stride community&amp;#39;s wealth of resources:&lt;a href="https://t.co/R0hgBhgHmn"&gt;https://t.co/R0hgBhgHmn&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/GameDev?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#GameDev&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/IndieDev?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#IndieDev&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/OpenSource?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#OpenSource&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://t.co/6pnDx4nJbB"&gt;pic.twitter.com/6pnDx4nJbB&lt;/a&gt;&lt;/p&gt;&amp;mdash; Stride (&amp;#64;stridedotnet) &lt;a href="https://twitter.com/stridedotnet/status/1708525831864139906?ref_src=twsrc%5Etfw"&gt;October 1, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;.NET MAUI と Evergine を使用した 3D グラフィックを組み込んだアプリのサンプル。&lt;/p&gt;
&lt;!-- https://x.com/jsuarezruiz/status/1708875963260346409?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;You can find an example combining an UI created with .NET MAUI and 3D content with Evergine here &lt;a href="https://t.co/xtjSGEHlVz"&gt;https://t.co/xtjSGEHlVz&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Dotnet&lt;/a&gt; &lt;a href="https://t.co/wjF0e16mfK"&gt;pic.twitter.com/wjF0e16mfK&lt;/a&gt;&lt;/p&gt;&amp;mdash; Javier Suárez (&amp;#64;jsuarezruiz) &lt;a href="https://twitter.com/jsuarezruiz/status/1708875963260346409?ref_src=twsrc%5Etfw"&gt;October 2, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2 id="deep-dive"&gt;Deep Dive&lt;/h2&gt;
&lt;h3 id="sponsor-links-for-nuget-packages-by-jondouglas-pull-request-12922-nugethome"&gt;Sponsor links for NuGet packages by JonDouglas · Pull Request #12922 · NuGet/Home&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/NuGet/Home/pull/12922"&gt;https://github.com/NuGet/Home/pull/12922&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet パッケージの情報にスポンサーリンクを組み込むという提案 PR。&lt;/p&gt;
&lt;!-- https://x.com/nuget/status/1709955756823314756?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;New proposal on adding sponsor links for NuGet packages. Let&amp;#39;s support the open-source projects that power our world and ensure their longevity.&lt;br&gt;&lt;br&gt;We&amp;#39;d love your feedback! &lt;a href="https://t.co/syoZdpDU0W"&gt;https://t.co/syoZdpDU0W&lt;/a&gt;&lt;/p&gt;&amp;mdash; NuGet (&amp;#64;nuget) &lt;a href="https://twitter.com/nuget/status/1709955756823314756?ref_src=twsrc%5Etfw"&gt;October 5, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/10/01/updates</id>
		<title>2023-10-01: Debugging Enhancements in .NET 8, Polly v8, CoreWCF v1.4</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/10/01/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-10-01T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="debugging-enhancements-in.net-8.net-blog"&gt;Debugging Enhancements in .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/debugging-enhancements-in-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/debugging-enhancements-in-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="polly-v8-officially-released"&gt;Polly v8 officially released&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.thepollyproject.org/2023/09/28/polly-v8-officially-released/"&gt;https://www.thepollyproject.org/2023/09/28/polly-v8-officially-released/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/App-vNext/Polly/releases/tag/8.0.0"&gt;Release 8.0.0 · App-vNext/Polly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="corewcf-v1.4-and-v1.5-preview1-released-issue-15-corewcfannouncements"&gt;CoreWCF v1.4 and v1.5 preview1 released · Issue #15 · CoreWCF/announcements&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/CoreWCF/announcements/issues/15"&gt;https://github.com/CoreWCF/announcements/issues/15&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.infoq.com/news/2023/09/corewcf-140-released/"&gt;CoreWCF 1.4.0 Released: RabbitMQ and Apache Kafka Support Added&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="release-diagnostics-release-v7.0.447801-dotnetdiagnostics"&gt;Release Diagnostics Release - v7.0.447801 · dotnet/diagnostics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet/diagnostics/releases/tag/v7.0.447801"&gt;https://github.com/dotnet/diagnostics/releases/tag/v7.0.447801&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="net-framework-september-2023-cumulative-update-preview.net-blog"&gt;.NET Framework September 2023 Cumulative Update Preview - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/dotnet-framework-september-2023-cumulative-update-preview/"&gt;https://devblogs.microsoft.com/dotnet/dotnet-framework-september-2023-cumulative-update-preview/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="get-a-sneak-peek-the-visual-studio-tea-technology-miniseries-visual-studio-blog"&gt;Get a Sneak Peek: The Visual Studio 'Tea &amp;amp; Technology' Miniseries - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-tea-technology-miniseries/"&gt;https://devblogs.microsoft.com/visualstudio/visual-studio-tea-technology-miniseries/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="cicd-unleashed-optimizing.net-web-application-delivery-with-jenkins-and-docker"&gt;CI/CD Unleashed: Optimizing .NET Web Application Delivery with Jenkins and Docker&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;shubnimkar/ci-cd-unleashed-optimizing-net-web-application-delivery-with-jenkins-and-docker-ed67ca06aeba"&gt;https://medium.com/&amp;#64;shubnimkar/ci-cd-unleashed-optimizing-net-web-application-delivery-with-jenkins-and-docker-ed67ca06aeba&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="efsqldb-qiita"&gt;EFとSQLDBの暗号化について - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/gsrh/items/cd77acbc2af350b3ee03"&gt;https://qiita.com/gsrh/items/cd77acbc2af350b3ee03&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="gitlab-cicdcwpf"&gt;GitLab CI/CDを導入してC#/WPFアプリケーションのテストとインストーラーのビルド・デプロイを自動化する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://zenn.dev/hacarus_blog/articles/3-gitlab-ci-for-c-application"&gt;https://zenn.dev/hacarus_blog/articles/3-gitlab-ci-for-c-application&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="handling-of-unknown-enums-in.net-serialization-for-api-integration"&gt;Handling of unknown enums in .NET serialization for API integration&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gaevoy.com/2023/09/26/dotnet-serialization-unknown-enums-handling-api.html"&gt;https://gaevoy.com/2023/09/26/dotnet-serialization-unknown-enums-handling-api.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="server-sent-events-with.net-7"&gt;Server Sent Events with .NET 7&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.devgenius.io/server-sent-events-with-net-7-4f06499a7762"&gt;https://blog.devgenius.io/server-sent-events-with-net-7-4f06499a7762&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cdi-qiita"&gt;[C#]DIコンテナのスコープ範囲を制御する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/jun1s/items/a4ebf7e897dc3cb1fea9"&gt;https://qiita.com/jun1s/items/a4ebf7e897dc3cb1fea9&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="asp.net-core-signalr-redis-hub-qiita"&gt;ASP.NET Core SignalR × Redis でHubを冗長化 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/takasan/items/c9f245d0be24111e0cc1"&gt;https://qiita.com/takasan/items/c9f245d0be24111e0cc1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="preventing-breaking-changes-in.net-class-libraries"&gt;Preventing breaking changes in .NET class libraries&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/workleap/preventing-breaking-changes-in-net-class-libraries-e61ae93b1b46"&gt;https://medium.com/workleap/preventing-breaking-changes-in-net-class-libraries-e61ae93b1b46&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the-convenience-of.net.net-blog"&gt;The convenience of .NET - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/the-convenience-of-dotnet/"&gt;https://devblogs.microsoft.com/dotnet/the-convenience-of-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="a-unit-of-profiling-makes-the-allocations-go-away-visual-studio-blog"&gt;A unit of profiling makes the allocations go away - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/a-unit-of-profiling-makes-the-allocations-go-away/"&gt;https://devblogs.microsoft.com/visualstudio/a-unit-of-profiling-makes-the-allocations-go-away/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="rider-kicks-off-the-early-access-program-for-the-2023.3-release-the.net-tools-blog"&gt;Rider Kicks Off the Early Access Program for the 2023.3 Release! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/09/25/rider-2023-3-eap1/"&gt;https://blog.jetbrains.com/dotnet/2023/09/25/rider-2023-3-eap1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windowsc-qiita"&gt;【Windows/C#】アクセストークンの特権を変更する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/mitsu_at3/items/8e5fa9cdbd61a315cb32"&gt;https://qiita.com/mitsu_at3/items/8e5fa9cdbd61a315cb32&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="resharper-2023.3-early-access-program-begins-the.net-tools-blog"&gt;ReSharper 2023.3 Early Access Program Begins! | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/09/25/rsrp-2023-3-eap1/"&gt;https://blog.jetbrains.com/dotnet/2023/09/25/rsrp-2023-3-eap1/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-modify-response-headers-in-asp.net-core-middleware"&gt;How to modify response headers in ASP.NET Core middleware&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.elmah.io/how-to-modify-response-headers-in-asp-net-core-middleware/"&gt;https://blog.elmah.io/how-to-modify-response-headers-in-asp-net-core-middleware/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="accessing-private-members-without-reflection-in-c-gerald-barre"&gt;Accessing private members without reflection in C# - Gérald Barré&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.meziantou.net/accessing-private-members-without-reflection-in-csharp.htm"&gt;https://www.meziantou.net/accessing-private-members-without-reflection-in-csharp.htm&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="tales-from-the.net-migration-trenches-our-first-controller"&gt;Tales from the .NET Migration Trenches - Our First Controller&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.jimmybogard.com/tales-from-the-net-migration-trenches-our-first-controller/"&gt;https://www.jimmybogard.com/tales-from-the-net-migration-trenches-our-first-controller/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="feature-flags-101-a-guide-for.net-developers"&gt;Feature Flags 101: A Guide for .NET Developers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.code4it.dev/blog/feature-flags-dotnet/"&gt;https://www.code4it.dev/blog/feature-flags-dotnet/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="building.net-solutions-through-code-on-nuke-build"&gt;Building .NET solutions through code on Nuke Build&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/&amp;#64;alex.ozr/building-net-solutions-through-code-on-nuke-build-de40be06b091"&gt;https://medium.com/&amp;#64;alex.ozr/building-net-solutions-through-code-on-nuke-build-de40be06b091&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="test-coverage-analysis-with-coverlet-in.net"&gt;Test Coverage Analysis with Coverlet in .NET&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://victormagalhaes-dev.medium.com/test-coverage-analysis-with-coverlet-in-net-2e38df3c6ed7"&gt;https://victormagalhaes-dev.medium.com/test-coverage-analysis-with-coverlet-in-net-2e38df3c6ed7&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="tales-from-the.net-migration-trenches-migrating-initial-business-logic"&gt;Tales from the .NET Migration Trenches - Migrating Initial Business Logic&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.jimmybogard.com/tales-from-the-net-migration-trenches-migrating-business-logic/"&gt;https://www.jimmybogard.com/tales-from-the-net-migration-trenches-migrating-business-logic/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="section-2"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-3"&gt;ツイート&lt;/h3&gt;
&lt;!-- https://x.com/mhmd_azeez/status/1706713404415549906?s=12&amp;t=ggvrrZ7oLogHyNoIGNgjbw --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;I am very excited to share something I have been working on for the past few weeks: &lt;a href="https://twitter.com/extism?ref_src=twsrc%5Etfw"&gt;&amp;#64;extism&lt;/a&gt; .NET PDK! Start building universal wasm libraries in C# and F#: &lt;a href="https://t.co/T5UupbWgOA"&gt;https://t.co/T5UupbWgOA&lt;/a&gt;&lt;br&gt;&lt;br&gt;It&amp;#39;s still very experimental, but we would love to get your feedback&lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/fsharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#fsharp&lt;/a&gt;&lt;/p&gt;&amp;mdash; Muhammad Azeez (&amp;#64;mhmd_azeez) &lt;a href="https://twitter.com/mhmd_azeez/status/1706713404415549906?ref_src=twsrc%5Etfw"&gt;September 26, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- https://x.com/egorbo/status/1706316706316996947?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;In .NET you can load a huge graph(s) of objects directly from a file and, basically, mmap it &amp;amp; register as a managed heap! GC won&amp;#39;t waste time scanning/compacting/collecting it. Quick example of me registering stack memory as a managed heap: &lt;a href="https://t.co/ljAn6UNoqS"&gt;pic.twitter.com/ljAn6UNoqS&lt;/a&gt;&lt;/p&gt;&amp;mdash; Egor Bogatov (&amp;#64;EgorBo) &lt;a href="https://twitter.com/EgorBo/status/1706316706316996947?ref_src=twsrc%5Etfw"&gt;September 25, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
	<entry>
		<id>/2023/09/24/updates</id>
		<title>2023-09-24: Docker Desktop 4.23, System.Text.Json in .NET 8</title>
		<author>
			<name>Mayuki Sawatari</name>
		</author>
		<link href="/2023/09/24/updates" />
		<link rel="enclosure" type="image" href="/img/logo.png" />
		<updated>2023-09-24T00:00:00Z</updated>
		<content>&lt;!--
# yyyy-MM-dd
## 主なトピックス
## ヘッドライン
## アーティクル、スライドなど
## ライブラリ、リポジトリ、ツールなど
## サイト、ドキュメントなど
### ツイート
## Deep Dive
--&gt;
&lt;h2 id="section"&gt;トピックス&lt;/h2&gt;
&lt;h3 id="docker-desktop-4.23-updates-to-docker-init-new-configuration-integrity-check-quick-search-improvements-performance-enhancements-and-more-docker"&gt;Docker Desktop 4.23: Updates to Docker Init, New Configuration Integrity Check, Quick Search Improvements, Performance Enhancements, and More | Docker&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docker.com/blog/docker-desktop-4-23/"&gt;https://www.docker.com/blog/docker-desktop-4-23/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Docker Desktop 4.23 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースでは docker init での ASP.NET Core の対応が追加され、プロジェクトに Dockerfile などのコンテナー化に必要なファイルの作成が簡単に行えるようになった。&lt;/p&gt;
&lt;h3 id="whats-new-in-system.text.json-in.net-8.net-blog"&gt;What's new in System.Text.Json in .NET 8 - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/system-text-json-in-dotnet-8/"&gt;https://devblogs.microsoft.com/dotnet/system-text-json-in-dotnet-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 での System.Text.Json の新機能について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Source Generator の改善
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;required&lt;/code&gt; および &lt;code&gt;init&lt;/code&gt; メンバーのサポート&lt;/li&gt;
&lt;li&gt;Source Generator の組み合わせ&lt;/li&gt;
&lt;li&gt;発音できない型名のサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JsonStringEnumConverter&amp;lt;TEnum&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JsonSourceGenerationOptionsAttribute&lt;/code&gt; 機能の拡張&lt;/li&gt;
&lt;li&gt;デフォルトでのリフレクションの無効化&lt;/li&gt;
&lt;li&gt;サイズ削減&lt;/li&gt;
&lt;li&gt;バグ修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;読み取り専用メンバーの収集&lt;/li&gt;
&lt;li&gt;存在しないメンバーのハンドリング&lt;/li&gt;
&lt;li&gt;スネークケースとケバブケースの名前付けポリシー&lt;/li&gt;
&lt;li&gt;インターフェース階層サポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Half&lt;/code&gt;, &lt;code&gt;Int128&lt;/code&gt;, &lt;code&gt;UInt128&lt;/code&gt; のビルトインサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Memory&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;ReadOnlyMemory&amp;lt;T&amp;gt;&lt;/code&gt; のビルトインサポート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JsonSerializerOptions&lt;/code&gt; 単一利用アナライザー&lt;/li&gt;
&lt;li&gt;非パブリックメンバーに対する &lt;code&gt;JsonIncludeAttribute&lt;/code&gt; および &lt;code&gt;JsonConstructorAttribute&lt;/code&gt; サポートの拡張&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IJsonTypeInfoResolver.WithAddedModifier&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JsonSerializerOptions.MakeReadOnly()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JsonNode&lt;/code&gt; の追加機能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JsonNode.ParseAsync&lt;/code&gt; APIs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System.Net.Http.Json&lt;/code&gt; の改善
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IAsyncEnumerable&lt;/code&gt; 拡張&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JsonTypeInfo&lt;/code&gt; を受け付ける &lt;code&gt;JsonContent.Create&lt;/code&gt; のオーバーロード&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JsonConverter.Type&lt;/code&gt; プロパティー&lt;/li&gt;
&lt;li&gt;パフォーマンス改善&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="https-everywhere-update-the-nuget-blog"&gt;HTTPS Everywhere Update - The NuGet Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/nuget/https-everywhere-update/"&gt;https://devblogs.microsoft.com/nuget/https-everywhere-update/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NuGet での HTTPS の強制化に関するアップデート。&lt;/p&gt;
&lt;p&gt;NuGet 6.8 ではソースの指定に &lt;code&gt;allowInsecureConnections&lt;/code&gt; 属性で &lt;code&gt;true&lt;/code&gt; を指定することで非 HTTP による接続を許可できるようになる。&lt;/p&gt;
&lt;h3 id="new-react-typescript-spa-templates-and-more-visual-studio-blog"&gt;New React TypeScript SPA Templates and More - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/new-react-typescript-spa-templates-and-more/"&gt;https://devblogs.microsoft.com/visualstudio/new-react-typescript-spa-templates-and-more/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2022 Preview で TypeScript を使用した React の SPA アプリケーションのテンプレートが更新された。&lt;/p&gt;
&lt;p&gt;新しいテンプレートでは Vite を使用することで作成と実行が高速になるほか様々なメリットを受けられるとしている。&lt;/p&gt;
&lt;h3 id="release-windows-app-sdk-1.4.1-1.4.230913002-microsoftwindowsappsdk"&gt;Release Windows App SDK 1.4.1 (1.4.230913002) · microsoft/WindowsAppSDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.1"&gt;https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.4.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows App SDK 1.4.1 がリリースされた。&lt;/p&gt;
&lt;p&gt;このリリースではいくつかの不具合が修正されている。&lt;/p&gt;
&lt;h3 id="azure-service-fabric-10.0-release-azure-updates-microsoft-azure"&gt;Azure Service Fabric 10.0 Release | Azure updates | Microsoft Azure&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://azure.microsoft.com/en-us/updates/azure-service-fabric-100-release/"&gt;https://azure.microsoft.com/en-us/updates/azure-service-fabric-100-release/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Service Fabric 10.0 がリリースされた。&lt;/p&gt;
&lt;h2 id="section-1"&gt;アーティクル、スライドなど&lt;/h2&gt;
&lt;h3 id="tune-into-the-c-certification-training-series.net-blog"&gt;Tune into the C# Certification Training Series - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/csharp-certification-training-series/"&gt;https://devblogs.microsoft.com/dotnet/csharp-certification-training-series/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;freeCodeCamp での C# 認定トレーニングが開始されたことに記念したライブストリーミングセッションの紹介。&lt;/p&gt;
&lt;h3 id="net-8-asp.net-core-efcore-qiita"&gt;.NET 8 + ASP.NET Core + EFCoreでどれだけ起動が早くなったか確認する - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/def89f1a1fe4e07b2cfd"&gt;https://qiita.com/karuakun/items/def89f1a1fe4e07b2cfd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 と ASP.NET Core、Entity Framework Core を組み合わせた場合の起動パフォーマンスの調査について。&lt;/p&gt;
&lt;p&gt;記事では Dapper や素の ADO.NET、 NativeAOT でのビルド時での結果なども併せて載せている。&lt;/p&gt;
&lt;h3 id="godot-is-not-the-new-unity-the-anatomy-of-a-godot-api-call"&gt;Godot is not the new Unity - The anatomy of a Godot API call&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sampruden.github.io/posts/godot-is-not-the-new-unity/"&gt;https://sampruden.github.io/posts/godot-is-not-the-new-unity/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Godot のおけるレイキャストに関する部分を例に C# からの API 呼び出しの非効率であるという意見。&lt;/p&gt;
&lt;!-- https://x.com/reduzio/status/1704875838833897788?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;During the past few days, some controversy arised regarding to the supposed low efficiency of C# bindings in Godot.&lt;br&gt;&lt;br&gt;As I believe this to be largely a misunderstanding, I wrote an in depth article explaining how the Godot binding system works:&lt;a href="https://t.co/WOEf7XmbBK"&gt;https://t.co/WOEf7XmbBK&lt;/a&gt;&lt;br&gt;&lt;br&gt;Have fun!&lt;/p&gt;&amp;mdash; Juan Linietsky (&amp;#64;reduzio) &lt;a href="https://twitter.com/reduzio/status/1704875838833897788?ref_src=twsrc%5Etfw"&gt;September 21, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h3 id="eager-lazy-and-explicit-loading-with-entity-framework-core-the.net-tools-blog"&gt;Eager, Lazy and Explicit Loading with Entity Framework Core | The .NET Tools Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.jetbrains.com/dotnet/2023/09/21/eager-lazy-and-explicit-loading-with-entity-framework-core/"&gt;https://blog.jetbrains.com/dotnet/2023/09/21/eager-lazy-and-explicit-loading-with-entity-framework-core/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Entity Framework Core の Eager、遅延、明示的なロードに関する解説。&lt;/p&gt;
&lt;h3 id="addtransientdispose-qiita"&gt;AddTransientで追加したクラスのDisposeはいつ呼ばれるか - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/4f300d84e366a125c60d"&gt;https://qiita.com/karuakun/items/4f300d84e366a125c60d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Extensions.DependencyInjection のコンテナーに AddTransient で追加した型の Dispose が呼び出されるタイミングについて。&lt;/p&gt;
&lt;h3 id="raytracing-in-vulkan-using-c-part-1"&gt;Raytracing in Vulkan using C# — Part 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://jenskrumsieck.medium.com/raytracing-in-vulkan-using-c-part-1-997cb284f7e8"&gt;https://jenskrumsieck.medium.com/raytracing-in-vulkan-using-c-part-1-997cb284f7e8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# で Vulkan を使用してレイトレーシングを実装するというシリーズ。&lt;/p&gt;
&lt;h3 id="net8devcontainer-qiita"&gt;.NET8用のDevContainerを作ってみる - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/karuakun/items/4695cfbdfbf623600c98"&gt;https://qiita.com/karuakun/items/4695cfbdfbf623600c98&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 向けの Dev Containers を作成する方法について。&lt;/p&gt;
&lt;h3 id="cwindowsdatetimetostringwindows-qiita"&gt;【C#/Windows】DateTimeのToStringで西暦/和暦(Windows設定)の罠にはまりかけた話 - Qiita&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/nobushi95/items/c4d5877fadef29c16d74"&gt;https://qiita.com/nobushi95/items/c4d5877fadef29c16d74&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DateTime のカスタム書式指定の年 (&lt;code&gt;yyyy&lt;/code&gt;) が Windows の書式設定に依存していることについて。&lt;/p&gt;
&lt;h3 id="simplifying-f-computations-with-the-new-while-keyword.net-blog"&gt;Simplifying F# computations with the new 'while!' keyword - .NET Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/simplifying-fsharp-computations-with-the-new-while-keyword/"&gt;https://devblogs.microsoft.com/dotnet/simplifying-fsharp-computations-with-the-new-while-keyword/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新しい &lt;code&gt;while!&lt;/code&gt; キーワードによる F# のコンピュテーション式のシンプル化について。&lt;/p&gt;
&lt;h3 id="intellitest-simplifies-writing-and-maintaining-unit-tests-visual-studio-blog"&gt;IntelliTest simplifies writing and maintaining unit tests - Visual Studio Blog&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/visualstudio/intellitest-simplifies-writing-and-maintaining-unit-tests/"&gt;https://devblogs.microsoft.com/visualstudio/intellitest-simplifies-writing-and-maintaining-unit-tests/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Enterprise Edition で使用できる新しい IntelliTest (テストケース生成) について。&lt;/p&gt;
&lt;p&gt;新しい IntelliTest はプレビューとして .NET 6 (x64) での実行をサポートした。&lt;/p&gt;
&lt;h3 id="observing.net-microservices-with-opentelemetry-logs-traces-and-metrics"&gt;Observing .NET microservices with OpenTelemetry - logs, traces and metrics&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.codingmilitia.com/2023/09/05/observing-dotnet-microservices-with-opentelemetry-logs-traces-metrics/"&gt;https://blog.codingmilitia.com/2023/09/05/observing-dotnet-microservices-with-opentelemetry-logs-traces-metrics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenTelemetry と Grafana を使用したログとトレース、メトリクスの収集と計測について。記事ではカスタムトレースやメトリックの使用方法などにも触れている。&lt;/p&gt;
&lt;h3 id="inlinearray-c-c"&gt;[雑記] InlineArray | ++C++; // 未確認飛行 C ブログ&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ufcpp.net/study/csharp/datatype/inline-array/"&gt;https://ufcpp.net/study/csharp/datatype/inline-array/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C# 12 の新しい機能である InlineArray についての解説。&lt;/p&gt;
&lt;h3 id="should-you-use-the.net-8-identity-api-endpoints"&gt;Should you use the .NET 8 Identity API endpoints?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://andrewlock.net/should-you-use-the-dotnet-8-identity-api-endpoints/"&gt;https://andrewlock.net/should-you-use-the-dotnet-8-identity-api-endpoints/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の Identity API エンドポイントがどういうもので使用すべきかどうかについて。&lt;/p&gt;
&lt;p&gt;著者は .NET 8 リリース時点のものではいくつか問題があるためあまり推奨できないとしている。&lt;/p&gt;
&lt;h3 id="ctaskcompletionsource"&gt;【C#】TaskCompletionSource を使う時に意識すべき事。 - ねののお庭。&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.neno.dev/entry/2023/09/17/191002"&gt;https://blog.neno.dev/entry/2023/09/17/191002&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TaskCompletionSource の継続処理がどのスレッドで実行されるのか注意すべき点と推奨設定について。&lt;/p&gt;
&lt;h3 id="how-to-use-yarp-as-an-ingress-controller-in-kubernetes-in-docker-desktop-kind-on-windows-11"&gt;how to use YARP as an ingress controller in Kubernetes in Docker Desktop (KinD) on Windows 11&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://blog.baslijten.com/how-to-deploy-yarp-ingress-controller-on-kubernetes-in-docker-desktop-kind/"&gt;https://blog.baslijten.com/how-to-deploy-yarp-ingress-controller-on-kubernetes-in-docker-desktop-kind/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yarp を Docker Desktop の Kubernetes の Ingress として使用する方法について。&lt;/p&gt;
&lt;h2 id="section-2"&gt;ライブラリ、リポジトリ、ツールなど&lt;/h2&gt;
&lt;h3 id="cysharpprivateproxy-source-generator-and.net-8-unsafeaccessor-based-high-performance-strongly-typed-private-accessor-for-unit-testing-and-runtime"&gt;Cysharp/PrivateProxy: Source Generator and .NET 8 UnsafeAccessor based high-performance strongly-typed private accessor for unit testing and runtime.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Cysharp/PrivateProxy"&gt;https://github.com/Cysharp/PrivateProxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET 8 の UnsafeAccessor を使用して非公開なメンバーにアクセスするためのプロキシーを生成する Source Generator。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neue.cc/2023/09/21_privateproxy.html"&gt;neue cc - .NET 8 UnsafeAccessor を活用したライブラリ PrivateProxy を公開しました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-3"&gt;サイト、ドキュメントなど&lt;/h2&gt;
&lt;h3 id="section-4"&gt;ツイート&lt;/h3&gt;
&lt;p&gt;.NET MAUI での Blazor Hybrid を Linux で動かそうとしているという話。&lt;/p&gt;
&lt;!-- https://x.com/jsuarezruiz/status/1704037700435611699?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Progress in the Blazor Hybrid support on Linux with .NET MAUI. &lt;a href="https://t.co/f418cBkrKo"&gt;https://t.co/f418cBkrKo&lt;/a&gt; Thanks &lt;a href="https://twitter.com/lytico?ref_src=twsrc%5Etfw"&gt;&amp;#64;lytico&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/dotnetmaui?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnetmaui&lt;/a&gt; &lt;a href="https://t.co/qblZnwS49F"&gt;pic.twitter.com/qblZnwS49F&lt;/a&gt;&lt;/p&gt;&amp;mdash; Javier Suárez (&amp;#64;jsuarezruiz) &lt;a href="https://twitter.com/jsuarezruiz/status/1704037700435611699?ref_src=twsrc%5Etfw"&gt;September 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Enumerator は Dispose しないとリソースを開放しない状態になることがあるという注意。&lt;/p&gt;
&lt;!-- https://x.com/steplyakov/status/1703814740374679858?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Do you know that it&amp;#39;s very important to dispose an enumerator even though you might think it can&amp;#39;t own any &amp;quot;managed resources&amp;quot;?&lt;br&gt;&lt;br&gt;Here is an example: TLDR; `Enumerator.Dispose` calls the finally block of an iterator block. And that can be very important to do! &lt;a href="https://t.co/T755LD4VRa"&gt;pic.twitter.com/T755LD4VRa&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sergiy Teplyakov 🇺🇦 🇺🇸 (&amp;#64;STeplyakov) &lt;a href="https://twitter.com/STeplyakov/status/1703814740374679858?ref_src=twsrc%5Etfw"&gt;September 18, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;C# 12 のコレクションリテラルを使うと特定の長さの Span をスタックに確保できるというテクニック。&lt;/p&gt;
&lt;!-- https://x.com/davidfowl/status/1703437753390924070?s=12 --&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;My latest C# 12 hack. Using collection literals to create a stack allocated Span when under a certain length. &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#dotnet&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/csharp?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#csharp&lt;/a&gt; &lt;a href="https://t.co/tFmRxgs5Hx"&gt;pic.twitter.com/tFmRxgs5Hx&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Fowler (&amp;#64;davidfowl) &lt;a href="https://twitter.com/davidfowl/status/1703437753390924070?ref_src=twsrc%5Etfw"&gt;September 17, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
</content>
		<summary>.NET 関連の情報をほぼ週刊配信</summary>
	</entry>
</feed>